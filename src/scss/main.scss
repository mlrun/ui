@import './variables';
@import './colors';
@import './mixins';
@import './borders';
@import './fonts';

* {
  box-sizing: border-box;
}

#root {
  display: flex;
  flex: 1;
  width: 100%;
}

.App {
  display: flex;
  flex: 1;
  width: 100%;
}

body {
  display: flex;
  flex: 1;
  height: 100vh;
  overflow-x: hidden;
  font-weight: normal;
  font-size: 15px;
  font-family: Roboto, sans-serif;
  font-style: normal;
  line-height: 18px;
  background: $gallery;

  @include resetSpaces;
}

main {
  position: relative;
  display: flex;
  flex: 1;
  flex-flow: column nowrap;
  height: auto;
  overflow: auto;

  &:not(:first-child) {
    margin-top: 64px;
  }
}

a {
  color: inherit;
  text-decoration: none;
}

button {
  font-family: Roboto, sans-serif;
  background-color: transparent;
  border: none;
  cursor: pointer;

  &:active,
  &:focus {
    outline: none;
    box-shadow: none;
  }

  &:disabled {
    cursor: not-allowed;
  }
}

[class^=state-completed],
[class^=state-ready],
[class^=state-succeeded],
[class^=state-active],
[class^=state-created],
[class^=state-info] {
  @include statusState($brightTurquoise);
}

[class^=state-warn] {
  @include statusState($grandis);
}

[class^=state-deploying],
[class^=state-build],
[class^=state-pending],
[class^=state-running] {
  @include statusState($pictonBlue);
}

[class^=state-failed],
[class^=state-fail],
[class^=state-error],
[class^=state-broken],
[class^=state-aborted] {
  @include statusState($burntSienna);
}

.state-created-job,
.state-created-function,
.state-pending-job {
  @include statusState($topaz);
}

iframe {
  width: 100%;
  height: 100%;
}

#overlay_container {
  position: fixed;
  bottom: 0;
  z-index: 5;
  display: flex;
  flex: 1;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  width: 100%;
}

.error-container {
  margin: auto;

  h1,
  h3 {
    color: $mulledWine;
    text-align: center;
  }

  .error-details {
    margin: 0 auto;
    color: $cornflowerBlue;
  }
}

input,
textarea {
  overflow-x: hidden;
  font-weight: normal;
  font-size: 15px;
  font-family: Roboto, sans-serif;
  font-style: normal;
  line-height: 18px;
  white-space: nowrap;
  text-overflow: ellipsis;

  &:active,
  &:focus {
    outline: none;
    box-shadow: none;
  }
}

.data-ellipsis {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

.cursor-pointer {
  cursor: pointer;
}

.capitalize {
  text-transform: capitalize;
}

.wrap {
  white-space: pre-wrap;
}

.actions {
  display: flex;
  align-items: center;
  justify-content: space-between;

  button {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 32px;
    height: 32px;
    padding: 0;

    i {
      background-size: 12px 12px;
    }

    &:hover {
      background-color: $mulledWineThree;
      border-radius: 20px;
    }
  }
}

.link {
  color: $cornflowerBlue;

  &:hover {
    text-decoration: underline;
  }
}

.auto-resizable-input {
  position: relative;
  display: inline-grid;
  min-width: 3em;
  height: 1.8em;
  padding: 5px 10px;

  &.full-width {
    width: 100%;
  }

  &::after {
    overflow: hidden;
    visibility: hidden;
    content: attr(data-value) ' ';
  }

  input {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    margin: 0;
    padding: inherit;
    font: inherit;
    border: none;
  }
}

.combobox {
  .path-type {
    &-store {
      color: $amethyst;
    }

    &-v3io {
      color: $cornflowerBlueTwo;
    }

    &-az,
    &-gs,
    &-http,
    &-https,
    &-s3 {
      color: $sorbus;
    }
  }
}

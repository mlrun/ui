@use 'igz-controls/scss/fonts';
@use 'igz-controls/scss/common';
@use 'igz-controls/scss/variables';
@use 'igz-controls/scss/shadows';
@use 'igz-controls/scss/colors';
@use 'igz-controls/scss/mixins';
@use 'igz-controls/scss/borders';

body {
  display: flex;
  flex: 1;
  height: 100vh;
  overflow-x: hidden;
  font-weight: normal;
  font-size: 15px;
  font-family: Roboto, sans-serif;
  font-style: normal;
  background: colors.$gallery;

  @include mixins.resetSpaces;
}

.ml-app {
  display: flex;
  width: 100%;

  &-container {
    position: relative;
    display: flex;
    width: 100%;

    &.has-header {
      height: calc(100vh - #{variables.$headerHeight});
      margin-top: variables.$headerHeight;
    }
  }

  &-version {
    font-size: 0.75rem;
  }
}

/* =========== MAIN ============= */

main {
  position: relative;
  z-index: 1;
  display: flex;
  flex: 1;
  flex-flow: column nowrap;
  width: 100%;
  margin: 0;
  padding: 0;
  overflow: hidden;
  transition: margin-left 0.3s ease-in-out;

  &.unpinned {
    .create-container__header,
    .create-container__data,
    .content__header,
    .project__header,
    .settings__header {
      padding-left: 40px;
      transition: padding 0.3s ease-in-out;
    }

    .content,
    .settings__content {
      transition: margin 0.3s ease-in-out;
    }
  }
}

/* =========== PAGE ============= */

.page {
  flex: 1 1;
  min-width: 100%;
  background-color: colors.$white;

  .page-breadcrumbs {
    padding: 20px 24px;
    box-shadow: shadows.$headerShadow;
  }

  .page-content {
    padding: 20px 40px;

    .page-actions {
      display: flex;
      justify-content: flex-end;
      margin: 0 0 20px 0;

      .search-container {
        flex: unset;
        width: 250px;
      }
    }

    .table {
      border-top: none;

      .table-header__cell,
      .table-body__cell {
        color: variables.$primaryTextColor;
      }

      .table-header {
        .table-row {
          border-bottom: none;
        }
      }
    }
  }
}

/* =========== STATE ============= */

[class^='state-active'],
[class^='state-completed'],
[class^='state-created'],
[class^='state-creating'],
[class^='state-info'],
[class^='state-online'],
[class^='state-ready'],
[class^='state-succeeded'] {
  @include mixins.statusState(colors.$brightTurquoise, false);
}

[class^='state-all'] {
  @include mixins.statusState(transparent, false);
}

[class^='state-unknown'] {
  @include mixins.statusState(colors.$topaz, true);
}

[class^='state-initialized'] {
  @include mixins.statusState(colors.$chateauGreen, false);
}

[class^='state-warn'] {
  @include mixins.statusState(colors.$grandis, false);
}

[class^='state-build'],
[class^='state-building'],
[class^='state-deploying'],
[class^='state-pending'],
[class^='state-running'] {
  @include mixins.statusState(colors.$pictonBlue, false);
}

[class^='state-aborted'] {
  @include mixins.statusState(colors.$babyPink, false);
}

[class^='state-broken'],
[class^='state-fail'],
[class^='state-failed'],
[class^='state-unhealthy'] {
  @include mixins.statusState(colors.$burntSienna, false);
}

[class^='state-error'] {
  @include mixins.statusState(colors.$sorbus, false);
}

[class^='state-terminating'] {
  @include mixins.statusState(colors.$primary, false);
}

[class^='state-skipped'] {
  @include mixins.statusState(colors.$topaz, true);
}

[class^='state-aborting'] {
  @include mixins.statusState(colors.$burntSiennaTwo, false);
}

[class^='state-omitted'] {
  @include mixins.statusState(colors.$silver, false);
}

[class^='state-archived'] {
  @include mixins.statusState(colors.$topaz, false);
}

[class^='state-pendingRetry'] {
  @include mixins.statusState(colors.$fuchsiaPink, false);
}

.state-created-job,
.state-created-function,
.state-creating-function,
.state-pending-job {
  @include mixins.statusState(colors.$topaz, false);
}

/* =========== ERROR ============= */

.error-container {
  margin: auto;

  h1,
  h3 {
    color: colors.$mulledWine;
    text-align: center;
  }

  .error-details {
    margin: 0 auto;
    color: colors.$cornflowerBlue;
  }
}

/* =========== ACTIONS ============= */

.actions {
  display: flex;
  align-items: center;
  justify-content: space-between;

  button:not([class*='round-icon-cp__circle']) {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 32px;
    height: 32px;
    padding: 0;

    i {
      background-size: 12px 12px;
    }

    &:hover {
      background-color: colors.$mulledWineThree;
      border-radius: 20px;
    }
  }
}

/* =========== INPUT ============= */

.auto-resizable-input {
  position: relative;
  display: inline-grid;
  min-width: 3em;
  height: 1.8em;
  padding: 5px 10px;

  &.full-width {
    width: 100%;
  }

  &::after {
    overflow: hidden;
    visibility: hidden;
    content: attr(data-value) ' ';
  }

  input {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    margin: 0;
    padding: inherit;
    font: inherit;
    border: none;
  }
}

/* =========== COMBOBOX ============= */

.combobox {
  .path-type {
    &-store {
      color: colors.$amethyst;
    }

    &-v3io {
      color: colors.$cornflowerBlueTwo;
    }

    &-az,
    &-gs,
    &-http,
    &-https,
    &-s3 {
      color: colors.$sorbus;
    }

    &-dbfs {
      color: colors.$chateauGreen;
    }
  }
}

/* =========== GRAPH ============= */

.graph-container {
  position: relative;
  display: flex;
  flex: 1 1;

  .graph-view {
    display: flex;
    flex: 1 1;
    flex-direction: column;
    background-color: colors.$gallery;
  }

  .graph-pane {
    display: flex;
    flex-direction: column;
    width: 25%;
    min-width: 350px;
    overflow: hidden;
    background: colors.$white;
    border: borders.$secondaryBorder;
    box-shadow: 0 0 30px rgba(colors.$black, 0.15);

    &.scrollable {
      overflow-y: auto;
    }

    &__title {
      display: flex;
      align-items: center;
      justify-content: space-between;
      padding: 25px;
      font-weight: bold;
      font-size: 20px;
    }
  }
}

/* =========== FORM ============= */

.form {
  color: colors.$primary;

  [class*='form-col'] {
    display: flex;
    flex: 1 0 0;

    &:not(:last-child) {
      margin-right: 15px;
    }
  }

  .justify-between {
    display: flex;
    justify-content: space-between;
  }

  &-row {
    display: flex;
    margin-bottom: 20px;

    &.align-stretch {
      align-items: stretch;
    }
  }

  .form {
    &-col {
      &-1 {
        flex-grow: 1;
      }

      &-2 {
        flex-grow: 2;
      }

      &-3 {
        flex-grow: 3;
      }

      &-4 {
        flex-grow: 4;
      }

      &-5 {
        flex-grow: 5;
      }

      &-6 {
        flex-grow: 6;
      }

      &-7 {
        flex-grow: 7;
      }

      &-auto {
        flex-grow: 0;
      }
    }

    &-text {
      font-size: 15px;
    }

    &-step-title {
      display: block;
      margin: 0;
      font-size: 24px;
    }

    &-step-subtitle {
      display: block;
      margin: 0;
      font-size: 20px;
    }

    &-table-title {
      display: flex;
      align-items: center;
      margin-bottom: 10px;
      padding-top: 10px;
      font-weight: 500;
      font-size: 20px;

      .tip-container {
        margin-left: 5px;
      }
    }
  }
}

/* =========== CHART TOOLTIP ============= */

div[id^='chartjs-tooltip'] {
  position: fixed;
  z-index: 5;
  width: auto;
  padding: 0;
  color: colors.$white;
  background-color: colors.$primary;
  border-radius: 4px;
  transform: translate(-50%, calc(-100% - 10px));
  opacity: 1;
  transition: all 0.1s linear;
  pointer-events: none;

  &.hidden {
    opacity: 0;
  }

  &::after {
    position: absolute;
    top: 100%;
    left: 50%;
    width: 0;
    height: 0;
    margin-left: -5px;
    border: 5px solid transparent;
    border-top-color: colors.$primary;
    content: '';
    pointer-events: none;
  }

  .tooltip-container {
    display: flex;
    flex-wrap: nowrap;
    gap: 5px;
    align-items: flex-start;
    justify-content: flex-start;
    padding: 7px;
    background: inherit;

    &-date {
      min-width: 150px;
    }
  }
}

/* =========== SORT ICON ============= */

.sort-icon {
  width: 20px;
  transition: transform 0.3s ease-in-out;

  &_down {
    transform: rotate(-90deg);
  }

  &_up {
    transform: rotate(90deg);
  }
}

.action-bar {
  .filters-button {
    margin-right: 5px;
    margin-left: 5px;
  }

  &__filters {
    display: flex;

    .filter-column {
      &:not(:last-child) {
        margin: 0 15px 0 0;
      }
    }
  }

  &__actions {
    display: flex;
    margin-left: 15px;

    .action-button {
      margin-right: 10px;
      white-space: nowrap;

      @media screen and (min-width: 1300px) {
        min-width: 160px;
      }
    }

    .auto-refresh {
      margin-left: 20px;
    }
  }
}

/* =========== NOTIFICATION BUTTON ============= */

.notification__button-close {
  display: flex;
  align-items: center;
  width: 18px;
  height: 18px;
  padding: 2px;
  background-color: transparent;
  border-radius: 50%;
  opacity: 0.5;
  transition: opacity 0.3s ease-in-out;

  & svg {
    & > * {
      fill: colors.$white;
    }
  }

  &:hover {
    opacity: 1;
  }
}

/* =========== OVERRIDE ARTIFACT DIALOG ============= */

.override-artifact-dialog {
  z-index: 10;
}

/* =========== ICONS ============= */

.table-severity-warning-icon {
  svg {
    width: 32px;
    height: 32px;

    path {
      fill: colors.$supernova;
    }
  }
}

@use 'igz-controls/scss/borders';
@use 'igz-controls/scss/colors';

@mixin inputNode {
  color: colors.$white;
  background-color: colors.$hotPink;
  fill: colors.$hotPink;
  border-color: colors.$hotPink;
  stroke: colors.$hotPink;
  box-shadow: 0 3px 14px rgba(colors.$hotPink, 0.34);
}

@mixin outputNode {
  color: colors.$white;
  background-color: colors.$malibu;
  fill: colors.$malibu;
  border-color: colors.$malibu;
  stroke: colors.$malibu;
  box-shadow: 0 3px 14px rgba(colors.$malibu, 0.5);
}

@mixin primaryNode {
  color: colors.$primary;
  background-color: colors.$white;
  border-color: colors.$malibu;
  stroke: colors.$malibu;
}

@mixin secondaryNode {
  color: colors.$orchid;
  background-color: colors.$white;
  border-color: colors.$orchid;
  stroke: colors.$orchid;
}

@mixin greyNode {
  color: rgba(colors.$black, 0.3);
  background-color: colors.$white;

  &:not(.selected) {
    border-color: colors.$bombay;
    stroke: colors.$bombay;
  }
}

@mixin nodes {
  &.input-node {
    @include inputNode;
  }

  &.output-node {
    @include outputNode;
  }

  &.primary-node {
    @include primaryNode;
  }

  &.secondary-node {
    @include secondaryNode;
  }

  &.grey-node {
    @include greyNode;
  }

  &.react-flow__node-input {
    @include inputNode;
  }

  &.react-flow__node-output {
    @include outputNode;
  }

  &.react-flow__node-default {
    @include primaryNode;
  }
}

@mixin selectedNode {
  &.selected {
    border-color: colors.$brightTurquoise;
    stroke: colors.$brightTurquoise;
    box-shadow: 0 4px 20px rgba(colors.$brightTurquoise, 0.5);

    &.status-error,
    &.status-failed {
      border-color: colors.$burntSienna;
      stroke: colors.$burntSienna;
      box-shadow: 0 4px 20px rgba(colors.$burntSienna, 0.5);
    }

    &.status-running {
      border-color: colors.$pictonBlue;
      stroke: colors.$pictonBlue;
      box-shadow: 0 4px 20px rgba(colors.$pictonBlue, 0.5);
    }
  }
}

.react-flow__renderer {
  z-index: 5;

  &:active {
    cursor: grab;
  }

  .react-flow__node {
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 5px 10px;
    font-size: 14px;
    border-style: solid;
    border-width: 2px;
    border-radius: 8px;
    cursor: unset;

    &:hover {
      box-shadow: unset;
    }

    .react-flow__node-label {
      position: relative;
      width: 100%;
      font-size: 1.5rem;
      text-align: center;
      overflow: hidden;
    }

    .react-flow__node-sub-label {
      font-size: 0.9em;
      opacity: 0.8;
    }

    .react-flow__node-tip {
      stroke: none;

      svg {
        width: 20px;
        height: 20px;

        path {
          fill: colors.$bombay;
        }
      }
    }

    @include nodes();

    &.oval-shape {
      border-radius: 50%;
    }

    &.rounded-rectangle-shape {
      border-radius: 50px;
    }

    &.with-opacity {
      opacity: 0.6 !important;
    }

    &.selectable {
      cursor: pointer;
    }

    @include selectedNode();

    .react-flow__handle {
      width: 12px;
      height: 12px;
      background: colors.$white;
      border: 2px solid colors.$bombay;
      pointer-events: auto;

      &-top {
        top: -6px;
        visibility: hidden;
      }

      &-bottom {
        bottom: -6px;
      }

      &-left {
        left: -6px;
        visibility: hidden;
      }

      &-right {
        right: -6px;
      }

      &.status-succeeded {
        background: colors.$brightTurquoise;
      }

      &.status-failed,
      &.status-error {
        background: colors.$burntSienna;
      }

      &.status-omitted {
        background: colors.$silver;
      }

      &.status-running {
        background: colors.$pictonBlue;
      }

      &.status-skipped {
        background: colors.$gossamer;
        border: 3px solid colors.$brightTurquoise;
      }

      &.status-unknown {
        background: colors.$white;
      }
    }
  }

  .react-flow__edge {
    path,
    polyline {
      stroke: colors.$bombay;
      stroke-width: 2px;
    }

    .react-flow__arrowhead_closed {
      polyline {
        fill: colors.$bombay;
      }
    }

    &.selected {
      path,
      polyline {
        stroke: colors.$saltbox;
      }

      .react-flow__arrowhead_closed {
        polyline {
          fill: colors.$saltbox;
        }
      }
    }
  }
}

.react-flow__minimap {
  background-color: colors.$gallery;

  svg {
    display: block;
    width: 150px;
    height: 110px;

    path {
      fill: rgba(colors.$black, 0.2);
    }
  }
}

.react-flow__minimap-node {
  fill: colors.$white;

  @include nodes();
  @include selectedNode();
}

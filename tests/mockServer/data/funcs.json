{
  "funcs": [
    {
      "kind": "job",
      "metadata": {
        "labels": {},
        "name": "qwe",
        "tag": "",
        "project": "cat-vs-dog-classification",
        "hash": "ab4793398be8931874e3a366f5a46b7edd92d53d",
        "updated": "2021-09-11T09:55:00.413702+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "",
          "commands": [],
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ""
        },
        "default_handler": "qwe",
        "description": "",
        "env": [],
        "image": "mlrun/mlrun",
        "volume_mounts": [
          {
            "name": "1",
            "mountPath": "1"
          },
          {
            "name": "2",
            "mountPath": "2"
          },
          {
            "name": "3",
            "mountPath": "3"
          },
          {
            "name": "4",
            "mountPath": "4"
          }
        ],
        "volumes": [
          {
            "name": "1",
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "1",
                "container": "",
                "subPath": ""
              }
            }
          },
          {
            "name": "2",
            "configMap": {
              "name": "2"
            }
          },
          {
            "name": "3",
            "secret": {
              "secretName": "3"
            }
          },
          {
            "name": "4",
            "persistentVolumeClaim": {
              "claimName": "4"
            }
          }
        ],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "secret_sources": []
      },
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "qwe",
        "tag": "",
        "project": "cat-vs-dog-classification",
        "categories": [],
        "hash": "70c601d31f9de64fb5e331bb6a6d94809b290d16",
        "updated": "2021-09-11T09:55:00.815299+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [
          {
            "name": "1",
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "1",
                "container": "",
                "subPath": ""
              }
            }
          },
          {
            "name": "2",
            "configMap": {
              "name": "2"
            }
          },
          {
            "name": "3",
            "secret": {
              "secretName": "3"
            }
          },
          {
            "name": "4",
            "persistentVolumeClaim": {
              "claimName": "4"
            }
          }
        ],
        "volume_mounts": [
          {
            "name": "1",
            "mountPath": "1"
          },
          {
            "name": "2",
            "mountPath": "2"
          },
          {
            "name": "3",
            "mountPath": "3"
          },
          {
            "name": "4",
            "mountPath": "4"
          }
        ],
        "env": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "qwe",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": "",
          "base_image": "",
          "commands": []
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "labels": {},
        "name": "qwe",
        "project": "cat-vs-dog-classification",
        "tag": "",
        "hash": "01081b2d0c661e6358ef155b8f5b339ba04ac7f9",
        "updated": "2021-09-14T09:29:45.368126+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "",
          "commands": [],
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ""
        },
        "default_handler": "qwe",
        "description": "",
        "env": [],
        "image": "mlrun/mlrun",
        "volume_mounts": [],
        "volumes": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "secret_sources": []
      },
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "qwe",
        "tag": "",
        "project": "cat-vs-dog-classification",
        "categories": [],
        "hash": "c9da7ed8b1ba96b552b6e168b2ae344eb618fb9f",
        "updated": "2021-09-14T09:29:46.383007+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [],
        "volume_mounts": [],
        "env": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "qwe",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": "",
          "base_image": "",
          "commands": []
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "name": "qwe",
        "tag": "",
        "hash": "b27176bde6d9bad65d0470f13672dda16645b753",
        "project": "cat-vs-dog-classification",
        "categories": [],
        "updated": "2021-09-14T09:30:33.627573+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [
          {
            "name": "sdf",
            "secret": {
              "secretName": "sdf"
            }
          }
        ],
        "volume_mounts": [
          {
            "name": "sdf",
            "mountPath": "sdf"
          }
        ],
        "env": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "qwe",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": "",
          "base_image": "",
          "commands": []
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "labels": {},
        "name": "sef",
        "tag": "",
        "project": "cat-vs-dog-classification",
        "hash": "d916af22a6a093a0da1e22e492c80265b6b52b59",
        "updated": "2021-09-14T14:03:11.066230+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "",
          "commands": [],
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ""
        },
        "default_handler": "dg",
        "description": "",
        "env": [],
        "image": "mlrun/mlrun",
        "volume_mounts": [],
        "volumes": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "secret_sources": []
      },
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "sef",
        "tag": "",
        "project": "cat-vs-dog-classification",
        "categories": [],
        "hash": "f6c9620e0f507e32e98922c982c795f325e5c7bf",
        "updated": "2021-09-14T14:03:11.437879+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [],
        "volume_mounts": [],
        "env": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "dg",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": "",
          "base_image": "",
          "commands": []
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "labels": {},
        "name": "sef",
        "project": "cat-vs-dog-classification",
        "tag": "",
        "hash": "229f179c87fc60b77d5be0682e64dbf036282639",
        "updated": "2021-09-16T09:27:28.612184+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "",
          "commands": [],
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ""
        },
        "description": "",
        "env": [],
        "image": "mlrun/mlrun",
        "volume_mounts": [],
        "volumes": [],
        "resources": {
          "limits": {},
          "requests": {
            "memory": "1Mi"
          }
        },
        "default_handler": "dg"
      },
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "sef",
        "tag": "",
        "project": "cat-vs-dog-classification",
        "categories": [],
        "hash": "15bc8d89c8fa6c185b46f033c7903e6298d1ad53",
        "updated": "2021-09-16T09:27:29.289522+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [],
        "volume_mounts": [],
        "env": [],
        "resources": {
          "limits": {},
          "requests": {
            "memory": "1Mi"
          }
        },
        "default_handler": "dg",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": "",
          "base_image": "",
          "commands": []
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "labels": {},
        "name": "seff",
        "tag": "",
        "project": "cat-vs-dog-classification",
        "hash": "b9b522f48553129e7bf81edeb35d698fc346208a",
        "updated": "2021-09-16T09:28:46.605426+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "",
          "commands": [],
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ""
        },
        "default_class": "",
        "default_handler": "seg",
        "description": "",
        "env": [],
        "image": "mlrun/mlrun",
        "secret_sources": [],
        "volume_mounts": [],
        "volumes": [],
        "resources": {
          "limits": {},
          "requests": {}
        }
      },
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "seff",
        "tag": "",
        "project": "cat-vs-dog-classification",
        "categories": [],
        "hash": "b231113dc1dad83892d65dad72646a524985abd4",
        "updated": "2021-09-16T09:28:47.079591+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [],
        "volume_mounts": [],
        "env": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "seg",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": "",
          "base_image": "",
          "commands": []
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "name": "qwe",
        "tag": "",
        "hash": "1a69ee385db20b8882587b49136271377a38eda8",
        "project": "cat-vs-dog-classification",
        "categories": [],
        "updated": "2021-10-12T08:24:05.922871+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [
          {
            "name": "sdf",
            "secret": {
              "secretName": "sdf"
            }
          },
          {
            "name": "1",
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "1",
                "container": "",
                "subPath": ""
              }
            }
          },
          {
            "name": "2",
            "configMap": {
              "name": "2"
            }
          },
          {
            "name": "3",
            "secret": {
              "secretName": "3"
            }
          },
          {
            "name": "4",
            "persistentVolumeClaim": {
              "claimName": "4"
            }
          }
        ],
        "volume_mounts": [
          {
            "name": "sdf",
            "mountPath": "sdf"
          },
          {
            "name": "1",
            "mountPath": "1"
          },
          {
            "name": "2",
            "mountPath": "2"
          },
          {
            "name": "3",
            "mountPath": "3"
          },
          {
            "name": "4",
            "mountPath": "4"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "http://v3io-webapi:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "1bc19fc2-2089-4c9c-a622-2eaa9868382c"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "http://framesd:8080"
          }
        ],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "qwe",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": "",
          "base_image": "",
          "commands": []
        },
        "disable_auto_mount": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "seff",
        "tag": "latest",
        "hash": "909ba7cdf34cec80b695e81b9b780df0fa7e529c",
        "project": "cat-vs-dog-classification",
        "categories": [],
        "updated": "2021-11-08T16:22:30.196488+00:00",
        "credentials": {
          "access_key": "$generate"
        }
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [],
        "volume_mounts": [],
        "env": [
          {
            "name": "V3IO_API",
            "value": "http://v3io-webapi:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "1bc19fc2-2089-4c9c-a622-2eaa9868382c"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "http://framesd:8080"
          }
        ],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "seg",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": "",
          "base_image": "",
          "commands": []
        },
        "disable_auto_mount": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": {}
    },
    {
      "kind": "job",
      "metadata": {
        "name": "qwe",
        "tag": "latest",
        "hash": "bee114d52a7757f4da99ec88f1b4d63a003cc532",
        "project": "cat-vs-dog-classification",
        "categories": [],
        "updated": "2021-11-08T16:22:18.329808+00:00",
        "credentials": {
          "access_key": "$generate"
        }
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [
          {
            "name": "sdf",
            "secret": {
              "secretName": "sdf"
            }
          },
          {
            "name": "1",
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "1",
                "container": "",
                "subPath": ""
              }
            }
          },
          {
            "name": "2",
            "configMap": {
              "name": "2"
            }
          },
          {
            "name": "3",
            "secret": {
              "secretName": "3"
            }
          },
          {
            "name": "4",
            "persistentVolumeClaim": {
              "claimName": "4"
            }
          }
        ],
        "volume_mounts": [
          {
            "name": "sdf",
            "mountPath": "sdf"
          },
          {
            "name": "1",
            "mountPath": "1"
          },
          {
            "name": "2",
            "mountPath": "2"
          },
          {
            "name": "3",
            "mountPath": "3"
          },
          {
            "name": "4",
            "mountPath": "4"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "http://v3io-webapi:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "1bc19fc2-2089-4c9c-a622-2eaa9868382c"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "http://framesd:8080"
          }
        ],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "qwe",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": "",
          "base_image": "",
          "commands": []
        },
        "disable_auto_mount": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": {}
    },
    {
      "kind": "job",
      "metadata": {
        "name": "sef",
        "tag": "latest",
        "hash": "9e535e175aebfbff61e4ca85506813e3287d1aab",
        "project": "cat-vs-dog-classification",
        "categories": [],
        "updated": "2021-11-08T16:22:24.884798+00:00",
        "credentials": {
          "access_key": "$generate"
        }
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [],
        "volume_mounts": [],
        "env": [
          {
            "name": "V3IO_API",
            "value": "http://v3io-webapi:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "1bc19fc2-2089-4c9c-a622-2eaa9868382c"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "http://framesd:8080"
          }
        ],
        "resources": {
          "limits": {},
          "requests": {
            "memory": "1Mi"
          }
        },
        "default_handler": "dg",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": "",
          "base_image": "",
          "commands": []
        },
        "disable_auto_mount": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": {}
    },
    {
      "kind": "serving",
      "metadata": {
        "name": "churn-server",
        "tag": "",
        "hash": "c8c677b1c01ac936bd818f04543e77c48d21eb33",
        "project": "churn-project-admin",
        "labels": {
          "author": "Iguazio",
          "framework": "churn"
        },
        "categories": [
          "model-serving",
          "machine-learning"
        ],
        "updated": "2021-08-29T19:52:08.784284+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/ml-models",
        "description": "churn classification and predictor",
        "min_replicas": 1,
        "max_replicas": 4,
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "ENABLE_EXPLAINER",
            "value": "False"
          },
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          },
          {
            "name": "INFERENCE_STREAM",
            "value": "users/admin/artifacts/customer-churn-prediction/model_stream"
          }
        ],
        "base_spec": {
          "apiVersion": "nuclio.io/v1",
          "kind": "Function",
          "metadata": {
            "name": "churn-server",
            "labels": {},
            "annotations": {
              "nuclio.io/generated_by": "function generated from /home/kali/functions/churn_server/churn_server.py"
            }
          },
          "spec": {
            "runtime": "python:3.6",
            "handler": "churn_server:handler",
            "env": [],
            "volumes": [],
            "build": {
              "commands": [],
              "noBaseImagesPull": true,
              "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG51bXB5IGFzIG5wCmZyb20gY2xvdWRwaWNrbGUgaW1wb3J0IGxvYWQKCgppbXBvcnQgbWxydW4KCgpjbGFzcyBDaHVybk1vZGVsKG1scnVuLnNlcnZpbmcuVjJNb2RlbFNlcnZlcik6CiAgICBkZWYgbG9hZChzZWxmKToKICAgICAgICAiIiIKICAgICAgICBsb2FkIG11bHRpcGxlIG1vZGVscyBpbiBuZXN0ZWQgZm9sZGVycywgY2h1cm4gbW9kZWwgb25seQogICAgICAgICIiIgogICAgICAgIGNsZl9tb2RlbF9maWxlLCBleHRyYV9kYXRhID0gc2VsZi5nZXRfbW9kZWwoIi5wa2wiKQogICAgICAgIHNlbGYubW9kZWwgPSBsb2FkKG9wZW4oc3RyKGNsZl9tb2RlbF9maWxlKSwgInJiIikpCiAgICAgICAgaWYgImNveCIgaW4gZXh0cmFfZGF0YS5rZXlzKCk6CiAgICAgICAgICAgIGNveF9tb2RlbF9maWxlID0gZXh0cmFfZGF0YVsiY294Il0KICAgICAgICAgICAgc2VsZi5jb3hfbW9kZWwgPSBsb2FkKG9wZW4oc3RyKGNveF9tb2RlbF9maWxlKSwgInJiIikpCiAgICAgICAgICAgIGlmICJjb3gva20iIGluIGV4dHJhX2RhdGEua2V5cygpOgogICAgICAgICAgICAgICAga21fbW9kZWxfZmlsZSA9IGV4dHJhX2RhdGFbImNveC9rbSJdCiAgICAgICAgICAgICAgICBzZWxmLmttX21vZGVsID0gbG9hZChvcGVuKHN0cihrbV9tb2RlbF9maWxlKSwgInJiIikpCgogICAgZGVmIHByZWRpY3Qoc2VsZiwgYm9keSk6CiAgICAgICAgdHJ5OgogICAgICAgICAgICBmZWF0cyA9IG5wLmFzYXJyYXkoYm9keVsiaW5zdGFuY2VzIl0sIGR0eXBlPW5wLmZsb2F0MzIpLnJlc2hhcGUoLTEsIDIzKQogICAgICAgICAgICByZXN1bHQgPSBzZWxmLm1vZGVsLnByZWRpY3QoZmVhdHMsIHZhbGlkYXRlX2ZlYXR1cmVzPUZhbHNlKQogICAgICAgICAgICByZXR1cm4gcmVzdWx0LnRvbGlzdCgpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICByYWlzZSBFeGNlcHRpb24oIkZhaWxlZCB0byBwcmVkaWN0ICVzIiAlIGUpCgoKZnJvbSBtbHJ1bi5ydW50aW1lcyBpbXBvcnQgbnVjbGlvX2luaXRfaG9vawoKCmRlZiBpbml0X2NvbnRleHQoY29udGV4dCk6CiAgICBudWNsaW9faW5pdF9ob29rKGNvbnRleHQsIGdsb2JhbHMoKSwgInNlcnZpbmdfdjIiKQoKCmRlZiBoYW5kbGVyKGNvbnRleHQsIGV2ZW50KToKICAgIHJldHVybiBjb250ZXh0Lm1scnVuX2hhbmRsZXIoY29udGV4dCwgZXZlbnQpCgpmcm9tIG1scnVuLnJ1bnRpbWVzIGltcG9ydCBudWNsaW9faW5pdF9ob29rCmRlZiBpbml0X2NvbnRleHQoY29udGV4dCk6CiAgICBudWNsaW9faW5pdF9ob29rKGNvbnRleHQsIGdsb2JhbHMoKSwgJ3NlcnZpbmdfdjInKQoKZGVmIGhhbmRsZXIoY29udGV4dCwgZXZlbnQpOgogICAgcmV0dXJuIGNvbnRleHQubWxydW5faGFuZGxlcihjb250ZXh0LCBldmVudCkK"
            }
          }
        },
        "source": "",
        "function_kind": "serving_v2",
        "default_class": "ChurnModel",
        "build": {
          "commands": []
        },
        "secret_sources": [],
        "mount_applied": true,
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "name": "clean-data",
        "tag": "",
        "hash": "d4906e6e49779d18523228c0b9cec028bd885755",
        "project": "churn-project-admin",
        "labels": {
          "author": "yasha",
          "framework": "xgboost"
        },
        "categories": [
          "data-prep"
        ],
        "updated": "2021-08-29T19:52:14.659970+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/ml-models",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "",
        "entry_points": {
          "data_clean": {
            "name": "data_clean",
            "doc": "process a raw churn data file\n\nData has 3 states here: `raw`, `cleaned` and `encoded`\n\n* `raw` kept by default, the pipeline begins with a raw data artifact\n* `cleaned` kept for charts, presentations\n* `encoded` is input for a cross validation and training function\n\nsteps (not necessarily in correct order, some parallel)\n* column name maps\n* deal with nans and other types of missings/junk\n* label encode binary and ordinal category columns\n* create category ranges from numerical columns\nAnd finally,\n* test\n\nWhy we don't one-hot-encode here? One hot encoding isn't a necessary\nstep for all algorithms. It can also generate a very large feature\nmatrix that doesn't need to be serialized (even if sparse).\nSo we leave one-hot-encoding for the training step.\n\nWhat about scaling numerical columns? Same as why we don't one hot\nencode here. Do we scale before train-test split?  IMHO, no.  Scaling\nbefore splitting introduces a type of data leakage.  In addition,\nmany estimators are completely immune to the monotonic transformations\nimplied by scaling, so why waste the cycles?\n\nTODO: \n    * parallelize where possible\n    * more abstraction (more parameters, chain sklearn transformers)\n    * convert to marketplace function",
            "parameters": [
              {
                "name": "context",
                "type": "MLClientCtx",
                "doc": "the function execution context",
                "default": ""
              },
              {
                "name": "src",
                "type": "DataItem",
                "doc": "an artifact or file path",
                "default": ""
              },
              {
                "name": "file_ext",
                "type": "str",
                "doc": "file type for artifacts",
                "default": "csv"
              },
              {
                "name": "models_dest",
                "type": "str",
                "doc": "label encoders and other preprocessing steps should be saved together with other pipeline models",
                "default": "models/encoders"
              },
              {
                "name": "cleaned_key",
                "type": "str",
                "doc": "key of cleaned data table in artifact store",
                "default": "cleaned-data"
              },
              {
                "name": "encoded_key",
                "type": "str",
                "doc": "key of encoded data table in artifact store",
                "default": "encoded-data"
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 18
          }
        },
        "description": "clean and encode raw data",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG9zCgppbXBvcnQganNvbgppbXBvcnQgcGFuZGFzIGFzIHBkCmltcG9ydCBudW1weSBhcyBucApmcm9tIGNvbGxlY3Rpb25zIGltcG9ydCBkZWZhdWx0ZGljdAoKZnJvbSBjbG91ZHBpY2tsZSBpbXBvcnQgZHVtcHMsIGR1bXAsIGxvYWQKCmZyb20gc2tsZWFybi5wcmVwcm9jZXNzaW5nIGltcG9ydCAoT25lSG90RW5jb2RlciwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMYWJlbEVuY29kZXIpCgpmcm9tIG1scnVuLmV4ZWN1dGlvbiBpbXBvcnQgTUxDbGllbnRDdHgKZnJvbSBtbHJ1bi5kYXRhc3RvcmUgaW1wb3J0IERhdGFJdGVtCgpkZWYgZGF0YV9jbGVhbigKICAgIGNvbnRleHQ6TUxDbGllbnRDdHgsIAogICAgc3JjOiBEYXRhSXRlbSwKICAgIGZpbGVfZXh0OiBzdHIgPSAiY3N2IiwKICAgIG1vZGVsc19kZXN0OiBzdHIgPSAibW9kZWxzL2VuY29kZXJzIiwKICAgIGNsZWFuZWRfa2V5OiBzdHIgPSAiY2xlYW5lZC1kYXRhIiwKICAgIGVuY29kZWRfa2V5OiBzdHIgPSAiZW5jb2RlZC1kYXRhIgopOgogICAgIiIicHJvY2VzcyBhIHJhdyBjaHVybiBkYXRhIGZpbGUKICAgIAogICAgRGF0YSBoYXMgMyBzdGF0ZXMgaGVyZTogYHJhd2AsIGBjbGVhbmVkYCBhbmQgYGVuY29kZWRgCiAgICAKICAgICogYHJhd2Aga2VwdCBieSBkZWZhdWx0LCB0aGUgcGlwZWxpbmUgYmVnaW5zIHdpdGggYSByYXcgZGF0YSBhcnRpZmFjdAogICAgKiBgY2xlYW5lZGAga2VwdCBmb3IgY2hhcnRzLCBwcmVzZW50YXRpb25zCiAgICAqIGBlbmNvZGVkYCBpcyBpbnB1dCBmb3IgYSBjcm9zcyB2YWxpZGF0aW9uIGFuZCB0cmFpbmluZyBmdW5jdGlvbgogICAgCiAgICBzdGVwcyAobm90IG5lY2Vzc2FyaWx5IGluIGNvcnJlY3Qgb3JkZXIsIHNvbWUgcGFyYWxsZWwpCiAgICAqIGNvbHVtbiBuYW1lIG1hcHMKICAgICogZGVhbCB3aXRoIG5hbnMgYW5kIG90aGVyIHR5cGVzIG9mIG1pc3NpbmdzL2p1bmsKICAgICogbGFiZWwgZW5jb2RlIGJpbmFyeSBhbmQgb3JkaW5hbCBjYXRlZ29yeSBjb2x1bW5zCiAgICAqIGNyZWF0ZSBjYXRlZ29yeSByYW5nZXMgZnJvbSBudW1lcmljYWwgY29sdW1ucwogICAgQW5kIGZpbmFsbHksCiAgICAqIHRlc3QKICAgIAogICAgV2h5IHdlIGRvbid0IG9uZS1ob3QtZW5jb2RlIGhlcmU/IE9uZSBob3QgZW5jb2RpbmcgaXNuJ3QgYSBuZWNlc3NhcnkKICAgIHN0ZXAgZm9yIGFsbCBhbGdvcml0aG1zLiBJdCBjYW4gYWxzbyBnZW5lcmF0ZSBhIHZlcnkgbGFyZ2UgZmVhdHVyZQogICAgbWF0cml4IHRoYXQgZG9lc24ndCBuZWVkIHRvIGJlIHNlcmlhbGl6ZWQgKGV2ZW4gaWYgc3BhcnNlKS4KICAgIFNvIHdlIGxlYXZlIG9uZS1ob3QtZW5jb2RpbmcgZm9yIHRoZSB0cmFpbmluZyBzdGVwLgogICAgCiAgICBXaGF0IGFib3V0IHNjYWxpbmcgbnVtZXJpY2FsIGNvbHVtbnM/IFNhbWUgYXMgd2h5IHdlIGRvbid0IG9uZSBob3QKICAgIGVuY29kZSBoZXJlLiBEbyB3ZSBzY2FsZSBiZWZvcmUgdHJhaW4tdGVzdCBzcGxpdD8gIElNSE8sIG5vLiAgU2NhbGluZwogICAgYmVmb3JlIHNwbGl0dGluZyBpbnRyb2R1Y2VzIGEgdHlwZSBvZiBkYXRhIGxlYWthZ2UuICBJbiBhZGRpdGlvbiwKICAgIG1hbnkgZXN0aW1hdG9ycyBhcmUgY29tcGxldGVseSBpbW11bmUgdG8gdGhlIG1vbm90b25pYyB0cmFuc2Zvcm1hdGlvbnMKICAgIGltcGxpZWQgYnkgc2NhbGluZywgc28gd2h5IHdhc3RlIHRoZSBjeWNsZXM/CiAgICAKICAgIFRPRE86IAogICAgICAgICogcGFyYWxsZWxpemUgd2hlcmUgcG9zc2libGUKICAgICAgICAqIG1vcmUgYWJzdHJhY3Rpb24gKG1vcmUgcGFyYW1ldGVycywgY2hhaW4gc2tsZWFybiB0cmFuc2Zvcm1lcnMpCiAgICAgICAgKiBjb252ZXJ0IHRvIG1hcmtldHBsYWNlIGZ1bmN0aW9uCiAgICAgICAgCiAgICA6cGFyYW0gY29udGV4dDogICAgICAgICAgdGhlIGZ1bmN0aW9uIGV4ZWN1dGlvbiBjb250ZXh0CiAgICA6cGFyYW0gc3JjOiAgICAgICAgICAgICAgYW4gYXJ0aWZhY3Qgb3IgZmlsZSBwYXRoCiAgICA6cGFyYW0gZmlsZV9leHQ6ICAgICAgICAgZmlsZSB0eXBlIGZvciBhcnRpZmFjdHMKICAgIDpwYXJhbSBtb2RlbHNfZGVzdDogICAgICAgbGFiZWwgZW5jb2RlcnMgYW5kIG90aGVyIHByZXByb2Nlc3Npbmcgc3RlcHMKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaG91bGQgYmUgc2F2ZWQgdG9nZXRoZXIgd2l0aCBvdGhlciBwaXBlbGluZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vZGVscwogICAgOnBhcmFtIGNsZWFuZWRfa2V5OiAgICAgIGtleSBvZiBjbGVhbmVkIGRhdGEgdGFibGUgaW4gYXJ0aWZhY3Qgc3RvcmUKICAgIDpwYXJhbSBlbmNvZGVkX2tleTogICAgICBrZXkgb2YgZW5jb2RlZCBkYXRhIHRhYmxlIGluIGFydGlmYWN0IHN0b3JlCiAgICAiIiIKICAgIGRmID0gc3JjLmFzX2RmKCkKICAgIAogICAgZHJvcF9jb2xzX2xpc3QgPSBbImN1c3RvbWVySUQiLCAiVG90YWxDaGFyZ2VzIl0KICAgIGRmLmRyb3AoZHJvcF9jb2xzX2xpc3QsIGF4aXM9MSwgaW5wbGFjZT1UcnVlKQogICAgCiAgICBvbGRfY29scyA9IGRmLmNvbHVtbnMKICAgIHJlbmFtZV9jb2xzX21hcCA9IHsKICAgICAgICAiU2VuaW9yQ2l0aXplbiIgOiAic2VuaW9yIiwKICAgICAgICAiUGFydG5lciIgICAgICAgOiAicGFydG5lciIsCiAgICAgICAgIkRlcGVuZGVudHMiICAgIDogImRlcHMiLAogICAgICAgICJDaHVybiIgICAgICAgICA6ICJsYWJlbHMiCiAgICB9CiAgICBkZi5yZW5hbWUocmVuYW1lX2NvbHNfbWFwLCBheGlzPTEsIGlucGxhY2U9VHJ1ZSkKCiAgICBmb3IgY29sIGluIGRyb3BfY29sc19saXN0OgogICAgICAgIHJlbmFtZV9jb2xzX21hcC51cGRhdGUoe2NvbDogIl9EUk9QUEVEXyJ9KQogICAgCiAgICB0cCA9IG9zLnBhdGguam9pbihtb2RlbHNfZGVzdCwgInByZXByb2MtY29sdW1uX21hcC5qc29uIikKICAgIGNvbnRleHQubG9nX2FydGlmYWN0KCJwcmVwcm9jLWNvbHVtbl9tYXAuanNvbiIsCiAgICAgICAgICAgICAgICAgICAgICAgICBib2R5PWpzb24uZHVtcHMocmVuYW1lX2NvbHNfbWFwKSwKICAgICAgICAgICAgICAgICAgICAgICAgIGxvY2FsX3BhdGg9dHApCiAgICAKCiAgICBkZiA9IGRmLmFwcGx5bWFwKGxhbWJkYSB4OiAiTm8iIGlmIHN0cih4KS5zdGFydHN3aXRoKCJObyAiKSBlbHNlIHgpCgogICAgYmlucyA9IFswLCAxMiwgMjQsIDM2LCA0OCwgNjAsIG5wLmluZl0KICAgIGxhYmVscyA9IFswLCAxLCAyLCAzLCA0LCA1XQogICAgdGVudXJlID0gZGYudGVudXJlLmNvcHkoZGVlcD1UcnVlKQogICAgZGZbInRlbnVyZV9tYXAiXSA9IHBkLmN1dChkZi50ZW51cmUsIGJpbnMsIGxhYmVscz1GYWxzZSkKICAgIHRlbnVyZV9tYXAgPSBkaWN0KHppcChiaW5zLCBsYWJlbHMpKQogICAgdHAgPSBvcy5wYXRoLmpvaW4obW9kZWxzX2Rlc3QsICJwcmVwcm9jLW51bWNhdF9tYXAuanNvbiIpCiAgICBjb250ZXh0LmxvZ19hcnRpZmFjdCgicHJlcHJvYy1udW1jYXRfbWFwLmpzb24iLCAKICAgICAgICAgICAgICAgICAgICAgICAgIGJvZHk9Ynl0ZXMoanNvbi5kdW1wcyh0ZW51cmVfbWFwKS5lbmNvZGUoInV0Zi04IikpLCAKICAgICAgICAgICAgICAgICAgICAgICAgIGxvY2FsX3BhdGg9dHApCiAgICAKICAgIGNvbnRleHQubG9nX2RhdGFzZXQoY2xlYW5lZF9rZXksIGRmPWRmLCBmb3JtYXQ9ZmlsZV9leHQsIGluZGV4PUZhbHNlKQogICAgCiAgICBmaXhfY29scyA9IFsiZ2VuZGVyIiwgInBhcnRuZXIiLCAiZGVwcyIsICJPbmxpbmVTZWN1cml0eSIsIAogICAgICAgICAgICAgICAgIk9ubGluZUJhY2t1cCIsICJEZXZpY2VQcm90ZWN0aW9uIiwgIlRlY2hTdXBwb3J0IiwKICAgICAgICAgICAgICAgICJTdHJlYW1pbmdUViIsICJTdHJlYW1pbmdNb3ZpZXMiLCAiUGhvbmVTZXJ2aWNlIiwKICAgICAgICAgICAgICAgICJNdWx0aXBsZUxpbmVzIiwgIlBhcGVybGVzc0JpbGxpbmciLCAiSW50ZXJuZXRTZXJ2aWNlIiwgCiAgICAgICAgICAgICAgICAiQ29udHJhY3QiLCAiUGF5bWVudE1ldGhvZCIsICJsYWJlbHMiXQogICAgCiAgICBkID0gZGVmYXVsdGRpY3QoTGFiZWxFbmNvZGVyKQogICAgZGZbZml4X2NvbHNdID0gZGZbZml4X2NvbHNdLmFwcGx5KGxhbWJkYSB4OiBkW3gubmFtZV0uZml0X3RyYW5zZm9ybSh4LmFzdHlwZShzdHIpKSkKICAgIGNvbnRleHQubG9nX2RhdGFzZXQoZW5jb2RlZF9rZXksIGRmPWRmLCBmb3JtYXQ9ZmlsZV9leHQsIGluZGV4PUZhbHNlKQoKICAgIG1vZGVsX2JpbiA9IGR1bXBzKGQpCiAgICBjb250ZXh0LmxvZ19tb2RlbCgibW9kZWwiLCAKICAgICAgICAgICAgICAgICAgICAgIGJvZHk9bW9kZWxfYmluLAogICAgICAgICAgICAgICAgICAgICAgYXJ0aWZhY3RfcGF0aD1vcy5wYXRoLmpvaW4oY29udGV4dC5hcnRpZmFjdF9wYXRoLCAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vZGVsc19kZXN0KSwKICAgICAgICAgICAgICAgICAgICAgIG1vZGVsX2ZpbGU9Im1vZGVsLnBrbCIpCgo=",
          "commands": [],
          "origin_filename": "clean-data.ipynb"
        },
        "mount_applied": true,
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "clean-data",
        "tag": "",
        "hash": "1aa070c8228b33a822b0dfb300e253c2dbe27e5a",
        "project": "churn-project-admin",
        "labels": {
          "author": "yasha",
          "framework": "xgboost"
        },
        "categories": [
          "data-prep"
        ],
        "updated": "2021-08-29T19:52:14.764573+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/ml-models",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "",
        "entry_points": {
          "data_clean": {
            "name": "data_clean",
            "doc": "process a raw churn data file\n\nData has 3 states here: `raw`, `cleaned` and `encoded`\n\n* `raw` kept by default, the pipeline begins with a raw data artifact\n* `cleaned` kept for charts, presentations\n* `encoded` is input for a cross validation and training function\n\nsteps (not necessarily in correct order, some parallel)\n* column name maps\n* deal with nans and other types of missings/junk\n* label encode binary and ordinal category columns\n* create category ranges from numerical columns\nAnd finally,\n* test\n\nWhy we don't one-hot-encode here? One hot encoding isn't a necessary\nstep for all algorithms. It can also generate a very large feature\nmatrix that doesn't need to be serialized (even if sparse).\nSo we leave one-hot-encoding for the training step.\n\nWhat about scaling numerical columns? Same as why we don't one hot\nencode here. Do we scale before train-test split?  IMHO, no.  Scaling\nbefore splitting introduces a type of data leakage.  In addition,\nmany estimators are completely immune to the monotonic transformations\nimplied by scaling, so why waste the cycles?\n\nTODO: \n    * parallelize where possible\n    * more abstraction (more parameters, chain sklearn transformers)\n    * convert to marketplace function",
            "parameters": [
              {
                "name": "context",
                "type": "MLClientCtx",
                "doc": "the function execution context",
                "default": ""
              },
              {
                "name": "src",
                "type": "DataItem",
                "doc": "an artifact or file path",
                "default": ""
              },
              {
                "name": "file_ext",
                "type": "str",
                "doc": "file type for artifacts",
                "default": "csv"
              },
              {
                "name": "models_dest",
                "type": "str",
                "doc": "label encoders and other preprocessing steps should be saved together with other pipeline models",
                "default": "models/encoders"
              },
              {
                "name": "cleaned_key",
                "type": "str",
                "doc": "key of cleaned data table in artifact store",
                "default": "cleaned-data"
              },
              {
                "name": "encoded_key",
                "type": "str",
                "doc": "key of encoded data table in artifact store",
                "default": "encoded-data"
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 18
          }
        },
        "description": "clean and encode raw data",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG9zCgppbXBvcnQganNvbgppbXBvcnQgcGFuZGFzIGFzIHBkCmltcG9ydCBudW1weSBhcyBucApmcm9tIGNvbGxlY3Rpb25zIGltcG9ydCBkZWZhdWx0ZGljdAoKZnJvbSBjbG91ZHBpY2tsZSBpbXBvcnQgZHVtcHMsIGR1bXAsIGxvYWQKCmZyb20gc2tsZWFybi5wcmVwcm9jZXNzaW5nIGltcG9ydCAoT25lSG90RW5jb2RlciwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMYWJlbEVuY29kZXIpCgpmcm9tIG1scnVuLmV4ZWN1dGlvbiBpbXBvcnQgTUxDbGllbnRDdHgKZnJvbSBtbHJ1bi5kYXRhc3RvcmUgaW1wb3J0IERhdGFJdGVtCgpkZWYgZGF0YV9jbGVhbigKICAgIGNvbnRleHQ6TUxDbGllbnRDdHgsIAogICAgc3JjOiBEYXRhSXRlbSwKICAgIGZpbGVfZXh0OiBzdHIgPSAiY3N2IiwKICAgIG1vZGVsc19kZXN0OiBzdHIgPSAibW9kZWxzL2VuY29kZXJzIiwKICAgIGNsZWFuZWRfa2V5OiBzdHIgPSAiY2xlYW5lZC1kYXRhIiwKICAgIGVuY29kZWRfa2V5OiBzdHIgPSAiZW5jb2RlZC1kYXRhIgopOgogICAgIiIicHJvY2VzcyBhIHJhdyBjaHVybiBkYXRhIGZpbGUKICAgIAogICAgRGF0YSBoYXMgMyBzdGF0ZXMgaGVyZTogYHJhd2AsIGBjbGVhbmVkYCBhbmQgYGVuY29kZWRgCiAgICAKICAgICogYHJhd2Aga2VwdCBieSBkZWZhdWx0LCB0aGUgcGlwZWxpbmUgYmVnaW5zIHdpdGggYSByYXcgZGF0YSBhcnRpZmFjdAogICAgKiBgY2xlYW5lZGAga2VwdCBmb3IgY2hhcnRzLCBwcmVzZW50YXRpb25zCiAgICAqIGBlbmNvZGVkYCBpcyBpbnB1dCBmb3IgYSBjcm9zcyB2YWxpZGF0aW9uIGFuZCB0cmFpbmluZyBmdW5jdGlvbgogICAgCiAgICBzdGVwcyAobm90IG5lY2Vzc2FyaWx5IGluIGNvcnJlY3Qgb3JkZXIsIHNvbWUgcGFyYWxsZWwpCiAgICAqIGNvbHVtbiBuYW1lIG1hcHMKICAgICogZGVhbCB3aXRoIG5hbnMgYW5kIG90aGVyIHR5cGVzIG9mIG1pc3NpbmdzL2p1bmsKICAgICogbGFiZWwgZW5jb2RlIGJpbmFyeSBhbmQgb3JkaW5hbCBjYXRlZ29yeSBjb2x1bW5zCiAgICAqIGNyZWF0ZSBjYXRlZ29yeSByYW5nZXMgZnJvbSBudW1lcmljYWwgY29sdW1ucwogICAgQW5kIGZpbmFsbHksCiAgICAqIHRlc3QKICAgIAogICAgV2h5IHdlIGRvbid0IG9uZS1ob3QtZW5jb2RlIGhlcmU/IE9uZSBob3QgZW5jb2RpbmcgaXNuJ3QgYSBuZWNlc3NhcnkKICAgIHN0ZXAgZm9yIGFsbCBhbGdvcml0aG1zLiBJdCBjYW4gYWxzbyBnZW5lcmF0ZSBhIHZlcnkgbGFyZ2UgZmVhdHVyZQogICAgbWF0cml4IHRoYXQgZG9lc24ndCBuZWVkIHRvIGJlIHNlcmlhbGl6ZWQgKGV2ZW4gaWYgc3BhcnNlKS4KICAgIFNvIHdlIGxlYXZlIG9uZS1ob3QtZW5jb2RpbmcgZm9yIHRoZSB0cmFpbmluZyBzdGVwLgogICAgCiAgICBXaGF0IGFib3V0IHNjYWxpbmcgbnVtZXJpY2FsIGNvbHVtbnM/IFNhbWUgYXMgd2h5IHdlIGRvbid0IG9uZSBob3QKICAgIGVuY29kZSBoZXJlLiBEbyB3ZSBzY2FsZSBiZWZvcmUgdHJhaW4tdGVzdCBzcGxpdD8gIElNSE8sIG5vLiAgU2NhbGluZwogICAgYmVmb3JlIHNwbGl0dGluZyBpbnRyb2R1Y2VzIGEgdHlwZSBvZiBkYXRhIGxlYWthZ2UuICBJbiBhZGRpdGlvbiwKICAgIG1hbnkgZXN0aW1hdG9ycyBhcmUgY29tcGxldGVseSBpbW11bmUgdG8gdGhlIG1vbm90b25pYyB0cmFuc2Zvcm1hdGlvbnMKICAgIGltcGxpZWQgYnkgc2NhbGluZywgc28gd2h5IHdhc3RlIHRoZSBjeWNsZXM/CiAgICAKICAgIFRPRE86IAogICAgICAgICogcGFyYWxsZWxpemUgd2hlcmUgcG9zc2libGUKICAgICAgICAqIG1vcmUgYWJzdHJhY3Rpb24gKG1vcmUgcGFyYW1ldGVycywgY2hhaW4gc2tsZWFybiB0cmFuc2Zvcm1lcnMpCiAgICAgICAgKiBjb252ZXJ0IHRvIG1hcmtldHBsYWNlIGZ1bmN0aW9uCiAgICAgICAgCiAgICA6cGFyYW0gY29udGV4dDogICAgICAgICAgdGhlIGZ1bmN0aW9uIGV4ZWN1dGlvbiBjb250ZXh0CiAgICA6cGFyYW0gc3JjOiAgICAgICAgICAgICAgYW4gYXJ0aWZhY3Qgb3IgZmlsZSBwYXRoCiAgICA6cGFyYW0gZmlsZV9leHQ6ICAgICAgICAgZmlsZSB0eXBlIGZvciBhcnRpZmFjdHMKICAgIDpwYXJhbSBtb2RlbHNfZGVzdDogICAgICAgbGFiZWwgZW5jb2RlcnMgYW5kIG90aGVyIHByZXByb2Nlc3Npbmcgc3RlcHMKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaG91bGQgYmUgc2F2ZWQgdG9nZXRoZXIgd2l0aCBvdGhlciBwaXBlbGluZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vZGVscwogICAgOnBhcmFtIGNsZWFuZWRfa2V5OiAgICAgIGtleSBvZiBjbGVhbmVkIGRhdGEgdGFibGUgaW4gYXJ0aWZhY3Qgc3RvcmUKICAgIDpwYXJhbSBlbmNvZGVkX2tleTogICAgICBrZXkgb2YgZW5jb2RlZCBkYXRhIHRhYmxlIGluIGFydGlmYWN0IHN0b3JlCiAgICAiIiIKICAgIGRmID0gc3JjLmFzX2RmKCkKICAgIAogICAgZHJvcF9jb2xzX2xpc3QgPSBbImN1c3RvbWVySUQiLCAiVG90YWxDaGFyZ2VzIl0KICAgIGRmLmRyb3AoZHJvcF9jb2xzX2xpc3QsIGF4aXM9MSwgaW5wbGFjZT1UcnVlKQogICAgCiAgICBvbGRfY29scyA9IGRmLmNvbHVtbnMKICAgIHJlbmFtZV9jb2xzX21hcCA9IHsKICAgICAgICAiU2VuaW9yQ2l0aXplbiIgOiAic2VuaW9yIiwKICAgICAgICAiUGFydG5lciIgICAgICAgOiAicGFydG5lciIsCiAgICAgICAgIkRlcGVuZGVudHMiICAgIDogImRlcHMiLAogICAgICAgICJDaHVybiIgICAgICAgICA6ICJsYWJlbHMiCiAgICB9CiAgICBkZi5yZW5hbWUocmVuYW1lX2NvbHNfbWFwLCBheGlzPTEsIGlucGxhY2U9VHJ1ZSkKCiAgICBmb3IgY29sIGluIGRyb3BfY29sc19saXN0OgogICAgICAgIHJlbmFtZV9jb2xzX21hcC51cGRhdGUoe2NvbDogIl9EUk9QUEVEXyJ9KQogICAgCiAgICB0cCA9IG9zLnBhdGguam9pbihtb2RlbHNfZGVzdCwgInByZXByb2MtY29sdW1uX21hcC5qc29uIikKICAgIGNvbnRleHQubG9nX2FydGlmYWN0KCJwcmVwcm9jLWNvbHVtbl9tYXAuanNvbiIsCiAgICAgICAgICAgICAgICAgICAgICAgICBib2R5PWpzb24uZHVtcHMocmVuYW1lX2NvbHNfbWFwKSwKICAgICAgICAgICAgICAgICAgICAgICAgIGxvY2FsX3BhdGg9dHApCiAgICAKCiAgICBkZiA9IGRmLmFwcGx5bWFwKGxhbWJkYSB4OiAiTm8iIGlmIHN0cih4KS5zdGFydHN3aXRoKCJObyAiKSBlbHNlIHgpCgogICAgYmlucyA9IFswLCAxMiwgMjQsIDM2LCA0OCwgNjAsIG5wLmluZl0KICAgIGxhYmVscyA9IFswLCAxLCAyLCAzLCA0LCA1XQogICAgdGVudXJlID0gZGYudGVudXJlLmNvcHkoZGVlcD1UcnVlKQogICAgZGZbInRlbnVyZV9tYXAiXSA9IHBkLmN1dChkZi50ZW51cmUsIGJpbnMsIGxhYmVscz1GYWxzZSkKICAgIHRlbnVyZV9tYXAgPSBkaWN0KHppcChiaW5zLCBsYWJlbHMpKQogICAgdHAgPSBvcy5wYXRoLmpvaW4obW9kZWxzX2Rlc3QsICJwcmVwcm9jLW51bWNhdF9tYXAuanNvbiIpCiAgICBjb250ZXh0LmxvZ19hcnRpZmFjdCgicHJlcHJvYy1udW1jYXRfbWFwLmpzb24iLCAKICAgICAgICAgICAgICAgICAgICAgICAgIGJvZHk9Ynl0ZXMoanNvbi5kdW1wcyh0ZW51cmVfbWFwKS5lbmNvZGUoInV0Zi04IikpLCAKICAgICAgICAgICAgICAgICAgICAgICAgIGxvY2FsX3BhdGg9dHApCiAgICAKICAgIGNvbnRleHQubG9nX2RhdGFzZXQoY2xlYW5lZF9rZXksIGRmPWRmLCBmb3JtYXQ9ZmlsZV9leHQsIGluZGV4PUZhbHNlKQogICAgCiAgICBmaXhfY29scyA9IFsiZ2VuZGVyIiwgInBhcnRuZXIiLCAiZGVwcyIsICJPbmxpbmVTZWN1cml0eSIsIAogICAgICAgICAgICAgICAgIk9ubGluZUJhY2t1cCIsICJEZXZpY2VQcm90ZWN0aW9uIiwgIlRlY2hTdXBwb3J0IiwKICAgICAgICAgICAgICAgICJTdHJlYW1pbmdUViIsICJTdHJlYW1pbmdNb3ZpZXMiLCAiUGhvbmVTZXJ2aWNlIiwKICAgICAgICAgICAgICAgICJNdWx0aXBsZUxpbmVzIiwgIlBhcGVybGVzc0JpbGxpbmciLCAiSW50ZXJuZXRTZXJ2aWNlIiwgCiAgICAgICAgICAgICAgICAiQ29udHJhY3QiLCAiUGF5bWVudE1ldGhvZCIsICJsYWJlbHMiXQogICAgCiAgICBkID0gZGVmYXVsdGRpY3QoTGFiZWxFbmNvZGVyKQogICAgZGZbZml4X2NvbHNdID0gZGZbZml4X2NvbHNdLmFwcGx5KGxhbWJkYSB4OiBkW3gubmFtZV0uZml0X3RyYW5zZm9ybSh4LmFzdHlwZShzdHIpKSkKICAgIGNvbnRleHQubG9nX2RhdGFzZXQoZW5jb2RlZF9rZXksIGRmPWRmLCBmb3JtYXQ9ZmlsZV9leHQsIGluZGV4PUZhbHNlKQoKICAgIG1vZGVsX2JpbiA9IGR1bXBzKGQpCiAgICBjb250ZXh0LmxvZ19tb2RlbCgibW9kZWwiLCAKICAgICAgICAgICAgICAgICAgICAgIGJvZHk9bW9kZWxfYmluLAogICAgICAgICAgICAgICAgICAgICAgYXJ0aWZhY3RfcGF0aD1vcy5wYXRoLmpvaW4oY29udGV4dC5hcnRpZmFjdF9wYXRoLCAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vZGVsc19kZXN0KSwKICAgICAgICAgICAgICAgICAgICAgIG1vZGVsX2ZpbGU9Im1vZGVsLnBrbCIpCgo=",
          "commands": [],
          "origin_filename": "clean-data.ipynb"
        },
        "mount_applied": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "coxph-trainer",
        "tag": "",
        "hash": "964ff688463a37cb172b16d9ecb5b410a3aca918",
        "project": "churn-project-admin",
        "labels": {
          "author": "yjb",
          "framework": "survival"
        },
        "categories": [
          "model-training",
          "machine-learning"
        ],
        "updated": "2021-08-29T19:54:07.099282+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/ml-models",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "train_model",
        "entry_points": {
          "train_model": {
            "name": "train_model",
            "doc": "train models to predict the timing of events\n\nAlthough identical in structure to other training functions, this one\nrequires generating a 'Y' that represents the age/duration/tenure of\nthe obervation, designated 'tenure' here, and a binary labels columns that\nrepresents the event of interest, churned/not-churned.\n\nIn addition, there is a strata_cols parameter, representing a list of\nstratification (aka grouping) variables.",
            "parameters": [
              {
                "name": "context",
                "type": "MLClientCtx",
                "doc": "the function context",
                "default": ""
              },
              {
                "name": "dataset",
                "type": "DataItem",
                "doc": "(\"data\") name of raw data file",
                "default": ""
              },
              {
                "name": "event_column",
                "type": "str",
                "doc": "ground-truth (y) labels (considered as events in this model)",
                "default": "labels"
              },
              {
                "name": "time_column",
                "type": "str",
                "doc": "age or tenure column",
                "default": "tenure"
              },
              {
                "name": "encode_cols",
                "type": "dict",
                "doc": "dictionary of names and prefixes for columns that are to hot be encoded.",
                "default": {}
              },
              {
                "name": "strata_cols",
                "type": "list",
                "doc": "columns used to stratify predictors",
                "default": []
              },
              {
                "name": "plot_cov_groups",
                "type": "bool",
                "default": false
              },
              {
                "name": "p_value",
                "type": "float",
                "doc": "(0.005) max p value for coeffcients selected",
                "default": 0.005
              },
              {
                "name": "sample",
                "type": "int",
                "doc": "Selects the first n rows, or select a sample starting from the first. If negative <-1, select a random sample",
                "default": "<_ast.USub object at 0x7f3b619b97b8>"
              },
              {
                "name": "test_size",
                "type": "float",
                "doc": "(0.25) test set size",
                "default": 0.25
              },
              {
                "name": "valid_size",
                "type": "float",
                "doc": "(0.75) Once the test set has been removed the training set gets this proportion.",
                "default": 0.75
              },
              {
                "name": "random_state",
                "type": "int",
                "doc": "(1) sklearn rng seed",
                "default": 1
              },
              {
                "name": "models_dest",
                "type": "str",
                "doc": "destination subfolder for model artifacts",
                "default": ""
              },
              {
                "name": "plots_dest",
                "type": "str",
                "doc": "destination subfolder for plot artifacts",
                "default": ""
              },
              {
                "name": "file_ext",
                "type": "str",
                "doc": "format for test_set_key hold out data",
                "default": "csv"
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 97
          }
        },
        "description": "cox proportional hazards, kaplan meier plots",
        "build": {
          "functionSourceCode": "",
          "commands": []
        },
        "mount_applied": true,
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "describe",
        "tag": "",
        "hash": "7efcd9ef3611824ef9d47d07e9e20ec978cdaf20",
        "project": "churn-project-admin",
        "labels": {
          "author": "Iguazio"
        },
        "categories": [
          "data-analysis"
        ],
        "updated": "2021-08-29T19:54:07.149817+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "summarize",
        "entry_points": {
          "summarize": {
            "name": "summarize",
            "doc": "Summarize a table",
            "parameters": [
              {
                "name": "context",
                "type": "MLClientCtx",
                "doc": "the function context",
                "default": ""
              },
              {
                "name": "table",
                "type": "DataItem",
                "doc": "MLRun input pointing to pandas dataframe (csv/parquet file path)",
                "default": ""
              },
              {
                "name": "label_column",
                "type": "str",
                "doc": "ground truth column label",
                "default": null
              },
              {
                "name": "class_labels",
                "type": "List[str]",
                "doc": "label for each class in tables and plots",
                "default": []
              },
              {
                "name": "plot_hist",
                "type": "bool",
                "doc": "(True) set this to False for large tables",
                "default": true
              },
              {
                "name": "plots_dest",
                "type": "str",
                "doc": "destination folder of summary plots (relative to artifact_path)",
                "default": "plots"
              },
              {
                "name": "update_dataset",
                "doc": "when the table is a registered dataset update the charts in-place",
                "default": false
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 23
          }
        },
        "description": "describe and visualizes dataset stats",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHdhcm5pbmdzCgp3YXJuaW5ncy5zaW1wbGVmaWx0ZXIoYWN0aW9uPSJpZ25vcmUiLCBjYXRlZ29yeT1GdXR1cmVXYXJuaW5nKQoKaW1wb3J0IG9zCmltcG9ydCBudW1weSBhcyBucAppbXBvcnQgcGFuZGFzIGFzIHBkCmltcG9ydCBtYXRwbG90bGliLnB5cGxvdCBhcyBwbHQKaW1wb3J0IHNlYWJvcm4gYXMgc25zCgpmcm9tIG1scnVuLmV4ZWN1dGlvbiBpbXBvcnQgTUxDbGllbnRDdHgKZnJvbSBtbHJ1bi5kYXRhc3RvcmUgaW1wb3J0IERhdGFJdGVtCmZyb20gbWxydW4uYXJ0aWZhY3RzIGltcG9ydCBQbG90QXJ0aWZhY3QsIFRhYmxlQXJ0aWZhY3QKZnJvbSBtbHJ1bi5tbHV0aWxzLnBsb3RzIGltcG9ydCBnY2ZfY2xlYXIKCmZyb20gdHlwaW5nIGltcG9ydCBMaXN0CgpwZC5zZXRfb3B0aW9uKCJkaXNwbGF5LmZsb2F0X2Zvcm1hdCIsIGxhbWJkYSB4OiAiJS4yZiIgJSB4KQoKCmRlZiBzdW1tYXJpemUoCiAgICBjb250ZXh0OiBNTENsaWVudEN0eCwKICAgIHRhYmxlOiBEYXRhSXRlbSwKICAgIGxhYmVsX2NvbHVtbjogc3RyID0gTm9uZSwKICAgIGNsYXNzX2xhYmVsczogTGlzdFtzdHJdID0gW10sCiAgICBwbG90X2hpc3Q6IGJvb2wgPSBUcnVlLAogICAgcGxvdHNfZGVzdDogc3RyID0gInBsb3RzIiwKICAgIHVwZGF0ZV9kYXRhc2V0PUZhbHNlLAopIC0+IE5vbmU6CiAgICAiIiJTdW1tYXJpemUgYSB0YWJsZQoKICAgIDpwYXJhbSBjb250ZXh0OiAgICAgICAgIHRoZSBmdW5jdGlvbiBjb250ZXh0CiAgICA6cGFyYW0gdGFibGU6ICAgICAgICAgICBNTFJ1biBpbnB1dCBwb2ludGluZyB0byBwYW5kYXMgZGF0YWZyYW1lIChjc3YvcGFycXVldCBmaWxlIHBhdGgpCiAgICA6cGFyYW0gbGFiZWxfY29sdW1uOiAgICBncm91bmQgdHJ1dGggY29sdW1uIGxhYmVsCiAgICA6cGFyYW0gY2xhc3NfbGFiZWxzOiAgICBsYWJlbCBmb3IgZWFjaCBjbGFzcyBpbiB0YWJsZXMgYW5kIHBsb3RzCiAgICA6cGFyYW0gcGxvdF9oaXN0OiAgICAgICAoVHJ1ZSkgc2V0IHRoaXMgdG8gRmFsc2UgZm9yIGxhcmdlIHRhYmxlcwogICAgOnBhcmFtIHBsb3RzX2Rlc3Q6ICAgICAgZGVzdGluYXRpb24gZm9sZGVyIG9mIHN1bW1hcnkgcGxvdHMgKHJlbGF0aXZlIHRvIGFydGlmYWN0X3BhdGgpCiAgICA6cGFyYW0gdXBkYXRlX2RhdGFzZXQ6ICB3aGVuIHRoZSB0YWJsZSBpcyBhIHJlZ2lzdGVyZWQgZGF0YXNldCB1cGRhdGUgdGhlIGNoYXJ0cyBpbi1wbGFjZQogICAgIiIiCiAgICBkZiA9IHRhYmxlLmFzX2RmKCkKICAgIGhlYWRlciA9IGRmLmNvbHVtbnMudmFsdWVzCiAgICBleHRyYV9kYXRhID0ge30KCiAgICB0cnk6CiAgICAgICAgZ2NmX2NsZWFyKHBsdCkKICAgICAgICBzbnNwbHQgPSBzbnMucGFpcnBsb3QoZGYsIGh1ZT1sYWJlbF9jb2x1bW4pICAjICwgZGlhZ19rd3M9eyJidyI6IDEuNX0pCiAgICAgICAgZXh0cmFfZGF0YVsiaGlzdG9ncmFtcyJdID0gY29udGV4dC5sb2dfYXJ0aWZhY3QoCiAgICAgICAgICAgIFBsb3RBcnRpZmFjdCgiaGlzdG9ncmFtcyIsIGJvZHk9cGx0LmdjZigpKSwKICAgICAgICAgICAgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS9oaXN0Lmh0bWwiLAogICAgICAgICAgICBkYl9rZXk9RmFsc2UsCiAgICAgICAgKQogICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgIGNvbnRleHQubG9nZ2VyLmVycm9yKGYiRmFpbGVkIHRvIGNyZWF0ZSBwYWlycGxvdCBoaXN0b2dyYW1zIGR1ZSB0bzoge2V9IikKCiAgICB0cnk6CiAgICAgICAgZ2NmX2NsZWFyKHBsdCkKICAgICAgICBwbG90X2NvbHMgPSAzCiAgICAgICAgcGxvdF9yb3dzID0gaW50KChsZW4oaGVhZGVyKSAtIDEpIC8gcGxvdF9jb2xzKSArIDEKICAgICAgICBmaWcsIGF4ID0gcGx0LnN1YnBsb3RzKHBsb3Rfcm93cywgcGxvdF9jb2xzLCBmaWdzaXplPSgxNSwgNCkpCiAgICAgICAgZmlnLnRpZ2h0X2xheW91dChwYWQ9Mi4wKQogICAgICAgIGZvciBpIGluIHJhbmdlKHBsb3Rfcm93cyAqIHBsb3RfY29scyk6CiAgICAgICAgICAgIGlmIGkgPCBsZW4oaGVhZGVyKToKICAgICAgICAgICAgICAgIHNucy52aW9saW5wbG90KAogICAgICAgICAgICAgICAgICAgIHg9ZGZbaGVhZGVyW2ldXSwKICAgICAgICAgICAgICAgICAgICBheD1heFtpbnQoaSAvIHBsb3RfY29scyldW2kgJSBwbG90X2NvbHNdLAogICAgICAgICAgICAgICAgICAgIG9yaWVudD0iaCIsCiAgICAgICAgICAgICAgICAgICAgd2lkdGg9MC43LAogICAgICAgICAgICAgICAgICAgIGlubmVyPSJxdWFydGlsZSIsCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBmaWcuZGVsYXhlcyhheFtpbnQoaSAvIHBsb3RfY29scyldW2kgJSBwbG90X2NvbHNdKQogICAgICAgICAgICBpICs9IDEKICAgICAgICBleHRyYV9kYXRhWyJ2aW9saW4iXSA9IGNvbnRleHQubG9nX2FydGlmYWN0KAogICAgICAgICAgICBQbG90QXJ0aWZhY3QoInZpb2xpbiIsIGJvZHk9cGx0LmdjZigpLCB0aXRsZT0iVmlvbGluIFBsb3QiKSwKICAgICAgICAgICAgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS92aW9saW4uaHRtbCIsCiAgICAgICAgICAgIGRiX2tleT1GYWxzZSwKICAgICAgICApCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgY29udGV4dC5sb2dnZXIud2FybihmIkZhaWxlZCB0byBjcmVhdGUgdmlvbGluIGRpc3RyaWJ1dGlvbiBwbG90cyBkdWUgdG86IHtlfSIpCgogICAgaWYgbGFiZWxfY29sdW1uOgogICAgICAgIGxhYmVscyA9IGRmLnBvcChsYWJlbF9jb2x1bW4pCiAgICAgICAgaW1idGFibGUgPSBsYWJlbHMudmFsdWVfY291bnRzKG5vcm1hbGl6ZT1UcnVlKS5zb3J0X2luZGV4KCkKICAgICAgICB0cnk6CiAgICAgICAgICAgIGdjZl9jbGVhcihwbHQpCiAgICAgICAgICAgIGJhbGFuY2ViYXIgPSBpbWJ0YWJsZS5wbG90KGtpbmQ9ImJhciIsIHRpdGxlPSJjbGFzcyBpbWJhbGFuY2UgLSBsYWJlbHMiKQogICAgICAgICAgICBiYWxhbmNlYmFyLnNldF94bGFiZWwoImNsYXNzIikKICAgICAgICAgICAgYmFsYW5jZWJhci5zZXRfeWxhYmVsKCJwcm9wb3J0aW9uIG9mIHRvdGFsIikKICAgICAgICAgICAgZXh0cmFfZGF0YVsiaW1iYWxhbmNlIl0gPSBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICAgICAgICAgIFBsb3RBcnRpZmFjdCgiaW1iYWxhbmNlIiwgYm9keT1wbHQuZ2NmKCkpLAogICAgICAgICAgICAgICAgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS9pbWJhbGFuY2UuaHRtbCIsCiAgICAgICAgICAgICkKICAgICAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgICAgIGNvbnRleHQubG9nZ2VyLndhcm4oZiJGYWlsZWQgdG8gY3JlYXRlIGNsYXNzIGltYmFsYW5jZSBwbG90IGR1ZSB0bzoge2V9IikKICAgICAgICBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICAgICAgVGFibGVBcnRpZmFjdCgKICAgICAgICAgICAgICAgICJpbWJhbGFuY2Utd2VpZ2h0cy12ZWMiLCBkZj1wZC5EYXRhRnJhbWUoeyJ3ZWlnaHRzIjogaW1idGFibGV9KQogICAgICAgICAgICApLAogICAgICAgICAgICBsb2NhbF9wYXRoPWYie3Bsb3RzX2Rlc3R9L2ltYmFsYW5jZS13ZWlnaHRzLXZlYy5jc3YiLAogICAgICAgICAgICBkYl9rZXk9RmFsc2UsCiAgICAgICAgKQoKICAgIHRibGNvcnIgPSBkZi5jb3JyKCkKICAgIG1hc2sgPSBucC56ZXJvc19saWtlKHRibGNvcnIsIGR0eXBlPW5wLmJvb2wpCiAgICBtYXNrW25wLnRyaXVfaW5kaWNlc19mcm9tKG1hc2spXSA9IFRydWUKCiAgICBkZmNvcnIgPSBwZC5EYXRhRnJhbWUoZGF0YT10Ymxjb3JyLCBjb2x1bW5zPWhlYWRlciwgaW5kZXg9aGVhZGVyKQogICAgZGZjb3JyID0gZGZjb3JyW25wLmFyYW5nZShkZmNvcnIuc2hhcGVbMF0pWzosIE5vbmVdID4gbnAuYXJhbmdlKGRmY29yci5zaGFwZVsxXSldCiAgICBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICBUYWJsZUFydGlmYWN0KCJjb3JyZWxhdGlvbi1tYXRyaXgiLCBkZj10Ymxjb3JyLCB2aXNpYmxlPVRydWUpLAogICAgICAgIGxvY2FsX3BhdGg9ZiJ7cGxvdHNfZGVzdH0vY29ycmVsYXRpb24tbWF0cml4LmNzdiIsCiAgICAgICAgZGJfa2V5PUZhbHNlLAogICAgKQoKICAgIHRyeToKICAgICAgICBnY2ZfY2xlYXIocGx0KQogICAgICAgIGF4ID0gcGx0LmF4ZXMoKQogICAgICAgIHNucy5oZWF0bWFwKHRibGNvcnIsIGF4PWF4LCBtYXNrPW1hc2ssIGFubm90PUZhbHNlLCBjbWFwPXBsdC5jbS5SZWRzKQogICAgICAgIGF4LnNldF90aXRsZSgiZmVhdHVyZXMgY29ycmVsYXRpb24iKQogICAgICAgIGV4dHJhX2RhdGFbImNvcnJlbGF0aW9uIl0gPSBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICAgICAgUGxvdEFydGlmYWN0KCJjb3JyZWxhdGlvbiIsIGJvZHk9cGx0LmdjZigpLCB0aXRsZT0iQ29ycmVsYXRpb24gTWF0cml4IiksCiAgICAgICAgICAgIGxvY2FsX3BhdGg9ZiJ7cGxvdHNfZGVzdH0vY29yci5odG1sIiwKICAgICAgICAgICAgZGJfa2V5PUZhbHNlLAogICAgICAgICkKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICBjb250ZXh0LmxvZ2dlci53YXJuKGYiRmFpbGVkIHRvIGNyZWF0ZSBmZWF0dXJlcyBjb3JyZWxhdGlvbiBwbG90IGR1ZSB0bzoge2V9IikKCiAgICBnY2ZfY2xlYXIocGx0KQogICAgaWYgdXBkYXRlX2RhdGFzZXQgYW5kIHRhYmxlLm1ldGEgYW5kIHRhYmxlLm1ldGEua2luZCA9PSAiZGF0YXNldCI6CiAgICAgICAgZnJvbSBtbHJ1bi5hcnRpZmFjdHMgaW1wb3J0IHVwZGF0ZV9kYXRhc2V0X21ldGEKCiAgICAgICAgdXBkYXRlX2RhdGFzZXRfbWV0YSh0YWJsZS5tZXRhLCBleHRyYV9kYXRhPWV4dHJhX2RhdGEpCg==",
          "commands": []
        },
        "mount_applied": true,
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "xgb-trainer",
        "tag": "",
        "hash": "407b68c21a9cfcb8b6344434049ec8e8fee4ad28",
        "project": "churn-project-admin",
        "labels": {
          "author": "Daniel"
        },
        "categories": [
          "model-training"
        ],
        "updated": "2021-08-29T19:54:07.194668+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/ml-models",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "train_model",
        "entry_points": {
          "train_model": {
            "name": "train_model",
            "doc": "train an xgboost model.\n\nNote on imabalanced data:  the `imbal_vec` parameter represents the measured\nclass representations in the sample and can be used as a first step in tuning\nan XGBoost model.  This isn't a hyperparamter, merely an estimate that should\nbe set as 'constant' throughout tuning process.",
            "parameters": [
              {
                "name": "context",
                "type": "MLClientCtx",
                "doc": "the function context",
                "default": ""
              },
              {
                "name": "model_type",
                "type": "str",
                "doc": "the model type to train, \"classifier\", \"regressor\"...",
                "default": ""
              },
              {
                "name": "dataset",
                "type": "Union[DataItem, DataFrame]",
                "doc": "(\"data\") name of raw data file",
                "default": ""
              },
              {
                "name": "label_column",
                "type": "str",
                "doc": "ground-truth (y) labels",
                "default": "labels"
              },
              {
                "name": "encode_cols",
                "type": "dict",
                "doc": "dictionary of names and prefixes for columns that are to hot be encoded.",
                "default": {}
              },
              {
                "name": "sample",
                "type": "int",
                "doc": "Selects the first n rows, or select a sample starting from the first. If negative <-1, select a random sample",
                "default": "<_ast.USub object at 0x7f66a8fbc7b8>"
              },
              {
                "name": "imbal_vec",
                "doc": "([]) vector of class weights seen in sample",
                "default": []
              },
              {
                "name": "test_size",
                "type": "float",
                "doc": "(0.05) test set size",
                "default": 0.25
              },
              {
                "name": "valid_size",
                "type": "float",
                "doc": "(0.75) Once the test set has been removed the training set gets this proportion.",
                "default": 0.75
              },
              {
                "name": "random_state",
                "type": "int",
                "doc": "(1) sklearn rng seed",
                "default": 1
              },
              {
                "name": "models_dest",
                "type": "str",
                "doc": "destination subfolder for model artifacts",
                "default": "models"
              },
              {
                "name": "plots_dest",
                "type": "str",
                "doc": "destination subfolder for plot artifacts",
                "default": "plots"
              },
              {
                "name": "eval_metrics",
                "type": "list",
                "doc": "([\"error\", \"auc\"]) learning curve metrics",
                "default": [
                  "error",
                  "auc"
                ]
              },
              {
                "name": "file_ext",
                "type": "str",
                "doc": "format for test_set_key hold out data",
                "default": "parquet"
              },
              {
                "name": "test_set",
                "type": "str",
                "default": "test_set"
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 57
          }
        },
        "description": "train multiple model types using xgboost.",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHdhcm5pbmdzCgp3YXJuaW5ncy5zaW1wbGVmaWx0ZXIoYWN0aW9uPSJpZ25vcmUiLCBjYXRlZ29yeT1GdXR1cmVXYXJuaW5nKQoKZnJvbSBtbHJ1bi5tbHV0aWxzLmRhdGEgaW1wb3J0IGdldF9zYW1wbGUsIGdldF9zcGxpdHMKZnJvbSBtbHJ1bi5tbHV0aWxzLm1vZGVscyBpbXBvcnQgZ2VuX3NrbGVhcm5fbW9kZWwsIGV2YWxfbW9kZWxfdjIKZnJvbSBtbHJ1bi51dGlscy5oZWxwZXJzIGltcG9ydCBjcmVhdGVfY2xhc3MKCmZyb20gbWxydW4uZXhlY3V0aW9uIGltcG9ydCBNTENsaWVudEN0eApmcm9tIG1scnVuLmRhdGFzdG9yZSBpbXBvcnQgRGF0YUl0ZW0KCmZyb20gY2xvdWRwaWNrbGUgaW1wb3J0IGR1bXBzCmltcG9ydCBwYW5kYXMgYXMgcGQKaW1wb3J0IG9zCmZyb20gdHlwaW5nIGltcG9ydCBVbmlvbgoKCmRlZiBfZ2VuX3hnYl9tb2RlbChtb2RlbF90eXBlOiBzdHIsIHhnYl9wYXJhbXM6IGRpY3QpOgogICAgIiIiZ2VuZXJhdGUgYW4geGdib29zdCBtb2RlbAoKICAgIE11bHRpcGxlIG1vZGVsIHR5cGVzIHRoYXQgY2FuIGJlIGVzdGltYXRlZCB1c2luZwogICAgdGhlIFhHQm9vc3QgU2Npa2l0LUxlYXJuIEFQSS4KCiAgICBJbnB1dCBjYW4gZWl0aGVyIGJlIGEgcHJlZGVmaW5lZCBqc29uIG1vZGVsIGNvbmZpZ3VyYXRpb24gb3Igb25lCiAgICBvZiB0aGUgZml2ZSB4Z2Jvb3N0IG1vZGVsIHR5cGVzOiAiY2xhc3NpZmllciIsICJyZWdyZXNzb3IiLCAicmFua2VyIiwKICAgICJyZl9jbGFzc2lmaWVyIiwgb3IgInJmX3JlZ3Jlc3NvciIuCgogICAgSW4gZWl0aGVyIGNhc2Ugb25lIGNhbiBwYXNzIGluIGEgcGFyYW1zIGRpY3QgdG8gbW9kaWZ5IGRlZmF1bHRzIHZhbHVlcy4KCiAgICBCYXNlZCBvbiBgbWx1dGlscy5tb2RlbHMuZ2VuX3NrbGVhcm5fbW9kZWxgLCBzZWUgdGhlIGZ1bmN0aW9uCiAgICBgc2tsZWFybl9jbGFzc2lmaWVyYCBpbiB0aGlzIHJlcG9zaXRvcnkuCgogICAgOnBhcmFtIG1vZGVsX3R5cGU6IG9uZSBvZiAiY2xhc3NpZmllciIsICJyZWdyZXNzb3IiLAogICAgICAgICAgICAgICAgICAgICAgICJyYW5rZXIiLCAicmZfY2xhc3NpZmllciIsIG9yCiAgICAgICAgICAgICAgICAgICAgICAicmZfcmVncmVzc29yIgogICAgOnBhcmFtIHhnYl9wYXJhbXM6IGNsYXNzIGluaXQgcGFyYW1ldGVycwogICAgIiIiCiAgICBtdHlwZXMgPSB7CiAgICAgICAgImNsYXNzaWZpZXIiOiAieGdib29zdC5YR0JDbGFzc2lmaWVyIiwKICAgICAgICAicmVncmVzc29yIjogInhnYm9vc3QuWEdCUmVncmVzc29yIiwKICAgICAgICAicmFua2VyIjogInhnYm9vc3QuWEdCUmFua2VyIiwKICAgICAgICAicmZfY2xhc3NpZmllciI6ICJ4Z2Jvb3N0LlhHQlJGQ2xhc3NpZmllciIsCiAgICAgICAgInJmX3JlZ3Jlc3NvciI6ICJ4Z2Jvb3N0LlhHQlJGUmVncmVzc29yIiwKICAgIH0KICAgIGlmIG1vZGVsX3R5cGUuZW5kc3dpdGgoImpzb24iKToKICAgICAgICBtb2RlbF9jb25maWcgPSBtb2RlbF90eXBlCiAgICBlbGlmIG1vZGVsX3R5cGUgaW4gbXR5cGVzLmtleXMoKToKICAgICAgICBtb2RlbF9jb25maWcgPSBtdHlwZXNbbW9kZWxfdHlwZV0KICAgIGVsc2U6CiAgICAgICAgcmFpc2UgRXhjZXB0aW9uKCJ1bnJlY29nbml6ZWQgbW9kZWwgdHlwZSwgc2VlIGhlbHAgZG9jdW1lbnRhdGlvbiIpCgogICAgcmV0dXJuIGdlbl9za2xlYXJuX21vZGVsKG1vZGVsX2NvbmZpZywgeGdiX3BhcmFtcykKCgpkZWYgdHJhaW5fbW9kZWwoCiAgICBjb250ZXh0OiBNTENsaWVudEN0eCwKICAgIG1vZGVsX3R5cGU6IHN0ciwKICAgIGRhdGFzZXQ6IFVuaW9uW0RhdGFJdGVtLCBwZC5jb3JlLmZyYW1lLkRhdGFGcmFtZV0sCiAgICBsYWJlbF9jb2x1bW46IHN0ciA9ICJsYWJlbHMiLAogICAgZW5jb2RlX2NvbHM6IGRpY3QgPSB7fSwKICAgIHNhbXBsZTogaW50ID0gLTEsCiAgICBpbWJhbF92ZWM9W10sCiAgICB0ZXN0X3NpemU6IGZsb2F0ID0gMC4yNSwKICAgIHZhbGlkX3NpemU6IGZsb2F0ID0gMC43NSwKICAgIHJhbmRvbV9zdGF0ZTogaW50ID0gMSwKICAgIG1vZGVsc19kZXN0OiBzdHIgPSAibW9kZWxzIiwKICAgIHBsb3RzX2Rlc3Q6IHN0ciA9ICJwbG90cyIsCiAgICBldmFsX21ldHJpY3M6IGxpc3QgPSBbImVycm9yIiwgImF1YyJdLAogICAgZmlsZV9leHQ6IHN0ciA9ICJwYXJxdWV0IiwKICAgIHRlc3Rfc2V0OiBzdHIgPSAidGVzdF9zZXQiLAopIC0+IE5vbmU6CiAgICAiIiJ0cmFpbiBhbiB4Z2Jvb3N0IG1vZGVsLgoKICAgIE5vdGUgb24gaW1hYmFsYW5jZWQgZGF0YTogIHRoZSBgaW1iYWxfdmVjYCBwYXJhbWV0ZXIgcmVwcmVzZW50cyB0aGUgbWVhc3VyZWQKICAgIGNsYXNzIHJlcHJlc2VudGF0aW9ucyBpbiB0aGUgc2FtcGxlIGFuZCBjYW4gYmUgdXNlZCBhcyBhIGZpcnN0IHN0ZXAgaW4gdHVuaW5nCiAgICBhbiBYR0Jvb3N0IG1vZGVsLiAgVGhpcyBpc24ndCBhIGh5cGVycGFyYW10ZXIsIG1lcmVseSBhbiBlc3RpbWF0ZSB0aGF0IHNob3VsZAogICAgYmUgc2V0IGFzICdjb25zdGFudCcgdGhyb3VnaG91dCB0dW5pbmcgcHJvY2Vzcy4KCiAgICA6cGFyYW0gY29udGV4dDogICAgICAgICAgIHRoZSBmdW5jdGlvbiBjb250ZXh0CiAgICA6cGFyYW0gbW9kZWxfdHlwZTogICAgICAgIHRoZSBtb2RlbCB0eXBlIHRvIHRyYWluLCAiY2xhc3NpZmllciIsICJyZWdyZXNzb3IiLi4uCiAgICA6cGFyYW0gZGF0YXNldDogICAgICAgICAgICgiZGF0YSIpIG5hbWUgb2YgcmF3IGRhdGEgZmlsZQogICAgOnBhcmFtIGxhYmVsX2NvbHVtbjogICAgICBncm91bmQtdHJ1dGggKHkpIGxhYmVscwogICAgOnBhcmFtIGVuY29kZV9jb2xzOiAgICAgICBkaWN0aW9uYXJ5IG9mIG5hbWVzIGFuZCBwcmVmaXhlcyBmb3IgY29sdW1ucyB0aGF0IGFyZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBob3QgYmUgZW5jb2RlZC4KICAgIDpwYXJhbSBzYW1wbGU6ICAgICAgICAgICAgU2VsZWN0cyB0aGUgZmlyc3QgbiByb3dzLCBvciBzZWxlY3QgYSBzYW1wbGUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnRpbmcgZnJvbSB0aGUgZmlyc3QuIElmIG5lZ2F0aXZlIDwtMSwgc2VsZWN0CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGEgcmFuZG9tIHNhbXBsZQogICAgOnBhcmFtIGltYmFsX3ZlYzogICAgICAgICAoW10pIHZlY3RvciBvZiBjbGFzcyB3ZWlnaHRzIHNlZW4gaW4gc2FtcGxlCiAgICA6cGFyYW0gdGVzdF9zaXplOiAgICAgICAgICgwLjA1KSB0ZXN0IHNldCBzaXplCiAgICA6cGFyYW0gdmFsaWRfc2l6ZTogICAgICAgICgwLjc1KSBPbmNlIHRoZSB0ZXN0IHNldCBoYXMgYmVlbiByZW1vdmVkIHRoZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFpbmluZyBzZXQgZ2V0cyB0aGlzIHByb3BvcnRpb24uCiAgICA6cGFyYW0gcmFuZG9tX3N0YXRlOiAgICAgICgxKSBza2xlYXJuIHJuZyBzZWVkCiAgICA6cGFyYW0gbW9kZWxzX2Rlc3Q6ICAgICAgIGRlc3RpbmF0aW9uIHN1YmZvbGRlciBmb3IgbW9kZWwgYXJ0aWZhY3RzCiAgICA6cGFyYW0gcGxvdHNfZGVzdDogICAgICAgIGRlc3RpbmF0aW9uIHN1YmZvbGRlciBmb3IgcGxvdCBhcnRpZmFjdHMKICAgIDpwYXJhbSBldmFsX21ldHJpY3M6ICAgICAgKFsiZXJyb3IiLCAiYXVjIl0pIGxlYXJuaW5nIGN1cnZlIG1ldHJpY3MKICAgIDpwYXJhbSBmaWxlX2V4dDogICAgICAgICAgZm9ybWF0IGZvciB0ZXN0X3NldF9rZXkgaG9sZCBvdXQgZGF0YQogICAgOnBhcmFtIHRlc3Qtc2V0OiAgICAgICAgICAodGVzdF9zZXQpIGtleSBvZiBoZWxkIG91dCBkYXRhIGluIGFydGlmYWN0IHN0b3JlCiAgICAiIiIKICAgIG1vZGVsc19kZXN0ID0gbW9kZWxzX2Rlc3Qgb3IgIm1vZGVscyIKICAgIHBsb3RzX2Rlc3QgPSBwbG90c19kZXN0IG9yIGYicGxvdHMve2NvbnRleHQubmFtZX0iCgogICAgcmF3LCBsYWJlbHMsIGhlYWRlciA9IGdldF9zYW1wbGUoZGF0YXNldCwgc2FtcGxlLCBsYWJlbF9jb2x1bW4pCgogICAgaWYgZW5jb2RlX2NvbHM6CiAgICAgICAgcmF3ID0gcGQuZ2V0X2R1bW1pZXMoCiAgICAgICAgICAgIHJhdywKICAgICAgICAgICAgY29sdW1ucz1saXN0KGVuY29kZV9jb2xzLmtleXMoKSksCiAgICAgICAgICAgIHByZWZpeD1saXN0KGVuY29kZV9jb2xzLnZhbHVlcygpKSwKICAgICAgICAgICAgZHJvcF9maXJzdD1UcnVlLAogICAgICAgICkKCiAgICAoeHRyYWluLCB5dHJhaW4pLCAoeHZhbGlkLCB5dmFsaWQpLCAoeHRlc3QsIHl0ZXN0KSA9IGdldF9zcGxpdHMoCiAgICAgICAgcmF3LCBsYWJlbHMsIDMsIHRlc3Rfc2l6ZSwgdmFsaWRfc2l6ZSwgcmFuZG9tX3N0YXRlCiAgICApCgogICAgY29udGV4dC5sb2dfZGF0YXNldCgKICAgICAgICB0ZXN0X3NldCwgZGY9cGQuY29uY2F0KFt4dGVzdCwgeXRlc3RdLCBheGlzPTEpLCBmb3JtYXQ9ZmlsZV9leHQsIGluZGV4PUZhbHNlCiAgICApCgogICAgbW9kZWxfY29uZmlnID0gX2dlbl94Z2JfbW9kZWwobW9kZWxfdHlwZSwgY29udGV4dC5wYXJhbWV0ZXJzLml0ZW1zKCkpCgogICAgWEdCQm9vc3RDbGFzcyA9IGNyZWF0ZV9jbGFzcyhtb2RlbF9jb25maWdbIk1FVEEiXVsiY2xhc3MiXSkKICAgIG1vZGVsID0gWEdCQm9vc3RDbGFzcygqKm1vZGVsX2NvbmZpZ1siQ0xBU1MiXSkKCiAgICBtb2RlbF9jb25maWdbIkZJVCJdLnVwZGF0ZSgKICAgICAgICB7CiAgICAgICAgICAgICJYIjogeHRyYWluLAogICAgICAgICAgICAieSI6IHl0cmFpbi52YWx1ZXMsCiAgICAgICAgICAgICJldmFsX3NldCI6IFsoeHRyYWluLCB5dHJhaW4pLCAoeHZhbGlkLCB5dmFsaWQpXSwKICAgICAgICAgICAgImV2YWxfbWV0cmljIjogZXZhbF9tZXRyaWNzLAogICAgICAgIH0KICAgICkKCiAgICBtb2RlbC5maXQoKiptb2RlbF9jb25maWdbIkZJVCJdKQoKICAgIGV2YWxfbWV0cmljcyA9IGV2YWxfbW9kZWxfdjIoY29udGV4dCwgeHZhbGlkLCB5dmFsaWQsIG1vZGVsKQoKICAgIG1vZGVsX2JpbiA9IGR1bXBzKG1vZGVsKQogICAgY29udGV4dC5sb2dfbW9kZWwoCiAgICAgICAgIm1vZGVsIiwKICAgICAgICBib2R5PW1vZGVsX2JpbiwKICAgICAgICBhcnRpZmFjdF9wYXRoPW9zLnBhdGguam9pbihjb250ZXh0LmFydGlmYWN0X3BhdGgsIG1vZGVsc19kZXN0KSwKICAgICAgICBtb2RlbF9maWxlPSJtb2RlbC5wa2wiLAogICAgKQo=",
          "commands": []
        },
        "mount_applied": true,
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "coxph-trainer",
        "tag": "",
        "hash": "ef872eddd09dddb90d9b64e05d953d68f516a348",
        "project": "churn-project-admin",
        "labels": {
          "author": "yjb",
          "framework": "survival"
        },
        "categories": [
          "model-training",
          "machine-learning"
        ],
        "updated": "2021-08-29T19:54:07.198262+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/ml-models",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "train_model",
        "entry_points": {
          "train_model": {
            "name": "train_model",
            "doc": "train models to predict the timing of events\n\nAlthough identical in structure to other training functions, this one\nrequires generating a 'Y' that represents the age/duration/tenure of\nthe obervation, designated 'tenure' here, and a binary labels columns that\nrepresents the event of interest, churned/not-churned.\n\nIn addition, there is a strata_cols parameter, representing a list of\nstratification (aka grouping) variables.",
            "parameters": [
              {
                "name": "context",
                "type": "MLClientCtx",
                "doc": "the function context",
                "default": ""
              },
              {
                "name": "dataset",
                "type": "DataItem",
                "doc": "(\"data\") name of raw data file",
                "default": ""
              },
              {
                "name": "event_column",
                "type": "str",
                "doc": "ground-truth (y) labels (considered as events in this model)",
                "default": "labels"
              },
              {
                "name": "time_column",
                "type": "str",
                "doc": "age or tenure column",
                "default": "tenure"
              },
              {
                "name": "encode_cols",
                "type": "dict",
                "doc": "dictionary of names and prefixes for columns that are to hot be encoded.",
                "default": {}
              },
              {
                "name": "strata_cols",
                "type": "list",
                "doc": "columns used to stratify predictors",
                "default": []
              },
              {
                "name": "plot_cov_groups",
                "type": "bool",
                "default": false
              },
              {
                "name": "p_value",
                "type": "float",
                "doc": "(0.005) max p value for coeffcients selected",
                "default": 0.005
              },
              {
                "name": "sample",
                "type": "int",
                "doc": "Selects the first n rows, or select a sample starting from the first. If negative <-1, select a random sample",
                "default": "<_ast.USub object at 0x7f3b619b97b8>"
              },
              {
                "name": "test_size",
                "type": "float",
                "doc": "(0.25) test set size",
                "default": 0.25
              },
              {
                "name": "valid_size",
                "type": "float",
                "doc": "(0.75) Once the test set has been removed the training set gets this proportion.",
                "default": 0.75
              },
              {
                "name": "random_state",
                "type": "int",
                "doc": "(1) sklearn rng seed",
                "default": 1
              },
              {
                "name": "models_dest",
                "type": "str",
                "doc": "destination subfolder for model artifacts",
                "default": ""
              },
              {
                "name": "plots_dest",
                "type": "str",
                "doc": "destination subfolder for plot artifacts",
                "default": ""
              },
              {
                "name": "file_ext",
                "type": "str",
                "doc": "format for test_set_key hold out data",
                "default": "csv"
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 97
          }
        },
        "description": "cox proportional hazards, kaplan meier plots",
        "build": {
          "functionSourceCode": "",
          "commands": []
        },
        "mount_applied": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "describe",
        "tag": "",
        "hash": "1251858df60e447c03003b040f135cf4647ea2ff",
        "project": "churn-project-admin",
        "labels": {
          "author": "Iguazio"
        },
        "categories": [
          "data-analysis"
        ],
        "updated": "2021-08-29T19:54:07.253784+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "summarize",
        "entry_points": {
          "summarize": {
            "name": "summarize",
            "doc": "Summarize a table",
            "parameters": [
              {
                "name": "context",
                "type": "MLClientCtx",
                "doc": "the function context",
                "default": ""
              },
              {
                "name": "table",
                "type": "DataItem",
                "doc": "MLRun input pointing to pandas dataframe (csv/parquet file path)",
                "default": ""
              },
              {
                "name": "label_column",
                "type": "str",
                "doc": "ground truth column label",
                "default": null
              },
              {
                "name": "class_labels",
                "type": "List[str]",
                "doc": "label for each class in tables and plots",
                "default": []
              },
              {
                "name": "plot_hist",
                "type": "bool",
                "doc": "(True) set this to False for large tables",
                "default": true
              },
              {
                "name": "plots_dest",
                "type": "str",
                "doc": "destination folder of summary plots (relative to artifact_path)",
                "default": "plots"
              },
              {
                "name": "update_dataset",
                "doc": "when the table is a registered dataset update the charts in-place",
                "default": false
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 23
          }
        },
        "description": "describe and visualizes dataset stats",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHdhcm5pbmdzCgp3YXJuaW5ncy5zaW1wbGVmaWx0ZXIoYWN0aW9uPSJpZ25vcmUiLCBjYXRlZ29yeT1GdXR1cmVXYXJuaW5nKQoKaW1wb3J0IG9zCmltcG9ydCBudW1weSBhcyBucAppbXBvcnQgcGFuZGFzIGFzIHBkCmltcG9ydCBtYXRwbG90bGliLnB5cGxvdCBhcyBwbHQKaW1wb3J0IHNlYWJvcm4gYXMgc25zCgpmcm9tIG1scnVuLmV4ZWN1dGlvbiBpbXBvcnQgTUxDbGllbnRDdHgKZnJvbSBtbHJ1bi5kYXRhc3RvcmUgaW1wb3J0IERhdGFJdGVtCmZyb20gbWxydW4uYXJ0aWZhY3RzIGltcG9ydCBQbG90QXJ0aWZhY3QsIFRhYmxlQXJ0aWZhY3QKZnJvbSBtbHJ1bi5tbHV0aWxzLnBsb3RzIGltcG9ydCBnY2ZfY2xlYXIKCmZyb20gdHlwaW5nIGltcG9ydCBMaXN0CgpwZC5zZXRfb3B0aW9uKCJkaXNwbGF5LmZsb2F0X2Zvcm1hdCIsIGxhbWJkYSB4OiAiJS4yZiIgJSB4KQoKCmRlZiBzdW1tYXJpemUoCiAgICBjb250ZXh0OiBNTENsaWVudEN0eCwKICAgIHRhYmxlOiBEYXRhSXRlbSwKICAgIGxhYmVsX2NvbHVtbjogc3RyID0gTm9uZSwKICAgIGNsYXNzX2xhYmVsczogTGlzdFtzdHJdID0gW10sCiAgICBwbG90X2hpc3Q6IGJvb2wgPSBUcnVlLAogICAgcGxvdHNfZGVzdDogc3RyID0gInBsb3RzIiwKICAgIHVwZGF0ZV9kYXRhc2V0PUZhbHNlLAopIC0+IE5vbmU6CiAgICAiIiJTdW1tYXJpemUgYSB0YWJsZQoKICAgIDpwYXJhbSBjb250ZXh0OiAgICAgICAgIHRoZSBmdW5jdGlvbiBjb250ZXh0CiAgICA6cGFyYW0gdGFibGU6ICAgICAgICAgICBNTFJ1biBpbnB1dCBwb2ludGluZyB0byBwYW5kYXMgZGF0YWZyYW1lIChjc3YvcGFycXVldCBmaWxlIHBhdGgpCiAgICA6cGFyYW0gbGFiZWxfY29sdW1uOiAgICBncm91bmQgdHJ1dGggY29sdW1uIGxhYmVsCiAgICA6cGFyYW0gY2xhc3NfbGFiZWxzOiAgICBsYWJlbCBmb3IgZWFjaCBjbGFzcyBpbiB0YWJsZXMgYW5kIHBsb3RzCiAgICA6cGFyYW0gcGxvdF9oaXN0OiAgICAgICAoVHJ1ZSkgc2V0IHRoaXMgdG8gRmFsc2UgZm9yIGxhcmdlIHRhYmxlcwogICAgOnBhcmFtIHBsb3RzX2Rlc3Q6ICAgICAgZGVzdGluYXRpb24gZm9sZGVyIG9mIHN1bW1hcnkgcGxvdHMgKHJlbGF0aXZlIHRvIGFydGlmYWN0X3BhdGgpCiAgICA6cGFyYW0gdXBkYXRlX2RhdGFzZXQ6ICB3aGVuIHRoZSB0YWJsZSBpcyBhIHJlZ2lzdGVyZWQgZGF0YXNldCB1cGRhdGUgdGhlIGNoYXJ0cyBpbi1wbGFjZQogICAgIiIiCiAgICBkZiA9IHRhYmxlLmFzX2RmKCkKICAgIGhlYWRlciA9IGRmLmNvbHVtbnMudmFsdWVzCiAgICBleHRyYV9kYXRhID0ge30KCiAgICB0cnk6CiAgICAgICAgZ2NmX2NsZWFyKHBsdCkKICAgICAgICBzbnNwbHQgPSBzbnMucGFpcnBsb3QoZGYsIGh1ZT1sYWJlbF9jb2x1bW4pICAjICwgZGlhZ19rd3M9eyJidyI6IDEuNX0pCiAgICAgICAgZXh0cmFfZGF0YVsiaGlzdG9ncmFtcyJdID0gY29udGV4dC5sb2dfYXJ0aWZhY3QoCiAgICAgICAgICAgIFBsb3RBcnRpZmFjdCgiaGlzdG9ncmFtcyIsIGJvZHk9cGx0LmdjZigpKSwKICAgICAgICAgICAgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS9oaXN0Lmh0bWwiLAogICAgICAgICAgICBkYl9rZXk9RmFsc2UsCiAgICAgICAgKQogICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgIGNvbnRleHQubG9nZ2VyLmVycm9yKGYiRmFpbGVkIHRvIGNyZWF0ZSBwYWlycGxvdCBoaXN0b2dyYW1zIGR1ZSB0bzoge2V9IikKCiAgICB0cnk6CiAgICAgICAgZ2NmX2NsZWFyKHBsdCkKICAgICAgICBwbG90X2NvbHMgPSAzCiAgICAgICAgcGxvdF9yb3dzID0gaW50KChsZW4oaGVhZGVyKSAtIDEpIC8gcGxvdF9jb2xzKSArIDEKICAgICAgICBmaWcsIGF4ID0gcGx0LnN1YnBsb3RzKHBsb3Rfcm93cywgcGxvdF9jb2xzLCBmaWdzaXplPSgxNSwgNCkpCiAgICAgICAgZmlnLnRpZ2h0X2xheW91dChwYWQ9Mi4wKQogICAgICAgIGZvciBpIGluIHJhbmdlKHBsb3Rfcm93cyAqIHBsb3RfY29scyk6CiAgICAgICAgICAgIGlmIGkgPCBsZW4oaGVhZGVyKToKICAgICAgICAgICAgICAgIHNucy52aW9saW5wbG90KAogICAgICAgICAgICAgICAgICAgIHg9ZGZbaGVhZGVyW2ldXSwKICAgICAgICAgICAgICAgICAgICBheD1heFtpbnQoaSAvIHBsb3RfY29scyldW2kgJSBwbG90X2NvbHNdLAogICAgICAgICAgICAgICAgICAgIG9yaWVudD0iaCIsCiAgICAgICAgICAgICAgICAgICAgd2lkdGg9MC43LAogICAgICAgICAgICAgICAgICAgIGlubmVyPSJxdWFydGlsZSIsCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBmaWcuZGVsYXhlcyhheFtpbnQoaSAvIHBsb3RfY29scyldW2kgJSBwbG90X2NvbHNdKQogICAgICAgICAgICBpICs9IDEKICAgICAgICBleHRyYV9kYXRhWyJ2aW9saW4iXSA9IGNvbnRleHQubG9nX2FydGlmYWN0KAogICAgICAgICAgICBQbG90QXJ0aWZhY3QoInZpb2xpbiIsIGJvZHk9cGx0LmdjZigpLCB0aXRsZT0iVmlvbGluIFBsb3QiKSwKICAgICAgICAgICAgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS92aW9saW4uaHRtbCIsCiAgICAgICAgICAgIGRiX2tleT1GYWxzZSwKICAgICAgICApCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgY29udGV4dC5sb2dnZXIud2FybihmIkZhaWxlZCB0byBjcmVhdGUgdmlvbGluIGRpc3RyaWJ1dGlvbiBwbG90cyBkdWUgdG86IHtlfSIpCgogICAgaWYgbGFiZWxfY29sdW1uOgogICAgICAgIGxhYmVscyA9IGRmLnBvcChsYWJlbF9jb2x1bW4pCiAgICAgICAgaW1idGFibGUgPSBsYWJlbHMudmFsdWVfY291bnRzKG5vcm1hbGl6ZT1UcnVlKS5zb3J0X2luZGV4KCkKICAgICAgICB0cnk6CiAgICAgICAgICAgIGdjZl9jbGVhcihwbHQpCiAgICAgICAgICAgIGJhbGFuY2ViYXIgPSBpbWJ0YWJsZS5wbG90KGtpbmQ9ImJhciIsIHRpdGxlPSJjbGFzcyBpbWJhbGFuY2UgLSBsYWJlbHMiKQogICAgICAgICAgICBiYWxhbmNlYmFyLnNldF94bGFiZWwoImNsYXNzIikKICAgICAgICAgICAgYmFsYW5jZWJhci5zZXRfeWxhYmVsKCJwcm9wb3J0aW9uIG9mIHRvdGFsIikKICAgICAgICAgICAgZXh0cmFfZGF0YVsiaW1iYWxhbmNlIl0gPSBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICAgICAgICAgIFBsb3RBcnRpZmFjdCgiaW1iYWxhbmNlIiwgYm9keT1wbHQuZ2NmKCkpLAogICAgICAgICAgICAgICAgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS9pbWJhbGFuY2UuaHRtbCIsCiAgICAgICAgICAgICkKICAgICAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgICAgIGNvbnRleHQubG9nZ2VyLndhcm4oZiJGYWlsZWQgdG8gY3JlYXRlIGNsYXNzIGltYmFsYW5jZSBwbG90IGR1ZSB0bzoge2V9IikKICAgICAgICBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICAgICAgVGFibGVBcnRpZmFjdCgKICAgICAgICAgICAgICAgICJpbWJhbGFuY2Utd2VpZ2h0cy12ZWMiLCBkZj1wZC5EYXRhRnJhbWUoeyJ3ZWlnaHRzIjogaW1idGFibGV9KQogICAgICAgICAgICApLAogICAgICAgICAgICBsb2NhbF9wYXRoPWYie3Bsb3RzX2Rlc3R9L2ltYmFsYW5jZS13ZWlnaHRzLXZlYy5jc3YiLAogICAgICAgICAgICBkYl9rZXk9RmFsc2UsCiAgICAgICAgKQoKICAgIHRibGNvcnIgPSBkZi5jb3JyKCkKICAgIG1hc2sgPSBucC56ZXJvc19saWtlKHRibGNvcnIsIGR0eXBlPW5wLmJvb2wpCiAgICBtYXNrW25wLnRyaXVfaW5kaWNlc19mcm9tKG1hc2spXSA9IFRydWUKCiAgICBkZmNvcnIgPSBwZC5EYXRhRnJhbWUoZGF0YT10Ymxjb3JyLCBjb2x1bW5zPWhlYWRlciwgaW5kZXg9aGVhZGVyKQogICAgZGZjb3JyID0gZGZjb3JyW25wLmFyYW5nZShkZmNvcnIuc2hhcGVbMF0pWzosIE5vbmVdID4gbnAuYXJhbmdlKGRmY29yci5zaGFwZVsxXSldCiAgICBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICBUYWJsZUFydGlmYWN0KCJjb3JyZWxhdGlvbi1tYXRyaXgiLCBkZj10Ymxjb3JyLCB2aXNpYmxlPVRydWUpLAogICAgICAgIGxvY2FsX3BhdGg9ZiJ7cGxvdHNfZGVzdH0vY29ycmVsYXRpb24tbWF0cml4LmNzdiIsCiAgICAgICAgZGJfa2V5PUZhbHNlLAogICAgKQoKICAgIHRyeToKICAgICAgICBnY2ZfY2xlYXIocGx0KQogICAgICAgIGF4ID0gcGx0LmF4ZXMoKQogICAgICAgIHNucy5oZWF0bWFwKHRibGNvcnIsIGF4PWF4LCBtYXNrPW1hc2ssIGFubm90PUZhbHNlLCBjbWFwPXBsdC5jbS5SZWRzKQogICAgICAgIGF4LnNldF90aXRsZSgiZmVhdHVyZXMgY29ycmVsYXRpb24iKQogICAgICAgIGV4dHJhX2RhdGFbImNvcnJlbGF0aW9uIl0gPSBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICAgICAgUGxvdEFydGlmYWN0KCJjb3JyZWxhdGlvbiIsIGJvZHk9cGx0LmdjZigpLCB0aXRsZT0iQ29ycmVsYXRpb24gTWF0cml4IiksCiAgICAgICAgICAgIGxvY2FsX3BhdGg9ZiJ7cGxvdHNfZGVzdH0vY29yci5odG1sIiwKICAgICAgICAgICAgZGJfa2V5PUZhbHNlLAogICAgICAgICkKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICBjb250ZXh0LmxvZ2dlci53YXJuKGYiRmFpbGVkIHRvIGNyZWF0ZSBmZWF0dXJlcyBjb3JyZWxhdGlvbiBwbG90IGR1ZSB0bzoge2V9IikKCiAgICBnY2ZfY2xlYXIocGx0KQogICAgaWYgdXBkYXRlX2RhdGFzZXQgYW5kIHRhYmxlLm1ldGEgYW5kIHRhYmxlLm1ldGEua2luZCA9PSAiZGF0YXNldCI6CiAgICAgICAgZnJvbSBtbHJ1bi5hcnRpZmFjdHMgaW1wb3J0IHVwZGF0ZV9kYXRhc2V0X21ldGEKCiAgICAgICAgdXBkYXRlX2RhdGFzZXRfbWV0YSh0YWJsZS5tZXRhLCBleHRyYV9kYXRhPWV4dHJhX2RhdGEpCg==",
          "commands": []
        },
        "mount_applied": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "xgb-trainer",
        "tag": "",
        "hash": "41ae0426f8323164892c9939de32b52ad8c9e34c",
        "project": "churn-project-admin",
        "labels": {
          "author": "Daniel"
        },
        "categories": [
          "model-training"
        ],
        "updated": "2021-08-29T19:54:07.448801+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/ml-models",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "train_model",
        "entry_points": {
          "train_model": {
            "name": "train_model",
            "doc": "train an xgboost model.\n\nNote on imabalanced data:  the `imbal_vec` parameter represents the measured\nclass representations in the sample and can be used as a first step in tuning\nan XGBoost model.  This isn't a hyperparamter, merely an estimate that should\nbe set as 'constant' throughout tuning process.",
            "parameters": [
              {
                "name": "context",
                "type": "MLClientCtx",
                "doc": "the function context",
                "default": ""
              },
              {
                "name": "model_type",
                "type": "str",
                "doc": "the model type to train, \"classifier\", \"regressor\"...",
                "default": ""
              },
              {
                "name": "dataset",
                "type": "Union[DataItem, DataFrame]",
                "doc": "(\"data\") name of raw data file",
                "default": ""
              },
              {
                "name": "label_column",
                "type": "str",
                "doc": "ground-truth (y) labels",
                "default": "labels"
              },
              {
                "name": "encode_cols",
                "type": "dict",
                "doc": "dictionary of names and prefixes for columns that are to hot be encoded.",
                "default": {}
              },
              {
                "name": "sample",
                "type": "int",
                "doc": "Selects the first n rows, or select a sample starting from the first. If negative <-1, select a random sample",
                "default": "<_ast.USub object at 0x7f66a8fbc7b8>"
              },
              {
                "name": "imbal_vec",
                "doc": "([]) vector of class weights seen in sample",
                "default": []
              },
              {
                "name": "test_size",
                "type": "float",
                "doc": "(0.05) test set size",
                "default": 0.25
              },
              {
                "name": "valid_size",
                "type": "float",
                "doc": "(0.75) Once the test set has been removed the training set gets this proportion.",
                "default": 0.75
              },
              {
                "name": "random_state",
                "type": "int",
                "doc": "(1) sklearn rng seed",
                "default": 1
              },
              {
                "name": "models_dest",
                "type": "str",
                "doc": "destination subfolder for model artifacts",
                "default": "models"
              },
              {
                "name": "plots_dest",
                "type": "str",
                "doc": "destination subfolder for plot artifacts",
                "default": "plots"
              },
              {
                "name": "eval_metrics",
                "type": "list",
                "doc": "([\"error\", \"auc\"]) learning curve metrics",
                "default": [
                  "error",
                  "auc"
                ]
              },
              {
                "name": "file_ext",
                "type": "str",
                "doc": "format for test_set_key hold out data",
                "default": "parquet"
              },
              {
                "name": "test_set",
                "type": "str",
                "default": "test_set"
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 57
          }
        },
        "description": "train multiple model types using xgboost.",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHdhcm5pbmdzCgp3YXJuaW5ncy5zaW1wbGVmaWx0ZXIoYWN0aW9uPSJpZ25vcmUiLCBjYXRlZ29yeT1GdXR1cmVXYXJuaW5nKQoKZnJvbSBtbHJ1bi5tbHV0aWxzLmRhdGEgaW1wb3J0IGdldF9zYW1wbGUsIGdldF9zcGxpdHMKZnJvbSBtbHJ1bi5tbHV0aWxzLm1vZGVscyBpbXBvcnQgZ2VuX3NrbGVhcm5fbW9kZWwsIGV2YWxfbW9kZWxfdjIKZnJvbSBtbHJ1bi51dGlscy5oZWxwZXJzIGltcG9ydCBjcmVhdGVfY2xhc3MKCmZyb20gbWxydW4uZXhlY3V0aW9uIGltcG9ydCBNTENsaWVudEN0eApmcm9tIG1scnVuLmRhdGFzdG9yZSBpbXBvcnQgRGF0YUl0ZW0KCmZyb20gY2xvdWRwaWNrbGUgaW1wb3J0IGR1bXBzCmltcG9ydCBwYW5kYXMgYXMgcGQKaW1wb3J0IG9zCmZyb20gdHlwaW5nIGltcG9ydCBVbmlvbgoKCmRlZiBfZ2VuX3hnYl9tb2RlbChtb2RlbF90eXBlOiBzdHIsIHhnYl9wYXJhbXM6IGRpY3QpOgogICAgIiIiZ2VuZXJhdGUgYW4geGdib29zdCBtb2RlbAoKICAgIE11bHRpcGxlIG1vZGVsIHR5cGVzIHRoYXQgY2FuIGJlIGVzdGltYXRlZCB1c2luZwogICAgdGhlIFhHQm9vc3QgU2Npa2l0LUxlYXJuIEFQSS4KCiAgICBJbnB1dCBjYW4gZWl0aGVyIGJlIGEgcHJlZGVmaW5lZCBqc29uIG1vZGVsIGNvbmZpZ3VyYXRpb24gb3Igb25lCiAgICBvZiB0aGUgZml2ZSB4Z2Jvb3N0IG1vZGVsIHR5cGVzOiAiY2xhc3NpZmllciIsICJyZWdyZXNzb3IiLCAicmFua2VyIiwKICAgICJyZl9jbGFzc2lmaWVyIiwgb3IgInJmX3JlZ3Jlc3NvciIuCgogICAgSW4gZWl0aGVyIGNhc2Ugb25lIGNhbiBwYXNzIGluIGEgcGFyYW1zIGRpY3QgdG8gbW9kaWZ5IGRlZmF1bHRzIHZhbHVlcy4KCiAgICBCYXNlZCBvbiBgbWx1dGlscy5tb2RlbHMuZ2VuX3NrbGVhcm5fbW9kZWxgLCBzZWUgdGhlIGZ1bmN0aW9uCiAgICBgc2tsZWFybl9jbGFzc2lmaWVyYCBpbiB0aGlzIHJlcG9zaXRvcnkuCgogICAgOnBhcmFtIG1vZGVsX3R5cGU6IG9uZSBvZiAiY2xhc3NpZmllciIsICJyZWdyZXNzb3IiLAogICAgICAgICAgICAgICAgICAgICAgICJyYW5rZXIiLCAicmZfY2xhc3NpZmllciIsIG9yCiAgICAgICAgICAgICAgICAgICAgICAicmZfcmVncmVzc29yIgogICAgOnBhcmFtIHhnYl9wYXJhbXM6IGNsYXNzIGluaXQgcGFyYW1ldGVycwogICAgIiIiCiAgICBtdHlwZXMgPSB7CiAgICAgICAgImNsYXNzaWZpZXIiOiAieGdib29zdC5YR0JDbGFzc2lmaWVyIiwKICAgICAgICAicmVncmVzc29yIjogInhnYm9vc3QuWEdCUmVncmVzc29yIiwKICAgICAgICAicmFua2VyIjogInhnYm9vc3QuWEdCUmFua2VyIiwKICAgICAgICAicmZfY2xhc3NpZmllciI6ICJ4Z2Jvb3N0LlhHQlJGQ2xhc3NpZmllciIsCiAgICAgICAgInJmX3JlZ3Jlc3NvciI6ICJ4Z2Jvb3N0LlhHQlJGUmVncmVzc29yIiwKICAgIH0KICAgIGlmIG1vZGVsX3R5cGUuZW5kc3dpdGgoImpzb24iKToKICAgICAgICBtb2RlbF9jb25maWcgPSBtb2RlbF90eXBlCiAgICBlbGlmIG1vZGVsX3R5cGUgaW4gbXR5cGVzLmtleXMoKToKICAgICAgICBtb2RlbF9jb25maWcgPSBtdHlwZXNbbW9kZWxfdHlwZV0KICAgIGVsc2U6CiAgICAgICAgcmFpc2UgRXhjZXB0aW9uKCJ1bnJlY29nbml6ZWQgbW9kZWwgdHlwZSwgc2VlIGhlbHAgZG9jdW1lbnRhdGlvbiIpCgogICAgcmV0dXJuIGdlbl9za2xlYXJuX21vZGVsKG1vZGVsX2NvbmZpZywgeGdiX3BhcmFtcykKCgpkZWYgdHJhaW5fbW9kZWwoCiAgICBjb250ZXh0OiBNTENsaWVudEN0eCwKICAgIG1vZGVsX3R5cGU6IHN0ciwKICAgIGRhdGFzZXQ6IFVuaW9uW0RhdGFJdGVtLCBwZC5jb3JlLmZyYW1lLkRhdGFGcmFtZV0sCiAgICBsYWJlbF9jb2x1bW46IHN0ciA9ICJsYWJlbHMiLAogICAgZW5jb2RlX2NvbHM6IGRpY3QgPSB7fSwKICAgIHNhbXBsZTogaW50ID0gLTEsCiAgICBpbWJhbF92ZWM9W10sCiAgICB0ZXN0X3NpemU6IGZsb2F0ID0gMC4yNSwKICAgIHZhbGlkX3NpemU6IGZsb2F0ID0gMC43NSwKICAgIHJhbmRvbV9zdGF0ZTogaW50ID0gMSwKICAgIG1vZGVsc19kZXN0OiBzdHIgPSAibW9kZWxzIiwKICAgIHBsb3RzX2Rlc3Q6IHN0ciA9ICJwbG90cyIsCiAgICBldmFsX21ldHJpY3M6IGxpc3QgPSBbImVycm9yIiwgImF1YyJdLAogICAgZmlsZV9leHQ6IHN0ciA9ICJwYXJxdWV0IiwKICAgIHRlc3Rfc2V0OiBzdHIgPSAidGVzdF9zZXQiLAopIC0+IE5vbmU6CiAgICAiIiJ0cmFpbiBhbiB4Z2Jvb3N0IG1vZGVsLgoKICAgIE5vdGUgb24gaW1hYmFsYW5jZWQgZGF0YTogIHRoZSBgaW1iYWxfdmVjYCBwYXJhbWV0ZXIgcmVwcmVzZW50cyB0aGUgbWVhc3VyZWQKICAgIGNsYXNzIHJlcHJlc2VudGF0aW9ucyBpbiB0aGUgc2FtcGxlIGFuZCBjYW4gYmUgdXNlZCBhcyBhIGZpcnN0IHN0ZXAgaW4gdHVuaW5nCiAgICBhbiBYR0Jvb3N0IG1vZGVsLiAgVGhpcyBpc24ndCBhIGh5cGVycGFyYW10ZXIsIG1lcmVseSBhbiBlc3RpbWF0ZSB0aGF0IHNob3VsZAogICAgYmUgc2V0IGFzICdjb25zdGFudCcgdGhyb3VnaG91dCB0dW5pbmcgcHJvY2Vzcy4KCiAgICA6cGFyYW0gY29udGV4dDogICAgICAgICAgIHRoZSBmdW5jdGlvbiBjb250ZXh0CiAgICA6cGFyYW0gbW9kZWxfdHlwZTogICAgICAgIHRoZSBtb2RlbCB0eXBlIHRvIHRyYWluLCAiY2xhc3NpZmllciIsICJyZWdyZXNzb3IiLi4uCiAgICA6cGFyYW0gZGF0YXNldDogICAgICAgICAgICgiZGF0YSIpIG5hbWUgb2YgcmF3IGRhdGEgZmlsZQogICAgOnBhcmFtIGxhYmVsX2NvbHVtbjogICAgICBncm91bmQtdHJ1dGggKHkpIGxhYmVscwogICAgOnBhcmFtIGVuY29kZV9jb2xzOiAgICAgICBkaWN0aW9uYXJ5IG9mIG5hbWVzIGFuZCBwcmVmaXhlcyBmb3IgY29sdW1ucyB0aGF0IGFyZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBob3QgYmUgZW5jb2RlZC4KICAgIDpwYXJhbSBzYW1wbGU6ICAgICAgICAgICAgU2VsZWN0cyB0aGUgZmlyc3QgbiByb3dzLCBvciBzZWxlY3QgYSBzYW1wbGUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnRpbmcgZnJvbSB0aGUgZmlyc3QuIElmIG5lZ2F0aXZlIDwtMSwgc2VsZWN0CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGEgcmFuZG9tIHNhbXBsZQogICAgOnBhcmFtIGltYmFsX3ZlYzogICAgICAgICAoW10pIHZlY3RvciBvZiBjbGFzcyB3ZWlnaHRzIHNlZW4gaW4gc2FtcGxlCiAgICA6cGFyYW0gdGVzdF9zaXplOiAgICAgICAgICgwLjA1KSB0ZXN0IHNldCBzaXplCiAgICA6cGFyYW0gdmFsaWRfc2l6ZTogICAgICAgICgwLjc1KSBPbmNlIHRoZSB0ZXN0IHNldCBoYXMgYmVlbiByZW1vdmVkIHRoZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFpbmluZyBzZXQgZ2V0cyB0aGlzIHByb3BvcnRpb24uCiAgICA6cGFyYW0gcmFuZG9tX3N0YXRlOiAgICAgICgxKSBza2xlYXJuIHJuZyBzZWVkCiAgICA6cGFyYW0gbW9kZWxzX2Rlc3Q6ICAgICAgIGRlc3RpbmF0aW9uIHN1YmZvbGRlciBmb3IgbW9kZWwgYXJ0aWZhY3RzCiAgICA6cGFyYW0gcGxvdHNfZGVzdDogICAgICAgIGRlc3RpbmF0aW9uIHN1YmZvbGRlciBmb3IgcGxvdCBhcnRpZmFjdHMKICAgIDpwYXJhbSBldmFsX21ldHJpY3M6ICAgICAgKFsiZXJyb3IiLCAiYXVjIl0pIGxlYXJuaW5nIGN1cnZlIG1ldHJpY3MKICAgIDpwYXJhbSBmaWxlX2V4dDogICAgICAgICAgZm9ybWF0IGZvciB0ZXN0X3NldF9rZXkgaG9sZCBvdXQgZGF0YQogICAgOnBhcmFtIHRlc3Qtc2V0OiAgICAgICAgICAodGVzdF9zZXQpIGtleSBvZiBoZWxkIG91dCBkYXRhIGluIGFydGlmYWN0IHN0b3JlCiAgICAiIiIKICAgIG1vZGVsc19kZXN0ID0gbW9kZWxzX2Rlc3Qgb3IgIm1vZGVscyIKICAgIHBsb3RzX2Rlc3QgPSBwbG90c19kZXN0IG9yIGYicGxvdHMve2NvbnRleHQubmFtZX0iCgogICAgcmF3LCBsYWJlbHMsIGhlYWRlciA9IGdldF9zYW1wbGUoZGF0YXNldCwgc2FtcGxlLCBsYWJlbF9jb2x1bW4pCgogICAgaWYgZW5jb2RlX2NvbHM6CiAgICAgICAgcmF3ID0gcGQuZ2V0X2R1bW1pZXMoCiAgICAgICAgICAgIHJhdywKICAgICAgICAgICAgY29sdW1ucz1saXN0KGVuY29kZV9jb2xzLmtleXMoKSksCiAgICAgICAgICAgIHByZWZpeD1saXN0KGVuY29kZV9jb2xzLnZhbHVlcygpKSwKICAgICAgICAgICAgZHJvcF9maXJzdD1UcnVlLAogICAgICAgICkKCiAgICAoeHRyYWluLCB5dHJhaW4pLCAoeHZhbGlkLCB5dmFsaWQpLCAoeHRlc3QsIHl0ZXN0KSA9IGdldF9zcGxpdHMoCiAgICAgICAgcmF3LCBsYWJlbHMsIDMsIHRlc3Rfc2l6ZSwgdmFsaWRfc2l6ZSwgcmFuZG9tX3N0YXRlCiAgICApCgogICAgY29udGV4dC5sb2dfZGF0YXNldCgKICAgICAgICB0ZXN0X3NldCwgZGY9cGQuY29uY2F0KFt4dGVzdCwgeXRlc3RdLCBheGlzPTEpLCBmb3JtYXQ9ZmlsZV9leHQsIGluZGV4PUZhbHNlCiAgICApCgogICAgbW9kZWxfY29uZmlnID0gX2dlbl94Z2JfbW9kZWwobW9kZWxfdHlwZSwgY29udGV4dC5wYXJhbWV0ZXJzLml0ZW1zKCkpCgogICAgWEdCQm9vc3RDbGFzcyA9IGNyZWF0ZV9jbGFzcyhtb2RlbF9jb25maWdbIk1FVEEiXVsiY2xhc3MiXSkKICAgIG1vZGVsID0gWEdCQm9vc3RDbGFzcygqKm1vZGVsX2NvbmZpZ1siQ0xBU1MiXSkKCiAgICBtb2RlbF9jb25maWdbIkZJVCJdLnVwZGF0ZSgKICAgICAgICB7CiAgICAgICAgICAgICJYIjogeHRyYWluLAogICAgICAgICAgICAieSI6IHl0cmFpbi52YWx1ZXMsCiAgICAgICAgICAgICJldmFsX3NldCI6IFsoeHRyYWluLCB5dHJhaW4pLCAoeHZhbGlkLCB5dmFsaWQpXSwKICAgICAgICAgICAgImV2YWxfbWV0cmljIjogZXZhbF9tZXRyaWNzLAogICAgICAgIH0KICAgICkKCiAgICBtb2RlbC5maXQoKiptb2RlbF9jb25maWdbIkZJVCJdKQoKICAgIGV2YWxfbWV0cmljcyA9IGV2YWxfbW9kZWxfdjIoY29udGV4dCwgeHZhbGlkLCB5dmFsaWQsIG1vZGVsKQoKICAgIG1vZGVsX2JpbiA9IGR1bXBzKG1vZGVsKQogICAgY29udGV4dC5sb2dfbW9kZWwoCiAgICAgICAgIm1vZGVsIiwKICAgICAgICBib2R5PW1vZGVsX2JpbiwKICAgICAgICBhcnRpZmFjdF9wYXRoPW9zLnBhdGguam9pbihjb250ZXh0LmFydGlmYWN0X3BhdGgsIG1vZGVsc19kZXN0KSwKICAgICAgICBtb2RlbF9maWxlPSJtb2RlbC5wa2wiLAogICAgKQo=",
          "commands": []
        },
        "mount_applied": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "coxph-test",
        "tag": "",
        "hash": "660d963995e3717e46cb0c353ee8e768ce879d09",
        "project": "churn-project-admin",
        "labels": {
          "author": "Iguazio",
          "framework": "survival"
        },
        "categories": [
          "machine-learning",
          "model-testing"
        ],
        "updated": "2021-08-29T19:54:36.019295+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/ml-models",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "cox_test",
        "entry_points": {
          "cox_test": {
            "name": "cox_test",
            "doc": "Test one or more classifier models against held-out dataset\n\nUsing held-out test features, evaluates the peformance of the estimated model\n\nCan be part of a kubeflow pipeline as a test step that is run post EDA and\ntraining/validation cycles",
            "parameters": [
              {
                "name": "context",
                "doc": "the function context",
                "default": ""
              },
              {
                "name": "models_path",
                "type": "DataItem",
                "default": ""
              },
              {
                "name": "test_set",
                "type": "DataItem",
                "doc": "test features and labels",
                "default": ""
              },
              {
                "name": "label_column",
                "type": "str",
                "doc": "column name for ground truth labels",
                "default": ""
              },
              {
                "name": "plots_dest",
                "type": "str",
                "doc": "dir for test plots",
                "default": "plots"
              },
              {
                "name": "model_evaluator",
                "doc": "WIP: specific method to generate eval, passed in as string or available in this folder",
                "default": null
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 15
          }
        },
        "description": "Test cox proportional hazards model",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHdhcm5pbmdzCgp3YXJuaW5ncy5zaW1wbGVmaWx0ZXIoYWN0aW9uPSJpZ25vcmUiLCBjYXRlZ29yeT1GdXR1cmVXYXJuaW5nKQoKaW1wb3J0IG9zCmltcG9ydCBwYW5kYXMgYXMgcGQKZnJvbSBtbHJ1bi5kYXRhc3RvcmUgaW1wb3J0IERhdGFJdGVtCmZyb20gbWxydW4uYXJ0aWZhY3RzIGltcG9ydCBnZXRfbW9kZWwKZnJvbSBjbG91ZHBpY2tsZSBpbXBvcnQgbG9hZApmcm9tIG1scnVuLm1sdXRpbHMubW9kZWxzIGltcG9ydCBldmFsX2NsYXNzX21vZGVsCgoKZGVmIGNveF90ZXN0KAogICAgY29udGV4dCwKICAgIG1vZGVsc19wYXRoOiBEYXRhSXRlbSwKICAgIHRlc3Rfc2V0OiBEYXRhSXRlbSwKICAgIGxhYmVsX2NvbHVtbjogc3RyLAogICAgcGxvdHNfZGVzdDogc3RyID0gInBsb3RzIiwKICAgIG1vZGVsX2V2YWx1YXRvcj1Ob25lLAopIC0+IE5vbmU6CiAgICAiIiJUZXN0IG9uZSBvciBtb3JlIGNsYXNzaWZpZXIgbW9kZWxzIGFnYWluc3QgaGVsZC1vdXQgZGF0YXNldAoKICAgIFVzaW5nIGhlbGQtb3V0IHRlc3QgZmVhdHVyZXMsIGV2YWx1YXRlcyB0aGUgcGVmb3JtYW5jZSBvZiB0aGUgZXN0aW1hdGVkIG1vZGVsCgogICAgQ2FuIGJlIHBhcnQgb2YgYSBrdWJlZmxvdyBwaXBlbGluZSBhcyBhIHRlc3Qgc3RlcCB0aGF0IGlzIHJ1biBwb3N0IEVEQSBhbmQKICAgIHRyYWluaW5nL3ZhbGlkYXRpb24gY3ljbGVzCgogICAgOnBhcmFtIGNvbnRleHQ6ICAgICAgICAgdGhlIGZ1bmN0aW9uIGNvbnRleHQKICAgIDpwYXJhbSBtb2RlbF9maWxlOiAgICAgIG1vZGVsIGFydGlmYWN0IHRvIGJlIHRlc3RlZAogICAgOnBhcmFtIHRlc3Rfc2V0OiAgICAgICAgdGVzdCBmZWF0dXJlcyBhbmQgbGFiZWxzCiAgICA6cGFyYW0gbGFiZWxfY29sdW1uOiAgICBjb2x1bW4gbmFtZSBmb3IgZ3JvdW5kIHRydXRoIGxhYmVscwogICAgOnBhcmFtIHNjb3JlX21ldGhvZDogICAgZm9yIG11bHRpY2xhc3MgY2xhc3NpZmljYXRpb24KICAgIDpwYXJhbSBwbG90c19kZXN0OiAgICAgIGRpciBmb3IgdGVzdCBwbG90cwogICAgOnBhcmFtIG1vZGVsX2V2YWx1YXRvcjogV0lQOiBzcGVjaWZpYyBtZXRob2QgdG8gZ2VuZXJhdGUgZXZhbCwgcGFzc2VkIGluIGFzIHN0cmluZwogICAgICAgICAgICAgICAgICAgICAgICAgICAgb3IgYXZhaWxhYmxlIGluIHRoaXMgZm9sZGVyCiAgICAiIiIKICAgIHh0ZXN0ID0gdGVzdF9zZXQuYXNfZGYoKQogICAgeXRlc3QgPSB4dGVzdC5wb3AobGFiZWxfY29sdW1uKQoKICAgIG1vZGVsX2ZpbGUsIG1vZGVsX29iaiwgXyA9IGdldF9tb2RlbChtb2RlbHNfcGF0aC51cmwsIHN1ZmZpeD0iLnBrbCIpCiAgICBtb2RlbF9vYmogPSBsb2FkKG9wZW4oc3RyKG1vZGVsX2ZpbGUpLCAicmIiKSkKCiAgICB0cnk6CiAgICAgICAgaWYgbm90IG1vZGVsX2V2YWx1YXRvcjoKICAgICAgICAgICAgZXZhbF9tZXRyaWNzID0gZXZhbF9jbGFzc19tb2RlbChjb250ZXh0LCB4dGVzdCwgeXRlc3QsIG1vZGVsX29iaikKCiAgICAgICAgbW9kZWxfcGxvdHMgPSBldmFsX21ldHJpY3MucG9wKCJwbG90cyIpCiAgICAgICAgbW9kZWxfdGFibGVzID0gZXZhbF9tZXRyaWNzLnBvcCgidGFibGVzIikKICAgICAgICBmb3IgcGxvdCBpbiBtb2RlbF9wbG90czoKICAgICAgICAgICAgY29udGV4dC5sb2dfYXJ0aWZhY3QocGxvdCwgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS97cGxvdC5rZXl9Lmh0bWwiKQogICAgICAgIGZvciB0YmwgaW4gbW9kZWxfdGFibGVzOgogICAgICAgICAgICBjb250ZXh0LmxvZ19hcnRpZmFjdCh0YmwsIGxvY2FsX3BhdGg9ZiJ7cGxvdHNfZGVzdH0ve3Bsb3Qua2V5fS5jc3YiKQoKICAgICAgICBjb250ZXh0LmxvZ19yZXN1bHRzKGV2YWxfbWV0cmljcykKICAgIGV4Y2VwdDoKICAgICAgICBjb250ZXh0LmxvZ19kYXRhc2V0KAogICAgICAgICAgICAiY294LXRlc3Qtc3VtbWFyeSIsIGRmPW1vZGVsX29iai5zdW1tYXJ5LCBpbmRleD1UcnVlLCBmb3JtYXQ9ImNzdiIKICAgICAgICApCiAgICAgICAgY29udGV4dC5sb2dnZXIuaW5mbygiY294IHRlc3RlciBub3QgaW1wbGVtZW50ZWQiKQo=",
          "commands": []
        },
        "mount_applied": true,
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "coxph-test",
        "tag": "",
        "hash": "2688f1c027d78e579daae3e30299a881d5562d42",
        "project": "churn-project-admin",
        "labels": {
          "author": "Iguazio",
          "framework": "survival"
        },
        "categories": [
          "machine-learning",
          "model-testing"
        ],
        "updated": "2021-08-29T19:54:36.160546+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/ml-models",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "cox_test",
        "entry_points": {
          "cox_test": {
            "name": "cox_test",
            "doc": "Test one or more classifier models against held-out dataset\n\nUsing held-out test features, evaluates the peformance of the estimated model\n\nCan be part of a kubeflow pipeline as a test step that is run post EDA and\ntraining/validation cycles",
            "parameters": [
              {
                "name": "context",
                "doc": "the function context",
                "default": ""
              },
              {
                "name": "models_path",
                "type": "DataItem",
                "default": ""
              },
              {
                "name": "test_set",
                "type": "DataItem",
                "doc": "test features and labels",
                "default": ""
              },
              {
                "name": "label_column",
                "type": "str",
                "doc": "column name for ground truth labels",
                "default": ""
              },
              {
                "name": "plots_dest",
                "type": "str",
                "doc": "dir for test plots",
                "default": "plots"
              },
              {
                "name": "model_evaluator",
                "doc": "WIP: specific method to generate eval, passed in as string or available in this folder",
                "default": null
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 15
          }
        },
        "description": "Test cox proportional hazards model",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHdhcm5pbmdzCgp3YXJuaW5ncy5zaW1wbGVmaWx0ZXIoYWN0aW9uPSJpZ25vcmUiLCBjYXRlZ29yeT1GdXR1cmVXYXJuaW5nKQoKaW1wb3J0IG9zCmltcG9ydCBwYW5kYXMgYXMgcGQKZnJvbSBtbHJ1bi5kYXRhc3RvcmUgaW1wb3J0IERhdGFJdGVtCmZyb20gbWxydW4uYXJ0aWZhY3RzIGltcG9ydCBnZXRfbW9kZWwKZnJvbSBjbG91ZHBpY2tsZSBpbXBvcnQgbG9hZApmcm9tIG1scnVuLm1sdXRpbHMubW9kZWxzIGltcG9ydCBldmFsX2NsYXNzX21vZGVsCgoKZGVmIGNveF90ZXN0KAogICAgY29udGV4dCwKICAgIG1vZGVsc19wYXRoOiBEYXRhSXRlbSwKICAgIHRlc3Rfc2V0OiBEYXRhSXRlbSwKICAgIGxhYmVsX2NvbHVtbjogc3RyLAogICAgcGxvdHNfZGVzdDogc3RyID0gInBsb3RzIiwKICAgIG1vZGVsX2V2YWx1YXRvcj1Ob25lLAopIC0+IE5vbmU6CiAgICAiIiJUZXN0IG9uZSBvciBtb3JlIGNsYXNzaWZpZXIgbW9kZWxzIGFnYWluc3QgaGVsZC1vdXQgZGF0YXNldAoKICAgIFVzaW5nIGhlbGQtb3V0IHRlc3QgZmVhdHVyZXMsIGV2YWx1YXRlcyB0aGUgcGVmb3JtYW5jZSBvZiB0aGUgZXN0aW1hdGVkIG1vZGVsCgogICAgQ2FuIGJlIHBhcnQgb2YgYSBrdWJlZmxvdyBwaXBlbGluZSBhcyBhIHRlc3Qgc3RlcCB0aGF0IGlzIHJ1biBwb3N0IEVEQSBhbmQKICAgIHRyYWluaW5nL3ZhbGlkYXRpb24gY3ljbGVzCgogICAgOnBhcmFtIGNvbnRleHQ6ICAgICAgICAgdGhlIGZ1bmN0aW9uIGNvbnRleHQKICAgIDpwYXJhbSBtb2RlbF9maWxlOiAgICAgIG1vZGVsIGFydGlmYWN0IHRvIGJlIHRlc3RlZAogICAgOnBhcmFtIHRlc3Rfc2V0OiAgICAgICAgdGVzdCBmZWF0dXJlcyBhbmQgbGFiZWxzCiAgICA6cGFyYW0gbGFiZWxfY29sdW1uOiAgICBjb2x1bW4gbmFtZSBmb3IgZ3JvdW5kIHRydXRoIGxhYmVscwogICAgOnBhcmFtIHNjb3JlX21ldGhvZDogICAgZm9yIG11bHRpY2xhc3MgY2xhc3NpZmljYXRpb24KICAgIDpwYXJhbSBwbG90c19kZXN0OiAgICAgIGRpciBmb3IgdGVzdCBwbG90cwogICAgOnBhcmFtIG1vZGVsX2V2YWx1YXRvcjogV0lQOiBzcGVjaWZpYyBtZXRob2QgdG8gZ2VuZXJhdGUgZXZhbCwgcGFzc2VkIGluIGFzIHN0cmluZwogICAgICAgICAgICAgICAgICAgICAgICAgICAgb3IgYXZhaWxhYmxlIGluIHRoaXMgZm9sZGVyCiAgICAiIiIKICAgIHh0ZXN0ID0gdGVzdF9zZXQuYXNfZGYoKQogICAgeXRlc3QgPSB4dGVzdC5wb3AobGFiZWxfY29sdW1uKQoKICAgIG1vZGVsX2ZpbGUsIG1vZGVsX29iaiwgXyA9IGdldF9tb2RlbChtb2RlbHNfcGF0aC51cmwsIHN1ZmZpeD0iLnBrbCIpCiAgICBtb2RlbF9vYmogPSBsb2FkKG9wZW4oc3RyKG1vZGVsX2ZpbGUpLCAicmIiKSkKCiAgICB0cnk6CiAgICAgICAgaWYgbm90IG1vZGVsX2V2YWx1YXRvcjoKICAgICAgICAgICAgZXZhbF9tZXRyaWNzID0gZXZhbF9jbGFzc19tb2RlbChjb250ZXh0LCB4dGVzdCwgeXRlc3QsIG1vZGVsX29iaikKCiAgICAgICAgbW9kZWxfcGxvdHMgPSBldmFsX21ldHJpY3MucG9wKCJwbG90cyIpCiAgICAgICAgbW9kZWxfdGFibGVzID0gZXZhbF9tZXRyaWNzLnBvcCgidGFibGVzIikKICAgICAgICBmb3IgcGxvdCBpbiBtb2RlbF9wbG90czoKICAgICAgICAgICAgY29udGV4dC5sb2dfYXJ0aWZhY3QocGxvdCwgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS97cGxvdC5rZXl9Lmh0bWwiKQogICAgICAgIGZvciB0YmwgaW4gbW9kZWxfdGFibGVzOgogICAgICAgICAgICBjb250ZXh0LmxvZ19hcnRpZmFjdCh0YmwsIGxvY2FsX3BhdGg9ZiJ7cGxvdHNfZGVzdH0ve3Bsb3Qua2V5fS5jc3YiKQoKICAgICAgICBjb250ZXh0LmxvZ19yZXN1bHRzKGV2YWxfbWV0cmljcykKICAgIGV4Y2VwdDoKICAgICAgICBjb250ZXh0LmxvZ19kYXRhc2V0KAogICAgICAgICAgICAiY294LXRlc3Qtc3VtbWFyeSIsIGRmPW1vZGVsX29iai5zdW1tYXJ5LCBpbmRleD1UcnVlLCBmb3JtYXQ9ImNzdiIKICAgICAgICApCiAgICAgICAgY29udGV4dC5sb2dnZXIuaW5mbygiY294IHRlc3RlciBub3QgaW1wbGVtZW50ZWQiKQo=",
          "commands": []
        },
        "mount_applied": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "xgb-test",
        "tag": "",
        "hash": "71a7b6613fe8cf12061d5c529121f9d879b044f3",
        "project": "churn-project-admin",
        "labels": {
          "author": "Daniel",
          "framework": "xgboost"
        },
        "categories": [
          "model-testing"
        ],
        "updated": "2021-08-29T19:55:05.773651+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/ml-models",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "xgb_test",
        "entry_points": {
          "xgb_test": {
            "name": "xgb_test",
            "doc": "Test one or more classifier models against held-out dataset\n\nUsing held-out test features, evaluates the peformance of the estimated model\n\nCan be part of a kubeflow pipeline as a test step that is run post EDA and\ntraining/validation cycles",
            "parameters": [
              {
                "name": "context",
                "doc": "the function context",
                "default": ""
              },
              {
                "name": "models_path",
                "type": "DataItem",
                "doc": "model artifact to be tested",
                "default": ""
              },
              {
                "name": "test_set",
                "type": "DataItem",
                "doc": "test features and labels",
                "default": ""
              },
              {
                "name": "label_column",
                "type": "str",
                "doc": "column name for ground truth labels",
                "default": ""
              },
              {
                "name": "plots_dest",
                "type": "str",
                "doc": "dir for test plots",
                "default": "plots"
              },
              {
                "name": "default_model",
                "type": "str",
                "doc": "'model.pkl', default model artifact file name",
                "default": "model.pkl"
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 16
          }
        },
        "description": "Test one or more classifier models against held-out dataset.",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHdhcm5pbmdzCgp3YXJuaW5ncy5zaW1wbGVmaWx0ZXIoYWN0aW9uPSJpZ25vcmUiLCBjYXRlZ29yeT1GdXR1cmVXYXJuaW5nKQoKaW1wb3J0IG9zCmltcG9ydCBwYW5kYXMgYXMgcGQKZnJvbSBtbHJ1bi5kYXRhc3RvcmUgaW1wb3J0IERhdGFJdGVtCmZyb20gbWxydW4uYXJ0aWZhY3RzIGltcG9ydCBnZXRfbW9kZWwKZnJvbSBjbG91ZHBpY2tsZSBpbXBvcnQgbG9hZAoKZnJvbSBtbHJ1bi5tbHV0aWxzLm1vZGVscyBpbXBvcnQgZXZhbF9tb2RlbF92MgoKCmRlZiB4Z2JfdGVzdCgKICAgIGNvbnRleHQsCiAgICBtb2RlbHNfcGF0aDogRGF0YUl0ZW0sCiAgICB0ZXN0X3NldDogRGF0YUl0ZW0sCiAgICBsYWJlbF9jb2x1bW46IHN0ciwKICAgIHBsb3RzX2Rlc3Q6IHN0ciA9ICJwbG90cyIsCiAgICBkZWZhdWx0X21vZGVsOiBzdHIgPSAibW9kZWwucGtsIiwKKSAtPiBOb25lOgogICAgIiIiVGVzdCBvbmUgb3IgbW9yZSBjbGFzc2lmaWVyIG1vZGVscyBhZ2FpbnN0IGhlbGQtb3V0IGRhdGFzZXQKCiAgICBVc2luZyBoZWxkLW91dCB0ZXN0IGZlYXR1cmVzLCBldmFsdWF0ZXMgdGhlIHBlZm9ybWFuY2Ugb2YgdGhlIGVzdGltYXRlZCBtb2RlbAoKICAgIENhbiBiZSBwYXJ0IG9mIGEga3ViZWZsb3cgcGlwZWxpbmUgYXMgYSB0ZXN0IHN0ZXAgdGhhdCBpcyBydW4gcG9zdCBFREEgYW5kCiAgICB0cmFpbmluZy92YWxpZGF0aW9uIGN5Y2xlcwoKICAgIDpwYXJhbSBjb250ZXh0OiAgICAgICAgIHRoZSBmdW5jdGlvbiBjb250ZXh0CiAgICA6cGFyYW0gbW9kZWxzX3BhdGg6ICAgICBtb2RlbCBhcnRpZmFjdCB0byBiZSB0ZXN0ZWQKICAgIDpwYXJhbSB0ZXN0X3NldDogICAgICAgIHRlc3QgZmVhdHVyZXMgYW5kIGxhYmVscwogICAgOnBhcmFtIGxhYmVsX2NvbHVtbjogICAgY29sdW1uIG5hbWUgZm9yIGdyb3VuZCB0cnV0aCBsYWJlbHMKICAgIDpwYXJhbSBwbG90c19kZXN0OiAgICAgIGRpciBmb3IgdGVzdCBwbG90cwogICAgOnBhcmFtIGRlZmF1bHRfbW9kZWw6ICAgJ21vZGVsLnBrbCcsIGRlZmF1bHQgbW9kZWwgYXJ0aWZhY3QgZmlsZSBuYW1lCiAgICAiIiIKICAgIHh0ZXN0ID0gdGVzdF9zZXQuYXNfZGYoKQogICAgeXRlc3QgPSB4dGVzdC5wb3AobGFiZWxfY29sdW1uKQoKICAgIHRyeToKICAgICAgICBtb2RlbF9maWxlLCBtb2RlbF9vYmosIF8gPSBnZXRfbW9kZWwobW9kZWxzX3BhdGgudXJsLCBzdWZmaXg9Ii5wa2wiKQogICAgICAgIG1vZGVsX29iaiA9IGxvYWQob3Blbihtb2RlbF9maWxlLCAicmIiKSkKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgYToKICAgICAgICByYWlzZSBFeGNlcHRpb24oIm1vZGVsIGxvY2F0aW9uIGxpa2VseSBtaXNzcGVjaWZpZWQiKQoKICAgIGV2YWxfbWV0cmljcyA9IGV2YWxfbW9kZWxfdjIoY29udGV4dCwgeHRlc3QsIHl0ZXN0LnZhbHVlcywgbW9kZWxfb2JqKQo=",
          "commands": []
        },
        "mount_applied": true,
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "xgb-test",
        "tag": "",
        "hash": "4015516f4ae98945f4d89a29242b6004e58cbec8",
        "project": "churn-project-admin",
        "labels": {
          "author": "Daniel",
          "framework": "xgboost"
        },
        "categories": [
          "model-testing"
        ],
        "updated": "2021-08-29T19:55:06.030248+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/ml-models",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "xgb_test",
        "entry_points": {
          "xgb_test": {
            "name": "xgb_test",
            "doc": "Test one or more classifier models against held-out dataset\n\nUsing held-out test features, evaluates the peformance of the estimated model\n\nCan be part of a kubeflow pipeline as a test step that is run post EDA and\ntraining/validation cycles",
            "parameters": [
              {
                "name": "context",
                "doc": "the function context",
                "default": ""
              },
              {
                "name": "models_path",
                "type": "DataItem",
                "doc": "model artifact to be tested",
                "default": ""
              },
              {
                "name": "test_set",
                "type": "DataItem",
                "doc": "test features and labels",
                "default": ""
              },
              {
                "name": "label_column",
                "type": "str",
                "doc": "column name for ground truth labels",
                "default": ""
              },
              {
                "name": "plots_dest",
                "type": "str",
                "doc": "dir for test plots",
                "default": "plots"
              },
              {
                "name": "default_model",
                "type": "str",
                "doc": "'model.pkl', default model artifact file name",
                "default": "model.pkl"
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 16
          }
        },
        "description": "Test one or more classifier models against held-out dataset.",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHdhcm5pbmdzCgp3YXJuaW5ncy5zaW1wbGVmaWx0ZXIoYWN0aW9uPSJpZ25vcmUiLCBjYXRlZ29yeT1GdXR1cmVXYXJuaW5nKQoKaW1wb3J0IG9zCmltcG9ydCBwYW5kYXMgYXMgcGQKZnJvbSBtbHJ1bi5kYXRhc3RvcmUgaW1wb3J0IERhdGFJdGVtCmZyb20gbWxydW4uYXJ0aWZhY3RzIGltcG9ydCBnZXRfbW9kZWwKZnJvbSBjbG91ZHBpY2tsZSBpbXBvcnQgbG9hZAoKZnJvbSBtbHJ1bi5tbHV0aWxzLm1vZGVscyBpbXBvcnQgZXZhbF9tb2RlbF92MgoKCmRlZiB4Z2JfdGVzdCgKICAgIGNvbnRleHQsCiAgICBtb2RlbHNfcGF0aDogRGF0YUl0ZW0sCiAgICB0ZXN0X3NldDogRGF0YUl0ZW0sCiAgICBsYWJlbF9jb2x1bW46IHN0ciwKICAgIHBsb3RzX2Rlc3Q6IHN0ciA9ICJwbG90cyIsCiAgICBkZWZhdWx0X21vZGVsOiBzdHIgPSAibW9kZWwucGtsIiwKKSAtPiBOb25lOgogICAgIiIiVGVzdCBvbmUgb3IgbW9yZSBjbGFzc2lmaWVyIG1vZGVscyBhZ2FpbnN0IGhlbGQtb3V0IGRhdGFzZXQKCiAgICBVc2luZyBoZWxkLW91dCB0ZXN0IGZlYXR1cmVzLCBldmFsdWF0ZXMgdGhlIHBlZm9ybWFuY2Ugb2YgdGhlIGVzdGltYXRlZCBtb2RlbAoKICAgIENhbiBiZSBwYXJ0IG9mIGEga3ViZWZsb3cgcGlwZWxpbmUgYXMgYSB0ZXN0IHN0ZXAgdGhhdCBpcyBydW4gcG9zdCBFREEgYW5kCiAgICB0cmFpbmluZy92YWxpZGF0aW9uIGN5Y2xlcwoKICAgIDpwYXJhbSBjb250ZXh0OiAgICAgICAgIHRoZSBmdW5jdGlvbiBjb250ZXh0CiAgICA6cGFyYW0gbW9kZWxzX3BhdGg6ICAgICBtb2RlbCBhcnRpZmFjdCB0byBiZSB0ZXN0ZWQKICAgIDpwYXJhbSB0ZXN0X3NldDogICAgICAgIHRlc3QgZmVhdHVyZXMgYW5kIGxhYmVscwogICAgOnBhcmFtIGxhYmVsX2NvbHVtbjogICAgY29sdW1uIG5hbWUgZm9yIGdyb3VuZCB0cnV0aCBsYWJlbHMKICAgIDpwYXJhbSBwbG90c19kZXN0OiAgICAgIGRpciBmb3IgdGVzdCBwbG90cwogICAgOnBhcmFtIGRlZmF1bHRfbW9kZWw6ICAgJ21vZGVsLnBrbCcsIGRlZmF1bHQgbW9kZWwgYXJ0aWZhY3QgZmlsZSBuYW1lCiAgICAiIiIKICAgIHh0ZXN0ID0gdGVzdF9zZXQuYXNfZGYoKQogICAgeXRlc3QgPSB4dGVzdC5wb3AobGFiZWxfY29sdW1uKQoKICAgIHRyeToKICAgICAgICBtb2RlbF9maWxlLCBtb2RlbF9vYmosIF8gPSBnZXRfbW9kZWwobW9kZWxzX3BhdGgudXJsLCBzdWZmaXg9Ii5wa2wiKQogICAgICAgIG1vZGVsX29iaiA9IGxvYWQob3Blbihtb2RlbF9maWxlLCAicmIiKSkKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgYToKICAgICAgICByYWlzZSBFeGNlcHRpb24oIm1vZGVsIGxvY2F0aW9uIGxpa2VseSBtaXNzcGVjaWZpZWQiKQoKICAgIGV2YWxfbWV0cmljcyA9IGV2YWxfbW9kZWxfdjIoY29udGV4dCwgeHRlc3QsIHl0ZXN0LnZhbHVlcywgbW9kZWxfb2JqKQo=",
          "commands": []
        },
        "mount_applied": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "serving",
      "metadata": {
        "name": "churn-server",
        "tag": "",
        "hash": "4faf0f8d3362c53bff14158729403a33474a16ff",
        "project": "churn-project-admin",
        "labels": {
          "author": "Iguazio",
          "framework": "churn"
        },
        "categories": [
          "model-serving",
          "machine-learning"
        ],
        "updated": "2021-08-29T19:57:30.175073+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/ml-models",
        "description": "churn classification and predictor",
        "min_replicas": 1,
        "max_replicas": 4,
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "ENABLE_EXPLAINER",
            "value": "False"
          },
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          },
          {
            "name": "INFERENCE_STREAM",
            "value": "users/admin/artifacts/customer-churn-prediction/model_stream"
          }
        ],
        "config": {
          "metadata.labels.mlrun/class": "serving",
          "spec.serviceType": "NodePort",
          "spec.minReplicas": 1,
          "spec.maxReplicas": 4
        },
        "base_spec": {
          "apiVersion": "nuclio.io/v1",
          "kind": "Function",
          "metadata": {
            "name": "churn-project-admin-churn-server",
            "labels": {
              "mlrun/class": "serving",
              "nuclio.io/project-name": "churn-project-admin"
            },
            "annotations": {
              "nuclio.io/generated_by": "function generated from /home/kali/functions/churn_server/churn_server.py"
            }
          },
          "spec": {
            "runtime": "python:3.6",
            "handler": "churn_server:handler",
            "env": [
              {
                "name": "ENABLE_EXPLAINER",
                "value": "False"
              },
              {
                "name": "V3IO_API",
                "value": "v3io-webapi.default-tenant.svc:8081"
              },
              {
                "name": "V3IO_USERNAME",
                "value": "admin"
              },
              {
                "name": "V3IO_ACCESS_KEY",
                "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              },
              {
                "name": "V3IO_FRAMESD",
                "value": "framesd:8081"
              },
              {
                "name": "INFERENCE_STREAM",
                "value": "users/admin/artifacts/customer-churn-prediction/model_stream"
              },
              {
                "name": "MLRUN_DEFAULT_PROJECT",
                "value": "churn-project-admin"
              },
              {
                "name": "MLRUN_DBPATH",
                "value": "http://mlrun-api:8080"
              },
              {
                "name": "MLRUN_NAMESPACE",
                "value": "default-tenant"
              },
              {
                "name": "SERVING_SPEC_ENV",
                "value": "{\"function_uri\": \"churn-project-admin/churn-server\", \"version\": \"v2\", \"parameters\": {}, \"graph\": {\"kind\": \"router\", \"routes\": {\"churn_server_v1\": {\"kind\": \"task\", \"class_name\": \"ChurnModel\", \"class_args\": {\"model_path\": \"store://artifacts/churn-project-admin/current-state_model:eaae138e-439a-47fa-93c6-ba0fe1dc3b79\"}}}}, \"load_mode\": null, \"functions\": {}, \"graph_initializer\": null, \"error_stream\": null, \"track_models\": null, \"default_content_type\": null}"
              }
            ],
            "volumes": [
              {
                "volume": {
                  "flexVolume": {
                    "driver": "v3io/fuse",
                    "options": {
                      "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
                    }
                  },
                  "name": "v3io"
                },
                "volumeMount": {
                  "mountPath": "/v3io",
                  "name": "v3io",
                  "subPath": ""
                }
              },
              {
                "volume": {
                  "flexVolume": {
                    "driver": "v3io/fuse",
                    "options": {
                      "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
                    }
                  },
                  "name": "v3io"
                },
                "volumeMount": {
                  "mountPath": "/User",
                  "name": "v3io",
                  "subPath": "users/admin"
                }
              }
            ],
            "build": {
              "commands": [],
              "noBaseImagesPull": true,
              "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG51bXB5IGFzIG5wCmZyb20gY2xvdWRwaWNrbGUgaW1wb3J0IGxvYWQKCgppbXBvcnQgbWxydW4KCgpjbGFzcyBDaHVybk1vZGVsKG1scnVuLnNlcnZpbmcuVjJNb2RlbFNlcnZlcik6CiAgICBkZWYgbG9hZChzZWxmKToKICAgICAgICAiIiIKICAgICAgICBsb2FkIG11bHRpcGxlIG1vZGVscyBpbiBuZXN0ZWQgZm9sZGVycywgY2h1cm4gbW9kZWwgb25seQogICAgICAgICIiIgogICAgICAgIGNsZl9tb2RlbF9maWxlLCBleHRyYV9kYXRhID0gc2VsZi5nZXRfbW9kZWwoIi5wa2wiKQogICAgICAgIHNlbGYubW9kZWwgPSBsb2FkKG9wZW4oc3RyKGNsZl9tb2RlbF9maWxlKSwgInJiIikpCiAgICAgICAgaWYgImNveCIgaW4gZXh0cmFfZGF0YS5rZXlzKCk6CiAgICAgICAgICAgIGNveF9tb2RlbF9maWxlID0gZXh0cmFfZGF0YVsiY294Il0KICAgICAgICAgICAgc2VsZi5jb3hfbW9kZWwgPSBsb2FkKG9wZW4oc3RyKGNveF9tb2RlbF9maWxlKSwgInJiIikpCiAgICAgICAgICAgIGlmICJjb3gva20iIGluIGV4dHJhX2RhdGEua2V5cygpOgogICAgICAgICAgICAgICAga21fbW9kZWxfZmlsZSA9IGV4dHJhX2RhdGFbImNveC9rbSJdCiAgICAgICAgICAgICAgICBzZWxmLmttX21vZGVsID0gbG9hZChvcGVuKHN0cihrbV9tb2RlbF9maWxlKSwgInJiIikpCgogICAgZGVmIHByZWRpY3Qoc2VsZiwgYm9keSk6CiAgICAgICAgdHJ5OgogICAgICAgICAgICBmZWF0cyA9IG5wLmFzYXJyYXkoYm9keVsiaW5zdGFuY2VzIl0sIGR0eXBlPW5wLmZsb2F0MzIpLnJlc2hhcGUoLTEsIDIzKQogICAgICAgICAgICByZXN1bHQgPSBzZWxmLm1vZGVsLnByZWRpY3QoZmVhdHMsIHZhbGlkYXRlX2ZlYXR1cmVzPUZhbHNlKQogICAgICAgICAgICByZXR1cm4gcmVzdWx0LnRvbGlzdCgpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICByYWlzZSBFeGNlcHRpb24oIkZhaWxlZCB0byBwcmVkaWN0ICVzIiAlIGUpCgoKZnJvbSBtbHJ1bi5ydW50aW1lcyBpbXBvcnQgbnVjbGlvX2luaXRfaG9vawoKCmRlZiBpbml0X2NvbnRleHQoY29udGV4dCk6CiAgICBudWNsaW9faW5pdF9ob29rKGNvbnRleHQsIGdsb2JhbHMoKSwgInNlcnZpbmdfdjIiKQoKCmRlZiBoYW5kbGVyKGNvbnRleHQsIGV2ZW50KToKICAgIHJldHVybiBjb250ZXh0Lm1scnVuX2hhbmRsZXIoY29udGV4dCwgZXZlbnQpCgpmcm9tIG1scnVuLnJ1bnRpbWVzIGltcG9ydCBudWNsaW9faW5pdF9ob29rCmRlZiBpbml0X2NvbnRleHQoY29udGV4dCk6CiAgICBudWNsaW9faW5pdF9ob29rKGNvbnRleHQsIGdsb2JhbHMoKSwgJ3NlcnZpbmdfdjInKQoKZGVmIGhhbmRsZXIoY29udGV4dCwgZXZlbnQpOgogICAgcmV0dXJuIGNvbnRleHQubWxydW5faGFuZGxlcihjb250ZXh0LCBldmVudCkK",
              "baseImage": "mlrun/ml-models:0.7.0-rc11"
            },
            "serviceType": "NodePort",
            "minReplicas": 1,
            "maxReplicas": 4
          }
        },
        "source": "",
        "function_kind": "serving_v2",
        "graph": {
          "kind": "router",
          "routes": {
            "churn_server_v1": {
              "kind": "task",
              "class_name": "ChurnModel",
              "class_args": {
                "model_path": "store://artifacts/churn-project-admin/current-state_model:eaae138e-439a-47fa-93c6-ba0fe1dc3b79"
              }
            }
          }
        },
        "default_class": "ChurnModel",
        "build": {
          "commands": []
        },
        "secret_sources": [],
        "mount_applied": true,
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "labels": {
          "author": "Daniel",
          "framework": "xgboost"
        },
        "name": "xgb-test",
        "project": "churn-project-admin",
        "tag": "",
        "hash": "6286a92e01ff455ef1121bf141980542d3766c18",
        "updated": "2021-09-01T13:06:48.566422+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "",
          "commands": [],
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHdhcm5pbmdzCgp3YXJuaW5ncy5zaW1wbGVmaWx0ZXIoYWN0aW9uPSJpZ25vcmUiLCBjYXRlZ29yeT1GdXR1cmVXYXJuaW5nKQoKaW1wb3J0IG9zCmltcG9ydCBwYW5kYXMgYXMgcGQKZnJvbSBtbHJ1bi5kYXRhc3RvcmUgaW1wb3J0IERhdGFJdGVtCmZyb20gbWxydW4uYXJ0aWZhY3RzIGltcG9ydCBnZXRfbW9kZWwKZnJvbSBjbG91ZHBpY2tsZSBpbXBvcnQgbG9hZAoKZnJvbSBtbHJ1bi5tbHV0aWxzLm1vZGVscyBpbXBvcnQgZXZhbF9tb2RlbF92MgoKCmRlZiB4Z2JfdGVzdCgKICAgIGNvbnRleHQsCiAgICBtb2RlbHNfcGF0aDogRGF0YUl0ZW0sCiAgICB0ZXN0X3NldDogRGF0YUl0ZW0sCiAgICBsYWJlbF9jb2x1bW46IHN0ciwKICAgIHBsb3RzX2Rlc3Q6IHN0ciA9ICJwbG90cyIsCiAgICBkZWZhdWx0X21vZGVsOiBzdHIgPSAibW9kZWwucGtsIiwKKSAtPiBOb25lOgogICAgIiIiVGVzdCBvbmUgb3IgbW9yZSBjbGFzc2lmaWVyIG1vZGVscyBhZ2FpbnN0IGhlbGQtb3V0IGRhdGFzZXQKCiAgICBVc2luZyBoZWxkLW91dCB0ZXN0IGZlYXR1cmVzLCBldmFsdWF0ZXMgdGhlIHBlZm9ybWFuY2Ugb2YgdGhlIGVzdGltYXRlZCBtb2RlbAoKICAgIENhbiBiZSBwYXJ0IG9mIGEga3ViZWZsb3cgcGlwZWxpbmUgYXMgYSB0ZXN0IHN0ZXAgdGhhdCBpcyBydW4gcG9zdCBFREEgYW5kCiAgICB0cmFpbmluZy92YWxpZGF0aW9uIGN5Y2xlcwoKICAgIDpwYXJhbSBjb250ZXh0OiAgICAgICAgIHRoZSBmdW5jdGlvbiBjb250ZXh0CiAgICA6cGFyYW0gbW9kZWxzX3BhdGg6ICAgICBtb2RlbCBhcnRpZmFjdCB0byBiZSB0ZXN0ZWQKICAgIDpwYXJhbSB0ZXN0X3NldDogICAgICAgIHRlc3QgZmVhdHVyZXMgYW5kIGxhYmVscwogICAgOnBhcmFtIGxhYmVsX2NvbHVtbjogICAgY29sdW1uIG5hbWUgZm9yIGdyb3VuZCB0cnV0aCBsYWJlbHMKICAgIDpwYXJhbSBwbG90c19kZXN0OiAgICAgIGRpciBmb3IgdGVzdCBwbG90cwogICAgOnBhcmFtIGRlZmF1bHRfbW9kZWw6ICAgJ21vZGVsLnBrbCcsIGRlZmF1bHQgbW9kZWwgYXJ0aWZhY3QgZmlsZSBuYW1lCiAgICAiIiIKICAgIHh0ZXN0ID0gdGVzdF9zZXQuYXNfZGYoKQogICAgeXRlc3QgPSB4dGVzdC5wb3AobGFiZWxfY29sdW1uKQoKICAgIHRyeToKICAgICAgICBtb2RlbF9maWxlLCBtb2RlbF9vYmosIF8gPSBnZXRfbW9kZWwobW9kZWxzX3BhdGgudXJsLCBzdWZmaXg9Ii5wa2wiKQogICAgICAgIG1vZGVsX29iaiA9IGxvYWQob3Blbihtb2RlbF9maWxlLCAicmIiKSkKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgYToKICAgICAgICByYWlzZSBFeGNlcHRpb24oIm1vZGVsIGxvY2F0aW9uIGxpa2VseSBtaXNzcGVjaWZpZWQiKQoKICAgIGV2YWxfbWV0cmljcyA9IGV2YWxfbW9kZWxfdjIoY29udGV4dCwgeHRlc3QsIHl0ZXN0LnZhbHVlcywgbW9kZWxfb2JqKQo=",
          "image": ""
        },
        "default_handler": "xgb_test",
        "description": "Test one or more classifier models against held-out dataset.",
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "image": "mlrun/ml-models",
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          }
        ],
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "secret_sources": []
      },
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "clean-data",
        "tag": "",
        "hash": "a343f9641503e9cdc21dc9293673e740a6e55228",
        "project": "churn-project-admin",
        "labels": {
          "author": "yasha",
          "framework": "xgboost"
        },
        "categories": [
          "data-prep"
        ],
        "updated": "2021-09-03T14:01:18.754734+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/ml-models",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "name": "v3io",
            "mountPath": "/v3io"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "",
        "entry_points": {
          "data_clean": {
            "name": "data_clean",
            "doc": "process a raw churn data file\n\nData has 3 states here: `raw`, `cleaned` and `encoded`\n\n* `raw` kept by default, the pipeline begins with a raw data artifact\n* `cleaned` kept for charts, presentations\n* `encoded` is input for a cross validation and training function\n\nsteps (not necessarily in correct order, some parallel)\n* column name maps\n* deal with nans and other types of missings/junk\n* label encode binary and ordinal category columns\n* create category ranges from numerical columns\nAnd finally,\n* test\n\nWhy we don't one-hot-encode here? One hot encoding isn't a necessary\nstep for all algorithms. It can also generate a very large feature\nmatrix that doesn't need to be serialized (even if sparse).\nSo we leave one-hot-encoding for the training step.\n\nWhat about scaling numerical columns? Same as why we don't one hot\nencode here. Do we scale before train-test split?  IMHO, no.  Scaling\nbefore splitting introduces a type of data leakage.  In addition,\nmany estimators are completely immune to the monotonic transformations\nimplied by scaling, so why waste the cycles?\n\nTODO: \n    * parallelize where possible\n    * more abstraction (more parameters, chain sklearn transformers)\n    * convert to marketplace function",
            "parameters": [
              {
                "name": "context",
                "type": "MLClientCtx",
                "doc": "the function execution context",
                "default": ""
              },
              {
                "name": "src",
                "type": "DataItem",
                "doc": "an artifact or file path",
                "default": ""
              },
              {
                "name": "file_ext",
                "type": "str",
                "doc": "file type for artifacts",
                "default": "csv"
              },
              {
                "name": "models_dest",
                "type": "str",
                "doc": "label encoders and other preprocessing steps should be saved together with other pipeline models",
                "default": "models/encoders"
              },
              {
                "name": "cleaned_key",
                "type": "str",
                "doc": "key of cleaned data table in artifact store",
                "default": "cleaned-data"
              },
              {
                "name": "encoded_key",
                "type": "str",
                "doc": "key of encoded data table in artifact store",
                "default": "encoded-data"
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 18
          }
        },
        "description": "clean and encode raw data",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG9zCgppbXBvcnQganNvbgppbXBvcnQgcGFuZGFzIGFzIHBkCmltcG9ydCBudW1weSBhcyBucApmcm9tIGNvbGxlY3Rpb25zIGltcG9ydCBkZWZhdWx0ZGljdAoKZnJvbSBjbG91ZHBpY2tsZSBpbXBvcnQgZHVtcHMsIGR1bXAsIGxvYWQKCmZyb20gc2tsZWFybi5wcmVwcm9jZXNzaW5nIGltcG9ydCAoT25lSG90RW5jb2RlciwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMYWJlbEVuY29kZXIpCgpmcm9tIG1scnVuLmV4ZWN1dGlvbiBpbXBvcnQgTUxDbGllbnRDdHgKZnJvbSBtbHJ1bi5kYXRhc3RvcmUgaW1wb3J0IERhdGFJdGVtCgpkZWYgZGF0YV9jbGVhbigKICAgIGNvbnRleHQ6TUxDbGllbnRDdHgsIAogICAgc3JjOiBEYXRhSXRlbSwKICAgIGZpbGVfZXh0OiBzdHIgPSAiY3N2IiwKICAgIG1vZGVsc19kZXN0OiBzdHIgPSAibW9kZWxzL2VuY29kZXJzIiwKICAgIGNsZWFuZWRfa2V5OiBzdHIgPSAiY2xlYW5lZC1kYXRhIiwKICAgIGVuY29kZWRfa2V5OiBzdHIgPSAiZW5jb2RlZC1kYXRhIgopOgogICAgIiIicHJvY2VzcyBhIHJhdyBjaHVybiBkYXRhIGZpbGUKICAgIAogICAgRGF0YSBoYXMgMyBzdGF0ZXMgaGVyZTogYHJhd2AsIGBjbGVhbmVkYCBhbmQgYGVuY29kZWRgCiAgICAKICAgICogYHJhd2Aga2VwdCBieSBkZWZhdWx0LCB0aGUgcGlwZWxpbmUgYmVnaW5zIHdpdGggYSByYXcgZGF0YSBhcnRpZmFjdAogICAgKiBgY2xlYW5lZGAga2VwdCBmb3IgY2hhcnRzLCBwcmVzZW50YXRpb25zCiAgICAqIGBlbmNvZGVkYCBpcyBpbnB1dCBmb3IgYSBjcm9zcyB2YWxpZGF0aW9uIGFuZCB0cmFpbmluZyBmdW5jdGlvbgogICAgCiAgICBzdGVwcyAobm90IG5lY2Vzc2FyaWx5IGluIGNvcnJlY3Qgb3JkZXIsIHNvbWUgcGFyYWxsZWwpCiAgICAqIGNvbHVtbiBuYW1lIG1hcHMKICAgICogZGVhbCB3aXRoIG5hbnMgYW5kIG90aGVyIHR5cGVzIG9mIG1pc3NpbmdzL2p1bmsKICAgICogbGFiZWwgZW5jb2RlIGJpbmFyeSBhbmQgb3JkaW5hbCBjYXRlZ29yeSBjb2x1bW5zCiAgICAqIGNyZWF0ZSBjYXRlZ29yeSByYW5nZXMgZnJvbSBudW1lcmljYWwgY29sdW1ucwogICAgQW5kIGZpbmFsbHksCiAgICAqIHRlc3QKICAgIAogICAgV2h5IHdlIGRvbid0IG9uZS1ob3QtZW5jb2RlIGhlcmU/IE9uZSBob3QgZW5jb2RpbmcgaXNuJ3QgYSBuZWNlc3NhcnkKICAgIHN0ZXAgZm9yIGFsbCBhbGdvcml0aG1zLiBJdCBjYW4gYWxzbyBnZW5lcmF0ZSBhIHZlcnkgbGFyZ2UgZmVhdHVyZQogICAgbWF0cml4IHRoYXQgZG9lc24ndCBuZWVkIHRvIGJlIHNlcmlhbGl6ZWQgKGV2ZW4gaWYgc3BhcnNlKS4KICAgIFNvIHdlIGxlYXZlIG9uZS1ob3QtZW5jb2RpbmcgZm9yIHRoZSB0cmFpbmluZyBzdGVwLgogICAgCiAgICBXaGF0IGFib3V0IHNjYWxpbmcgbnVtZXJpY2FsIGNvbHVtbnM/IFNhbWUgYXMgd2h5IHdlIGRvbid0IG9uZSBob3QKICAgIGVuY29kZSBoZXJlLiBEbyB3ZSBzY2FsZSBiZWZvcmUgdHJhaW4tdGVzdCBzcGxpdD8gIElNSE8sIG5vLiAgU2NhbGluZwogICAgYmVmb3JlIHNwbGl0dGluZyBpbnRyb2R1Y2VzIGEgdHlwZSBvZiBkYXRhIGxlYWthZ2UuICBJbiBhZGRpdGlvbiwKICAgIG1hbnkgZXN0aW1hdG9ycyBhcmUgY29tcGxldGVseSBpbW11bmUgdG8gdGhlIG1vbm90b25pYyB0cmFuc2Zvcm1hdGlvbnMKICAgIGltcGxpZWQgYnkgc2NhbGluZywgc28gd2h5IHdhc3RlIHRoZSBjeWNsZXM/CiAgICAKICAgIFRPRE86IAogICAgICAgICogcGFyYWxsZWxpemUgd2hlcmUgcG9zc2libGUKICAgICAgICAqIG1vcmUgYWJzdHJhY3Rpb24gKG1vcmUgcGFyYW1ldGVycywgY2hhaW4gc2tsZWFybiB0cmFuc2Zvcm1lcnMpCiAgICAgICAgKiBjb252ZXJ0IHRvIG1hcmtldHBsYWNlIGZ1bmN0aW9uCiAgICAgICAgCiAgICA6cGFyYW0gY29udGV4dDogICAgICAgICAgdGhlIGZ1bmN0aW9uIGV4ZWN1dGlvbiBjb250ZXh0CiAgICA6cGFyYW0gc3JjOiAgICAgICAgICAgICAgYW4gYXJ0aWZhY3Qgb3IgZmlsZSBwYXRoCiAgICA6cGFyYW0gZmlsZV9leHQ6ICAgICAgICAgZmlsZSB0eXBlIGZvciBhcnRpZmFjdHMKICAgIDpwYXJhbSBtb2RlbHNfZGVzdDogICAgICAgbGFiZWwgZW5jb2RlcnMgYW5kIG90aGVyIHByZXByb2Nlc3Npbmcgc3RlcHMKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaG91bGQgYmUgc2F2ZWQgdG9nZXRoZXIgd2l0aCBvdGhlciBwaXBlbGluZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vZGVscwogICAgOnBhcmFtIGNsZWFuZWRfa2V5OiAgICAgIGtleSBvZiBjbGVhbmVkIGRhdGEgdGFibGUgaW4gYXJ0aWZhY3Qgc3RvcmUKICAgIDpwYXJhbSBlbmNvZGVkX2tleTogICAgICBrZXkgb2YgZW5jb2RlZCBkYXRhIHRhYmxlIGluIGFydGlmYWN0IHN0b3JlCiAgICAiIiIKICAgIGRmID0gc3JjLmFzX2RmKCkKICAgIAogICAgZHJvcF9jb2xzX2xpc3QgPSBbImN1c3RvbWVySUQiLCAiVG90YWxDaGFyZ2VzIl0KICAgIGRmLmRyb3AoZHJvcF9jb2xzX2xpc3QsIGF4aXM9MSwgaW5wbGFjZT1UcnVlKQogICAgCiAgICBvbGRfY29scyA9IGRmLmNvbHVtbnMKICAgIHJlbmFtZV9jb2xzX21hcCA9IHsKICAgICAgICAiU2VuaW9yQ2l0aXplbiIgOiAic2VuaW9yIiwKICAgICAgICAiUGFydG5lciIgICAgICAgOiAicGFydG5lciIsCiAgICAgICAgIkRlcGVuZGVudHMiICAgIDogImRlcHMiLAogICAgICAgICJDaHVybiIgICAgICAgICA6ICJsYWJlbHMiCiAgICB9CiAgICBkZi5yZW5hbWUocmVuYW1lX2NvbHNfbWFwLCBheGlzPTEsIGlucGxhY2U9VHJ1ZSkKCiAgICBmb3IgY29sIGluIGRyb3BfY29sc19saXN0OgogICAgICAgIHJlbmFtZV9jb2xzX21hcC51cGRhdGUoe2NvbDogIl9EUk9QUEVEXyJ9KQogICAgCiAgICB0cCA9IG9zLnBhdGguam9pbihtb2RlbHNfZGVzdCwgInByZXByb2MtY29sdW1uX21hcC5qc29uIikKICAgIGNvbnRleHQubG9nX2FydGlmYWN0KCJwcmVwcm9jLWNvbHVtbl9tYXAuanNvbiIsCiAgICAgICAgICAgICAgICAgICAgICAgICBib2R5PWpzb24uZHVtcHMocmVuYW1lX2NvbHNfbWFwKSwKICAgICAgICAgICAgICAgICAgICAgICAgIGxvY2FsX3BhdGg9dHApCiAgICAKCiAgICBkZiA9IGRmLmFwcGx5bWFwKGxhbWJkYSB4OiAiTm8iIGlmIHN0cih4KS5zdGFydHN3aXRoKCJObyAiKSBlbHNlIHgpCgogICAgYmlucyA9IFswLCAxMiwgMjQsIDM2LCA0OCwgNjAsIG5wLmluZl0KICAgIGxhYmVscyA9IFswLCAxLCAyLCAzLCA0LCA1XQogICAgdGVudXJlID0gZGYudGVudXJlLmNvcHkoZGVlcD1UcnVlKQogICAgZGZbInRlbnVyZV9tYXAiXSA9IHBkLmN1dChkZi50ZW51cmUsIGJpbnMsIGxhYmVscz1GYWxzZSkKICAgIHRlbnVyZV9tYXAgPSBkaWN0KHppcChiaW5zLCBsYWJlbHMpKQogICAgdHAgPSBvcy5wYXRoLmpvaW4obW9kZWxzX2Rlc3QsICJwcmVwcm9jLW51bWNhdF9tYXAuanNvbiIpCiAgICBjb250ZXh0LmxvZ19hcnRpZmFjdCgicHJlcHJvYy1udW1jYXRfbWFwLmpzb24iLCAKICAgICAgICAgICAgICAgICAgICAgICAgIGJvZHk9Ynl0ZXMoanNvbi5kdW1wcyh0ZW51cmVfbWFwKS5lbmNvZGUoInV0Zi04IikpLCAKICAgICAgICAgICAgICAgICAgICAgICAgIGxvY2FsX3BhdGg9dHApCiAgICAKICAgIGNvbnRleHQubG9nX2RhdGFzZXQoY2xlYW5lZF9rZXksIGRmPWRmLCBmb3JtYXQ9ZmlsZV9leHQsIGluZGV4PUZhbHNlKQogICAgCiAgICBmaXhfY29scyA9IFsiZ2VuZGVyIiwgInBhcnRuZXIiLCAiZGVwcyIsICJPbmxpbmVTZWN1cml0eSIsIAogICAgICAgICAgICAgICAgIk9ubGluZUJhY2t1cCIsICJEZXZpY2VQcm90ZWN0aW9uIiwgIlRlY2hTdXBwb3J0IiwKICAgICAgICAgICAgICAgICJTdHJlYW1pbmdUViIsICJTdHJlYW1pbmdNb3ZpZXMiLCAiUGhvbmVTZXJ2aWNlIiwKICAgICAgICAgICAgICAgICJNdWx0aXBsZUxpbmVzIiwgIlBhcGVybGVzc0JpbGxpbmciLCAiSW50ZXJuZXRTZXJ2aWNlIiwgCiAgICAgICAgICAgICAgICAiQ29udHJhY3QiLCAiUGF5bWVudE1ldGhvZCIsICJsYWJlbHMiXQogICAgCiAgICBkID0gZGVmYXVsdGRpY3QoTGFiZWxFbmNvZGVyKQogICAgZGZbZml4X2NvbHNdID0gZGZbZml4X2NvbHNdLmFwcGx5KGxhbWJkYSB4OiBkW3gubmFtZV0uZml0X3RyYW5zZm9ybSh4LmFzdHlwZShzdHIpKSkKICAgIGNvbnRleHQubG9nX2RhdGFzZXQoZW5jb2RlZF9rZXksIGRmPWRmLCBmb3JtYXQ9ZmlsZV9leHQsIGluZGV4PUZhbHNlKQoKICAgIG1vZGVsX2JpbiA9IGR1bXBzKGQpCiAgICBjb250ZXh0LmxvZ19tb2RlbCgibW9kZWwiLCAKICAgICAgICAgICAgICAgICAgICAgIGJvZHk9bW9kZWxfYmluLAogICAgICAgICAgICAgICAgICAgICAgYXJ0aWZhY3RfcGF0aD1vcy5wYXRoLmpvaW4oY29udGV4dC5hcnRpZmFjdF9wYXRoLCAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vZGVsc19kZXN0KSwKICAgICAgICAgICAgICAgICAgICAgIG1vZGVsX2ZpbGU9Im1vZGVsLnBrbCIpCgo=",
          "commands": [],
          "origin_filename": "clean-data.ipynb"
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "coxph-trainer",
        "tag": "",
        "hash": "66335a1470fe249bc7558f93953fe03c9e391235",
        "project": "churn-project-admin",
        "labels": {
          "author": "yjb",
          "framework": "survival"
        },
        "categories": [
          "model-training",
          "machine-learning"
        ],
        "updated": "2021-09-03T14:01:34.261127+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/ml-models",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "name": "v3io",
            "mountPath": "/v3io"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "train_model",
        "entry_points": {
          "train_model": {
            "name": "train_model",
            "doc": "train models to predict the timing of events\n\nAlthough identical in structure to other training functions, this one\nrequires generating a 'Y' that represents the age/duration/tenure of\nthe obervation, designated 'tenure' here, and a binary labels columns that\nrepresents the event of interest, churned/not-churned.\n\nIn addition, there is a strata_cols parameter, representing a list of\nstratification (aka grouping) variables.",
            "parameters": [
              {
                "name": "context",
                "type": "MLClientCtx",
                "doc": "the function context",
                "default": ""
              },
              {
                "name": "dataset",
                "type": "DataItem",
                "doc": "(\"data\") name of raw data file",
                "default": ""
              },
              {
                "name": "event_column",
                "type": "str",
                "doc": "ground-truth (y) labels (considered as events in this model)",
                "default": "labels"
              },
              {
                "name": "time_column",
                "type": "str",
                "doc": "age or tenure column",
                "default": "tenure"
              },
              {
                "name": "encode_cols",
                "type": "dict",
                "doc": "dictionary of names and prefixes for columns that are to hot be encoded.",
                "default": {}
              },
              {
                "name": "strata_cols",
                "type": "list",
                "doc": "columns used to stratify predictors",
                "default": []
              },
              {
                "name": "plot_cov_groups",
                "type": "bool",
                "default": false
              },
              {
                "name": "p_value",
                "type": "float",
                "doc": "(0.005) max p value for coeffcients selected",
                "default": 0.005
              },
              {
                "name": "sample",
                "type": "int",
                "doc": "Selects the first n rows, or select a sample starting from the first. If negative <-1, select a random sample",
                "default": "<_ast.USub object at 0x7f3b619b97b8>"
              },
              {
                "name": "test_size",
                "type": "float",
                "doc": "(0.25) test set size",
                "default": 0.25
              },
              {
                "name": "valid_size",
                "type": "float",
                "doc": "(0.75) Once the test set has been removed the training set gets this proportion.",
                "default": 0.75
              },
              {
                "name": "random_state",
                "type": "int",
                "doc": "(1) sklearn rng seed",
                "default": 1
              },
              {
                "name": "models_dest",
                "type": "str",
                "doc": "destination subfolder for model artifacts",
                "default": ""
              },
              {
                "name": "plots_dest",
                "type": "str",
                "doc": "destination subfolder for plot artifacts",
                "default": ""
              },
              {
                "name": "file_ext",
                "type": "str",
                "doc": "format for test_set_key hold out data",
                "default": "csv"
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 97
          }
        },
        "description": "cox proportional hazards, kaplan meier plots",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHdhcm5pbmdzCgp3YXJuaW5ncy5zaW1wbGVmaWx0ZXIoYWN0aW9uPSJpZ25vcmUiLCBjYXRlZ29yeT1GdXR1cmVXYXJuaW5nKQoKZnJvbSBtbHJ1bi5tbHV0aWxzLmRhdGEgaW1wb3J0IGdldF9zYW1wbGUsIGdldF9zcGxpdHMKZnJvbSBtbHJ1bi5tbHV0aWxzLnBsb3RzIGltcG9ydCBnY2ZfY2xlYXIKCmZyb20gbWxydW4uZXhlY3V0aW9uIGltcG9ydCBNTENsaWVudEN0eApmcm9tIG1scnVuLmRhdGFzdG9yZSBpbXBvcnQgRGF0YUl0ZW0KZnJvbSBtbHJ1bi5hcnRpZmFjdHMgaW1wb3J0IFBsb3RBcnRpZmFjdCwgVGFibGVBcnRpZmFjdAoKZnJvbSBjbG91ZHBpY2tsZSBpbXBvcnQgZHVtcHMKaW1wb3J0IHBhbmRhcyBhcyBwZAppbXBvcnQgb3MKCmZyb20gbGlmZWxpbmVzIGltcG9ydCBDb3hQSEZpdHRlciwgS2FwbGFuTWVpZXJGaXR0ZXIKCgpkZWYgX2NveHBoX2xvZ19tb2RlbCgKICAgIGNvbnRleHQsCiAgICBtb2RlbCwKICAgIGRhdGFzZXRfa2V5OiBzdHIgPSAiY294aGF6YXJkLXN1bW1hcnkiLAogICAgbW9kZWxzX2Rlc3Q6IHN0ciA9ICJtb2RlbHMiLAogICAgcGxvdF9jb3ZfZ3JvdXBzOiBib29sID0gRmFsc2UsCiAgICBwX3ZhbHVlOiBmbG9hdCA9IDAuMDA1LAogICAgcGxvdF9rZXk6IHN0ciA9ICJrbS1jeCIsCiAgICBwbG90c19kZXN0OiBzdHIgPSAicGxvdHMiLAogICAgZmlsZV9leHQ9ImNzdiIsCiAgICBleHRyYV9kYXRhOiBkaWN0ID0ge30sCik6CiAgICAiIiJsb2cgYSBjb3hwaCBtb2RlbCAoYW5kIHN1Ym1vZGVsIGxvY2F0aW9ucykKCiAgICA6cGFyYW0gbW9kZWw6ICAgICAgICBlc3RpbWF0ZWQgY294cGggbW9kZWwKICAgIDpwYXJhbSBleHRyYV9kYXRhOiAgIGlmIHRoaXMgbW9kZWwgd2FudHMgdG8gc3RvcmUgdGhlIGxvY2F0aW9ucyBvZiBzdWJtb2RlbHMKICAgICAgICAgICAgICAgICAgICAgICAgIHVzZSB0aGlzCiAgICAiIiIKICAgIGltcG9ydCBtYXRwbG90bGliLnB5cGxvdCBhcyBwbHQKCiAgICBzdW10YmwgPSBtb2RlbC5zdW1tYXJ5CgogICAgY29udGV4dC5sb2dfZGF0YXNldChkYXRhc2V0X2tleSwgZGY9c3VtdGJsLCBpbmRleD1UcnVlLCBmb3JtYXQ9ZmlsZV9leHQpCgogICAgbW9kZWxfYmluID0gZHVtcHMobW9kZWwpCiAgICBjb250ZXh0LmxvZ19tb2RlbCgKICAgICAgICAiY3gtbW9kZWwiLAogICAgICAgIGJvZHk9bW9kZWxfYmluLAogICAgICAgIGFydGlmYWN0X3BhdGg9b3MucGF0aC5qb2luKGNvbnRleHQuYXJ0aWZhY3RfcGF0aCwgbW9kZWxzX2Rlc3QpLAogICAgICAgIG1vZGVsX2ZpbGU9Im1vZGVsLnBrbCIsCiAgICApCiAgICBpZiBwbG90X2Nvdl9ncm91cHM6CiAgICAgICAgc2VsZWN0X2NvdmFycyA9IHN1bW1hcnlbc3VtbWFyeS5wIDw9IHBfdmFsdWVdLmluZGV4LnZhbHVlcwogICAgICAgIGZvciBncm91cCBpbiBzZWxlY3RfY292YXJzOgogICAgICAgICAgICBheHMgPSBtb2RlbC5wbG90X2NvdmFyaWF0ZV9ncm91cHMoZ3JvdXAsIHZhbHVlcz1bMCwgMV0pCiAgICAgICAgICAgIGZvciBpeCwgYXggaW4gZW51bWVyYXRlKGF4cyk6CiAgICAgICAgICAgICAgICBmID0gYXguZ2V0X2ZpZ3VyZSgpCiAgICAgICAgICAgICAgICBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICAgICAgICAgICAgICBQbG90QXJ0aWZhY3QoZiJjeC17Z3JvdXB9LXtpeH0iLCBib2R5PXBsdC5nY2YoKSksCiAgICAgICAgICAgICAgICAgICAgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS9jeC17Z3JvdXB9LXtpeH0uaHRtbCIsCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICBnY2ZfY2xlYXIocGx0KQoKCmRlZiBfa2FwbGFuX21laWVyX2xvZ19tb2RlbCgKICAgIGNvbnRleHQsCiAgICBtb2RlbCwKICAgIHRpbWVfY29sdW1uOiBzdHIgPSAidGVudXJlIiwKICAgIGRhdGFzZXRfa2V5OiBzdHIgPSAia20tdGltZWxpbmVzIiwKICAgIHBsb3Rfa2V5OiBzdHIgPSAia20tc3Vydml2YWwiLAogICAgcGxvdHNfZGVzdDogc3RyID0gInBsb3RzIiwKICAgIG1vZGVsc19kZXN0OiBzdHIgPSAibW9kZWxzIiwKICAgIGZpbGVfZXh0OiBzdHIgPSAiY3N2IiwKKToKICAgIGltcG9ydCBtYXRwbG90bGliLnB5cGxvdCBhcyBwbHQKCiAgICBvID0gW10KICAgIGZvciBvYmogaW4gbW9kZWwuX19kaWN0X18ua2V5cygpOgogICAgICAgIGlmIGlzaW5zdGFuY2UobW9kZWwuX19kaWN0X19bb2JqXSwgcGQuRGF0YUZyYW1lKToKICAgICAgICAgICAgby5hcHBlbmQobW9kZWwuX19kaWN0X19bb2JqXSkKICAgIGRmID0gcGQuY29uY2F0KG8sIGF4aXM9MSkKICAgIGRmLmluZGV4Lm5hbWUgPSB0aW1lX2NvbHVtbgogICAgY29udGV4dC5sb2dfZGF0YXNldChkYXRhc2V0X2tleSwgZGY9ZGYsIGluZGV4PVRydWUsIGZvcm1hdD1maWxlX2V4dCkKICAgIG1vZGVsLnBsb3QoKQogICAgY29udGV4dC5sb2dfYXJ0aWZhY3QoCiAgICAgICAgUGxvdEFydGlmYWN0KHBsb3Rfa2V5LCBib2R5PXBsdC5nY2YoKSksCiAgICAgICAgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS97cGxvdF9rZXl9Lmh0bWwiLAogICAgKQogICAgY29udGV4dC5sb2dfbW9kZWwoCiAgICAgICAgImttLW1vZGVsIiwKICAgICAgICBib2R5PWR1bXBzKG1vZGVsKSwKICAgICAgICBtb2RlbF9kaXI9ZiJ7bW9kZWxzX2Rlc3R9L2ttIiwKICAgICAgICBtb2RlbF9maWxlPSJtb2RlbC5wa2wiLAogICAgKQoKCmRlZiB0cmFpbl9tb2RlbCgKICAgIGNvbnRleHQ6IE1MQ2xpZW50Q3R4LAogICAgZGF0YXNldDogRGF0YUl0ZW0sCiAgICBldmVudF9jb2x1bW46IHN0ciA9ICJsYWJlbHMiLAogICAgdGltZV9jb2x1bW46IHN0ciA9ICJ0ZW51cmUiLAogICAgZW5jb2RlX2NvbHM6IGRpY3QgPSB7fSwKICAgIHN0cmF0YV9jb2xzOiBsaXN0ID0gW10sCiAgICBwbG90X2Nvdl9ncm91cHM6IGJvb2wgPSBGYWxzZSwKICAgIHBfdmFsdWU6IGZsb2F0ID0gMC4wMDUsCiAgICBzYW1wbGU6IGludCA9IC0xLAogICAgdGVzdF9zaXplOiBmbG9hdCA9IDAuMjUsCiAgICB2YWxpZF9zaXplOiBmbG9hdCA9IDAuNzUsICAjIChhZnRlciB0ZXN0IHJlbW92ZWQpCiAgICByYW5kb21fc3RhdGU6IGludCA9IDEsCiAgICBtb2RlbHNfZGVzdDogc3RyID0gIiIsCiAgICBwbG90c19kZXN0OiBzdHIgPSAiIiwKICAgIGZpbGVfZXh0OiBzdHIgPSAiY3N2IiwKKSAtPiBOb25lOgogICAgIiIidHJhaW4gbW9kZWxzIHRvIHByZWRpY3QgdGhlIHRpbWluZyBvZiBldmVudHMKCiAgICBBbHRob3VnaCBpZGVudGljYWwgaW4gc3RydWN0dXJlIHRvIG90aGVyIHRyYWluaW5nIGZ1bmN0aW9ucywgdGhpcyBvbmUKICAgIHJlcXVpcmVzIGdlbmVyYXRpbmcgYSAnWScgdGhhdCByZXByZXNlbnRzIHRoZSBhZ2UvZHVyYXRpb24vdGVudXJlIG9mCiAgICB0aGUgb2JlcnZhdGlvbiwgZGVzaWduYXRlZCAndGVudXJlJyBoZXJlLCBhbmQgYSBiaW5hcnkgbGFiZWxzIGNvbHVtbnMgdGhhdAogICAgcmVwcmVzZW50cyB0aGUgZXZlbnQgb2YgaW50ZXJlc3QsIGNodXJuZWQvbm90LWNodXJuZWQuCgogICAgSW4gYWRkaXRpb24sIHRoZXJlIGlzIGEgc3RyYXRhX2NvbHMgcGFyYW1ldGVyLCByZXByZXNlbnRpbmcgYSBsaXN0IG9mCiAgICBzdHJhdGlmaWNhdGlvbiAoYWthIGdyb3VwaW5nKSB2YXJpYWJsZXMuCgogICAgOnBhcmFtIGNvbnRleHQ6ICAgICAgICAgICB0aGUgZnVuY3Rpb24gY29udGV4dAogICAgOnBhcmFtIGRhdGFzZXQ6ICAgICAgICAgICAoImRhdGEiKSBuYW1lIG9mIHJhdyBkYXRhIGZpbGUKICAgIDpwYXJhbSBldmVudF9jb2x1bW46ICAgICAgZ3JvdW5kLXRydXRoICh5KSBsYWJlbHMgKGNvbnNpZGVyZWQgYXMgZXZlbnRzIGluIHRoaXMgbW9kZWwpCiAgICA6cGFyYW0gdGltZV9jb2x1bW46ICAgICAgIGFnZSBvciB0ZW51cmUgY29sdW1uCiAgICA6cGFyYW0gZW5jb2RlX2NvbHM6ICAgICAgIGRpY3Rpb25hcnkgb2YgbmFtZXMgYW5kIHByZWZpeGVzIGZvciBjb2x1bW5zIHRoYXQgYXJlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGhvdCBiZSBlbmNvZGVkLgogICAgOnBhcmFtIHN0cmF0YV9jb2xzOiAgICAgICBjb2x1bW5zIHVzZWQgdG8gc3RyYXRpZnkgcHJlZGljdG9ycwogICAgOnBhcmFtIHBsb3RfY292X2dyb3VwczoKICAgIDpwYXJhbSBwX3ZhbHVlOiAgICAgICAgICAgKDAuMDA1KSBtYXggcCB2YWx1ZSBmb3IgY29lZmZjaWVudHMgc2VsZWN0ZWQKICAgIDpwYXJhbSBzYW1wbGU6ICAgICAgICAgICAgU2VsZWN0cyB0aGUgZmlyc3QgbiByb3dzLCBvciBzZWxlY3QgYSBzYW1wbGUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnRpbmcgZnJvbSB0aGUgZmlyc3QuIElmIG5lZ2F0aXZlIDwtMSwgc2VsZWN0CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGEgcmFuZG9tIHNhbXBsZQogICAgOnBhcmFtIHRlc3Rfc2l6ZTogICAgICAgICAoMC4yNSkgdGVzdCBzZXQgc2l6ZQogICAgOnBhcmFtIHZhbGlkX3NpemU6ICAgICAgICAoMC43NSkgT25jZSB0aGUgdGVzdCBzZXQgaGFzIGJlZW4gcmVtb3ZlZCB0aGUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhaW5pbmcgc2V0IGdldHMgdGhpcyBwcm9wb3J0aW9uLgogICAgOnBhcmFtIHJhbmRvbV9zdGF0ZTogICAgICAoMSkgc2tsZWFybiBybmcgc2VlZAogICAgOnBhcmFtIG1vZGVsc19kZXN0OiAgICAgICBkZXN0aW5hdGlvbiBzdWJmb2xkZXIgZm9yIG1vZGVsIGFydGlmYWN0cwogICAgOnBhcmFtIHBsb3RzX2Rlc3Q6ICAgICAgICBkZXN0aW5hdGlvbiBzdWJmb2xkZXIgZm9yIHBsb3QgYXJ0aWZhY3RzCiAgICA6cGFyYW0gZmlsZV9leHQ6ICAgICAgICAgIGZvcm1hdCBmb3IgdGVzdF9zZXRfa2V5IGhvbGQgb3V0IGRhdGEKICAgICIiIgogICAgZnJvbSBsaWZlbGluZXMucGxvdHRpbmcgaW1wb3J0IHBsb3RfbGlmZXRpbWVzCiAgICBpbXBvcnQgbWF0cGxvdGxpYi5weXBsb3QgYXMgcGx0CgogICAgbW9kZWxzX2Rlc3QgPSBtb2RlbHNfZGVzdCBvciAibW9kZWxzIgogICAgcGxvdHNfZGVzdCA9IHBsb3RzX2Rlc3Qgb3IgZiJwbG90cy97Y29udGV4dC5uYW1lfSIKCiAgICByYXcsIHRlbnVyZSwgaGVhZGVyID0gZ2V0X3NhbXBsZShkYXRhc2V0LCBzYW1wbGUsIHRpbWVfY29sdW1uKQoKICAgIGlmIGVuY29kZV9jb2xzOgogICAgICAgIHJhdyA9IHBkLmdldF9kdW1taWVzKAogICAgICAgICAgICByYXcsCiAgICAgICAgICAgIGNvbHVtbnM9bGlzdChlbmNvZGVfY29scy5rZXlzKCkpLAogICAgICAgICAgICBwcmVmaXg9bGlzdChlbmNvZGVfY29scy52YWx1ZXMoKSksCiAgICAgICAgICAgIGRyb3BfZmlyc3Q9VHJ1ZSwKICAgICAgICApCgogICAgKHh0cmFpbiwgeXRyYWluKSwgKHh2YWxpZCwgeXZhbGlkKSwgKHh0ZXN0LCB5dGVzdCkgPSBnZXRfc3BsaXRzKAogICAgICAgIHJhdywgdGVudXJlLCAzLCB0ZXN0X3NpemUsIHZhbGlkX3NpemUsIHJhbmRvbV9zdGF0ZQogICAgKQogICAgZm9yIFggaW4gW3h0cmFpbiwgeHZhbGlkLCB4dGVzdF06CiAgICAgICAgZHJvcF9jb2xzID0gWC5jb2x1bW5zLnN0ci5zdGFydHN3aXRoKHRpbWVfY29sdW1uKQogICAgICAgIFguZHJvcChYLmNvbHVtbnNbZHJvcF9jb2xzXSwgYXhpcz0xLCBpbnBsYWNlPVRydWUpCiAgICBmb3IgWSBpbiBbeXRyYWluLCB5dmFsaWQsIHl0ZXN0XToKICAgICAgICBZLm5hbWUgPSB0aW1lX2NvbHVtbgoKICAgIGNvbnRleHQubG9nX2RhdGFzZXQoCiAgICAgICAgInRlbnVyZWQtdGVzdC1zZXQiLAogICAgICAgIGRmPXBkLmNvbmNhdChbeHRlc3QsIHl0ZXN0LnRvX2ZyYW1lKCldLCBheGlzPTEpLAogICAgICAgIGZvcm1hdD1maWxlX2V4dCwKICAgICAgICBpbmRleD1GYWxzZSwKICAgICkKCiAgICBrbV9tb2RlbCA9IEthcGxhbk1laWVyRml0dGVyKCkuZml0KHl0cmFpbiwgeHRyYWluLmxhYmVscykKICAgIF9rYXBsYW5fbWVpZXJfbG9nX21vZGVsKGNvbnRleHQsIGttX21vZGVsLCBtb2RlbHNfZGVzdD1tb2RlbHNfZGVzdCkKCiAgICBjb3hkYXRhID0gcGQuY29uY2F0KFt4dHJhaW4sIHl0cmFpbi50b19mcmFtZSgpXSwgYXhpcz0xKQogICAgY3hfbW9kZWwgPSBDb3hQSEZpdHRlcigpLmZpdChjb3hkYXRhLCB0aW1lX2NvbHVtbiwgZXZlbnRfY29sdW1uLCBzdHJhdGE9c3RyYXRhX2NvbHMpCiAgICBfY294cGhfbG9nX21vZGVsKAogICAgICAgIGNvbnRleHQsCiAgICAgICAgY3hfbW9kZWwsCiAgICAgICAgbW9kZWxzX2Rlc3Q9bW9kZWxzX2Rlc3QsCiAgICAgICAgcGxvdF9jb3ZfZ3JvdXBzPXBsb3RfY292X2dyb3VwcywKICAgICAgICBleHRyYV9kYXRhPXsia20iOiBmInttb2RlbHNfZGVzdH0va20ifSwKICAgICkK",
          "commands": []
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "describe",
        "tag": "",
        "hash": "d3e77b412963e1714174a917c95a325fcd37c3ed",
        "project": "churn-project-admin",
        "labels": {
          "author": "Iguazio"
        },
        "categories": [
          "data-analysis"
        ],
        "updated": "2021-09-03T14:01:50.141532+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "name": "v3io",
            "mountPath": "/v3io"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "summarize",
        "entry_points": {
          "summarize": {
            "name": "summarize",
            "doc": "Summarize a table",
            "parameters": [
              {
                "name": "context",
                "type": "MLClientCtx",
                "doc": "the function context",
                "default": ""
              },
              {
                "name": "table",
                "type": "DataItem",
                "doc": "MLRun input pointing to pandas dataframe (csv/parquet file path)",
                "default": ""
              },
              {
                "name": "label_column",
                "type": "str",
                "doc": "ground truth column label",
                "default": null
              },
              {
                "name": "class_labels",
                "type": "List[str]",
                "doc": "label for each class in tables and plots",
                "default": []
              },
              {
                "name": "plot_hist",
                "type": "bool",
                "doc": "(True) set this to False for large tables",
                "default": true
              },
              {
                "name": "plots_dest",
                "type": "str",
                "doc": "destination folder of summary plots (relative to artifact_path)",
                "default": "plots"
              },
              {
                "name": "update_dataset",
                "doc": "when the table is a registered dataset update the charts in-place",
                "default": false
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 23
          }
        },
        "description": "describe and visualizes dataset stats",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHdhcm5pbmdzCgp3YXJuaW5ncy5zaW1wbGVmaWx0ZXIoYWN0aW9uPSJpZ25vcmUiLCBjYXRlZ29yeT1GdXR1cmVXYXJuaW5nKQoKaW1wb3J0IG9zCmltcG9ydCBudW1weSBhcyBucAppbXBvcnQgcGFuZGFzIGFzIHBkCmltcG9ydCBtYXRwbG90bGliLnB5cGxvdCBhcyBwbHQKaW1wb3J0IHNlYWJvcm4gYXMgc25zCgpmcm9tIG1scnVuLmV4ZWN1dGlvbiBpbXBvcnQgTUxDbGllbnRDdHgKZnJvbSBtbHJ1bi5kYXRhc3RvcmUgaW1wb3J0IERhdGFJdGVtCmZyb20gbWxydW4uYXJ0aWZhY3RzIGltcG9ydCBQbG90QXJ0aWZhY3QsIFRhYmxlQXJ0aWZhY3QKZnJvbSBtbHJ1bi5tbHV0aWxzLnBsb3RzIGltcG9ydCBnY2ZfY2xlYXIKCmZyb20gdHlwaW5nIGltcG9ydCBMaXN0CgpwZC5zZXRfb3B0aW9uKCJkaXNwbGF5LmZsb2F0X2Zvcm1hdCIsIGxhbWJkYSB4OiAiJS4yZiIgJSB4KQoKCmRlZiBzdW1tYXJpemUoCiAgICBjb250ZXh0OiBNTENsaWVudEN0eCwKICAgIHRhYmxlOiBEYXRhSXRlbSwKICAgIGxhYmVsX2NvbHVtbjogc3RyID0gTm9uZSwKICAgIGNsYXNzX2xhYmVsczogTGlzdFtzdHJdID0gW10sCiAgICBwbG90X2hpc3Q6IGJvb2wgPSBUcnVlLAogICAgcGxvdHNfZGVzdDogc3RyID0gInBsb3RzIiwKICAgIHVwZGF0ZV9kYXRhc2V0PUZhbHNlLAopIC0+IE5vbmU6CiAgICAiIiJTdW1tYXJpemUgYSB0YWJsZQoKICAgIDpwYXJhbSBjb250ZXh0OiAgICAgICAgIHRoZSBmdW5jdGlvbiBjb250ZXh0CiAgICA6cGFyYW0gdGFibGU6ICAgICAgICAgICBNTFJ1biBpbnB1dCBwb2ludGluZyB0byBwYW5kYXMgZGF0YWZyYW1lIChjc3YvcGFycXVldCBmaWxlIHBhdGgpCiAgICA6cGFyYW0gbGFiZWxfY29sdW1uOiAgICBncm91bmQgdHJ1dGggY29sdW1uIGxhYmVsCiAgICA6cGFyYW0gY2xhc3NfbGFiZWxzOiAgICBsYWJlbCBmb3IgZWFjaCBjbGFzcyBpbiB0YWJsZXMgYW5kIHBsb3RzCiAgICA6cGFyYW0gcGxvdF9oaXN0OiAgICAgICAoVHJ1ZSkgc2V0IHRoaXMgdG8gRmFsc2UgZm9yIGxhcmdlIHRhYmxlcwogICAgOnBhcmFtIHBsb3RzX2Rlc3Q6ICAgICAgZGVzdGluYXRpb24gZm9sZGVyIG9mIHN1bW1hcnkgcGxvdHMgKHJlbGF0aXZlIHRvIGFydGlmYWN0X3BhdGgpCiAgICA6cGFyYW0gdXBkYXRlX2RhdGFzZXQ6ICB3aGVuIHRoZSB0YWJsZSBpcyBhIHJlZ2lzdGVyZWQgZGF0YXNldCB1cGRhdGUgdGhlIGNoYXJ0cyBpbi1wbGFjZQogICAgIiIiCiAgICBkZiA9IHRhYmxlLmFzX2RmKCkKICAgIGhlYWRlciA9IGRmLmNvbHVtbnMudmFsdWVzCiAgICBleHRyYV9kYXRhID0ge30KCiAgICB0cnk6CiAgICAgICAgZ2NmX2NsZWFyKHBsdCkKICAgICAgICBzbnNwbHQgPSBzbnMucGFpcnBsb3QoZGYsIGh1ZT1sYWJlbF9jb2x1bW4pICAjICwgZGlhZ19rd3M9eyJidyI6IDEuNX0pCiAgICAgICAgZXh0cmFfZGF0YVsiaGlzdG9ncmFtcyJdID0gY29udGV4dC5sb2dfYXJ0aWZhY3QoCiAgICAgICAgICAgIFBsb3RBcnRpZmFjdCgiaGlzdG9ncmFtcyIsIGJvZHk9cGx0LmdjZigpKSwKICAgICAgICAgICAgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS9oaXN0Lmh0bWwiLAogICAgICAgICAgICBkYl9rZXk9RmFsc2UsCiAgICAgICAgKQogICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgIGNvbnRleHQubG9nZ2VyLmVycm9yKGYiRmFpbGVkIHRvIGNyZWF0ZSBwYWlycGxvdCBoaXN0b2dyYW1zIGR1ZSB0bzoge2V9IikKCiAgICB0cnk6CiAgICAgICAgZ2NmX2NsZWFyKHBsdCkKICAgICAgICBwbG90X2NvbHMgPSAzCiAgICAgICAgcGxvdF9yb3dzID0gaW50KChsZW4oaGVhZGVyKSAtIDEpIC8gcGxvdF9jb2xzKSArIDEKICAgICAgICBmaWcsIGF4ID0gcGx0LnN1YnBsb3RzKHBsb3Rfcm93cywgcGxvdF9jb2xzLCBmaWdzaXplPSgxNSwgNCkpCiAgICAgICAgZmlnLnRpZ2h0X2xheW91dChwYWQ9Mi4wKQogICAgICAgIGZvciBpIGluIHJhbmdlKHBsb3Rfcm93cyAqIHBsb3RfY29scyk6CiAgICAgICAgICAgIGlmIGkgPCBsZW4oaGVhZGVyKToKICAgICAgICAgICAgICAgIHNucy52aW9saW5wbG90KAogICAgICAgICAgICAgICAgICAgIHg9ZGZbaGVhZGVyW2ldXSwKICAgICAgICAgICAgICAgICAgICBheD1heFtpbnQoaSAvIHBsb3RfY29scyldW2kgJSBwbG90X2NvbHNdLAogICAgICAgICAgICAgICAgICAgIG9yaWVudD0iaCIsCiAgICAgICAgICAgICAgICAgICAgd2lkdGg9MC43LAogICAgICAgICAgICAgICAgICAgIGlubmVyPSJxdWFydGlsZSIsCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBmaWcuZGVsYXhlcyhheFtpbnQoaSAvIHBsb3RfY29scyldW2kgJSBwbG90X2NvbHNdKQogICAgICAgICAgICBpICs9IDEKICAgICAgICBleHRyYV9kYXRhWyJ2aW9saW4iXSA9IGNvbnRleHQubG9nX2FydGlmYWN0KAogICAgICAgICAgICBQbG90QXJ0aWZhY3QoInZpb2xpbiIsIGJvZHk9cGx0LmdjZigpLCB0aXRsZT0iVmlvbGluIFBsb3QiKSwKICAgICAgICAgICAgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS92aW9saW4uaHRtbCIsCiAgICAgICAgICAgIGRiX2tleT1GYWxzZSwKICAgICAgICApCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgY29udGV4dC5sb2dnZXIud2FybihmIkZhaWxlZCB0byBjcmVhdGUgdmlvbGluIGRpc3RyaWJ1dGlvbiBwbG90cyBkdWUgdG86IHtlfSIpCgogICAgaWYgbGFiZWxfY29sdW1uOgogICAgICAgIGxhYmVscyA9IGRmLnBvcChsYWJlbF9jb2x1bW4pCiAgICAgICAgaW1idGFibGUgPSBsYWJlbHMudmFsdWVfY291bnRzKG5vcm1hbGl6ZT1UcnVlKS5zb3J0X2luZGV4KCkKICAgICAgICB0cnk6CiAgICAgICAgICAgIGdjZl9jbGVhcihwbHQpCiAgICAgICAgICAgIGJhbGFuY2ViYXIgPSBpbWJ0YWJsZS5wbG90KGtpbmQ9ImJhciIsIHRpdGxlPSJjbGFzcyBpbWJhbGFuY2UgLSBsYWJlbHMiKQogICAgICAgICAgICBiYWxhbmNlYmFyLnNldF94bGFiZWwoImNsYXNzIikKICAgICAgICAgICAgYmFsYW5jZWJhci5zZXRfeWxhYmVsKCJwcm9wb3J0aW9uIG9mIHRvdGFsIikKICAgICAgICAgICAgZXh0cmFfZGF0YVsiaW1iYWxhbmNlIl0gPSBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICAgICAgICAgIFBsb3RBcnRpZmFjdCgiaW1iYWxhbmNlIiwgYm9keT1wbHQuZ2NmKCkpLAogICAgICAgICAgICAgICAgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS9pbWJhbGFuY2UuaHRtbCIsCiAgICAgICAgICAgICkKICAgICAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgICAgIGNvbnRleHQubG9nZ2VyLndhcm4oZiJGYWlsZWQgdG8gY3JlYXRlIGNsYXNzIGltYmFsYW5jZSBwbG90IGR1ZSB0bzoge2V9IikKICAgICAgICBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICAgICAgVGFibGVBcnRpZmFjdCgKICAgICAgICAgICAgICAgICJpbWJhbGFuY2Utd2VpZ2h0cy12ZWMiLCBkZj1wZC5EYXRhRnJhbWUoeyJ3ZWlnaHRzIjogaW1idGFibGV9KQogICAgICAgICAgICApLAogICAgICAgICAgICBsb2NhbF9wYXRoPWYie3Bsb3RzX2Rlc3R9L2ltYmFsYW5jZS13ZWlnaHRzLXZlYy5jc3YiLAogICAgICAgICAgICBkYl9rZXk9RmFsc2UsCiAgICAgICAgKQoKICAgIHRibGNvcnIgPSBkZi5jb3JyKCkKICAgIG1hc2sgPSBucC56ZXJvc19saWtlKHRibGNvcnIsIGR0eXBlPW5wLmJvb2wpCiAgICBtYXNrW25wLnRyaXVfaW5kaWNlc19mcm9tKG1hc2spXSA9IFRydWUKCiAgICBkZmNvcnIgPSBwZC5EYXRhRnJhbWUoZGF0YT10Ymxjb3JyLCBjb2x1bW5zPWhlYWRlciwgaW5kZXg9aGVhZGVyKQogICAgZGZjb3JyID0gZGZjb3JyW25wLmFyYW5nZShkZmNvcnIuc2hhcGVbMF0pWzosIE5vbmVdID4gbnAuYXJhbmdlKGRmY29yci5zaGFwZVsxXSldCiAgICBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICBUYWJsZUFydGlmYWN0KCJjb3JyZWxhdGlvbi1tYXRyaXgiLCBkZj10Ymxjb3JyLCB2aXNpYmxlPVRydWUpLAogICAgICAgIGxvY2FsX3BhdGg9ZiJ7cGxvdHNfZGVzdH0vY29ycmVsYXRpb24tbWF0cml4LmNzdiIsCiAgICAgICAgZGJfa2V5PUZhbHNlLAogICAgKQoKICAgIHRyeToKICAgICAgICBnY2ZfY2xlYXIocGx0KQogICAgICAgIGF4ID0gcGx0LmF4ZXMoKQogICAgICAgIHNucy5oZWF0bWFwKHRibGNvcnIsIGF4PWF4LCBtYXNrPW1hc2ssIGFubm90PUZhbHNlLCBjbWFwPXBsdC5jbS5SZWRzKQogICAgICAgIGF4LnNldF90aXRsZSgiZmVhdHVyZXMgY29ycmVsYXRpb24iKQogICAgICAgIGV4dHJhX2RhdGFbImNvcnJlbGF0aW9uIl0gPSBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICAgICAgUGxvdEFydGlmYWN0KCJjb3JyZWxhdGlvbiIsIGJvZHk9cGx0LmdjZigpLCB0aXRsZT0iQ29ycmVsYXRpb24gTWF0cml4IiksCiAgICAgICAgICAgIGxvY2FsX3BhdGg9ZiJ7cGxvdHNfZGVzdH0vY29yci5odG1sIiwKICAgICAgICAgICAgZGJfa2V5PUZhbHNlLAogICAgICAgICkKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICBjb250ZXh0LmxvZ2dlci53YXJuKGYiRmFpbGVkIHRvIGNyZWF0ZSBmZWF0dXJlcyBjb3JyZWxhdGlvbiBwbG90IGR1ZSB0bzoge2V9IikKCiAgICBnY2ZfY2xlYXIocGx0KQogICAgaWYgdXBkYXRlX2RhdGFzZXQgYW5kIHRhYmxlLm1ldGEgYW5kIHRhYmxlLm1ldGEua2luZCA9PSAiZGF0YXNldCI6CiAgICAgICAgZnJvbSBtbHJ1bi5hcnRpZmFjdHMgaW1wb3J0IHVwZGF0ZV9kYXRhc2V0X21ldGEKCiAgICAgICAgdXBkYXRlX2RhdGFzZXRfbWV0YSh0YWJsZS5tZXRhLCBleHRyYV9kYXRhPWV4dHJhX2RhdGEpCg==",
          "commands": []
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "xgb-trainer",
        "tag": "",
        "hash": "6c3a266a0651c15997d0ff906aa26a20f2fef2f8",
        "project": "churn-project-admin",
        "labels": {
          "author": "Daniel"
        },
        "categories": [
          "model-training"
        ],
        "updated": "2021-09-03T14:02:00.207532+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/ml-models",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "name": "v3io",
            "mountPath": "/v3io"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "train_model",
        "entry_points": {
          "train_model": {
            "name": "train_model",
            "doc": "train an xgboost model.\n\nNote on imabalanced data:  the `imbal_vec` parameter represents the measured\nclass representations in the sample and can be used as a first step in tuning\nan XGBoost model.  This isn't a hyperparamter, merely an estimate that should\nbe set as 'constant' throughout tuning process.",
            "parameters": [
              {
                "name": "context",
                "type": "MLClientCtx",
                "doc": "the function context",
                "default": ""
              },
              {
                "name": "model_type",
                "type": "str",
                "doc": "the model type to train, \"classifier\", \"regressor\"...",
                "default": ""
              },
              {
                "name": "dataset",
                "type": "Union[DataItem, DataFrame]",
                "doc": "(\"data\") name of raw data file",
                "default": ""
              },
              {
                "name": "label_column",
                "type": "str",
                "doc": "ground-truth (y) labels",
                "default": "labels"
              },
              {
                "name": "encode_cols",
                "type": "dict",
                "doc": "dictionary of names and prefixes for columns that are to hot be encoded.",
                "default": {}
              },
              {
                "name": "sample",
                "type": "int",
                "doc": "Selects the first n rows, or select a sample starting from the first. If negative <-1, select a random sample",
                "default": "<_ast.USub object at 0x7f66a8fbc7b8>"
              },
              {
                "name": "imbal_vec",
                "doc": "([]) vector of class weights seen in sample",
                "default": []
              },
              {
                "name": "test_size",
                "type": "float",
                "doc": "(0.05) test set size",
                "default": 0.25
              },
              {
                "name": "valid_size",
                "type": "float",
                "doc": "(0.75) Once the test set has been removed the training set gets this proportion.",
                "default": 0.75
              },
              {
                "name": "random_state",
                "type": "int",
                "doc": "(1) sklearn rng seed",
                "default": 1
              },
              {
                "name": "models_dest",
                "type": "str",
                "doc": "destination subfolder for model artifacts",
                "default": "models"
              },
              {
                "name": "plots_dest",
                "type": "str",
                "doc": "destination subfolder for plot artifacts",
                "default": "plots"
              },
              {
                "name": "eval_metrics",
                "type": "list",
                "doc": "([\"error\", \"auc\"]) learning curve metrics",
                "default": [
                  "error",
                  "auc"
                ]
              },
              {
                "name": "file_ext",
                "type": "str",
                "doc": "format for test_set_key hold out data",
                "default": "parquet"
              },
              {
                "name": "test_set",
                "type": "str",
                "default": "test_set"
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 57
          }
        },
        "description": "train multiple model types using xgboost.",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHdhcm5pbmdzCgp3YXJuaW5ncy5zaW1wbGVmaWx0ZXIoYWN0aW9uPSJpZ25vcmUiLCBjYXRlZ29yeT1GdXR1cmVXYXJuaW5nKQoKZnJvbSBtbHJ1bi5tbHV0aWxzLmRhdGEgaW1wb3J0IGdldF9zYW1wbGUsIGdldF9zcGxpdHMKZnJvbSBtbHJ1bi5tbHV0aWxzLm1vZGVscyBpbXBvcnQgZ2VuX3NrbGVhcm5fbW9kZWwsIGV2YWxfbW9kZWxfdjIKZnJvbSBtbHJ1bi51dGlscy5oZWxwZXJzIGltcG9ydCBjcmVhdGVfY2xhc3MKCmZyb20gbWxydW4uZXhlY3V0aW9uIGltcG9ydCBNTENsaWVudEN0eApmcm9tIG1scnVuLmRhdGFzdG9yZSBpbXBvcnQgRGF0YUl0ZW0KCmZyb20gY2xvdWRwaWNrbGUgaW1wb3J0IGR1bXBzCmltcG9ydCBwYW5kYXMgYXMgcGQKaW1wb3J0IG9zCmZyb20gdHlwaW5nIGltcG9ydCBVbmlvbgoKCmRlZiBfZ2VuX3hnYl9tb2RlbChtb2RlbF90eXBlOiBzdHIsIHhnYl9wYXJhbXM6IGRpY3QpOgogICAgIiIiZ2VuZXJhdGUgYW4geGdib29zdCBtb2RlbAoKICAgIE11bHRpcGxlIG1vZGVsIHR5cGVzIHRoYXQgY2FuIGJlIGVzdGltYXRlZCB1c2luZwogICAgdGhlIFhHQm9vc3QgU2Npa2l0LUxlYXJuIEFQSS4KCiAgICBJbnB1dCBjYW4gZWl0aGVyIGJlIGEgcHJlZGVmaW5lZCBqc29uIG1vZGVsIGNvbmZpZ3VyYXRpb24gb3Igb25lCiAgICBvZiB0aGUgZml2ZSB4Z2Jvb3N0IG1vZGVsIHR5cGVzOiAiY2xhc3NpZmllciIsICJyZWdyZXNzb3IiLCAicmFua2VyIiwKICAgICJyZl9jbGFzc2lmaWVyIiwgb3IgInJmX3JlZ3Jlc3NvciIuCgogICAgSW4gZWl0aGVyIGNhc2Ugb25lIGNhbiBwYXNzIGluIGEgcGFyYW1zIGRpY3QgdG8gbW9kaWZ5IGRlZmF1bHRzIHZhbHVlcy4KCiAgICBCYXNlZCBvbiBgbWx1dGlscy5tb2RlbHMuZ2VuX3NrbGVhcm5fbW9kZWxgLCBzZWUgdGhlIGZ1bmN0aW9uCiAgICBgc2tsZWFybl9jbGFzc2lmaWVyYCBpbiB0aGlzIHJlcG9zaXRvcnkuCgogICAgOnBhcmFtIG1vZGVsX3R5cGU6IG9uZSBvZiAiY2xhc3NpZmllciIsICJyZWdyZXNzb3IiLAogICAgICAgICAgICAgICAgICAgICAgICJyYW5rZXIiLCAicmZfY2xhc3NpZmllciIsIG9yCiAgICAgICAgICAgICAgICAgICAgICAicmZfcmVncmVzc29yIgogICAgOnBhcmFtIHhnYl9wYXJhbXM6IGNsYXNzIGluaXQgcGFyYW1ldGVycwogICAgIiIiCiAgICBtdHlwZXMgPSB7CiAgICAgICAgImNsYXNzaWZpZXIiOiAieGdib29zdC5YR0JDbGFzc2lmaWVyIiwKICAgICAgICAicmVncmVzc29yIjogInhnYm9vc3QuWEdCUmVncmVzc29yIiwKICAgICAgICAicmFua2VyIjogInhnYm9vc3QuWEdCUmFua2VyIiwKICAgICAgICAicmZfY2xhc3NpZmllciI6ICJ4Z2Jvb3N0LlhHQlJGQ2xhc3NpZmllciIsCiAgICAgICAgInJmX3JlZ3Jlc3NvciI6ICJ4Z2Jvb3N0LlhHQlJGUmVncmVzc29yIiwKICAgIH0KICAgIGlmIG1vZGVsX3R5cGUuZW5kc3dpdGgoImpzb24iKToKICAgICAgICBtb2RlbF9jb25maWcgPSBtb2RlbF90eXBlCiAgICBlbGlmIG1vZGVsX3R5cGUgaW4gbXR5cGVzLmtleXMoKToKICAgICAgICBtb2RlbF9jb25maWcgPSBtdHlwZXNbbW9kZWxfdHlwZV0KICAgIGVsc2U6CiAgICAgICAgcmFpc2UgRXhjZXB0aW9uKCJ1bnJlY29nbml6ZWQgbW9kZWwgdHlwZSwgc2VlIGhlbHAgZG9jdW1lbnRhdGlvbiIpCgogICAgcmV0dXJuIGdlbl9za2xlYXJuX21vZGVsKG1vZGVsX2NvbmZpZywgeGdiX3BhcmFtcykKCgpkZWYgdHJhaW5fbW9kZWwoCiAgICBjb250ZXh0OiBNTENsaWVudEN0eCwKICAgIG1vZGVsX3R5cGU6IHN0ciwKICAgIGRhdGFzZXQ6IFVuaW9uW0RhdGFJdGVtLCBwZC5jb3JlLmZyYW1lLkRhdGFGcmFtZV0sCiAgICBsYWJlbF9jb2x1bW46IHN0ciA9ICJsYWJlbHMiLAogICAgZW5jb2RlX2NvbHM6IGRpY3QgPSB7fSwKICAgIHNhbXBsZTogaW50ID0gLTEsCiAgICBpbWJhbF92ZWM9W10sCiAgICB0ZXN0X3NpemU6IGZsb2F0ID0gMC4yNSwKICAgIHZhbGlkX3NpemU6IGZsb2F0ID0gMC43NSwKICAgIHJhbmRvbV9zdGF0ZTogaW50ID0gMSwKICAgIG1vZGVsc19kZXN0OiBzdHIgPSAibW9kZWxzIiwKICAgIHBsb3RzX2Rlc3Q6IHN0ciA9ICJwbG90cyIsCiAgICBldmFsX21ldHJpY3M6IGxpc3QgPSBbImVycm9yIiwgImF1YyJdLAogICAgZmlsZV9leHQ6IHN0ciA9ICJwYXJxdWV0IiwKICAgIHRlc3Rfc2V0OiBzdHIgPSAidGVzdF9zZXQiLAopIC0+IE5vbmU6CiAgICAiIiJ0cmFpbiBhbiB4Z2Jvb3N0IG1vZGVsLgoKICAgIE5vdGUgb24gaW1hYmFsYW5jZWQgZGF0YTogIHRoZSBgaW1iYWxfdmVjYCBwYXJhbWV0ZXIgcmVwcmVzZW50cyB0aGUgbWVhc3VyZWQKICAgIGNsYXNzIHJlcHJlc2VudGF0aW9ucyBpbiB0aGUgc2FtcGxlIGFuZCBjYW4gYmUgdXNlZCBhcyBhIGZpcnN0IHN0ZXAgaW4gdHVuaW5nCiAgICBhbiBYR0Jvb3N0IG1vZGVsLiAgVGhpcyBpc24ndCBhIGh5cGVycGFyYW10ZXIsIG1lcmVseSBhbiBlc3RpbWF0ZSB0aGF0IHNob3VsZAogICAgYmUgc2V0IGFzICdjb25zdGFudCcgdGhyb3VnaG91dCB0dW5pbmcgcHJvY2Vzcy4KCiAgICA6cGFyYW0gY29udGV4dDogICAgICAgICAgIHRoZSBmdW5jdGlvbiBjb250ZXh0CiAgICA6cGFyYW0gbW9kZWxfdHlwZTogICAgICAgIHRoZSBtb2RlbCB0eXBlIHRvIHRyYWluLCAiY2xhc3NpZmllciIsICJyZWdyZXNzb3IiLi4uCiAgICA6cGFyYW0gZGF0YXNldDogICAgICAgICAgICgiZGF0YSIpIG5hbWUgb2YgcmF3IGRhdGEgZmlsZQogICAgOnBhcmFtIGxhYmVsX2NvbHVtbjogICAgICBncm91bmQtdHJ1dGggKHkpIGxhYmVscwogICAgOnBhcmFtIGVuY29kZV9jb2xzOiAgICAgICBkaWN0aW9uYXJ5IG9mIG5hbWVzIGFuZCBwcmVmaXhlcyBmb3IgY29sdW1ucyB0aGF0IGFyZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBob3QgYmUgZW5jb2RlZC4KICAgIDpwYXJhbSBzYW1wbGU6ICAgICAgICAgICAgU2VsZWN0cyB0aGUgZmlyc3QgbiByb3dzLCBvciBzZWxlY3QgYSBzYW1wbGUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnRpbmcgZnJvbSB0aGUgZmlyc3QuIElmIG5lZ2F0aXZlIDwtMSwgc2VsZWN0CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGEgcmFuZG9tIHNhbXBsZQogICAgOnBhcmFtIGltYmFsX3ZlYzogICAgICAgICAoW10pIHZlY3RvciBvZiBjbGFzcyB3ZWlnaHRzIHNlZW4gaW4gc2FtcGxlCiAgICA6cGFyYW0gdGVzdF9zaXplOiAgICAgICAgICgwLjA1KSB0ZXN0IHNldCBzaXplCiAgICA6cGFyYW0gdmFsaWRfc2l6ZTogICAgICAgICgwLjc1KSBPbmNlIHRoZSB0ZXN0IHNldCBoYXMgYmVlbiByZW1vdmVkIHRoZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFpbmluZyBzZXQgZ2V0cyB0aGlzIHByb3BvcnRpb24uCiAgICA6cGFyYW0gcmFuZG9tX3N0YXRlOiAgICAgICgxKSBza2xlYXJuIHJuZyBzZWVkCiAgICA6cGFyYW0gbW9kZWxzX2Rlc3Q6ICAgICAgIGRlc3RpbmF0aW9uIHN1YmZvbGRlciBmb3IgbW9kZWwgYXJ0aWZhY3RzCiAgICA6cGFyYW0gcGxvdHNfZGVzdDogICAgICAgIGRlc3RpbmF0aW9uIHN1YmZvbGRlciBmb3IgcGxvdCBhcnRpZmFjdHMKICAgIDpwYXJhbSBldmFsX21ldHJpY3M6ICAgICAgKFsiZXJyb3IiLCAiYXVjIl0pIGxlYXJuaW5nIGN1cnZlIG1ldHJpY3MKICAgIDpwYXJhbSBmaWxlX2V4dDogICAgICAgICAgZm9ybWF0IGZvciB0ZXN0X3NldF9rZXkgaG9sZCBvdXQgZGF0YQogICAgOnBhcmFtIHRlc3Qtc2V0OiAgICAgICAgICAodGVzdF9zZXQpIGtleSBvZiBoZWxkIG91dCBkYXRhIGluIGFydGlmYWN0IHN0b3JlCiAgICAiIiIKICAgIG1vZGVsc19kZXN0ID0gbW9kZWxzX2Rlc3Qgb3IgIm1vZGVscyIKICAgIHBsb3RzX2Rlc3QgPSBwbG90c19kZXN0IG9yIGYicGxvdHMve2NvbnRleHQubmFtZX0iCgogICAgcmF3LCBsYWJlbHMsIGhlYWRlciA9IGdldF9zYW1wbGUoZGF0YXNldCwgc2FtcGxlLCBsYWJlbF9jb2x1bW4pCgogICAgaWYgZW5jb2RlX2NvbHM6CiAgICAgICAgcmF3ID0gcGQuZ2V0X2R1bW1pZXMoCiAgICAgICAgICAgIHJhdywKICAgICAgICAgICAgY29sdW1ucz1saXN0KGVuY29kZV9jb2xzLmtleXMoKSksCiAgICAgICAgICAgIHByZWZpeD1saXN0KGVuY29kZV9jb2xzLnZhbHVlcygpKSwKICAgICAgICAgICAgZHJvcF9maXJzdD1UcnVlLAogICAgICAgICkKCiAgICAoeHRyYWluLCB5dHJhaW4pLCAoeHZhbGlkLCB5dmFsaWQpLCAoeHRlc3QsIHl0ZXN0KSA9IGdldF9zcGxpdHMoCiAgICAgICAgcmF3LCBsYWJlbHMsIDMsIHRlc3Rfc2l6ZSwgdmFsaWRfc2l6ZSwgcmFuZG9tX3N0YXRlCiAgICApCgogICAgY29udGV4dC5sb2dfZGF0YXNldCgKICAgICAgICB0ZXN0X3NldCwgZGY9cGQuY29uY2F0KFt4dGVzdCwgeXRlc3RdLCBheGlzPTEpLCBmb3JtYXQ9ZmlsZV9leHQsIGluZGV4PUZhbHNlCiAgICApCgogICAgbW9kZWxfY29uZmlnID0gX2dlbl94Z2JfbW9kZWwobW9kZWxfdHlwZSwgY29udGV4dC5wYXJhbWV0ZXJzLml0ZW1zKCkpCgogICAgWEdCQm9vc3RDbGFzcyA9IGNyZWF0ZV9jbGFzcyhtb2RlbF9jb25maWdbIk1FVEEiXVsiY2xhc3MiXSkKICAgIG1vZGVsID0gWEdCQm9vc3RDbGFzcygqKm1vZGVsX2NvbmZpZ1siQ0xBU1MiXSkKCiAgICBtb2RlbF9jb25maWdbIkZJVCJdLnVwZGF0ZSgKICAgICAgICB7CiAgICAgICAgICAgICJYIjogeHRyYWluLAogICAgICAgICAgICAieSI6IHl0cmFpbi52YWx1ZXMsCiAgICAgICAgICAgICJldmFsX3NldCI6IFsoeHRyYWluLCB5dHJhaW4pLCAoeHZhbGlkLCB5dmFsaWQpXSwKICAgICAgICAgICAgImV2YWxfbWV0cmljIjogZXZhbF9tZXRyaWNzLAogICAgICAgIH0KICAgICkKCiAgICBtb2RlbC5maXQoKiptb2RlbF9jb25maWdbIkZJVCJdKQoKICAgIGV2YWxfbWV0cmljcyA9IGV2YWxfbW9kZWxfdjIoY29udGV4dCwgeHZhbGlkLCB5dmFsaWQsIG1vZGVsKQoKICAgIG1vZGVsX2JpbiA9IGR1bXBzKG1vZGVsKQogICAgY29udGV4dC5sb2dfbW9kZWwoCiAgICAgICAgIm1vZGVsIiwKICAgICAgICBib2R5PW1vZGVsX2JpbiwKICAgICAgICBhcnRpZmFjdF9wYXRoPW9zLnBhdGguam9pbihjb250ZXh0LmFydGlmYWN0X3BhdGgsIG1vZGVsc19kZXN0KSwKICAgICAgICBtb2RlbF9maWxlPSJtb2RlbC5wa2wiLAogICAgKQo=",
          "commands": []
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "coxph-test",
        "tag": "",
        "hash": "db03bf34035c61f9ece87e8aa2e6729677173c5b",
        "project": "churn-project-admin",
        "labels": {
          "author": "Iguazio",
          "framework": "survival"
        },
        "categories": [
          "machine-learning",
          "model-testing"
        ],
        "updated": "2021-09-03T14:02:08.179856+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/ml-models",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "name": "v3io",
            "mountPath": "/v3io"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "cox_test",
        "entry_points": {
          "cox_test": {
            "name": "cox_test",
            "doc": "Test one or more classifier models against held-out dataset\n\nUsing held-out test features, evaluates the peformance of the estimated model\n\nCan be part of a kubeflow pipeline as a test step that is run post EDA and\ntraining/validation cycles",
            "parameters": [
              {
                "name": "context",
                "doc": "the function context",
                "default": ""
              },
              {
                "name": "models_path",
                "type": "DataItem",
                "default": ""
              },
              {
                "name": "test_set",
                "type": "DataItem",
                "doc": "test features and labels",
                "default": ""
              },
              {
                "name": "label_column",
                "type": "str",
                "doc": "column name for ground truth labels",
                "default": ""
              },
              {
                "name": "plots_dest",
                "type": "str",
                "doc": "dir for test plots",
                "default": "plots"
              },
              {
                "name": "model_evaluator",
                "doc": "WIP: specific method to generate eval, passed in as string or available in this folder",
                "default": null
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 15
          }
        },
        "description": "Test cox proportional hazards model",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHdhcm5pbmdzCgp3YXJuaW5ncy5zaW1wbGVmaWx0ZXIoYWN0aW9uPSJpZ25vcmUiLCBjYXRlZ29yeT1GdXR1cmVXYXJuaW5nKQoKaW1wb3J0IG9zCmltcG9ydCBwYW5kYXMgYXMgcGQKZnJvbSBtbHJ1bi5kYXRhc3RvcmUgaW1wb3J0IERhdGFJdGVtCmZyb20gbWxydW4uYXJ0aWZhY3RzIGltcG9ydCBnZXRfbW9kZWwKZnJvbSBjbG91ZHBpY2tsZSBpbXBvcnQgbG9hZApmcm9tIG1scnVuLm1sdXRpbHMubW9kZWxzIGltcG9ydCBldmFsX2NsYXNzX21vZGVsCgoKZGVmIGNveF90ZXN0KAogICAgY29udGV4dCwKICAgIG1vZGVsc19wYXRoOiBEYXRhSXRlbSwKICAgIHRlc3Rfc2V0OiBEYXRhSXRlbSwKICAgIGxhYmVsX2NvbHVtbjogc3RyLAogICAgcGxvdHNfZGVzdDogc3RyID0gInBsb3RzIiwKICAgIG1vZGVsX2V2YWx1YXRvcj1Ob25lLAopIC0+IE5vbmU6CiAgICAiIiJUZXN0IG9uZSBvciBtb3JlIGNsYXNzaWZpZXIgbW9kZWxzIGFnYWluc3QgaGVsZC1vdXQgZGF0YXNldAoKICAgIFVzaW5nIGhlbGQtb3V0IHRlc3QgZmVhdHVyZXMsIGV2YWx1YXRlcyB0aGUgcGVmb3JtYW5jZSBvZiB0aGUgZXN0aW1hdGVkIG1vZGVsCgogICAgQ2FuIGJlIHBhcnQgb2YgYSBrdWJlZmxvdyBwaXBlbGluZSBhcyBhIHRlc3Qgc3RlcCB0aGF0IGlzIHJ1biBwb3N0IEVEQSBhbmQKICAgIHRyYWluaW5nL3ZhbGlkYXRpb24gY3ljbGVzCgogICAgOnBhcmFtIGNvbnRleHQ6ICAgICAgICAgdGhlIGZ1bmN0aW9uIGNvbnRleHQKICAgIDpwYXJhbSBtb2RlbF9maWxlOiAgICAgIG1vZGVsIGFydGlmYWN0IHRvIGJlIHRlc3RlZAogICAgOnBhcmFtIHRlc3Rfc2V0OiAgICAgICAgdGVzdCBmZWF0dXJlcyBhbmQgbGFiZWxzCiAgICA6cGFyYW0gbGFiZWxfY29sdW1uOiAgICBjb2x1bW4gbmFtZSBmb3IgZ3JvdW5kIHRydXRoIGxhYmVscwogICAgOnBhcmFtIHNjb3JlX21ldGhvZDogICAgZm9yIG11bHRpY2xhc3MgY2xhc3NpZmljYXRpb24KICAgIDpwYXJhbSBwbG90c19kZXN0OiAgICAgIGRpciBmb3IgdGVzdCBwbG90cwogICAgOnBhcmFtIG1vZGVsX2V2YWx1YXRvcjogV0lQOiBzcGVjaWZpYyBtZXRob2QgdG8gZ2VuZXJhdGUgZXZhbCwgcGFzc2VkIGluIGFzIHN0cmluZwogICAgICAgICAgICAgICAgICAgICAgICAgICAgb3IgYXZhaWxhYmxlIGluIHRoaXMgZm9sZGVyCiAgICAiIiIKICAgIHh0ZXN0ID0gdGVzdF9zZXQuYXNfZGYoKQogICAgeXRlc3QgPSB4dGVzdC5wb3AobGFiZWxfY29sdW1uKQoKICAgIG1vZGVsX2ZpbGUsIG1vZGVsX29iaiwgXyA9IGdldF9tb2RlbChtb2RlbHNfcGF0aC51cmwsIHN1ZmZpeD0iLnBrbCIpCiAgICBtb2RlbF9vYmogPSBsb2FkKG9wZW4oc3RyKG1vZGVsX2ZpbGUpLCAicmIiKSkKCiAgICB0cnk6CiAgICAgICAgaWYgbm90IG1vZGVsX2V2YWx1YXRvcjoKICAgICAgICAgICAgZXZhbF9tZXRyaWNzID0gZXZhbF9jbGFzc19tb2RlbChjb250ZXh0LCB4dGVzdCwgeXRlc3QsIG1vZGVsX29iaikKCiAgICAgICAgbW9kZWxfcGxvdHMgPSBldmFsX21ldHJpY3MucG9wKCJwbG90cyIpCiAgICAgICAgbW9kZWxfdGFibGVzID0gZXZhbF9tZXRyaWNzLnBvcCgidGFibGVzIikKICAgICAgICBmb3IgcGxvdCBpbiBtb2RlbF9wbG90czoKICAgICAgICAgICAgY29udGV4dC5sb2dfYXJ0aWZhY3QocGxvdCwgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS97cGxvdC5rZXl9Lmh0bWwiKQogICAgICAgIGZvciB0YmwgaW4gbW9kZWxfdGFibGVzOgogICAgICAgICAgICBjb250ZXh0LmxvZ19hcnRpZmFjdCh0YmwsIGxvY2FsX3BhdGg9ZiJ7cGxvdHNfZGVzdH0ve3Bsb3Qua2V5fS5jc3YiKQoKICAgICAgICBjb250ZXh0LmxvZ19yZXN1bHRzKGV2YWxfbWV0cmljcykKICAgIGV4Y2VwdDoKICAgICAgICBjb250ZXh0LmxvZ19kYXRhc2V0KAogICAgICAgICAgICAiY294LXRlc3Qtc3VtbWFyeSIsIGRmPW1vZGVsX29iai5zdW1tYXJ5LCBpbmRleD1UcnVlLCBmb3JtYXQ9ImNzdiIKICAgICAgICApCiAgICAgICAgY29udGV4dC5sb2dnZXIuaW5mbygiY294IHRlc3RlciBub3QgaW1wbGVtZW50ZWQiKQo=",
          "commands": []
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "xgb-test",
        "tag": "",
        "hash": "fbd2f0e6aeec67ddaa0ed56a7755d49475fff586",
        "project": "churn-project-admin",
        "labels": {
          "author": "Daniel",
          "framework": "xgboost"
        },
        "categories": [],
        "updated": "2021-09-03T14:02:15.268185+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/ml-models",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "name": "v3io",
            "mountPath": "/v3io"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "xgb_test",
        "description": "Test one or more classifier models against held-out dataset.",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHdhcm5pbmdzCgp3YXJuaW5ncy5zaW1wbGVmaWx0ZXIoYWN0aW9uPSJpZ25vcmUiLCBjYXRlZ29yeT1GdXR1cmVXYXJuaW5nKQoKaW1wb3J0IG9zCmltcG9ydCBwYW5kYXMgYXMgcGQKZnJvbSBtbHJ1bi5kYXRhc3RvcmUgaW1wb3J0IERhdGFJdGVtCmZyb20gbWxydW4uYXJ0aWZhY3RzIGltcG9ydCBnZXRfbW9kZWwKZnJvbSBjbG91ZHBpY2tsZSBpbXBvcnQgbG9hZAoKZnJvbSBtbHJ1bi5tbHV0aWxzLm1vZGVscyBpbXBvcnQgZXZhbF9tb2RlbF92MgoKCmRlZiB4Z2JfdGVzdCgKICAgIGNvbnRleHQsCiAgICBtb2RlbHNfcGF0aDogRGF0YUl0ZW0sCiAgICB0ZXN0X3NldDogRGF0YUl0ZW0sCiAgICBsYWJlbF9jb2x1bW46IHN0ciwKICAgIHBsb3RzX2Rlc3Q6IHN0ciA9ICJwbG90cyIsCiAgICBkZWZhdWx0X21vZGVsOiBzdHIgPSAibW9kZWwucGtsIiwKKSAtPiBOb25lOgogICAgIiIiVGVzdCBvbmUgb3IgbW9yZSBjbGFzc2lmaWVyIG1vZGVscyBhZ2FpbnN0IGhlbGQtb3V0IGRhdGFzZXQKCiAgICBVc2luZyBoZWxkLW91dCB0ZXN0IGZlYXR1cmVzLCBldmFsdWF0ZXMgdGhlIHBlZm9ybWFuY2Ugb2YgdGhlIGVzdGltYXRlZCBtb2RlbAoKICAgIENhbiBiZSBwYXJ0IG9mIGEga3ViZWZsb3cgcGlwZWxpbmUgYXMgYSB0ZXN0IHN0ZXAgdGhhdCBpcyBydW4gcG9zdCBFREEgYW5kCiAgICB0cmFpbmluZy92YWxpZGF0aW9uIGN5Y2xlcwoKICAgIDpwYXJhbSBjb250ZXh0OiAgICAgICAgIHRoZSBmdW5jdGlvbiBjb250ZXh0CiAgICA6cGFyYW0gbW9kZWxzX3BhdGg6ICAgICBtb2RlbCBhcnRpZmFjdCB0byBiZSB0ZXN0ZWQKICAgIDpwYXJhbSB0ZXN0X3NldDogICAgICAgIHRlc3QgZmVhdHVyZXMgYW5kIGxhYmVscwogICAgOnBhcmFtIGxhYmVsX2NvbHVtbjogICAgY29sdW1uIG5hbWUgZm9yIGdyb3VuZCB0cnV0aCBsYWJlbHMKICAgIDpwYXJhbSBwbG90c19kZXN0OiAgICAgIGRpciBmb3IgdGVzdCBwbG90cwogICAgOnBhcmFtIGRlZmF1bHRfbW9kZWw6ICAgJ21vZGVsLnBrbCcsIGRlZmF1bHQgbW9kZWwgYXJ0aWZhY3QgZmlsZSBuYW1lCiAgICAiIiIKICAgIHh0ZXN0ID0gdGVzdF9zZXQuYXNfZGYoKQogICAgeXRlc3QgPSB4dGVzdC5wb3AobGFiZWxfY29sdW1uKQoKICAgIHRyeToKICAgICAgICBtb2RlbF9maWxlLCBtb2RlbF9vYmosIF8gPSBnZXRfbW9kZWwobW9kZWxzX3BhdGgudXJsLCBzdWZmaXg9Ii5wa2wiKQogICAgICAgIG1vZGVsX29iaiA9IGxvYWQob3Blbihtb2RlbF9maWxlLCAicmIiKSkKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgYToKICAgICAgICByYWlzZSBFeGNlcHRpb24oIm1vZGVsIGxvY2F0aW9uIGxpa2VseSBtaXNzcGVjaWZpZWQiKQoKICAgIGV2YWxfbWV0cmljcyA9IGV2YWxfbW9kZWxfdjIoY29udGV4dCwgeHRlc3QsIHl0ZXN0LnZhbHVlcywgbW9kZWxfb2JqKQo=",
          "image": "",
          "base_image": "",
          "commands": []
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "xgb-test",
        "tag": "",
        "hash": "10357774d78252d5ec9b8122f35b458088d28cfd",
        "project": "churn-project-admin",
        "labels": {
          "author": "Daniel",
          "framework": "xgboost"
        },
        "categories": [
          "model-testing"
        ],
        "updated": "2021-09-16T07:47:04.729125+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/ml-models",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "name": "v3io",
            "mountPath": "/v3io"
          },
          {
            "name": "v3io",
            "mountPath": "/User"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "xgb_test",
        "entry_points": {
          "xgb_test": {
            "name": "xgb_test",
            "doc": "Test one or more classifier models against held-out dataset\n\nUsing held-out test features, evaluates the peformance of the estimated model\n\nCan be part of a kubeflow pipeline as a test step that is run post EDA and\ntraining/validation cycles",
            "parameters": [
              {
                "name": "context",
                "doc": "the function context",
                "default": ""
              },
              {
                "name": "models_path",
                "type": "DataItem",
                "doc": "model artifact to be tested",
                "default": ""
              },
              {
                "name": "test_set",
                "type": "DataItem",
                "doc": "test features and labels",
                "default": ""
              },
              {
                "name": "label_column",
                "type": "str",
                "doc": "column name for ground truth labels",
                "default": ""
              },
              {
                "name": "plots_dest",
                "type": "str",
                "doc": "dir for test plots",
                "default": "plots"
              },
              {
                "name": "default_model",
                "type": "str",
                "doc": "'model.pkl', default model artifact file name",
                "default": "model.pkl"
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 16
          }
        },
        "description": "Test one or more classifier models against held-out dataset.",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHdhcm5pbmdzCgp3YXJuaW5ncy5zaW1wbGVmaWx0ZXIoYWN0aW9uPSJpZ25vcmUiLCBjYXRlZ29yeT1GdXR1cmVXYXJuaW5nKQoKaW1wb3J0IG9zCmltcG9ydCBwYW5kYXMgYXMgcGQKZnJvbSBtbHJ1bi5kYXRhc3RvcmUgaW1wb3J0IERhdGFJdGVtCmZyb20gbWxydW4uYXJ0aWZhY3RzIGltcG9ydCBnZXRfbW9kZWwKZnJvbSBjbG91ZHBpY2tsZSBpbXBvcnQgbG9hZAoKZnJvbSBtbHJ1bi5tbHV0aWxzLm1vZGVscyBpbXBvcnQgZXZhbF9tb2RlbF92MgoKCmRlZiB4Z2JfdGVzdCgKICAgIGNvbnRleHQsCiAgICBtb2RlbHNfcGF0aDogRGF0YUl0ZW0sCiAgICB0ZXN0X3NldDogRGF0YUl0ZW0sCiAgICBsYWJlbF9jb2x1bW46IHN0ciwKICAgIHBsb3RzX2Rlc3Q6IHN0ciA9ICJwbG90cyIsCiAgICBkZWZhdWx0X21vZGVsOiBzdHIgPSAibW9kZWwucGtsIiwKKSAtPiBOb25lOgogICAgIiIiVGVzdCBvbmUgb3IgbW9yZSBjbGFzc2lmaWVyIG1vZGVscyBhZ2FpbnN0IGhlbGQtb3V0IGRhdGFzZXQKCiAgICBVc2luZyBoZWxkLW91dCB0ZXN0IGZlYXR1cmVzLCBldmFsdWF0ZXMgdGhlIHBlZm9ybWFuY2Ugb2YgdGhlIGVzdGltYXRlZCBtb2RlbAoKICAgIENhbiBiZSBwYXJ0IG9mIGEga3ViZWZsb3cgcGlwZWxpbmUgYXMgYSB0ZXN0IHN0ZXAgdGhhdCBpcyBydW4gcG9zdCBFREEgYW5kCiAgICB0cmFpbmluZy92YWxpZGF0aW9uIGN5Y2xlcwoKICAgIDpwYXJhbSBjb250ZXh0OiAgICAgICAgIHRoZSBmdW5jdGlvbiBjb250ZXh0CiAgICA6cGFyYW0gbW9kZWxzX3BhdGg6ICAgICBtb2RlbCBhcnRpZmFjdCB0byBiZSB0ZXN0ZWQKICAgIDpwYXJhbSB0ZXN0X3NldDogICAgICAgIHRlc3QgZmVhdHVyZXMgYW5kIGxhYmVscwogICAgOnBhcmFtIGxhYmVsX2NvbHVtbjogICAgY29sdW1uIG5hbWUgZm9yIGdyb3VuZCB0cnV0aCBsYWJlbHMKICAgIDpwYXJhbSBwbG90c19kZXN0OiAgICAgIGRpciBmb3IgdGVzdCBwbG90cwogICAgOnBhcmFtIGRlZmF1bHRfbW9kZWw6ICAgJ21vZGVsLnBrbCcsIGRlZmF1bHQgbW9kZWwgYXJ0aWZhY3QgZmlsZSBuYW1lCiAgICAiIiIKICAgIHh0ZXN0ID0gdGVzdF9zZXQuYXNfZGYoKQogICAgeXRlc3QgPSB4dGVzdC5wb3AobGFiZWxfY29sdW1uKQoKICAgIHRyeToKICAgICAgICBtb2RlbF9maWxlLCBtb2RlbF9vYmosIF8gPSBnZXRfbW9kZWwobW9kZWxzX3BhdGgudXJsLCBzdWZmaXg9Ii5wa2wiKQogICAgICAgIG1vZGVsX29iaiA9IGxvYWQob3Blbihtb2RlbF9maWxlLCAicmIiKSkKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgYToKICAgICAgICByYWlzZSBFeGNlcHRpb24oIm1vZGVsIGxvY2F0aW9uIGxpa2VseSBtaXNzcGVjaWZpZWQiKQoKICAgIGV2YWxfbWV0cmljcyA9IGV2YWxfbW9kZWxfdjIoY29udGV4dCwgeHRlc3QsIHl0ZXN0LnZhbHVlcywgbW9kZWxfb2JqKQo=",
          "commands": []
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "credentials": {
          "access_key": "test_key"
        },
        "labels": {},
        "name": "test-m",
        "tag": "",
        "project": "churn-project-admin",
        "hash": "8f4c94e1d638c26828abf1c12bd4b0a7c38ecbc3",
        "updated": "2021-10-13T10:33:40.546075+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "",
          "commands": [],
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ""
        },
        "default_class": "",
        "default_handler": "handler",
        "description": "",
        "env": [],
        "image": "mlrun/mlrun",
        "secret_sources": [],
        "volume_mounts": [],
        "volumes": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "disable_auto_mount": false
      },
      "status": null
    },
    {
      "kind": "serving",
      "metadata": {
        "name": "churn-server",
        "tag": "",
        "hash": "b877fb44f5eeec75bf8724dd5f9ecf21a29ecaf0",
        "project": "churn-project-admin",
        "labels": {
          "author": "Iguazio",
          "framework": "churn",
          "mlrun/class": "serving"
        },
        "categories": [
          "model-serving",
          "machine-learning"
        ],
        "updated": "2021-10-19T07:38:01.804056+00:00"
      },
      "spec": {
        "command": "http://default-tenant.app.vmdev36.lab.iguazeng.com:32535",
        "args": [],
        "image": "mlrun/ml-models",
        "description": "churn classification and predictor",
        "min_replicas": 1,
        "max_replicas": 4,
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "ENABLE_EXPLAINER",
            "value": "False"
          },
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          },
          {
            "name": "INFERENCE_STREAM",
            "value": "users/admin/artifacts/customer-churn-prediction/model_stream"
          },
          {
            "name": "MLRUN_K8S_SECRET__SF",
            "valueFrom": {
              "secretKeyRef": {
                "key": "sf",
                "name": "mlrun-project-secrets-churn-project-admin"
              }
            }
          }
        ],
        "config": {
          "metadata.labels.author": "Iguazio",
          "metadata.labels.framework": "churn",
          "metadata.labels.mlrun/class": "serving",
          "spec.serviceType": "NodePort",
          "spec.minReplicas": 1,
          "spec.maxReplicas": 4
        },
        "base_spec": {
          "apiVersion": "nuclio.io/v1",
          "kind": "Function",
          "metadata": {
            "name": "churn-project-admin-churn-server-latest",
            "labels": {
              "author": "Iguazio",
              "framework": "churn",
              "mlrun/class": "serving",
              "nuclio.io/tag": "latest",
              "nuclio.io/project-name": "churn-project-admin"
            },
            "annotations": {
              "nuclio.io/generated_by": "function generated from /home/kali/functions/churn_server/churn_server.py"
            }
          },
          "spec": {
            "runtime": "python:3.6",
            "handler": "churn_server:handler",
            "env": [
              {
                "name": "ENABLE_EXPLAINER",
                "value": "False"
              },
              {
                "name": "V3IO_API",
                "value": "v3io-webapi.default-tenant.svc:8081"
              },
              {
                "name": "V3IO_USERNAME",
                "value": "admin"
              },
              {
                "name": "V3IO_ACCESS_KEY",
                "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              },
              {
                "name": "V3IO_FRAMESD",
                "value": "framesd:8081"
              },
              {
                "name": "INFERENCE_STREAM",
                "value": "users/admin/artifacts/customer-churn-prediction/model_stream"
              },
              {
                "name": "MLRUN_DEFAULT_PROJECT",
                "value": "churn-project-admin"
              },
              {
                "name": "MLRUN_DBPATH",
                "value": "./"
              },
              {
                "name": "MLRUN_NAMESPACE",
                "value": "default-tenant"
              },
              {
                "name": "SERVING_SPEC_ENV",
                "value": "{\"function_uri\": \"churn-project-admin/churn-server:latest\", \"version\": \"v2\", \"parameters\": {}, \"graph\": {\"kind\": \"router\", \"routes\": {\"churn_server_v1\": {\"kind\": \"task\", \"class_name\": \"ChurnModel\", \"class_args\": {\"model_path\": \"store://artifacts/churn-project-admin/current-state_model:eaae138e-439a-47fa-93c6-ba0fe1dc3b79\"}}, \"data_clean_model\": {\"kind\": \"task\", \"class_name\": \"ChurnModel\", \"class_args\": {\"model_path\": \"store://models/churn-project-admin/data_clean_model#0:latest@cbe8504d4efe4d40a0815acca24ce345\", \"a\": \"a\"}}}}, \"load_mode\": null, \"functions\": {}, \"graph_initializer\": null, \"error_stream\": null, \"track_models\": null, \"default_content_type\": null}"
              },
              {
                "name": "MLRUN_K8S_SECRET__SF",
                "valueFrom": {
                  "secretKeyRef": {
                    "key": "sf",
                    "name": "mlrun-project-secrets-churn-project-admin"
                  }
                }
              }
            ],
            "volumes": [
              {
                "volume": {
                  "flexVolume": {
                    "driver": "v3io/fuse",
                    "options": {
                      "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
                    }
                  },
                  "name": "v3io"
                },
                "volumeMount": {
                  "mountPath": "/v3io",
                  "name": "v3io",
                  "subPath": ""
                }
              },
              {
                "volume": {
                  "flexVolume": {
                    "driver": "v3io/fuse",
                    "options": {
                      "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
                    }
                  },
                  "name": "v3io"
                },
                "volumeMount": {
                  "mountPath": "/User",
                  "name": "v3io",
                  "subPath": "users/admin"
                }
              }
            ],
            "build": {
              "commands": [],
              "noBaseImagesPull": true,
              "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG51bXB5IGFzIG5wCmZyb20gY2xvdWRwaWNrbGUgaW1wb3J0IGxvYWQKCgppbXBvcnQgbWxydW4KCgpjbGFzcyBDaHVybk1vZGVsKG1scnVuLnNlcnZpbmcuVjJNb2RlbFNlcnZlcik6CiAgICBkZWYgbG9hZChzZWxmKToKICAgICAgICAiIiIKICAgICAgICBsb2FkIG11bHRpcGxlIG1vZGVscyBpbiBuZXN0ZWQgZm9sZGVycywgY2h1cm4gbW9kZWwgb25seQogICAgICAgICIiIgogICAgICAgIGNsZl9tb2RlbF9maWxlLCBleHRyYV9kYXRhID0gc2VsZi5nZXRfbW9kZWwoIi5wa2wiKQogICAgICAgIHNlbGYubW9kZWwgPSBsb2FkKG9wZW4oc3RyKGNsZl9tb2RlbF9maWxlKSwgInJiIikpCiAgICAgICAgaWYgImNveCIgaW4gZXh0cmFfZGF0YS5rZXlzKCk6CiAgICAgICAgICAgIGNveF9tb2RlbF9maWxlID0gZXh0cmFfZGF0YVsiY294Il0KICAgICAgICAgICAgc2VsZi5jb3hfbW9kZWwgPSBsb2FkKG9wZW4oc3RyKGNveF9tb2RlbF9maWxlKSwgInJiIikpCiAgICAgICAgICAgIGlmICJjb3gva20iIGluIGV4dHJhX2RhdGEua2V5cygpOgogICAgICAgICAgICAgICAga21fbW9kZWxfZmlsZSA9IGV4dHJhX2RhdGFbImNveC9rbSJdCiAgICAgICAgICAgICAgICBzZWxmLmttX21vZGVsID0gbG9hZChvcGVuKHN0cihrbV9tb2RlbF9maWxlKSwgInJiIikpCgogICAgZGVmIHByZWRpY3Qoc2VsZiwgYm9keSk6CiAgICAgICAgdHJ5OgogICAgICAgICAgICBmZWF0cyA9IG5wLmFzYXJyYXkoYm9keVsiaW5zdGFuY2VzIl0sIGR0eXBlPW5wLmZsb2F0MzIpLnJlc2hhcGUoLTEsIDIzKQogICAgICAgICAgICByZXN1bHQgPSBzZWxmLm1vZGVsLnByZWRpY3QoZmVhdHMsIHZhbGlkYXRlX2ZlYXR1cmVzPUZhbHNlKQogICAgICAgICAgICByZXR1cm4gcmVzdWx0LnRvbGlzdCgpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICByYWlzZSBFeGNlcHRpb24oIkZhaWxlZCB0byBwcmVkaWN0ICVzIiAlIGUpCgoKZnJvbSBtbHJ1bi5ydW50aW1lcyBpbXBvcnQgbnVjbGlvX2luaXRfaG9vawoKCmRlZiBpbml0X2NvbnRleHQoY29udGV4dCk6CiAgICBudWNsaW9faW5pdF9ob29rKGNvbnRleHQsIGdsb2JhbHMoKSwgInNlcnZpbmdfdjIiKQoKCmRlZiBoYW5kbGVyKGNvbnRleHQsIGV2ZW50KToKICAgIHJldHVybiBjb250ZXh0Lm1scnVuX2hhbmRsZXIoY29udGV4dCwgZXZlbnQpCgpmcm9tIG1scnVuLnJ1bnRpbWVzIGltcG9ydCBudWNsaW9faW5pdF9ob29rCmRlZiBpbml0X2NvbnRleHQoY29udGV4dCk6CiAgICBudWNsaW9faW5pdF9ob29rKGNvbnRleHQsIGdsb2JhbHMoKSwgJ3NlcnZpbmdfdjInKQoKZGVmIGhhbmRsZXIoY29udGV4dCwgZXZlbnQpOgogICAgcmV0dXJuIGNvbnRleHQubWxydW5faGFuZGxlcihjb250ZXh0LCBldmVudCkK",
              "baseImage": "mlrun/ml-models:0.8.0-rc7"
            },
            "serviceType": "NodePort",
            "minReplicas": 1,
            "maxReplicas": 4
          }
        },
        "source": "",
        "function_kind": "serving_v2",
        "graph": {
          "kind": "router",
          "routes": {
            "churn_server_v1": {
              "kind": "task",
              "class_name": "ChurnModel",
              "class_args": {
                "model_path": "store://artifacts/churn-project-admin/current-state_model:eaae138e-439a-47fa-93c6-ba0fe1dc3b79"
              }
            },
            "data_clean_model": {
              "kind": "task",
              "class_name": "ChurnModel",
              "class_args": {
                "model_path": "store://models/churn-project-admin/data_clean_model#0:latest@cbe8504d4efe4d40a0815acca24ce345",
                "a": "a"
              }
            }
          }
        },
        "default_class": "ChurnModel",
        "build": {
          "commands": []
        },
        "secret_sources": [],
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "serving",
      "metadata": {
        "name": "churn-server",
        "tag": "",
        "hash": "b76ac7fcdb0824db7639153ab4a3f1adb341adbe",
        "project": "churn-project-admin",
        "labels": {
          "author": "Iguazio",
          "framework": "churn",
          "mlrun/class": "serving"
        },
        "categories": [
          "model-serving",
          "machine-learning"
        ],
        "updated": "2021-11-02T08:00:39.037764+00:00"
      },
      "spec": {
        "command": "http://default-tenant.app.vmdev36.lab.iguazeng.com:32535",
        "args": [],
        "image": "mlrun/ml-models",
        "description": "churn classification and predictor",
        "min_replicas": 1,
        "max_replicas": 4,
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "ENABLE_EXPLAINER",
            "value": "False"
          },
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          },
          {
            "name": "INFERENCE_STREAM",
            "value": "users/admin/artifacts/customer-churn-prediction/model_stream"
          },
          {
            "name": "MLRUN_K8S_SECRET__SF",
            "valueFrom": {
              "secretKeyRef": {
                "key": "sf",
                "name": "mlrun-project-secrets-churn-project-admin"
              }
            }
          }
        ],
        "config": {
          "metadata.labels.author": "Iguazio",
          "metadata.labels.framework": "churn",
          "metadata.labels.mlrun/class": "serving",
          "spec.serviceType": "NodePort",
          "spec.minReplicas": 1,
          "spec.maxReplicas": 4
        },
        "base_spec": {
          "apiVersion": "nuclio.io/v1",
          "kind": "Function",
          "metadata": {
            "name": "churn-project-admin-churn-server-latest",
            "labels": {
              "author": "Iguazio",
              "framework": "churn",
              "mlrun/class": "serving",
              "nuclio.io/tag": "latest",
              "nuclio.io/project-name": "churn-project-admin"
            },
            "annotations": {
              "nuclio.io/generated_by": "function generated from /home/kali/functions/churn_server/churn_server.py"
            }
          },
          "spec": {
            "runtime": "python:3.6",
            "handler": "churn_server:handler",
            "env": [
              {
                "name": "ENABLE_EXPLAINER",
                "value": "False"
              },
              {
                "name": "V3IO_API",
                "value": "v3io-webapi.default-tenant.svc:8081"
              },
              {
                "name": "V3IO_USERNAME",
                "value": "admin"
              },
              {
                "name": "V3IO_ACCESS_KEY",
                "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              },
              {
                "name": "V3IO_FRAMESD",
                "value": "framesd:8081"
              },
              {
                "name": "INFERENCE_STREAM",
                "value": "users/admin/artifacts/customer-churn-prediction/model_stream"
              },
              {
                "name": "MLRUN_DEFAULT_PROJECT",
                "value": "churn-project-admin"
              },
              {
                "name": "MLRUN_DBPATH",
                "value": "./"
              },
              {
                "name": "MLRUN_NAMESPACE",
                "value": "default-tenant"
              },
              {
                "name": "SERVING_SPEC_ENV",
                "value": "{\"function_uri\": \"churn-project-admin/churn-server:latest\", \"version\": \"v2\", \"parameters\": {}, \"graph\": {\"kind\": \"router\", \"routes\": {\"churn_server_v1\": {\"kind\": \"task\", \"class_name\": \"ChurnModel\", \"class_args\": {\"model_path\": \"store://artifacts/churn-project-admin/current-state_model:eaae138e-439a-47fa-93c6-ba0fe1dc3b79\"}}, \"data_clean_model\": {\"kind\": \"task\", \"class_name\": \"ChurnModel\", \"class_args\": {\"model_path\": \"store://models/churn-project-admin/data_clean_model#0:latest@cbe8504d4efe4d40a0815acca24ce345\", \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\": \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"}}}}, \"load_mode\": null, \"functions\": {}, \"graph_initializer\": null, \"error_stream\": null, \"track_models\": null, \"default_content_type\": null}"
              },
              {
                "name": "MLRUN_K8S_SECRET__SF",
                "valueFrom": {
                  "secretKeyRef": {
                    "key": "sf",
                    "name": "mlrun-project-secrets-churn-project-admin"
                  }
                }
              }
            ],
            "volumes": [
              {
                "volume": {
                  "flexVolume": {
                    "driver": "v3io/fuse",
                    "options": {
                      "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
                    }
                  },
                  "name": "v3io"
                },
                "volumeMount": {
                  "mountPath": "/v3io",
                  "name": "v3io",
                  "subPath": ""
                }
              },
              {
                "volume": {
                  "flexVolume": {
                    "driver": "v3io/fuse",
                    "options": {
                      "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
                    }
                  },
                  "name": "v3io"
                },
                "volumeMount": {
                  "mountPath": "/User",
                  "name": "v3io",
                  "subPath": "users/admin"
                }
              }
            ],
            "build": {
              "commands": [],
              "noBaseImagesPull": true,
              "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG51bXB5IGFzIG5wCmZyb20gY2xvdWRwaWNrbGUgaW1wb3J0IGxvYWQKCgppbXBvcnQgbWxydW4KCgpjbGFzcyBDaHVybk1vZGVsKG1scnVuLnNlcnZpbmcuVjJNb2RlbFNlcnZlcik6CiAgICBkZWYgbG9hZChzZWxmKToKICAgICAgICAiIiIKICAgICAgICBsb2FkIG11bHRpcGxlIG1vZGVscyBpbiBuZXN0ZWQgZm9sZGVycywgY2h1cm4gbW9kZWwgb25seQogICAgICAgICIiIgogICAgICAgIGNsZl9tb2RlbF9maWxlLCBleHRyYV9kYXRhID0gc2VsZi5nZXRfbW9kZWwoIi5wa2wiKQogICAgICAgIHNlbGYubW9kZWwgPSBsb2FkKG9wZW4oc3RyKGNsZl9tb2RlbF9maWxlKSwgInJiIikpCiAgICAgICAgaWYgImNveCIgaW4gZXh0cmFfZGF0YS5rZXlzKCk6CiAgICAgICAgICAgIGNveF9tb2RlbF9maWxlID0gZXh0cmFfZGF0YVsiY294Il0KICAgICAgICAgICAgc2VsZi5jb3hfbW9kZWwgPSBsb2FkKG9wZW4oc3RyKGNveF9tb2RlbF9maWxlKSwgInJiIikpCiAgICAgICAgICAgIGlmICJjb3gva20iIGluIGV4dHJhX2RhdGEua2V5cygpOgogICAgICAgICAgICAgICAga21fbW9kZWxfZmlsZSA9IGV4dHJhX2RhdGFbImNveC9rbSJdCiAgICAgICAgICAgICAgICBzZWxmLmttX21vZGVsID0gbG9hZChvcGVuKHN0cihrbV9tb2RlbF9maWxlKSwgInJiIikpCgogICAgZGVmIHByZWRpY3Qoc2VsZiwgYm9keSk6CiAgICAgICAgdHJ5OgogICAgICAgICAgICBmZWF0cyA9IG5wLmFzYXJyYXkoYm9keVsiaW5zdGFuY2VzIl0sIGR0eXBlPW5wLmZsb2F0MzIpLnJlc2hhcGUoLTEsIDIzKQogICAgICAgICAgICByZXN1bHQgPSBzZWxmLm1vZGVsLnByZWRpY3QoZmVhdHMsIHZhbGlkYXRlX2ZlYXR1cmVzPUZhbHNlKQogICAgICAgICAgICByZXR1cm4gcmVzdWx0LnRvbGlzdCgpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICByYWlzZSBFeGNlcHRpb24oIkZhaWxlZCB0byBwcmVkaWN0ICVzIiAlIGUpCgoKZnJvbSBtbHJ1bi5ydW50aW1lcyBpbXBvcnQgbnVjbGlvX2luaXRfaG9vawoKCmRlZiBpbml0X2NvbnRleHQoY29udGV4dCk6CiAgICBudWNsaW9faW5pdF9ob29rKGNvbnRleHQsIGdsb2JhbHMoKSwgInNlcnZpbmdfdjIiKQoKCmRlZiBoYW5kbGVyKGNvbnRleHQsIGV2ZW50KToKICAgIHJldHVybiBjb250ZXh0Lm1scnVuX2hhbmRsZXIoY29udGV4dCwgZXZlbnQpCgpmcm9tIG1scnVuLnJ1bnRpbWVzIGltcG9ydCBudWNsaW9faW5pdF9ob29rCmRlZiBpbml0X2NvbnRleHQoY29udGV4dCk6CiAgICBudWNsaW9faW5pdF9ob29rKGNvbnRleHQsIGdsb2JhbHMoKSwgJ3NlcnZpbmdfdjInKQoKZGVmIGhhbmRsZXIoY29udGV4dCwgZXZlbnQpOgogICAgcmV0dXJuIGNvbnRleHQubWxydW5faGFuZGxlcihjb250ZXh0LCBldmVudCkK",
              "baseImage": "mlrun/ml-models:0.8.0-rc7"
            },
            "serviceType": "NodePort",
            "minReplicas": 1,
            "maxReplicas": 4
          }
        },
        "source": "",
        "function_kind": "serving_v2",
        "graph": {
          "kind": "router",
          "routes": {
            "churn_server_v1": {
              "kind": "task",
              "class_name": "ChurnModel",
              "class_args": {
                "model_path": "store://artifacts/churn-project-admin/current-state_model:eaae138e-439a-47fa-93c6-ba0fe1dc3b79"
              }
            },
            "data_clean_model": {
              "kind": "task",
              "class_name": "ChurnModel",
              "class_args": {
                "model_path": "store://models/churn-project-admin/data_clean_model#0:latest@cbe8504d4efe4d40a0815acca24ce345",
                "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
              }
            }
          }
        },
        "default_class": "ChurnModel",
        "build": {
          "commands": []
        },
        "secret_sources": [],
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "serving",
      "metadata": {
        "name": "churn-server",
        "tag": "latest",
        "hash": "4b99b2dde42f0634278d1fa6d4f1d91bba781d26",
        "project": "churn-project-admin",
        "labels": {
          "author": "Iguazio",
          "framework": "churn",
          "mlrun/class": "serving"
        },
        "categories": [
          "model-serving",
          "machine-learning"
        ],
        "updated": "2021-11-08T16:23:10.167494+00:00",
        "credentials": {
          "access_key": "$generate"
        }
      },
      "spec": {
        "command": "http://default-tenant.app.vmdev36.lab.iguazeng.com:32535",
        "args": [],
        "image": "mlrun/ml-models",
        "description": "churn classification and predictor",
        "min_replicas": 1,
        "max_replicas": 4,
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "name": "v3io",
            "mountPath": "/v3io"
          }
        ],
        "env": [
          {
            "name": "ENABLE_EXPLAINER",
            "value": "False"
          },
          {
            "name": "V3IO_API",
            "value": "http://v3io-webapi:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "1bc19fc2-2089-4c9c-a622-2eaa9868382c"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "http://framesd:8080"
          },
          {
            "name": "INFERENCE_STREAM",
            "value": "users/admin/artifacts/customer-churn-prediction/model_stream"
          },
          {
            "name": "MLRUN_K8S_SECRET__SF",
            "valueFrom": {
              "secretKeyRef": {
                "key": "sf",
                "name": "mlrun-project-secrets-churn-project-admin"
              }
            }
          }
        ],
        "config": {
          "metadata.labels.author": "Iguazio",
          "metadata.labels.framework": "churn",
          "metadata.labels.mlrun/class": "serving",
          "spec.serviceType": "NodePort",
          "spec.minReplicas": 1,
          "spec.maxReplicas": 4
        },
        "base_spec": {
          "apiVersion": "nuclio.io/v1",
          "kind": "Function",
          "metadata": {
            "name": "churn-project-admin-churn-server-latest",
            "labels": {
              "author": "Iguazio",
              "framework": "churn",
              "mlrun/class": "serving",
              "nuclio.io/tag": "latest",
              "nuclio.io/project-name": "churn-project-admin"
            },
            "annotations": {
              "nuclio.io/generated_by": "function generated from /home/kali/functions/churn_server/churn_server.py"
            }
          },
          "spec": {
            "runtime": "python:3.6",
            "handler": "churn_server:handler",
            "env": [
              {
                "name": "ENABLE_EXPLAINER",
                "value": "False"
              },
              {
                "name": "V3IO_API",
                "value": "v3io-webapi.default-tenant.svc:8081"
              },
              {
                "name": "V3IO_USERNAME",
                "value": "admin"
              },
              {
                "name": "V3IO_ACCESS_KEY",
                "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              },
              {
                "name": "V3IO_FRAMESD",
                "value": "framesd:8081"
              },
              {
                "name": "INFERENCE_STREAM",
                "value": "users/admin/artifacts/customer-churn-prediction/model_stream"
              },
              {
                "name": "MLRUN_DEFAULT_PROJECT",
                "value": "churn-project-admin"
              },
              {
                "name": "MLRUN_DBPATH",
                "value": "./"
              },
              {
                "name": "MLRUN_NAMESPACE",
                "value": "default-tenant"
              },
              {
                "name": "SERVING_SPEC_ENV",
                "value": "{\"function_uri\": \"churn-project-admin/churn-server:latest\", \"version\": \"v2\", \"parameters\": {}, \"graph\": {\"kind\": \"router\", \"routes\": {\"churn_server_v1\": {\"kind\": \"task\", \"class_name\": \"ChurnModel\", \"class_args\": {\"model_path\": \"store://artifacts/churn-project-admin/current-state_model:eaae138e-439a-47fa-93c6-ba0fe1dc3b79\"}}, \"data_clean_model\": {\"kind\": \"task\", \"class_name\": \"ChurnModel\", \"class_args\": {\"model_path\": \"store://models/churn-project-admin/data_clean_model#0:latest@cbe8504d4efe4d40a0815acca24ce345\", \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\": \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"}}}}, \"load_mode\": null, \"functions\": {}, \"graph_initializer\": null, \"error_stream\": null, \"track_models\": null, \"default_content_type\": null}"
              },
              {
                "name": "MLRUN_K8S_SECRET__SF",
                "valueFrom": {
                  "secretKeyRef": {
                    "key": "sf",
                    "name": "mlrun-project-secrets-churn-project-admin"
                  }
                }
              }
            ],
            "volumes": [
              {
                "volume": {
                  "flexVolume": {
                    "driver": "v3io/fuse",
                    "options": {
                      "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
                    }
                  },
                  "name": "v3io"
                },
                "volumeMount": {
                  "mountPath": "/v3io",
                  "name": "v3io",
                  "subPath": ""
                }
              },
              {
                "volume": {
                  "flexVolume": {
                    "driver": "v3io/fuse",
                    "options": {
                      "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
                    }
                  },
                  "name": "v3io"
                },
                "volumeMount": {
                  "mountPath": "/User",
                  "name": "v3io",
                  "subPath": "users/admin"
                }
              }
            ],
            "build": {
              "commands": [],
              "noBaseImagesPull": true,
              "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG51bXB5IGFzIG5wCmZyb20gY2xvdWRwaWNrbGUgaW1wb3J0IGxvYWQKCgppbXBvcnQgbWxydW4KCgpjbGFzcyBDaHVybk1vZGVsKG1scnVuLnNlcnZpbmcuVjJNb2RlbFNlcnZlcik6CiAgICBkZWYgbG9hZChzZWxmKToKICAgICAgICAiIiIKICAgICAgICBsb2FkIG11bHRpcGxlIG1vZGVscyBpbiBuZXN0ZWQgZm9sZGVycywgY2h1cm4gbW9kZWwgb25seQogICAgICAgICIiIgogICAgICAgIGNsZl9tb2RlbF9maWxlLCBleHRyYV9kYXRhID0gc2VsZi5nZXRfbW9kZWwoIi5wa2wiKQogICAgICAgIHNlbGYubW9kZWwgPSBsb2FkKG9wZW4oc3RyKGNsZl9tb2RlbF9maWxlKSwgInJiIikpCiAgICAgICAgaWYgImNveCIgaW4gZXh0cmFfZGF0YS5rZXlzKCk6CiAgICAgICAgICAgIGNveF9tb2RlbF9maWxlID0gZXh0cmFfZGF0YVsiY294Il0KICAgICAgICAgICAgc2VsZi5jb3hfbW9kZWwgPSBsb2FkKG9wZW4oc3RyKGNveF9tb2RlbF9maWxlKSwgInJiIikpCiAgICAgICAgICAgIGlmICJjb3gva20iIGluIGV4dHJhX2RhdGEua2V5cygpOgogICAgICAgICAgICAgICAga21fbW9kZWxfZmlsZSA9IGV4dHJhX2RhdGFbImNveC9rbSJdCiAgICAgICAgICAgICAgICBzZWxmLmttX21vZGVsID0gbG9hZChvcGVuKHN0cihrbV9tb2RlbF9maWxlKSwgInJiIikpCgogICAgZGVmIHByZWRpY3Qoc2VsZiwgYm9keSk6CiAgICAgICAgdHJ5OgogICAgICAgICAgICBmZWF0cyA9IG5wLmFzYXJyYXkoYm9keVsiaW5zdGFuY2VzIl0sIGR0eXBlPW5wLmZsb2F0MzIpLnJlc2hhcGUoLTEsIDIzKQogICAgICAgICAgICByZXN1bHQgPSBzZWxmLm1vZGVsLnByZWRpY3QoZmVhdHMsIHZhbGlkYXRlX2ZlYXR1cmVzPUZhbHNlKQogICAgICAgICAgICByZXR1cm4gcmVzdWx0LnRvbGlzdCgpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICByYWlzZSBFeGNlcHRpb24oIkZhaWxlZCB0byBwcmVkaWN0ICVzIiAlIGUpCgoKZnJvbSBtbHJ1bi5ydW50aW1lcyBpbXBvcnQgbnVjbGlvX2luaXRfaG9vawoKCmRlZiBpbml0X2NvbnRleHQoY29udGV4dCk6CiAgICBudWNsaW9faW5pdF9ob29rKGNvbnRleHQsIGdsb2JhbHMoKSwgInNlcnZpbmdfdjIiKQoKCmRlZiBoYW5kbGVyKGNvbnRleHQsIGV2ZW50KToKICAgIHJldHVybiBjb250ZXh0Lm1scnVuX2hhbmRsZXIoY29udGV4dCwgZXZlbnQpCgpmcm9tIG1scnVuLnJ1bnRpbWVzIGltcG9ydCBudWNsaW9faW5pdF9ob29rCmRlZiBpbml0X2NvbnRleHQoY29udGV4dCk6CiAgICBudWNsaW9faW5pdF9ob29rKGNvbnRleHQsIGdsb2JhbHMoKSwgJ3NlcnZpbmdfdjInKQoKZGVmIGhhbmRsZXIoY29udGV4dCwgZXZlbnQpOgogICAgcmV0dXJuIGNvbnRleHQubWxydW5faGFuZGxlcihjb250ZXh0LCBldmVudCkK",
              "baseImage": "mlrun/ml-models:0.8.0-rc7"
            },
            "serviceType": "NodePort",
            "minReplicas": 1,
            "maxReplicas": 4
          }
        },
        "source": "",
        "function_kind": "serving_v2",
        "graph": {
          "kind": "router",
          "routes": {
            "churn_server_v1": {
              "kind": "task",
              "class_name": "ChurnModel",
              "class_args": {
                "model_path": "store://artifacts/churn-project-admin/current-state_model:eaae138e-439a-47fa-93c6-ba0fe1dc3b79"
              }
            },
            "data_clean_model": {
              "kind": "task",
              "class_name": "ChurnModel",
              "class_args": {
                "model_path": "store://models/churn-project-admin/data_clean_model#0:latest@cbe8504d4efe4d40a0815acca24ce345",
                "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
              }
            }
          }
        },
        "default_class": "ChurnModel",
        "build": {
          "commands": []
        },
        "secret_sources": [],
        "disable_auto_mount": true,
        "priority_class_name": "",
        "affinity": null
      },
      "status": {
        "internal_invocation_urls": [],
        "external_invocation_urls": []
      },
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "name": "clean-data",
        "tag": "latest",
        "hash": "cb87ec360d163a1649783c432f7b6ddabbb1f1a5",
        "project": "churn-project-admin",
        "labels": {
          "author": "yasha",
          "framework": "xgboost"
        },
        "categories": [
          "data-prep"
        ],
        "updated": "2021-11-08T16:24:30.260459+00:00",
        "credentials": {
          "access_key": "$generate"
        }
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/ml-models",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "name": "v3io",
            "mountPath": "/v3io"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "http://v3io-webapi:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "1bc19fc2-2089-4c9c-a622-2eaa9868382c"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "http://framesd:8080"
          }
        ],
        "default_handler": "",
        "entry_points": {
          "data_clean": {
            "name": "data_clean",
            "doc": "process a raw churn data file\n\nData has 3 states here: `raw`, `cleaned` and `encoded`\n\n* `raw` kept by default, the pipeline begins with a raw data artifact\n* `cleaned` kept for charts, presentations\n* `encoded` is input for a cross validation and training function\n\nsteps (not necessarily in correct order, some parallel)\n* column name maps\n* deal with nans and other types of missings/junk\n* label encode binary and ordinal category columns\n* create category ranges from numerical columns\nAnd finally,\n* test\n\nWhy we don't one-hot-encode here? One hot encoding isn't a necessary\nstep for all algorithms. It can also generate a very large feature\nmatrix that doesn't need to be serialized (even if sparse).\nSo we leave one-hot-encoding for the training step.\n\nWhat about scaling numerical columns? Same as why we don't one hot\nencode here. Do we scale before train-test split?  IMHO, no.  Scaling\nbefore splitting introduces a type of data leakage.  In addition,\nmany estimators are completely immune to the monotonic transformations\nimplied by scaling, so why waste the cycles?\n\nTODO: \n    * parallelize where possible\n    * more abstraction (more parameters, chain sklearn transformers)\n    * convert to marketplace function",
            "parameters": [
              {
                "name": "context",
                "type": "MLClientCtx",
                "doc": "the function execution context",
                "default": ""
              },
              {
                "name": "src",
                "type": "DataItem",
                "doc": "an artifact or file path",
                "default": ""
              },
              {
                "name": "file_ext",
                "type": "str",
                "doc": "file type for artifacts",
                "default": "csv"
              },
              {
                "name": "models_dest",
                "type": "str",
                "doc": "label encoders and other preprocessing steps should be saved together with other pipeline models",
                "default": "models/encoders"
              },
              {
                "name": "cleaned_key",
                "type": "str",
                "doc": "key of cleaned data table in artifact store",
                "default": "cleaned-data"
              },
              {
                "name": "encoded_key",
                "type": "str",
                "doc": "key of encoded data table in artifact store",
                "default": "encoded-data"
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 18
          }
        },
        "description": "clean and encode raw data",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG9zCgppbXBvcnQganNvbgppbXBvcnQgcGFuZGFzIGFzIHBkCmltcG9ydCBudW1weSBhcyBucApmcm9tIGNvbGxlY3Rpb25zIGltcG9ydCBkZWZhdWx0ZGljdAoKZnJvbSBjbG91ZHBpY2tsZSBpbXBvcnQgZHVtcHMsIGR1bXAsIGxvYWQKCmZyb20gc2tsZWFybi5wcmVwcm9jZXNzaW5nIGltcG9ydCAoT25lSG90RW5jb2RlciwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMYWJlbEVuY29kZXIpCgpmcm9tIG1scnVuLmV4ZWN1dGlvbiBpbXBvcnQgTUxDbGllbnRDdHgKZnJvbSBtbHJ1bi5kYXRhc3RvcmUgaW1wb3J0IERhdGFJdGVtCgpkZWYgZGF0YV9jbGVhbigKICAgIGNvbnRleHQ6TUxDbGllbnRDdHgsIAogICAgc3JjOiBEYXRhSXRlbSwKICAgIGZpbGVfZXh0OiBzdHIgPSAiY3N2IiwKICAgIG1vZGVsc19kZXN0OiBzdHIgPSAibW9kZWxzL2VuY29kZXJzIiwKICAgIGNsZWFuZWRfa2V5OiBzdHIgPSAiY2xlYW5lZC1kYXRhIiwKICAgIGVuY29kZWRfa2V5OiBzdHIgPSAiZW5jb2RlZC1kYXRhIgopOgogICAgIiIicHJvY2VzcyBhIHJhdyBjaHVybiBkYXRhIGZpbGUKICAgIAogICAgRGF0YSBoYXMgMyBzdGF0ZXMgaGVyZTogYHJhd2AsIGBjbGVhbmVkYCBhbmQgYGVuY29kZWRgCiAgICAKICAgICogYHJhd2Aga2VwdCBieSBkZWZhdWx0LCB0aGUgcGlwZWxpbmUgYmVnaW5zIHdpdGggYSByYXcgZGF0YSBhcnRpZmFjdAogICAgKiBgY2xlYW5lZGAga2VwdCBmb3IgY2hhcnRzLCBwcmVzZW50YXRpb25zCiAgICAqIGBlbmNvZGVkYCBpcyBpbnB1dCBmb3IgYSBjcm9zcyB2YWxpZGF0aW9uIGFuZCB0cmFpbmluZyBmdW5jdGlvbgogICAgCiAgICBzdGVwcyAobm90IG5lY2Vzc2FyaWx5IGluIGNvcnJlY3Qgb3JkZXIsIHNvbWUgcGFyYWxsZWwpCiAgICAqIGNvbHVtbiBuYW1lIG1hcHMKICAgICogZGVhbCB3aXRoIG5hbnMgYW5kIG90aGVyIHR5cGVzIG9mIG1pc3NpbmdzL2p1bmsKICAgICogbGFiZWwgZW5jb2RlIGJpbmFyeSBhbmQgb3JkaW5hbCBjYXRlZ29yeSBjb2x1bW5zCiAgICAqIGNyZWF0ZSBjYXRlZ29yeSByYW5nZXMgZnJvbSBudW1lcmljYWwgY29sdW1ucwogICAgQW5kIGZpbmFsbHksCiAgICAqIHRlc3QKICAgIAogICAgV2h5IHdlIGRvbid0IG9uZS1ob3QtZW5jb2RlIGhlcmU/IE9uZSBob3QgZW5jb2RpbmcgaXNuJ3QgYSBuZWNlc3NhcnkKICAgIHN0ZXAgZm9yIGFsbCBhbGdvcml0aG1zLiBJdCBjYW4gYWxzbyBnZW5lcmF0ZSBhIHZlcnkgbGFyZ2UgZmVhdHVyZQogICAgbWF0cml4IHRoYXQgZG9lc24ndCBuZWVkIHRvIGJlIHNlcmlhbGl6ZWQgKGV2ZW4gaWYgc3BhcnNlKS4KICAgIFNvIHdlIGxlYXZlIG9uZS1ob3QtZW5jb2RpbmcgZm9yIHRoZSB0cmFpbmluZyBzdGVwLgogICAgCiAgICBXaGF0IGFib3V0IHNjYWxpbmcgbnVtZXJpY2FsIGNvbHVtbnM/IFNhbWUgYXMgd2h5IHdlIGRvbid0IG9uZSBob3QKICAgIGVuY29kZSBoZXJlLiBEbyB3ZSBzY2FsZSBiZWZvcmUgdHJhaW4tdGVzdCBzcGxpdD8gIElNSE8sIG5vLiAgU2NhbGluZwogICAgYmVmb3JlIHNwbGl0dGluZyBpbnRyb2R1Y2VzIGEgdHlwZSBvZiBkYXRhIGxlYWthZ2UuICBJbiBhZGRpdGlvbiwKICAgIG1hbnkgZXN0aW1hdG9ycyBhcmUgY29tcGxldGVseSBpbW11bmUgdG8gdGhlIG1vbm90b25pYyB0cmFuc2Zvcm1hdGlvbnMKICAgIGltcGxpZWQgYnkgc2NhbGluZywgc28gd2h5IHdhc3RlIHRoZSBjeWNsZXM/CiAgICAKICAgIFRPRE86IAogICAgICAgICogcGFyYWxsZWxpemUgd2hlcmUgcG9zc2libGUKICAgICAgICAqIG1vcmUgYWJzdHJhY3Rpb24gKG1vcmUgcGFyYW1ldGVycywgY2hhaW4gc2tsZWFybiB0cmFuc2Zvcm1lcnMpCiAgICAgICAgKiBjb252ZXJ0IHRvIG1hcmtldHBsYWNlIGZ1bmN0aW9uCiAgICAgICAgCiAgICA6cGFyYW0gY29udGV4dDogICAgICAgICAgdGhlIGZ1bmN0aW9uIGV4ZWN1dGlvbiBjb250ZXh0CiAgICA6cGFyYW0gc3JjOiAgICAgICAgICAgICAgYW4gYXJ0aWZhY3Qgb3IgZmlsZSBwYXRoCiAgICA6cGFyYW0gZmlsZV9leHQ6ICAgICAgICAgZmlsZSB0eXBlIGZvciBhcnRpZmFjdHMKICAgIDpwYXJhbSBtb2RlbHNfZGVzdDogICAgICAgbGFiZWwgZW5jb2RlcnMgYW5kIG90aGVyIHByZXByb2Nlc3Npbmcgc3RlcHMKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaG91bGQgYmUgc2F2ZWQgdG9nZXRoZXIgd2l0aCBvdGhlciBwaXBlbGluZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vZGVscwogICAgOnBhcmFtIGNsZWFuZWRfa2V5OiAgICAgIGtleSBvZiBjbGVhbmVkIGRhdGEgdGFibGUgaW4gYXJ0aWZhY3Qgc3RvcmUKICAgIDpwYXJhbSBlbmNvZGVkX2tleTogICAgICBrZXkgb2YgZW5jb2RlZCBkYXRhIHRhYmxlIGluIGFydGlmYWN0IHN0b3JlCiAgICAiIiIKICAgIGRmID0gc3JjLmFzX2RmKCkKICAgIAogICAgZHJvcF9jb2xzX2xpc3QgPSBbImN1c3RvbWVySUQiLCAiVG90YWxDaGFyZ2VzIl0KICAgIGRmLmRyb3AoZHJvcF9jb2xzX2xpc3QsIGF4aXM9MSwgaW5wbGFjZT1UcnVlKQogICAgCiAgICBvbGRfY29scyA9IGRmLmNvbHVtbnMKICAgIHJlbmFtZV9jb2xzX21hcCA9IHsKICAgICAgICAiU2VuaW9yQ2l0aXplbiIgOiAic2VuaW9yIiwKICAgICAgICAiUGFydG5lciIgICAgICAgOiAicGFydG5lciIsCiAgICAgICAgIkRlcGVuZGVudHMiICAgIDogImRlcHMiLAogICAgICAgICJDaHVybiIgICAgICAgICA6ICJsYWJlbHMiCiAgICB9CiAgICBkZi5yZW5hbWUocmVuYW1lX2NvbHNfbWFwLCBheGlzPTEsIGlucGxhY2U9VHJ1ZSkKCiAgICBmb3IgY29sIGluIGRyb3BfY29sc19saXN0OgogICAgICAgIHJlbmFtZV9jb2xzX21hcC51cGRhdGUoe2NvbDogIl9EUk9QUEVEXyJ9KQogICAgCiAgICB0cCA9IG9zLnBhdGguam9pbihtb2RlbHNfZGVzdCwgInByZXByb2MtY29sdW1uX21hcC5qc29uIikKICAgIGNvbnRleHQubG9nX2FydGlmYWN0KCJwcmVwcm9jLWNvbHVtbl9tYXAuanNvbiIsCiAgICAgICAgICAgICAgICAgICAgICAgICBib2R5PWpzb24uZHVtcHMocmVuYW1lX2NvbHNfbWFwKSwKICAgICAgICAgICAgICAgICAgICAgICAgIGxvY2FsX3BhdGg9dHApCiAgICAKCiAgICBkZiA9IGRmLmFwcGx5bWFwKGxhbWJkYSB4OiAiTm8iIGlmIHN0cih4KS5zdGFydHN3aXRoKCJObyAiKSBlbHNlIHgpCgogICAgYmlucyA9IFswLCAxMiwgMjQsIDM2LCA0OCwgNjAsIG5wLmluZl0KICAgIGxhYmVscyA9IFswLCAxLCAyLCAzLCA0LCA1XQogICAgdGVudXJlID0gZGYudGVudXJlLmNvcHkoZGVlcD1UcnVlKQogICAgZGZbInRlbnVyZV9tYXAiXSA9IHBkLmN1dChkZi50ZW51cmUsIGJpbnMsIGxhYmVscz1GYWxzZSkKICAgIHRlbnVyZV9tYXAgPSBkaWN0KHppcChiaW5zLCBsYWJlbHMpKQogICAgdHAgPSBvcy5wYXRoLmpvaW4obW9kZWxzX2Rlc3QsICJwcmVwcm9jLW51bWNhdF9tYXAuanNvbiIpCiAgICBjb250ZXh0LmxvZ19hcnRpZmFjdCgicHJlcHJvYy1udW1jYXRfbWFwLmpzb24iLCAKICAgICAgICAgICAgICAgICAgICAgICAgIGJvZHk9Ynl0ZXMoanNvbi5kdW1wcyh0ZW51cmVfbWFwKS5lbmNvZGUoInV0Zi04IikpLCAKICAgICAgICAgICAgICAgICAgICAgICAgIGxvY2FsX3BhdGg9dHApCiAgICAKICAgIGNvbnRleHQubG9nX2RhdGFzZXQoY2xlYW5lZF9rZXksIGRmPWRmLCBmb3JtYXQ9ZmlsZV9leHQsIGluZGV4PUZhbHNlKQogICAgCiAgICBmaXhfY29scyA9IFsiZ2VuZGVyIiwgInBhcnRuZXIiLCAiZGVwcyIsICJPbmxpbmVTZWN1cml0eSIsIAogICAgICAgICAgICAgICAgIk9ubGluZUJhY2t1cCIsICJEZXZpY2VQcm90ZWN0aW9uIiwgIlRlY2hTdXBwb3J0IiwKICAgICAgICAgICAgICAgICJTdHJlYW1pbmdUViIsICJTdHJlYW1pbmdNb3ZpZXMiLCAiUGhvbmVTZXJ2aWNlIiwKICAgICAgICAgICAgICAgICJNdWx0aXBsZUxpbmVzIiwgIlBhcGVybGVzc0JpbGxpbmciLCAiSW50ZXJuZXRTZXJ2aWNlIiwgCiAgICAgICAgICAgICAgICAiQ29udHJhY3QiLCAiUGF5bWVudE1ldGhvZCIsICJsYWJlbHMiXQogICAgCiAgICBkID0gZGVmYXVsdGRpY3QoTGFiZWxFbmNvZGVyKQogICAgZGZbZml4X2NvbHNdID0gZGZbZml4X2NvbHNdLmFwcGx5KGxhbWJkYSB4OiBkW3gubmFtZV0uZml0X3RyYW5zZm9ybSh4LmFzdHlwZShzdHIpKSkKICAgIGNvbnRleHQubG9nX2RhdGFzZXQoZW5jb2RlZF9rZXksIGRmPWRmLCBmb3JtYXQ9ZmlsZV9leHQsIGluZGV4PUZhbHNlKQoKICAgIG1vZGVsX2JpbiA9IGR1bXBzKGQpCiAgICBjb250ZXh0LmxvZ19tb2RlbCgibW9kZWwiLCAKICAgICAgICAgICAgICAgICAgICAgIGJvZHk9bW9kZWxfYmluLAogICAgICAgICAgICAgICAgICAgICAgYXJ0aWZhY3RfcGF0aD1vcy5wYXRoLmpvaW4oY29udGV4dC5hcnRpZmFjdF9wYXRoLCAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vZGVsc19kZXN0KSwKICAgICAgICAgICAgICAgICAgICAgIG1vZGVsX2ZpbGU9Im1vZGVsLnBrbCIpCgo=",
          "commands": [],
          "origin_filename": "clean-data.ipynb"
        },
        "disable_auto_mount": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": {}
    },
    {
      "kind": "job",
      "metadata": {
        "name": "coxph-trainer",
        "tag": "latest",
        "hash": "745ddfc1acca1636fa29e7b8575d3f0445c26fe5",
        "project": "churn-project-admin",
        "labels": {
          "author": "yjb",
          "framework": "survival"
        },
        "categories": [
          "model-training",
          "machine-learning"
        ],
        "updated": "2021-11-08T16:24:36.350962+00:00",
        "credentials": {
          "access_key": "$generate"
        }
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/ml-models",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "name": "v3io",
            "mountPath": "/v3io"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "http://v3io-webapi:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "1bc19fc2-2089-4c9c-a622-2eaa9868382c"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "http://framesd:8080"
          }
        ],
        "default_handler": "train_model",
        "entry_points": {
          "train_model": {
            "name": "train_model",
            "doc": "train models to predict the timing of events\n\nAlthough identical in structure to other training functions, this one\nrequires generating a 'Y' that represents the age/duration/tenure of\nthe obervation, designated 'tenure' here, and a binary labels columns that\nrepresents the event of interest, churned/not-churned.\n\nIn addition, there is a strata_cols parameter, representing a list of\nstratification (aka grouping) variables.",
            "parameters": [
              {
                "name": "context",
                "type": "MLClientCtx",
                "doc": "the function context",
                "default": ""
              },
              {
                "name": "dataset",
                "type": "DataItem",
                "doc": "(\"data\") name of raw data file",
                "default": ""
              },
              {
                "name": "event_column",
                "type": "str",
                "doc": "ground-truth (y) labels (considered as events in this model)",
                "default": "labels"
              },
              {
                "name": "time_column",
                "type": "str",
                "doc": "age or tenure column",
                "default": "tenure"
              },
              {
                "name": "encode_cols",
                "type": "dict",
                "doc": "dictionary of names and prefixes for columns that are to hot be encoded.",
                "default": {}
              },
              {
                "name": "strata_cols",
                "type": "list",
                "doc": "columns used to stratify predictors",
                "default": []
              },
              {
                "name": "plot_cov_groups",
                "type": "bool",
                "default": false
              },
              {
                "name": "p_value",
                "type": "float",
                "doc": "(0.005) max p value for coeffcients selected",
                "default": 0.005
              },
              {
                "name": "sample",
                "type": "int",
                "doc": "Selects the first n rows, or select a sample starting from the first. If negative <-1, select a random sample",
                "default": "<_ast.USub object at 0x7f3b619b97b8>"
              },
              {
                "name": "test_size",
                "type": "float",
                "doc": "(0.25) test set size",
                "default": 0.25
              },
              {
                "name": "valid_size",
                "type": "float",
                "doc": "(0.75) Once the test set has been removed the training set gets this proportion.",
                "default": 0.75
              },
              {
                "name": "random_state",
                "type": "int",
                "doc": "(1) sklearn rng seed",
                "default": 1
              },
              {
                "name": "models_dest",
                "type": "str",
                "doc": "destination subfolder for model artifacts",
                "default": ""
              },
              {
                "name": "plots_dest",
                "type": "str",
                "doc": "destination subfolder for plot artifacts",
                "default": ""
              },
              {
                "name": "file_ext",
                "type": "str",
                "doc": "format for test_set_key hold out data",
                "default": "csv"
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 97
          }
        },
        "description": "cox proportional hazards, kaplan meier plots",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHdhcm5pbmdzCgp3YXJuaW5ncy5zaW1wbGVmaWx0ZXIoYWN0aW9uPSJpZ25vcmUiLCBjYXRlZ29yeT1GdXR1cmVXYXJuaW5nKQoKZnJvbSBtbHJ1bi5tbHV0aWxzLmRhdGEgaW1wb3J0IGdldF9zYW1wbGUsIGdldF9zcGxpdHMKZnJvbSBtbHJ1bi5tbHV0aWxzLnBsb3RzIGltcG9ydCBnY2ZfY2xlYXIKCmZyb20gbWxydW4uZXhlY3V0aW9uIGltcG9ydCBNTENsaWVudEN0eApmcm9tIG1scnVuLmRhdGFzdG9yZSBpbXBvcnQgRGF0YUl0ZW0KZnJvbSBtbHJ1bi5hcnRpZmFjdHMgaW1wb3J0IFBsb3RBcnRpZmFjdCwgVGFibGVBcnRpZmFjdAoKZnJvbSBjbG91ZHBpY2tsZSBpbXBvcnQgZHVtcHMKaW1wb3J0IHBhbmRhcyBhcyBwZAppbXBvcnQgb3MKCmZyb20gbGlmZWxpbmVzIGltcG9ydCBDb3hQSEZpdHRlciwgS2FwbGFuTWVpZXJGaXR0ZXIKCgpkZWYgX2NveHBoX2xvZ19tb2RlbCgKICAgIGNvbnRleHQsCiAgICBtb2RlbCwKICAgIGRhdGFzZXRfa2V5OiBzdHIgPSAiY294aGF6YXJkLXN1bW1hcnkiLAogICAgbW9kZWxzX2Rlc3Q6IHN0ciA9ICJtb2RlbHMiLAogICAgcGxvdF9jb3ZfZ3JvdXBzOiBib29sID0gRmFsc2UsCiAgICBwX3ZhbHVlOiBmbG9hdCA9IDAuMDA1LAogICAgcGxvdF9rZXk6IHN0ciA9ICJrbS1jeCIsCiAgICBwbG90c19kZXN0OiBzdHIgPSAicGxvdHMiLAogICAgZmlsZV9leHQ9ImNzdiIsCiAgICBleHRyYV9kYXRhOiBkaWN0ID0ge30sCik6CiAgICAiIiJsb2cgYSBjb3hwaCBtb2RlbCAoYW5kIHN1Ym1vZGVsIGxvY2F0aW9ucykKCiAgICA6cGFyYW0gbW9kZWw6ICAgICAgICBlc3RpbWF0ZWQgY294cGggbW9kZWwKICAgIDpwYXJhbSBleHRyYV9kYXRhOiAgIGlmIHRoaXMgbW9kZWwgd2FudHMgdG8gc3RvcmUgdGhlIGxvY2F0aW9ucyBvZiBzdWJtb2RlbHMKICAgICAgICAgICAgICAgICAgICAgICAgIHVzZSB0aGlzCiAgICAiIiIKICAgIGltcG9ydCBtYXRwbG90bGliLnB5cGxvdCBhcyBwbHQKCiAgICBzdW10YmwgPSBtb2RlbC5zdW1tYXJ5CgogICAgY29udGV4dC5sb2dfZGF0YXNldChkYXRhc2V0X2tleSwgZGY9c3VtdGJsLCBpbmRleD1UcnVlLCBmb3JtYXQ9ZmlsZV9leHQpCgogICAgbW9kZWxfYmluID0gZHVtcHMobW9kZWwpCiAgICBjb250ZXh0LmxvZ19tb2RlbCgKICAgICAgICAiY3gtbW9kZWwiLAogICAgICAgIGJvZHk9bW9kZWxfYmluLAogICAgICAgIGFydGlmYWN0X3BhdGg9b3MucGF0aC5qb2luKGNvbnRleHQuYXJ0aWZhY3RfcGF0aCwgbW9kZWxzX2Rlc3QpLAogICAgICAgIG1vZGVsX2ZpbGU9Im1vZGVsLnBrbCIsCiAgICApCiAgICBpZiBwbG90X2Nvdl9ncm91cHM6CiAgICAgICAgc2VsZWN0X2NvdmFycyA9IHN1bW1hcnlbc3VtbWFyeS5wIDw9IHBfdmFsdWVdLmluZGV4LnZhbHVlcwogICAgICAgIGZvciBncm91cCBpbiBzZWxlY3RfY292YXJzOgogICAgICAgICAgICBheHMgPSBtb2RlbC5wbG90X2NvdmFyaWF0ZV9ncm91cHMoZ3JvdXAsIHZhbHVlcz1bMCwgMV0pCiAgICAgICAgICAgIGZvciBpeCwgYXggaW4gZW51bWVyYXRlKGF4cyk6CiAgICAgICAgICAgICAgICBmID0gYXguZ2V0X2ZpZ3VyZSgpCiAgICAgICAgICAgICAgICBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICAgICAgICAgICAgICBQbG90QXJ0aWZhY3QoZiJjeC17Z3JvdXB9LXtpeH0iLCBib2R5PXBsdC5nY2YoKSksCiAgICAgICAgICAgICAgICAgICAgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS9jeC17Z3JvdXB9LXtpeH0uaHRtbCIsCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICBnY2ZfY2xlYXIocGx0KQoKCmRlZiBfa2FwbGFuX21laWVyX2xvZ19tb2RlbCgKICAgIGNvbnRleHQsCiAgICBtb2RlbCwKICAgIHRpbWVfY29sdW1uOiBzdHIgPSAidGVudXJlIiwKICAgIGRhdGFzZXRfa2V5OiBzdHIgPSAia20tdGltZWxpbmVzIiwKICAgIHBsb3Rfa2V5OiBzdHIgPSAia20tc3Vydml2YWwiLAogICAgcGxvdHNfZGVzdDogc3RyID0gInBsb3RzIiwKICAgIG1vZGVsc19kZXN0OiBzdHIgPSAibW9kZWxzIiwKICAgIGZpbGVfZXh0OiBzdHIgPSAiY3N2IiwKKToKICAgIGltcG9ydCBtYXRwbG90bGliLnB5cGxvdCBhcyBwbHQKCiAgICBvID0gW10KICAgIGZvciBvYmogaW4gbW9kZWwuX19kaWN0X18ua2V5cygpOgogICAgICAgIGlmIGlzaW5zdGFuY2UobW9kZWwuX19kaWN0X19bb2JqXSwgcGQuRGF0YUZyYW1lKToKICAgICAgICAgICAgby5hcHBlbmQobW9kZWwuX19kaWN0X19bb2JqXSkKICAgIGRmID0gcGQuY29uY2F0KG8sIGF4aXM9MSkKICAgIGRmLmluZGV4Lm5hbWUgPSB0aW1lX2NvbHVtbgogICAgY29udGV4dC5sb2dfZGF0YXNldChkYXRhc2V0X2tleSwgZGY9ZGYsIGluZGV4PVRydWUsIGZvcm1hdD1maWxlX2V4dCkKICAgIG1vZGVsLnBsb3QoKQogICAgY29udGV4dC5sb2dfYXJ0aWZhY3QoCiAgICAgICAgUGxvdEFydGlmYWN0KHBsb3Rfa2V5LCBib2R5PXBsdC5nY2YoKSksCiAgICAgICAgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS97cGxvdF9rZXl9Lmh0bWwiLAogICAgKQogICAgY29udGV4dC5sb2dfbW9kZWwoCiAgICAgICAgImttLW1vZGVsIiwKICAgICAgICBib2R5PWR1bXBzKG1vZGVsKSwKICAgICAgICBtb2RlbF9kaXI9ZiJ7bW9kZWxzX2Rlc3R9L2ttIiwKICAgICAgICBtb2RlbF9maWxlPSJtb2RlbC5wa2wiLAogICAgKQoKCmRlZiB0cmFpbl9tb2RlbCgKICAgIGNvbnRleHQ6IE1MQ2xpZW50Q3R4LAogICAgZGF0YXNldDogRGF0YUl0ZW0sCiAgICBldmVudF9jb2x1bW46IHN0ciA9ICJsYWJlbHMiLAogICAgdGltZV9jb2x1bW46IHN0ciA9ICJ0ZW51cmUiLAogICAgZW5jb2RlX2NvbHM6IGRpY3QgPSB7fSwKICAgIHN0cmF0YV9jb2xzOiBsaXN0ID0gW10sCiAgICBwbG90X2Nvdl9ncm91cHM6IGJvb2wgPSBGYWxzZSwKICAgIHBfdmFsdWU6IGZsb2F0ID0gMC4wMDUsCiAgICBzYW1wbGU6IGludCA9IC0xLAogICAgdGVzdF9zaXplOiBmbG9hdCA9IDAuMjUsCiAgICB2YWxpZF9zaXplOiBmbG9hdCA9IDAuNzUsICAjIChhZnRlciB0ZXN0IHJlbW92ZWQpCiAgICByYW5kb21fc3RhdGU6IGludCA9IDEsCiAgICBtb2RlbHNfZGVzdDogc3RyID0gIiIsCiAgICBwbG90c19kZXN0OiBzdHIgPSAiIiwKICAgIGZpbGVfZXh0OiBzdHIgPSAiY3N2IiwKKSAtPiBOb25lOgogICAgIiIidHJhaW4gbW9kZWxzIHRvIHByZWRpY3QgdGhlIHRpbWluZyBvZiBldmVudHMKCiAgICBBbHRob3VnaCBpZGVudGljYWwgaW4gc3RydWN0dXJlIHRvIG90aGVyIHRyYWluaW5nIGZ1bmN0aW9ucywgdGhpcyBvbmUKICAgIHJlcXVpcmVzIGdlbmVyYXRpbmcgYSAnWScgdGhhdCByZXByZXNlbnRzIHRoZSBhZ2UvZHVyYXRpb24vdGVudXJlIG9mCiAgICB0aGUgb2JlcnZhdGlvbiwgZGVzaWduYXRlZCAndGVudXJlJyBoZXJlLCBhbmQgYSBiaW5hcnkgbGFiZWxzIGNvbHVtbnMgdGhhdAogICAgcmVwcmVzZW50cyB0aGUgZXZlbnQgb2YgaW50ZXJlc3QsIGNodXJuZWQvbm90LWNodXJuZWQuCgogICAgSW4gYWRkaXRpb24sIHRoZXJlIGlzIGEgc3RyYXRhX2NvbHMgcGFyYW1ldGVyLCByZXByZXNlbnRpbmcgYSBsaXN0IG9mCiAgICBzdHJhdGlmaWNhdGlvbiAoYWthIGdyb3VwaW5nKSB2YXJpYWJsZXMuCgogICAgOnBhcmFtIGNvbnRleHQ6ICAgICAgICAgICB0aGUgZnVuY3Rpb24gY29udGV4dAogICAgOnBhcmFtIGRhdGFzZXQ6ICAgICAgICAgICAoImRhdGEiKSBuYW1lIG9mIHJhdyBkYXRhIGZpbGUKICAgIDpwYXJhbSBldmVudF9jb2x1bW46ICAgICAgZ3JvdW5kLXRydXRoICh5KSBsYWJlbHMgKGNvbnNpZGVyZWQgYXMgZXZlbnRzIGluIHRoaXMgbW9kZWwpCiAgICA6cGFyYW0gdGltZV9jb2x1bW46ICAgICAgIGFnZSBvciB0ZW51cmUgY29sdW1uCiAgICA6cGFyYW0gZW5jb2RlX2NvbHM6ICAgICAgIGRpY3Rpb25hcnkgb2YgbmFtZXMgYW5kIHByZWZpeGVzIGZvciBjb2x1bW5zIHRoYXQgYXJlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGhvdCBiZSBlbmNvZGVkLgogICAgOnBhcmFtIHN0cmF0YV9jb2xzOiAgICAgICBjb2x1bW5zIHVzZWQgdG8gc3RyYXRpZnkgcHJlZGljdG9ycwogICAgOnBhcmFtIHBsb3RfY292X2dyb3VwczoKICAgIDpwYXJhbSBwX3ZhbHVlOiAgICAgICAgICAgKDAuMDA1KSBtYXggcCB2YWx1ZSBmb3IgY29lZmZjaWVudHMgc2VsZWN0ZWQKICAgIDpwYXJhbSBzYW1wbGU6ICAgICAgICAgICAgU2VsZWN0cyB0aGUgZmlyc3QgbiByb3dzLCBvciBzZWxlY3QgYSBzYW1wbGUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnRpbmcgZnJvbSB0aGUgZmlyc3QuIElmIG5lZ2F0aXZlIDwtMSwgc2VsZWN0CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGEgcmFuZG9tIHNhbXBsZQogICAgOnBhcmFtIHRlc3Rfc2l6ZTogICAgICAgICAoMC4yNSkgdGVzdCBzZXQgc2l6ZQogICAgOnBhcmFtIHZhbGlkX3NpemU6ICAgICAgICAoMC43NSkgT25jZSB0aGUgdGVzdCBzZXQgaGFzIGJlZW4gcmVtb3ZlZCB0aGUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhaW5pbmcgc2V0IGdldHMgdGhpcyBwcm9wb3J0aW9uLgogICAgOnBhcmFtIHJhbmRvbV9zdGF0ZTogICAgICAoMSkgc2tsZWFybiBybmcgc2VlZAogICAgOnBhcmFtIG1vZGVsc19kZXN0OiAgICAgICBkZXN0aW5hdGlvbiBzdWJmb2xkZXIgZm9yIG1vZGVsIGFydGlmYWN0cwogICAgOnBhcmFtIHBsb3RzX2Rlc3Q6ICAgICAgICBkZXN0aW5hdGlvbiBzdWJmb2xkZXIgZm9yIHBsb3QgYXJ0aWZhY3RzCiAgICA6cGFyYW0gZmlsZV9leHQ6ICAgICAgICAgIGZvcm1hdCBmb3IgdGVzdF9zZXRfa2V5IGhvbGQgb3V0IGRhdGEKICAgICIiIgogICAgZnJvbSBsaWZlbGluZXMucGxvdHRpbmcgaW1wb3J0IHBsb3RfbGlmZXRpbWVzCiAgICBpbXBvcnQgbWF0cGxvdGxpYi5weXBsb3QgYXMgcGx0CgogICAgbW9kZWxzX2Rlc3QgPSBtb2RlbHNfZGVzdCBvciAibW9kZWxzIgogICAgcGxvdHNfZGVzdCA9IHBsb3RzX2Rlc3Qgb3IgZiJwbG90cy97Y29udGV4dC5uYW1lfSIKCiAgICByYXcsIHRlbnVyZSwgaGVhZGVyID0gZ2V0X3NhbXBsZShkYXRhc2V0LCBzYW1wbGUsIHRpbWVfY29sdW1uKQoKICAgIGlmIGVuY29kZV9jb2xzOgogICAgICAgIHJhdyA9IHBkLmdldF9kdW1taWVzKAogICAgICAgICAgICByYXcsCiAgICAgICAgICAgIGNvbHVtbnM9bGlzdChlbmNvZGVfY29scy5rZXlzKCkpLAogICAgICAgICAgICBwcmVmaXg9bGlzdChlbmNvZGVfY29scy52YWx1ZXMoKSksCiAgICAgICAgICAgIGRyb3BfZmlyc3Q9VHJ1ZSwKICAgICAgICApCgogICAgKHh0cmFpbiwgeXRyYWluKSwgKHh2YWxpZCwgeXZhbGlkKSwgKHh0ZXN0LCB5dGVzdCkgPSBnZXRfc3BsaXRzKAogICAgICAgIHJhdywgdGVudXJlLCAzLCB0ZXN0X3NpemUsIHZhbGlkX3NpemUsIHJhbmRvbV9zdGF0ZQogICAgKQogICAgZm9yIFggaW4gW3h0cmFpbiwgeHZhbGlkLCB4dGVzdF06CiAgICAgICAgZHJvcF9jb2xzID0gWC5jb2x1bW5zLnN0ci5zdGFydHN3aXRoKHRpbWVfY29sdW1uKQogICAgICAgIFguZHJvcChYLmNvbHVtbnNbZHJvcF9jb2xzXSwgYXhpcz0xLCBpbnBsYWNlPVRydWUpCiAgICBmb3IgWSBpbiBbeXRyYWluLCB5dmFsaWQsIHl0ZXN0XToKICAgICAgICBZLm5hbWUgPSB0aW1lX2NvbHVtbgoKICAgIGNvbnRleHQubG9nX2RhdGFzZXQoCiAgICAgICAgInRlbnVyZWQtdGVzdC1zZXQiLAogICAgICAgIGRmPXBkLmNvbmNhdChbeHRlc3QsIHl0ZXN0LnRvX2ZyYW1lKCldLCBheGlzPTEpLAogICAgICAgIGZvcm1hdD1maWxlX2V4dCwKICAgICAgICBpbmRleD1GYWxzZSwKICAgICkKCiAgICBrbV9tb2RlbCA9IEthcGxhbk1laWVyRml0dGVyKCkuZml0KHl0cmFpbiwgeHRyYWluLmxhYmVscykKICAgIF9rYXBsYW5fbWVpZXJfbG9nX21vZGVsKGNvbnRleHQsIGttX21vZGVsLCBtb2RlbHNfZGVzdD1tb2RlbHNfZGVzdCkKCiAgICBjb3hkYXRhID0gcGQuY29uY2F0KFt4dHJhaW4sIHl0cmFpbi50b19mcmFtZSgpXSwgYXhpcz0xKQogICAgY3hfbW9kZWwgPSBDb3hQSEZpdHRlcigpLmZpdChjb3hkYXRhLCB0aW1lX2NvbHVtbiwgZXZlbnRfY29sdW1uLCBzdHJhdGE9c3RyYXRhX2NvbHMpCiAgICBfY294cGhfbG9nX21vZGVsKAogICAgICAgIGNvbnRleHQsCiAgICAgICAgY3hfbW9kZWwsCiAgICAgICAgbW9kZWxzX2Rlc3Q9bW9kZWxzX2Rlc3QsCiAgICAgICAgcGxvdF9jb3ZfZ3JvdXBzPXBsb3RfY292X2dyb3VwcywKICAgICAgICBleHRyYV9kYXRhPXsia20iOiBmInttb2RlbHNfZGVzdH0va20ifSwKICAgICkK",
          "commands": []
        },
        "disable_auto_mount": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": {}
    },
    {
      "kind": "job",
      "metadata": {
        "name": "describe",
        "tag": "latest",
        "hash": "8332648510ee6bb856a4783bd0b1dd4990c817af",
        "project": "churn-project-admin",
        "labels": {
          "author": "Iguazio"
        },
        "categories": [
          "data-analysis"
        ],
        "updated": "2021-11-08T16:24:41.982167+00:00",
        "credentials": {
          "access_key": "$generate"
        }
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "name": "v3io",
            "mountPath": "/v3io"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "http://v3io-webapi:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "1bc19fc2-2089-4c9c-a622-2eaa9868382c"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "http://framesd:8080"
          }
        ],
        "default_handler": "summarize",
        "entry_points": {
          "summarize": {
            "name": "summarize",
            "doc": "Summarize a table",
            "parameters": [
              {
                "name": "context",
                "type": "MLClientCtx",
                "doc": "the function context",
                "default": ""
              },
              {
                "name": "table",
                "type": "DataItem",
                "doc": "MLRun input pointing to pandas dataframe (csv/parquet file path)",
                "default": ""
              },
              {
                "name": "label_column",
                "type": "str",
                "doc": "ground truth column label",
                "default": null
              },
              {
                "name": "class_labels",
                "type": "List[str]",
                "doc": "label for each class in tables and plots",
                "default": []
              },
              {
                "name": "plot_hist",
                "type": "bool",
                "doc": "(True) set this to False for large tables",
                "default": true
              },
              {
                "name": "plots_dest",
                "type": "str",
                "doc": "destination folder of summary plots (relative to artifact_path)",
                "default": "plots"
              },
              {
                "name": "update_dataset",
                "doc": "when the table is a registered dataset update the charts in-place",
                "default": false
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 23
          }
        },
        "description": "describe and visualizes dataset stats",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHdhcm5pbmdzCgp3YXJuaW5ncy5zaW1wbGVmaWx0ZXIoYWN0aW9uPSJpZ25vcmUiLCBjYXRlZ29yeT1GdXR1cmVXYXJuaW5nKQoKaW1wb3J0IG9zCmltcG9ydCBudW1weSBhcyBucAppbXBvcnQgcGFuZGFzIGFzIHBkCmltcG9ydCBtYXRwbG90bGliLnB5cGxvdCBhcyBwbHQKaW1wb3J0IHNlYWJvcm4gYXMgc25zCgpmcm9tIG1scnVuLmV4ZWN1dGlvbiBpbXBvcnQgTUxDbGllbnRDdHgKZnJvbSBtbHJ1bi5kYXRhc3RvcmUgaW1wb3J0IERhdGFJdGVtCmZyb20gbWxydW4uYXJ0aWZhY3RzIGltcG9ydCBQbG90QXJ0aWZhY3QsIFRhYmxlQXJ0aWZhY3QKZnJvbSBtbHJ1bi5tbHV0aWxzLnBsb3RzIGltcG9ydCBnY2ZfY2xlYXIKCmZyb20gdHlwaW5nIGltcG9ydCBMaXN0CgpwZC5zZXRfb3B0aW9uKCJkaXNwbGF5LmZsb2F0X2Zvcm1hdCIsIGxhbWJkYSB4OiAiJS4yZiIgJSB4KQoKCmRlZiBzdW1tYXJpemUoCiAgICBjb250ZXh0OiBNTENsaWVudEN0eCwKICAgIHRhYmxlOiBEYXRhSXRlbSwKICAgIGxhYmVsX2NvbHVtbjogc3RyID0gTm9uZSwKICAgIGNsYXNzX2xhYmVsczogTGlzdFtzdHJdID0gW10sCiAgICBwbG90X2hpc3Q6IGJvb2wgPSBUcnVlLAogICAgcGxvdHNfZGVzdDogc3RyID0gInBsb3RzIiwKICAgIHVwZGF0ZV9kYXRhc2V0PUZhbHNlLAopIC0+IE5vbmU6CiAgICAiIiJTdW1tYXJpemUgYSB0YWJsZQoKICAgIDpwYXJhbSBjb250ZXh0OiAgICAgICAgIHRoZSBmdW5jdGlvbiBjb250ZXh0CiAgICA6cGFyYW0gdGFibGU6ICAgICAgICAgICBNTFJ1biBpbnB1dCBwb2ludGluZyB0byBwYW5kYXMgZGF0YWZyYW1lIChjc3YvcGFycXVldCBmaWxlIHBhdGgpCiAgICA6cGFyYW0gbGFiZWxfY29sdW1uOiAgICBncm91bmQgdHJ1dGggY29sdW1uIGxhYmVsCiAgICA6cGFyYW0gY2xhc3NfbGFiZWxzOiAgICBsYWJlbCBmb3IgZWFjaCBjbGFzcyBpbiB0YWJsZXMgYW5kIHBsb3RzCiAgICA6cGFyYW0gcGxvdF9oaXN0OiAgICAgICAoVHJ1ZSkgc2V0IHRoaXMgdG8gRmFsc2UgZm9yIGxhcmdlIHRhYmxlcwogICAgOnBhcmFtIHBsb3RzX2Rlc3Q6ICAgICAgZGVzdGluYXRpb24gZm9sZGVyIG9mIHN1bW1hcnkgcGxvdHMgKHJlbGF0aXZlIHRvIGFydGlmYWN0X3BhdGgpCiAgICA6cGFyYW0gdXBkYXRlX2RhdGFzZXQ6ICB3aGVuIHRoZSB0YWJsZSBpcyBhIHJlZ2lzdGVyZWQgZGF0YXNldCB1cGRhdGUgdGhlIGNoYXJ0cyBpbi1wbGFjZQogICAgIiIiCiAgICBkZiA9IHRhYmxlLmFzX2RmKCkKICAgIGhlYWRlciA9IGRmLmNvbHVtbnMudmFsdWVzCiAgICBleHRyYV9kYXRhID0ge30KCiAgICB0cnk6CiAgICAgICAgZ2NmX2NsZWFyKHBsdCkKICAgICAgICBzbnNwbHQgPSBzbnMucGFpcnBsb3QoZGYsIGh1ZT1sYWJlbF9jb2x1bW4pICAjICwgZGlhZ19rd3M9eyJidyI6IDEuNX0pCiAgICAgICAgZXh0cmFfZGF0YVsiaGlzdG9ncmFtcyJdID0gY29udGV4dC5sb2dfYXJ0aWZhY3QoCiAgICAgICAgICAgIFBsb3RBcnRpZmFjdCgiaGlzdG9ncmFtcyIsIGJvZHk9cGx0LmdjZigpKSwKICAgICAgICAgICAgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS9oaXN0Lmh0bWwiLAogICAgICAgICAgICBkYl9rZXk9RmFsc2UsCiAgICAgICAgKQogICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgIGNvbnRleHQubG9nZ2VyLmVycm9yKGYiRmFpbGVkIHRvIGNyZWF0ZSBwYWlycGxvdCBoaXN0b2dyYW1zIGR1ZSB0bzoge2V9IikKCiAgICB0cnk6CiAgICAgICAgZ2NmX2NsZWFyKHBsdCkKICAgICAgICBwbG90X2NvbHMgPSAzCiAgICAgICAgcGxvdF9yb3dzID0gaW50KChsZW4oaGVhZGVyKSAtIDEpIC8gcGxvdF9jb2xzKSArIDEKICAgICAgICBmaWcsIGF4ID0gcGx0LnN1YnBsb3RzKHBsb3Rfcm93cywgcGxvdF9jb2xzLCBmaWdzaXplPSgxNSwgNCkpCiAgICAgICAgZmlnLnRpZ2h0X2xheW91dChwYWQ9Mi4wKQogICAgICAgIGZvciBpIGluIHJhbmdlKHBsb3Rfcm93cyAqIHBsb3RfY29scyk6CiAgICAgICAgICAgIGlmIGkgPCBsZW4oaGVhZGVyKToKICAgICAgICAgICAgICAgIHNucy52aW9saW5wbG90KAogICAgICAgICAgICAgICAgICAgIHg9ZGZbaGVhZGVyW2ldXSwKICAgICAgICAgICAgICAgICAgICBheD1heFtpbnQoaSAvIHBsb3RfY29scyldW2kgJSBwbG90X2NvbHNdLAogICAgICAgICAgICAgICAgICAgIG9yaWVudD0iaCIsCiAgICAgICAgICAgICAgICAgICAgd2lkdGg9MC43LAogICAgICAgICAgICAgICAgICAgIGlubmVyPSJxdWFydGlsZSIsCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBmaWcuZGVsYXhlcyhheFtpbnQoaSAvIHBsb3RfY29scyldW2kgJSBwbG90X2NvbHNdKQogICAgICAgICAgICBpICs9IDEKICAgICAgICBleHRyYV9kYXRhWyJ2aW9saW4iXSA9IGNvbnRleHQubG9nX2FydGlmYWN0KAogICAgICAgICAgICBQbG90QXJ0aWZhY3QoInZpb2xpbiIsIGJvZHk9cGx0LmdjZigpLCB0aXRsZT0iVmlvbGluIFBsb3QiKSwKICAgICAgICAgICAgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS92aW9saW4uaHRtbCIsCiAgICAgICAgICAgIGRiX2tleT1GYWxzZSwKICAgICAgICApCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgY29udGV4dC5sb2dnZXIud2FybihmIkZhaWxlZCB0byBjcmVhdGUgdmlvbGluIGRpc3RyaWJ1dGlvbiBwbG90cyBkdWUgdG86IHtlfSIpCgogICAgaWYgbGFiZWxfY29sdW1uOgogICAgICAgIGxhYmVscyA9IGRmLnBvcChsYWJlbF9jb2x1bW4pCiAgICAgICAgaW1idGFibGUgPSBsYWJlbHMudmFsdWVfY291bnRzKG5vcm1hbGl6ZT1UcnVlKS5zb3J0X2luZGV4KCkKICAgICAgICB0cnk6CiAgICAgICAgICAgIGdjZl9jbGVhcihwbHQpCiAgICAgICAgICAgIGJhbGFuY2ViYXIgPSBpbWJ0YWJsZS5wbG90KGtpbmQ9ImJhciIsIHRpdGxlPSJjbGFzcyBpbWJhbGFuY2UgLSBsYWJlbHMiKQogICAgICAgICAgICBiYWxhbmNlYmFyLnNldF94bGFiZWwoImNsYXNzIikKICAgICAgICAgICAgYmFsYW5jZWJhci5zZXRfeWxhYmVsKCJwcm9wb3J0aW9uIG9mIHRvdGFsIikKICAgICAgICAgICAgZXh0cmFfZGF0YVsiaW1iYWxhbmNlIl0gPSBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICAgICAgICAgIFBsb3RBcnRpZmFjdCgiaW1iYWxhbmNlIiwgYm9keT1wbHQuZ2NmKCkpLAogICAgICAgICAgICAgICAgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS9pbWJhbGFuY2UuaHRtbCIsCiAgICAgICAgICAgICkKICAgICAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgICAgIGNvbnRleHQubG9nZ2VyLndhcm4oZiJGYWlsZWQgdG8gY3JlYXRlIGNsYXNzIGltYmFsYW5jZSBwbG90IGR1ZSB0bzoge2V9IikKICAgICAgICBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICAgICAgVGFibGVBcnRpZmFjdCgKICAgICAgICAgICAgICAgICJpbWJhbGFuY2Utd2VpZ2h0cy12ZWMiLCBkZj1wZC5EYXRhRnJhbWUoeyJ3ZWlnaHRzIjogaW1idGFibGV9KQogICAgICAgICAgICApLAogICAgICAgICAgICBsb2NhbF9wYXRoPWYie3Bsb3RzX2Rlc3R9L2ltYmFsYW5jZS13ZWlnaHRzLXZlYy5jc3YiLAogICAgICAgICAgICBkYl9rZXk9RmFsc2UsCiAgICAgICAgKQoKICAgIHRibGNvcnIgPSBkZi5jb3JyKCkKICAgIG1hc2sgPSBucC56ZXJvc19saWtlKHRibGNvcnIsIGR0eXBlPW5wLmJvb2wpCiAgICBtYXNrW25wLnRyaXVfaW5kaWNlc19mcm9tKG1hc2spXSA9IFRydWUKCiAgICBkZmNvcnIgPSBwZC5EYXRhRnJhbWUoZGF0YT10Ymxjb3JyLCBjb2x1bW5zPWhlYWRlciwgaW5kZXg9aGVhZGVyKQogICAgZGZjb3JyID0gZGZjb3JyW25wLmFyYW5nZShkZmNvcnIuc2hhcGVbMF0pWzosIE5vbmVdID4gbnAuYXJhbmdlKGRmY29yci5zaGFwZVsxXSldCiAgICBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICBUYWJsZUFydGlmYWN0KCJjb3JyZWxhdGlvbi1tYXRyaXgiLCBkZj10Ymxjb3JyLCB2aXNpYmxlPVRydWUpLAogICAgICAgIGxvY2FsX3BhdGg9ZiJ7cGxvdHNfZGVzdH0vY29ycmVsYXRpb24tbWF0cml4LmNzdiIsCiAgICAgICAgZGJfa2V5PUZhbHNlLAogICAgKQoKICAgIHRyeToKICAgICAgICBnY2ZfY2xlYXIocGx0KQogICAgICAgIGF4ID0gcGx0LmF4ZXMoKQogICAgICAgIHNucy5oZWF0bWFwKHRibGNvcnIsIGF4PWF4LCBtYXNrPW1hc2ssIGFubm90PUZhbHNlLCBjbWFwPXBsdC5jbS5SZWRzKQogICAgICAgIGF4LnNldF90aXRsZSgiZmVhdHVyZXMgY29ycmVsYXRpb24iKQogICAgICAgIGV4dHJhX2RhdGFbImNvcnJlbGF0aW9uIl0gPSBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICAgICAgUGxvdEFydGlmYWN0KCJjb3JyZWxhdGlvbiIsIGJvZHk9cGx0LmdjZigpLCB0aXRsZT0iQ29ycmVsYXRpb24gTWF0cml4IiksCiAgICAgICAgICAgIGxvY2FsX3BhdGg9ZiJ7cGxvdHNfZGVzdH0vY29yci5odG1sIiwKICAgICAgICAgICAgZGJfa2V5PUZhbHNlLAogICAgICAgICkKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICBjb250ZXh0LmxvZ2dlci53YXJuKGYiRmFpbGVkIHRvIGNyZWF0ZSBmZWF0dXJlcyBjb3JyZWxhdGlvbiBwbG90IGR1ZSB0bzoge2V9IikKCiAgICBnY2ZfY2xlYXIocGx0KQogICAgaWYgdXBkYXRlX2RhdGFzZXQgYW5kIHRhYmxlLm1ldGEgYW5kIHRhYmxlLm1ldGEua2luZCA9PSAiZGF0YXNldCI6CiAgICAgICAgZnJvbSBtbHJ1bi5hcnRpZmFjdHMgaW1wb3J0IHVwZGF0ZV9kYXRhc2V0X21ldGEKCiAgICAgICAgdXBkYXRlX2RhdGFzZXRfbWV0YSh0YWJsZS5tZXRhLCBleHRyYV9kYXRhPWV4dHJhX2RhdGEpCg==",
          "commands": []
        },
        "disable_auto_mount": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": {}
    },
    {
      "kind": "job",
      "metadata": {
        "name": "xgb-trainer",
        "tag": "latest",
        "hash": "215b87e89826f207cdb28da05211986c928def06",
        "project": "churn-project-admin",
        "labels": {
          "author": "Daniel"
        },
        "categories": [
          "model-training"
        ],
        "updated": "2021-11-08T16:24:49.683849+00:00",
        "credentials": {
          "access_key": "$generate"
        }
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/ml-models",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "name": "v3io",
            "mountPath": "/v3io"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "http://v3io-webapi:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "1bc19fc2-2089-4c9c-a622-2eaa9868382c"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "http://framesd:8080"
          }
        ],
        "default_handler": "train_model",
        "entry_points": {
          "train_model": {
            "name": "train_model",
            "doc": "train an xgboost model.\n\nNote on imabalanced data:  the `imbal_vec` parameter represents the measured\nclass representations in the sample and can be used as a first step in tuning\nan XGBoost model.  This isn't a hyperparamter, merely an estimate that should\nbe set as 'constant' throughout tuning process.",
            "parameters": [
              {
                "name": "context",
                "type": "MLClientCtx",
                "doc": "the function context",
                "default": ""
              },
              {
                "name": "model_type",
                "type": "str",
                "doc": "the model type to train, \"classifier\", \"regressor\"...",
                "default": ""
              },
              {
                "name": "dataset",
                "type": "Union[DataItem, DataFrame]",
                "doc": "(\"data\") name of raw data file",
                "default": ""
              },
              {
                "name": "label_column",
                "type": "str",
                "doc": "ground-truth (y) labels",
                "default": "labels"
              },
              {
                "name": "encode_cols",
                "type": "dict",
                "doc": "dictionary of names and prefixes for columns that are to hot be encoded.",
                "default": {}
              },
              {
                "name": "sample",
                "type": "int",
                "doc": "Selects the first n rows, or select a sample starting from the first. If negative <-1, select a random sample",
                "default": "<_ast.USub object at 0x7f66a8fbc7b8>"
              },
              {
                "name": "imbal_vec",
                "doc": "([]) vector of class weights seen in sample",
                "default": []
              },
              {
                "name": "test_size",
                "type": "float",
                "doc": "(0.05) test set size",
                "default": 0.25
              },
              {
                "name": "valid_size",
                "type": "float",
                "doc": "(0.75) Once the test set has been removed the training set gets this proportion.",
                "default": 0.75
              },
              {
                "name": "random_state",
                "type": "int",
                "doc": "(1) sklearn rng seed",
                "default": 1
              },
              {
                "name": "models_dest",
                "type": "str",
                "doc": "destination subfolder for model artifacts",
                "default": "models"
              },
              {
                "name": "plots_dest",
                "type": "str",
                "doc": "destination subfolder for plot artifacts",
                "default": "plots"
              },
              {
                "name": "eval_metrics",
                "type": "list",
                "doc": "([\"error\", \"auc\"]) learning curve metrics",
                "default": [
                  "error",
                  "auc"
                ]
              },
              {
                "name": "file_ext",
                "type": "str",
                "doc": "format for test_set_key hold out data",
                "default": "parquet"
              },
              {
                "name": "test_set",
                "type": "str",
                "default": "test_set"
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 57
          }
        },
        "description": "train multiple model types using xgboost.",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHdhcm5pbmdzCgp3YXJuaW5ncy5zaW1wbGVmaWx0ZXIoYWN0aW9uPSJpZ25vcmUiLCBjYXRlZ29yeT1GdXR1cmVXYXJuaW5nKQoKZnJvbSBtbHJ1bi5tbHV0aWxzLmRhdGEgaW1wb3J0IGdldF9zYW1wbGUsIGdldF9zcGxpdHMKZnJvbSBtbHJ1bi5tbHV0aWxzLm1vZGVscyBpbXBvcnQgZ2VuX3NrbGVhcm5fbW9kZWwsIGV2YWxfbW9kZWxfdjIKZnJvbSBtbHJ1bi51dGlscy5oZWxwZXJzIGltcG9ydCBjcmVhdGVfY2xhc3MKCmZyb20gbWxydW4uZXhlY3V0aW9uIGltcG9ydCBNTENsaWVudEN0eApmcm9tIG1scnVuLmRhdGFzdG9yZSBpbXBvcnQgRGF0YUl0ZW0KCmZyb20gY2xvdWRwaWNrbGUgaW1wb3J0IGR1bXBzCmltcG9ydCBwYW5kYXMgYXMgcGQKaW1wb3J0IG9zCmZyb20gdHlwaW5nIGltcG9ydCBVbmlvbgoKCmRlZiBfZ2VuX3hnYl9tb2RlbChtb2RlbF90eXBlOiBzdHIsIHhnYl9wYXJhbXM6IGRpY3QpOgogICAgIiIiZ2VuZXJhdGUgYW4geGdib29zdCBtb2RlbAoKICAgIE11bHRpcGxlIG1vZGVsIHR5cGVzIHRoYXQgY2FuIGJlIGVzdGltYXRlZCB1c2luZwogICAgdGhlIFhHQm9vc3QgU2Npa2l0LUxlYXJuIEFQSS4KCiAgICBJbnB1dCBjYW4gZWl0aGVyIGJlIGEgcHJlZGVmaW5lZCBqc29uIG1vZGVsIGNvbmZpZ3VyYXRpb24gb3Igb25lCiAgICBvZiB0aGUgZml2ZSB4Z2Jvb3N0IG1vZGVsIHR5cGVzOiAiY2xhc3NpZmllciIsICJyZWdyZXNzb3IiLCAicmFua2VyIiwKICAgICJyZl9jbGFzc2lmaWVyIiwgb3IgInJmX3JlZ3Jlc3NvciIuCgogICAgSW4gZWl0aGVyIGNhc2Ugb25lIGNhbiBwYXNzIGluIGEgcGFyYW1zIGRpY3QgdG8gbW9kaWZ5IGRlZmF1bHRzIHZhbHVlcy4KCiAgICBCYXNlZCBvbiBgbWx1dGlscy5tb2RlbHMuZ2VuX3NrbGVhcm5fbW9kZWxgLCBzZWUgdGhlIGZ1bmN0aW9uCiAgICBgc2tsZWFybl9jbGFzc2lmaWVyYCBpbiB0aGlzIHJlcG9zaXRvcnkuCgogICAgOnBhcmFtIG1vZGVsX3R5cGU6IG9uZSBvZiAiY2xhc3NpZmllciIsICJyZWdyZXNzb3IiLAogICAgICAgICAgICAgICAgICAgICAgICJyYW5rZXIiLCAicmZfY2xhc3NpZmllciIsIG9yCiAgICAgICAgICAgICAgICAgICAgICAicmZfcmVncmVzc29yIgogICAgOnBhcmFtIHhnYl9wYXJhbXM6IGNsYXNzIGluaXQgcGFyYW1ldGVycwogICAgIiIiCiAgICBtdHlwZXMgPSB7CiAgICAgICAgImNsYXNzaWZpZXIiOiAieGdib29zdC5YR0JDbGFzc2lmaWVyIiwKICAgICAgICAicmVncmVzc29yIjogInhnYm9vc3QuWEdCUmVncmVzc29yIiwKICAgICAgICAicmFua2VyIjogInhnYm9vc3QuWEdCUmFua2VyIiwKICAgICAgICAicmZfY2xhc3NpZmllciI6ICJ4Z2Jvb3N0LlhHQlJGQ2xhc3NpZmllciIsCiAgICAgICAgInJmX3JlZ3Jlc3NvciI6ICJ4Z2Jvb3N0LlhHQlJGUmVncmVzc29yIiwKICAgIH0KICAgIGlmIG1vZGVsX3R5cGUuZW5kc3dpdGgoImpzb24iKToKICAgICAgICBtb2RlbF9jb25maWcgPSBtb2RlbF90eXBlCiAgICBlbGlmIG1vZGVsX3R5cGUgaW4gbXR5cGVzLmtleXMoKToKICAgICAgICBtb2RlbF9jb25maWcgPSBtdHlwZXNbbW9kZWxfdHlwZV0KICAgIGVsc2U6CiAgICAgICAgcmFpc2UgRXhjZXB0aW9uKCJ1bnJlY29nbml6ZWQgbW9kZWwgdHlwZSwgc2VlIGhlbHAgZG9jdW1lbnRhdGlvbiIpCgogICAgcmV0dXJuIGdlbl9za2xlYXJuX21vZGVsKG1vZGVsX2NvbmZpZywgeGdiX3BhcmFtcykKCgpkZWYgdHJhaW5fbW9kZWwoCiAgICBjb250ZXh0OiBNTENsaWVudEN0eCwKICAgIG1vZGVsX3R5cGU6IHN0ciwKICAgIGRhdGFzZXQ6IFVuaW9uW0RhdGFJdGVtLCBwZC5jb3JlLmZyYW1lLkRhdGFGcmFtZV0sCiAgICBsYWJlbF9jb2x1bW46IHN0ciA9ICJsYWJlbHMiLAogICAgZW5jb2RlX2NvbHM6IGRpY3QgPSB7fSwKICAgIHNhbXBsZTogaW50ID0gLTEsCiAgICBpbWJhbF92ZWM9W10sCiAgICB0ZXN0X3NpemU6IGZsb2F0ID0gMC4yNSwKICAgIHZhbGlkX3NpemU6IGZsb2F0ID0gMC43NSwKICAgIHJhbmRvbV9zdGF0ZTogaW50ID0gMSwKICAgIG1vZGVsc19kZXN0OiBzdHIgPSAibW9kZWxzIiwKICAgIHBsb3RzX2Rlc3Q6IHN0ciA9ICJwbG90cyIsCiAgICBldmFsX21ldHJpY3M6IGxpc3QgPSBbImVycm9yIiwgImF1YyJdLAogICAgZmlsZV9leHQ6IHN0ciA9ICJwYXJxdWV0IiwKICAgIHRlc3Rfc2V0OiBzdHIgPSAidGVzdF9zZXQiLAopIC0+IE5vbmU6CiAgICAiIiJ0cmFpbiBhbiB4Z2Jvb3N0IG1vZGVsLgoKICAgIE5vdGUgb24gaW1hYmFsYW5jZWQgZGF0YTogIHRoZSBgaW1iYWxfdmVjYCBwYXJhbWV0ZXIgcmVwcmVzZW50cyB0aGUgbWVhc3VyZWQKICAgIGNsYXNzIHJlcHJlc2VudGF0aW9ucyBpbiB0aGUgc2FtcGxlIGFuZCBjYW4gYmUgdXNlZCBhcyBhIGZpcnN0IHN0ZXAgaW4gdHVuaW5nCiAgICBhbiBYR0Jvb3N0IG1vZGVsLiAgVGhpcyBpc24ndCBhIGh5cGVycGFyYW10ZXIsIG1lcmVseSBhbiBlc3RpbWF0ZSB0aGF0IHNob3VsZAogICAgYmUgc2V0IGFzICdjb25zdGFudCcgdGhyb3VnaG91dCB0dW5pbmcgcHJvY2Vzcy4KCiAgICA6cGFyYW0gY29udGV4dDogICAgICAgICAgIHRoZSBmdW5jdGlvbiBjb250ZXh0CiAgICA6cGFyYW0gbW9kZWxfdHlwZTogICAgICAgIHRoZSBtb2RlbCB0eXBlIHRvIHRyYWluLCAiY2xhc3NpZmllciIsICJyZWdyZXNzb3IiLi4uCiAgICA6cGFyYW0gZGF0YXNldDogICAgICAgICAgICgiZGF0YSIpIG5hbWUgb2YgcmF3IGRhdGEgZmlsZQogICAgOnBhcmFtIGxhYmVsX2NvbHVtbjogICAgICBncm91bmQtdHJ1dGggKHkpIGxhYmVscwogICAgOnBhcmFtIGVuY29kZV9jb2xzOiAgICAgICBkaWN0aW9uYXJ5IG9mIG5hbWVzIGFuZCBwcmVmaXhlcyBmb3IgY29sdW1ucyB0aGF0IGFyZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBob3QgYmUgZW5jb2RlZC4KICAgIDpwYXJhbSBzYW1wbGU6ICAgICAgICAgICAgU2VsZWN0cyB0aGUgZmlyc3QgbiByb3dzLCBvciBzZWxlY3QgYSBzYW1wbGUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnRpbmcgZnJvbSB0aGUgZmlyc3QuIElmIG5lZ2F0aXZlIDwtMSwgc2VsZWN0CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGEgcmFuZG9tIHNhbXBsZQogICAgOnBhcmFtIGltYmFsX3ZlYzogICAgICAgICAoW10pIHZlY3RvciBvZiBjbGFzcyB3ZWlnaHRzIHNlZW4gaW4gc2FtcGxlCiAgICA6cGFyYW0gdGVzdF9zaXplOiAgICAgICAgICgwLjA1KSB0ZXN0IHNldCBzaXplCiAgICA6cGFyYW0gdmFsaWRfc2l6ZTogICAgICAgICgwLjc1KSBPbmNlIHRoZSB0ZXN0IHNldCBoYXMgYmVlbiByZW1vdmVkIHRoZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFpbmluZyBzZXQgZ2V0cyB0aGlzIHByb3BvcnRpb24uCiAgICA6cGFyYW0gcmFuZG9tX3N0YXRlOiAgICAgICgxKSBza2xlYXJuIHJuZyBzZWVkCiAgICA6cGFyYW0gbW9kZWxzX2Rlc3Q6ICAgICAgIGRlc3RpbmF0aW9uIHN1YmZvbGRlciBmb3IgbW9kZWwgYXJ0aWZhY3RzCiAgICA6cGFyYW0gcGxvdHNfZGVzdDogICAgICAgIGRlc3RpbmF0aW9uIHN1YmZvbGRlciBmb3IgcGxvdCBhcnRpZmFjdHMKICAgIDpwYXJhbSBldmFsX21ldHJpY3M6ICAgICAgKFsiZXJyb3IiLCAiYXVjIl0pIGxlYXJuaW5nIGN1cnZlIG1ldHJpY3MKICAgIDpwYXJhbSBmaWxlX2V4dDogICAgICAgICAgZm9ybWF0IGZvciB0ZXN0X3NldF9rZXkgaG9sZCBvdXQgZGF0YQogICAgOnBhcmFtIHRlc3Qtc2V0OiAgICAgICAgICAodGVzdF9zZXQpIGtleSBvZiBoZWxkIG91dCBkYXRhIGluIGFydGlmYWN0IHN0b3JlCiAgICAiIiIKICAgIG1vZGVsc19kZXN0ID0gbW9kZWxzX2Rlc3Qgb3IgIm1vZGVscyIKICAgIHBsb3RzX2Rlc3QgPSBwbG90c19kZXN0IG9yIGYicGxvdHMve2NvbnRleHQubmFtZX0iCgogICAgcmF3LCBsYWJlbHMsIGhlYWRlciA9IGdldF9zYW1wbGUoZGF0YXNldCwgc2FtcGxlLCBsYWJlbF9jb2x1bW4pCgogICAgaWYgZW5jb2RlX2NvbHM6CiAgICAgICAgcmF3ID0gcGQuZ2V0X2R1bW1pZXMoCiAgICAgICAgICAgIHJhdywKICAgICAgICAgICAgY29sdW1ucz1saXN0KGVuY29kZV9jb2xzLmtleXMoKSksCiAgICAgICAgICAgIHByZWZpeD1saXN0KGVuY29kZV9jb2xzLnZhbHVlcygpKSwKICAgICAgICAgICAgZHJvcF9maXJzdD1UcnVlLAogICAgICAgICkKCiAgICAoeHRyYWluLCB5dHJhaW4pLCAoeHZhbGlkLCB5dmFsaWQpLCAoeHRlc3QsIHl0ZXN0KSA9IGdldF9zcGxpdHMoCiAgICAgICAgcmF3LCBsYWJlbHMsIDMsIHRlc3Rfc2l6ZSwgdmFsaWRfc2l6ZSwgcmFuZG9tX3N0YXRlCiAgICApCgogICAgY29udGV4dC5sb2dfZGF0YXNldCgKICAgICAgICB0ZXN0X3NldCwgZGY9cGQuY29uY2F0KFt4dGVzdCwgeXRlc3RdLCBheGlzPTEpLCBmb3JtYXQ9ZmlsZV9leHQsIGluZGV4PUZhbHNlCiAgICApCgogICAgbW9kZWxfY29uZmlnID0gX2dlbl94Z2JfbW9kZWwobW9kZWxfdHlwZSwgY29udGV4dC5wYXJhbWV0ZXJzLml0ZW1zKCkpCgogICAgWEdCQm9vc3RDbGFzcyA9IGNyZWF0ZV9jbGFzcyhtb2RlbF9jb25maWdbIk1FVEEiXVsiY2xhc3MiXSkKICAgIG1vZGVsID0gWEdCQm9vc3RDbGFzcygqKm1vZGVsX2NvbmZpZ1siQ0xBU1MiXSkKCiAgICBtb2RlbF9jb25maWdbIkZJVCJdLnVwZGF0ZSgKICAgICAgICB7CiAgICAgICAgICAgICJYIjogeHRyYWluLAogICAgICAgICAgICAieSI6IHl0cmFpbi52YWx1ZXMsCiAgICAgICAgICAgICJldmFsX3NldCI6IFsoeHRyYWluLCB5dHJhaW4pLCAoeHZhbGlkLCB5dmFsaWQpXSwKICAgICAgICAgICAgImV2YWxfbWV0cmljIjogZXZhbF9tZXRyaWNzLAogICAgICAgIH0KICAgICkKCiAgICBtb2RlbC5maXQoKiptb2RlbF9jb25maWdbIkZJVCJdKQoKICAgIGV2YWxfbWV0cmljcyA9IGV2YWxfbW9kZWxfdjIoY29udGV4dCwgeHZhbGlkLCB5dmFsaWQsIG1vZGVsKQoKICAgIG1vZGVsX2JpbiA9IGR1bXBzKG1vZGVsKQogICAgY29udGV4dC5sb2dfbW9kZWwoCiAgICAgICAgIm1vZGVsIiwKICAgICAgICBib2R5PW1vZGVsX2JpbiwKICAgICAgICBhcnRpZmFjdF9wYXRoPW9zLnBhdGguam9pbihjb250ZXh0LmFydGlmYWN0X3BhdGgsIG1vZGVsc19kZXN0KSwKICAgICAgICBtb2RlbF9maWxlPSJtb2RlbC5wa2wiLAogICAgKQo=",
          "commands": []
        },
        "disable_auto_mount": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": {}
    },
    {
      "kind": "job",
      "metadata": {
        "name": "coxph-test",
        "tag": "",
        "hash": "d6222d01e0f80645b481b7e4e18e4f68fa374d4b",
        "project": "churn-project-admin",
        "labels": {
          "author": "Iguazio",
          "framework": "survival"
        },
        "categories": [
          "machine-learning",
          "model-testing"
        ],
        "updated": "2021-11-08T16:24:56.465889+00:00",
        "credentials": {
          "access_key": "$generate"
        }
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/ml-models",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "name": "v3io",
            "mountPath": "/v3io"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "http://v3io-webapi:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "1bc19fc2-2089-4c9c-a622-2eaa9868382c"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "http://framesd:8080"
          }
        ],
        "default_handler": "cox_test",
        "entry_points": {
          "cox_test": {
            "name": "cox_test",
            "doc": "Test one or more classifier models against held-out dataset\n\nUsing held-out test features, evaluates the peformance of the estimated model\n\nCan be part of a kubeflow pipeline as a test step that is run post EDA and\ntraining/validation cycles",
            "parameters": [
              {
                "name": "context",
                "doc": "the function context",
                "default": ""
              },
              {
                "name": "models_path",
                "type": "DataItem",
                "default": ""
              },
              {
                "name": "test_set",
                "type": "DataItem",
                "doc": "test features and labels",
                "default": ""
              },
              {
                "name": "label_column",
                "type": "str",
                "doc": "column name for ground truth labels",
                "default": ""
              },
              {
                "name": "plots_dest",
                "type": "str",
                "doc": "dir for test plots",
                "default": "plots"
              },
              {
                "name": "model_evaluator",
                "doc": "WIP: specific method to generate eval, passed in as string or available in this folder",
                "default": null
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 15
          }
        },
        "description": "Test cox proportional hazards model",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHdhcm5pbmdzCgp3YXJuaW5ncy5zaW1wbGVmaWx0ZXIoYWN0aW9uPSJpZ25vcmUiLCBjYXRlZ29yeT1GdXR1cmVXYXJuaW5nKQoKaW1wb3J0IG9zCmltcG9ydCBwYW5kYXMgYXMgcGQKZnJvbSBtbHJ1bi5kYXRhc3RvcmUgaW1wb3J0IERhdGFJdGVtCmZyb20gbWxydW4uYXJ0aWZhY3RzIGltcG9ydCBnZXRfbW9kZWwKZnJvbSBjbG91ZHBpY2tsZSBpbXBvcnQgbG9hZApmcm9tIG1scnVuLm1sdXRpbHMubW9kZWxzIGltcG9ydCBldmFsX2NsYXNzX21vZGVsCgoKZGVmIGNveF90ZXN0KAogICAgY29udGV4dCwKICAgIG1vZGVsc19wYXRoOiBEYXRhSXRlbSwKICAgIHRlc3Rfc2V0OiBEYXRhSXRlbSwKICAgIGxhYmVsX2NvbHVtbjogc3RyLAogICAgcGxvdHNfZGVzdDogc3RyID0gInBsb3RzIiwKICAgIG1vZGVsX2V2YWx1YXRvcj1Ob25lLAopIC0+IE5vbmU6CiAgICAiIiJUZXN0IG9uZSBvciBtb3JlIGNsYXNzaWZpZXIgbW9kZWxzIGFnYWluc3QgaGVsZC1vdXQgZGF0YXNldAoKICAgIFVzaW5nIGhlbGQtb3V0IHRlc3QgZmVhdHVyZXMsIGV2YWx1YXRlcyB0aGUgcGVmb3JtYW5jZSBvZiB0aGUgZXN0aW1hdGVkIG1vZGVsCgogICAgQ2FuIGJlIHBhcnQgb2YgYSBrdWJlZmxvdyBwaXBlbGluZSBhcyBhIHRlc3Qgc3RlcCB0aGF0IGlzIHJ1biBwb3N0IEVEQSBhbmQKICAgIHRyYWluaW5nL3ZhbGlkYXRpb24gY3ljbGVzCgogICAgOnBhcmFtIGNvbnRleHQ6ICAgICAgICAgdGhlIGZ1bmN0aW9uIGNvbnRleHQKICAgIDpwYXJhbSBtb2RlbF9maWxlOiAgICAgIG1vZGVsIGFydGlmYWN0IHRvIGJlIHRlc3RlZAogICAgOnBhcmFtIHRlc3Rfc2V0OiAgICAgICAgdGVzdCBmZWF0dXJlcyBhbmQgbGFiZWxzCiAgICA6cGFyYW0gbGFiZWxfY29sdW1uOiAgICBjb2x1bW4gbmFtZSBmb3IgZ3JvdW5kIHRydXRoIGxhYmVscwogICAgOnBhcmFtIHNjb3JlX21ldGhvZDogICAgZm9yIG11bHRpY2xhc3MgY2xhc3NpZmljYXRpb24KICAgIDpwYXJhbSBwbG90c19kZXN0OiAgICAgIGRpciBmb3IgdGVzdCBwbG90cwogICAgOnBhcmFtIG1vZGVsX2V2YWx1YXRvcjogV0lQOiBzcGVjaWZpYyBtZXRob2QgdG8gZ2VuZXJhdGUgZXZhbCwgcGFzc2VkIGluIGFzIHN0cmluZwogICAgICAgICAgICAgICAgICAgICAgICAgICAgb3IgYXZhaWxhYmxlIGluIHRoaXMgZm9sZGVyCiAgICAiIiIKICAgIHh0ZXN0ID0gdGVzdF9zZXQuYXNfZGYoKQogICAgeXRlc3QgPSB4dGVzdC5wb3AobGFiZWxfY29sdW1uKQoKICAgIG1vZGVsX2ZpbGUsIG1vZGVsX29iaiwgXyA9IGdldF9tb2RlbChtb2RlbHNfcGF0aC51cmwsIHN1ZmZpeD0iLnBrbCIpCiAgICBtb2RlbF9vYmogPSBsb2FkKG9wZW4oc3RyKG1vZGVsX2ZpbGUpLCAicmIiKSkKCiAgICB0cnk6CiAgICAgICAgaWYgbm90IG1vZGVsX2V2YWx1YXRvcjoKICAgICAgICAgICAgZXZhbF9tZXRyaWNzID0gZXZhbF9jbGFzc19tb2RlbChjb250ZXh0LCB4dGVzdCwgeXRlc3QsIG1vZGVsX29iaikKCiAgICAgICAgbW9kZWxfcGxvdHMgPSBldmFsX21ldHJpY3MucG9wKCJwbG90cyIpCiAgICAgICAgbW9kZWxfdGFibGVzID0gZXZhbF9tZXRyaWNzLnBvcCgidGFibGVzIikKICAgICAgICBmb3IgcGxvdCBpbiBtb2RlbF9wbG90czoKICAgICAgICAgICAgY29udGV4dC5sb2dfYXJ0aWZhY3QocGxvdCwgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS97cGxvdC5rZXl9Lmh0bWwiKQogICAgICAgIGZvciB0YmwgaW4gbW9kZWxfdGFibGVzOgogICAgICAgICAgICBjb250ZXh0LmxvZ19hcnRpZmFjdCh0YmwsIGxvY2FsX3BhdGg9ZiJ7cGxvdHNfZGVzdH0ve3Bsb3Qua2V5fS5jc3YiKQoKICAgICAgICBjb250ZXh0LmxvZ19yZXN1bHRzKGV2YWxfbWV0cmljcykKICAgIGV4Y2VwdDoKICAgICAgICBjb250ZXh0LmxvZ19kYXRhc2V0KAogICAgICAgICAgICAiY294LXRlc3Qtc3VtbWFyeSIsIGRmPW1vZGVsX29iai5zdW1tYXJ5LCBpbmRleD1UcnVlLCBmb3JtYXQ9ImNzdiIKICAgICAgICApCiAgICAgICAgY29udGV4dC5sb2dnZXIuaW5mbygiY294IHRlc3RlciBub3QgaW1wbGVtZW50ZWQiKQo=",
          "commands": []
        },
        "disable_auto_mount": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "xgb-test",
        "tag": "latest",
        "hash": "ffd500ade4195173984a2da6d9bed5eb2e55e461",
        "project": "churn-project-admin",
        "labels": {
          "author": "Daniel",
          "framework": "xgboost"
        },
        "categories": [
          "model-testing"
        ],
        "updated": "2021-11-08T16:25:02.183253+00:00",
        "credentials": {
          "access_key": "$generate"
        }
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/ml-models",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "name": "v3io",
            "mountPath": "/v3io"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "http://v3io-webapi:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "1bc19fc2-2089-4c9c-a622-2eaa9868382c"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "http://framesd:8080"
          }
        ],
        "default_handler": "xgb_test",
        "entry_points": {
          "xgb_test": {
            "name": "xgb_test",
            "doc": "Test one or more classifier models against held-out dataset\n\nUsing held-out test features, evaluates the peformance of the estimated model\n\nCan be part of a kubeflow pipeline as a test step that is run post EDA and\ntraining/validation cycles",
            "parameters": [
              {
                "name": "context",
                "doc": "the function context",
                "default": ""
              },
              {
                "name": "models_path",
                "type": "DataItem",
                "doc": "model artifact to be tested",
                "default": ""
              },
              {
                "name": "test_set",
                "type": "DataItem",
                "doc": "test features and labels",
                "default": ""
              },
              {
                "name": "label_column",
                "type": "str",
                "doc": "column name for ground truth labels",
                "default": ""
              },
              {
                "name": "plots_dest",
                "type": "str",
                "doc": "dir for test plots",
                "default": "plots"
              },
              {
                "name": "default_model",
                "type": "str",
                "doc": "'model.pkl', default model artifact file name",
                "default": "model.pkl"
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 16
          }
        },
        "description": "Test one or more classifier models against held-out dataset.",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHdhcm5pbmdzCgp3YXJuaW5ncy5zaW1wbGVmaWx0ZXIoYWN0aW9uPSJpZ25vcmUiLCBjYXRlZ29yeT1GdXR1cmVXYXJuaW5nKQoKaW1wb3J0IG9zCmltcG9ydCBwYW5kYXMgYXMgcGQKZnJvbSBtbHJ1bi5kYXRhc3RvcmUgaW1wb3J0IERhdGFJdGVtCmZyb20gbWxydW4uYXJ0aWZhY3RzIGltcG9ydCBnZXRfbW9kZWwKZnJvbSBjbG91ZHBpY2tsZSBpbXBvcnQgbG9hZAoKZnJvbSBtbHJ1bi5tbHV0aWxzLm1vZGVscyBpbXBvcnQgZXZhbF9tb2RlbF92MgoKCmRlZiB4Z2JfdGVzdCgKICAgIGNvbnRleHQsCiAgICBtb2RlbHNfcGF0aDogRGF0YUl0ZW0sCiAgICB0ZXN0X3NldDogRGF0YUl0ZW0sCiAgICBsYWJlbF9jb2x1bW46IHN0ciwKICAgIHBsb3RzX2Rlc3Q6IHN0ciA9ICJwbG90cyIsCiAgICBkZWZhdWx0X21vZGVsOiBzdHIgPSAibW9kZWwucGtsIiwKKSAtPiBOb25lOgogICAgIiIiVGVzdCBvbmUgb3IgbW9yZSBjbGFzc2lmaWVyIG1vZGVscyBhZ2FpbnN0IGhlbGQtb3V0IGRhdGFzZXQKCiAgICBVc2luZyBoZWxkLW91dCB0ZXN0IGZlYXR1cmVzLCBldmFsdWF0ZXMgdGhlIHBlZm9ybWFuY2Ugb2YgdGhlIGVzdGltYXRlZCBtb2RlbAoKICAgIENhbiBiZSBwYXJ0IG9mIGEga3ViZWZsb3cgcGlwZWxpbmUgYXMgYSB0ZXN0IHN0ZXAgdGhhdCBpcyBydW4gcG9zdCBFREEgYW5kCiAgICB0cmFpbmluZy92YWxpZGF0aW9uIGN5Y2xlcwoKICAgIDpwYXJhbSBjb250ZXh0OiAgICAgICAgIHRoZSBmdW5jdGlvbiBjb250ZXh0CiAgICA6cGFyYW0gbW9kZWxzX3BhdGg6ICAgICBtb2RlbCBhcnRpZmFjdCB0byBiZSB0ZXN0ZWQKICAgIDpwYXJhbSB0ZXN0X3NldDogICAgICAgIHRlc3QgZmVhdHVyZXMgYW5kIGxhYmVscwogICAgOnBhcmFtIGxhYmVsX2NvbHVtbjogICAgY29sdW1uIG5hbWUgZm9yIGdyb3VuZCB0cnV0aCBsYWJlbHMKICAgIDpwYXJhbSBwbG90c19kZXN0OiAgICAgIGRpciBmb3IgdGVzdCBwbG90cwogICAgOnBhcmFtIGRlZmF1bHRfbW9kZWw6ICAgJ21vZGVsLnBrbCcsIGRlZmF1bHQgbW9kZWwgYXJ0aWZhY3QgZmlsZSBuYW1lCiAgICAiIiIKICAgIHh0ZXN0ID0gdGVzdF9zZXQuYXNfZGYoKQogICAgeXRlc3QgPSB4dGVzdC5wb3AobGFiZWxfY29sdW1uKQoKICAgIHRyeToKICAgICAgICBtb2RlbF9maWxlLCBtb2RlbF9vYmosIF8gPSBnZXRfbW9kZWwobW9kZWxzX3BhdGgudXJsLCBzdWZmaXg9Ii5wa2wiKQogICAgICAgIG1vZGVsX29iaiA9IGxvYWQob3Blbihtb2RlbF9maWxlLCAicmIiKSkKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgYToKICAgICAgICByYWlzZSBFeGNlcHRpb24oIm1vZGVsIGxvY2F0aW9uIGxpa2VseSBtaXNzcGVjaWZpZWQiKQoKICAgIGV2YWxfbWV0cmljcyA9IGV2YWxfbW9kZWxfdjIoY29udGV4dCwgeHRlc3QsIHl0ZXN0LnZhbHVlcywgbW9kZWxfb2JqKQo=",
          "commands": []
        },
        "disable_auto_mount": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": {}
    },
    {
      "kind": "job",
      "metadata": {
        "name": "test-m",
        "tag": "latest",
        "hash": "7a0e575b863c0affb55dd39fc7da0ca548f8ecfd",
        "project": "churn-project-admin",
        "categories": [],
        "updated": "2021-11-09T15:39:16.813107+00:00",
        "credentials": {
          "access_key": "$generate"
        }
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [],
        "volume_mounts": [],
        "env": [
          {
            "name": "V3IO_API",
            "value": "http://v3io-webapi:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "1bc19fc2-2089-4c9c-a622-2eaa9868382c"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "http://framesd:8080"
          }
        ],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "handler",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": "",
          "base_image": "",
          "commands": []
        },
        "disable_auto_mount": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": {}
    },
    {
      "kind": "job",
      "metadata": {
        "name": "coxph-test",
        "tag": "latest",
        "hash": "693c82b272e03cddf64dfb578e6de3a266c221d2",
        "project": "churn-project-admin",
        "labels": {
          "author": "Iguazio",
          "framework": "survival"
        },
        "categories": [
          "machine-learning",
          "model-testing"
        ],
        "updated": "2021-11-09T15:39:47.022491+00:00",
        "credentials": {
          "access_key": "$generate"
        }
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/ml-models",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "name": "v3io",
            "mountPath": "/v3io"
          },
          {
            "name": "v3io",
            "mountPath": "/User"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "http://v3io-webapi:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "1bc19fc2-2089-4c9c-a622-2eaa9868382c"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "http://framesd:8080"
          }
        ],
        "default_handler": "cox_test",
        "entry_points": {
          "cox_test": {
            "name": "cox_test",
            "doc": "Test one or more classifier models against held-out dataset\n\nUsing held-out test features, evaluates the peformance of the estimated model\n\nCan be part of a kubeflow pipeline as a test step that is run post EDA and\ntraining/validation cycles",
            "parameters": [
              {
                "name": "context",
                "doc": "the function context",
                "default": ""
              },
              {
                "name": "models_path",
                "type": "DataItem",
                "default": ""
              },
              {
                "name": "test_set",
                "type": "DataItem",
                "doc": "test features and labels",
                "default": ""
              },
              {
                "name": "label_column",
                "type": "str",
                "doc": "column name for ground truth labels",
                "default": ""
              },
              {
                "name": "plots_dest",
                "type": "str",
                "doc": "dir for test plots",
                "default": "plots"
              },
              {
                "name": "model_evaluator",
                "doc": "WIP: specific method to generate eval, passed in as string or available in this folder",
                "default": null
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 15
          }
        },
        "description": "Test cox proportional hazards model",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHdhcm5pbmdzCgp3YXJuaW5ncy5zaW1wbGVmaWx0ZXIoYWN0aW9uPSJpZ25vcmUiLCBjYXRlZ29yeT1GdXR1cmVXYXJuaW5nKQoKaW1wb3J0IG9zCmltcG9ydCBwYW5kYXMgYXMgcGQKZnJvbSBtbHJ1bi5kYXRhc3RvcmUgaW1wb3J0IERhdGFJdGVtCmZyb20gbWxydW4uYXJ0aWZhY3RzIGltcG9ydCBnZXRfbW9kZWwKZnJvbSBjbG91ZHBpY2tsZSBpbXBvcnQgbG9hZApmcm9tIG1scnVuLm1sdXRpbHMubW9kZWxzIGltcG9ydCBldmFsX2NsYXNzX21vZGVsCgoKZGVmIGNveF90ZXN0KAogICAgY29udGV4dCwKICAgIG1vZGVsc19wYXRoOiBEYXRhSXRlbSwKICAgIHRlc3Rfc2V0OiBEYXRhSXRlbSwKICAgIGxhYmVsX2NvbHVtbjogc3RyLAogICAgcGxvdHNfZGVzdDogc3RyID0gInBsb3RzIiwKICAgIG1vZGVsX2V2YWx1YXRvcj1Ob25lLAopIC0+IE5vbmU6CiAgICAiIiJUZXN0IG9uZSBvciBtb3JlIGNsYXNzaWZpZXIgbW9kZWxzIGFnYWluc3QgaGVsZC1vdXQgZGF0YXNldAoKICAgIFVzaW5nIGhlbGQtb3V0IHRlc3QgZmVhdHVyZXMsIGV2YWx1YXRlcyB0aGUgcGVmb3JtYW5jZSBvZiB0aGUgZXN0aW1hdGVkIG1vZGVsCgogICAgQ2FuIGJlIHBhcnQgb2YgYSBrdWJlZmxvdyBwaXBlbGluZSBhcyBhIHRlc3Qgc3RlcCB0aGF0IGlzIHJ1biBwb3N0IEVEQSBhbmQKICAgIHRyYWluaW5nL3ZhbGlkYXRpb24gY3ljbGVzCgogICAgOnBhcmFtIGNvbnRleHQ6ICAgICAgICAgdGhlIGZ1bmN0aW9uIGNvbnRleHQKICAgIDpwYXJhbSBtb2RlbF9maWxlOiAgICAgIG1vZGVsIGFydGlmYWN0IHRvIGJlIHRlc3RlZAogICAgOnBhcmFtIHRlc3Rfc2V0OiAgICAgICAgdGVzdCBmZWF0dXJlcyBhbmQgbGFiZWxzCiAgICA6cGFyYW0gbGFiZWxfY29sdW1uOiAgICBjb2x1bW4gbmFtZSBmb3IgZ3JvdW5kIHRydXRoIGxhYmVscwogICAgOnBhcmFtIHNjb3JlX21ldGhvZDogICAgZm9yIG11bHRpY2xhc3MgY2xhc3NpZmljYXRpb24KICAgIDpwYXJhbSBwbG90c19kZXN0OiAgICAgIGRpciBmb3IgdGVzdCBwbG90cwogICAgOnBhcmFtIG1vZGVsX2V2YWx1YXRvcjogV0lQOiBzcGVjaWZpYyBtZXRob2QgdG8gZ2VuZXJhdGUgZXZhbCwgcGFzc2VkIGluIGFzIHN0cmluZwogICAgICAgICAgICAgICAgICAgICAgICAgICAgb3IgYXZhaWxhYmxlIGluIHRoaXMgZm9sZGVyCiAgICAiIiIKICAgIHh0ZXN0ID0gdGVzdF9zZXQuYXNfZGYoKQogICAgeXRlc3QgPSB4dGVzdC5wb3AobGFiZWxfY29sdW1uKQoKICAgIG1vZGVsX2ZpbGUsIG1vZGVsX29iaiwgXyA9IGdldF9tb2RlbChtb2RlbHNfcGF0aC51cmwsIHN1ZmZpeD0iLnBrbCIpCiAgICBtb2RlbF9vYmogPSBsb2FkKG9wZW4oc3RyKG1vZGVsX2ZpbGUpLCAicmIiKSkKCiAgICB0cnk6CiAgICAgICAgaWYgbm90IG1vZGVsX2V2YWx1YXRvcjoKICAgICAgICAgICAgZXZhbF9tZXRyaWNzID0gZXZhbF9jbGFzc19tb2RlbChjb250ZXh0LCB4dGVzdCwgeXRlc3QsIG1vZGVsX29iaikKCiAgICAgICAgbW9kZWxfcGxvdHMgPSBldmFsX21ldHJpY3MucG9wKCJwbG90cyIpCiAgICAgICAgbW9kZWxfdGFibGVzID0gZXZhbF9tZXRyaWNzLnBvcCgidGFibGVzIikKICAgICAgICBmb3IgcGxvdCBpbiBtb2RlbF9wbG90czoKICAgICAgICAgICAgY29udGV4dC5sb2dfYXJ0aWZhY3QocGxvdCwgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS97cGxvdC5rZXl9Lmh0bWwiKQogICAgICAgIGZvciB0YmwgaW4gbW9kZWxfdGFibGVzOgogICAgICAgICAgICBjb250ZXh0LmxvZ19hcnRpZmFjdCh0YmwsIGxvY2FsX3BhdGg9ZiJ7cGxvdHNfZGVzdH0ve3Bsb3Qua2V5fS5jc3YiKQoKICAgICAgICBjb250ZXh0LmxvZ19yZXN1bHRzKGV2YWxfbWV0cmljcykKICAgIGV4Y2VwdDoKICAgICAgICBjb250ZXh0LmxvZ19kYXRhc2V0KAogICAgICAgICAgICAiY294LXRlc3Qtc3VtbWFyeSIsIGRmPW1vZGVsX29iai5zdW1tYXJ5LCBpbmRleD1UcnVlLCBmb3JtYXQ9ImNzdiIKICAgICAgICApCiAgICAgICAgY29udGV4dC5sb2dnZXIuaW5mbygiY294IHRlc3RlciBub3QgaW1wbGVtZW50ZWQiKQo=",
          "commands": []
        },
        "disable_auto_mount": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": {}
    },
    {
      "kind": "job",
      "metadata": {
        "name": "test-m_ingest", 
        "project": "churn-project-admin", 
        "categories": [],
        "credentials": {
          "access_key": "$generate"
        },
        "tag": "latest",
        "hash": "e0f808c23bf528ecc33e6f40050dd42b4df6c2de", 
        "updated": "2022-08-07T10:34:49.002606+00:00" 
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [],
        "volume_mounts": [],
        "env": [
          {
            "name": "V3IO_API",
            "value": "http://v3io-webapi:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "1bc19fc2-2089-4c9c-a622-2eaa9868382c"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "http://framesd:8080"
          }
        ],
        "default_handler": "train", 
        "description": "",
        "build": {
          "functionSourceCode": "CmZyb20gbWxydW4uZmVhdHVyZV9zdG9yZS5hcGkgaW1wb3J0IGluZ2VzdApkZWYgaGFuZGxlcihjb250ZXh0KToKICAgIGluZ2VzdChtbHJ1bl9jb250ZXh0PWNvbnRleHQpCg==",
          "commands": []
        },
        "disable_auto_mount": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": {}
    },
    {
      "kind": "job",
      "metadata": {
        "name": "test-m_ingest",
        "project": "churn-project-admin",
        "categories": [],
        "credentials": {
          "access_key": "$generate"
        },
        "tag": "latest",
        "hash": "b86c48167a66bd146436f268bc0abc537937cfc5",
        "updated": "2021-11-15T12:27:23.917549+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [],
        "volume_mounts": [],
        "env": [
          {
            "name": "V3IO_API",
            "value": "http://v3io-webapi:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "1bc19fc2-2089-4c9c-a622-2eaa9868382c"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "http://framesd:8080"
          }
        ],
        "default_handler": "handler",
        "description": "",
        "build": {
          "functionSourceCode": "CmZyb20gbWxydW4uZmVhdHVyZV9zdG9yZS5hcGkgaW1wb3J0IGluZ2VzdApkZWYgaGFuZGxlcihjb250ZXh0KToKICAgIGluZ2VzdChtbHJ1bl9jb250ZXh0PWNvbnRleHQpCg==",
          "commands": []
        },
        "disable_auto_mount": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": {}
    },
    {
      "kind": "job",
      "metadata": {
        "labels": {},
        "name": "erann-test",
        "tag": "",
        "project": "default",
        "hash": "e90669aff8ade56f9ea11b6f36b8c7a19e0ffcb8",
        "updated": "2021-08-31T15:35:42.619923+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "",
          "commands": [
            "pip install pandas"
          ],
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ""
        },
        "default_handler": "handler",
        "description": "",
        "env": [],
        "image": "",
        "volume_mounts": [],
        "volumes": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "secret_sources": []
      },
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "erann-test",
        "tag": "",
        "project": "default",
        "categories": [],
        "hash": "ce7d0eced1911bec9065e82abfbad266f5574c55",
        "updated": "2021-08-31T15:35:42.970123+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "",
        "volumes": [],
        "volume_mounts": [],
        "env": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "handler",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ".mlrun/func-default-erann-test:latest",
          "base_image": "",
          "commands": [
            "pip install pandas",
            "python -m pip install \"mlrun[complete]==0.7.0-rc13\""
          ]
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "",
      "metadata": {
        "labels": {},
        "name": "erann-test",
        "project": "default",
        "tag": "",
        "hash": "a954642badfdcca6191dfcf126b1d287705be90d",
        "updated": "2021-08-31T17:09:46.167607+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "",
          "commands": "",
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ""
        },
        "default_handler": "handler",
        "description": "",
        "env": [],
        "image": "mlrun/mlrun",
        "volume_mounts": [],
        "volumes": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "secret_sources": []
      },
      "status": null
    },
    {
      "kind": "handler",
      "metadata": {
        "name": "erann-test",
        "project": "default",
        "categories": [],
        "tag": "",
        "hash": "5ec20e48f2d1f52dd92eb97dc4b90e3dab8430c1",
        "updated": "2021-08-31T17:09:46.559086+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "",
        "build": {
          "image": ".mlrun/func-default-erann-test:latest",
          "commands": []
        },
        "description": "",
        "disable_auto_mount": false
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "handler",
      "metadata": {
        "name": "erann-test",
        "project": "default",
        "categories": [],
        "tag": "",
        "hash": "34cfc554d79baf7d39641c81aa07aeccf15fe381",
        "updated": "2021-08-31T17:15:03.926937+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": ".mlrun/func-default-erann-test:latest",
        "build": {
          "image": ".mlrun/func-default-erann-test:latest",
          "commands": []
        },
        "description": "",
        "disable_auto_mount": false
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "labels": {},
        "name": "failed-func",
        "tag": "",
        "project": "default",
        "hash": "bb9e70abdc932496a8b39941ee3a8828ec2541cc",
        "updated": "2021-08-31T17:54:14.904519+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "",
          "commands": [
            "failed & fail"
          ],
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ""
        },
        "default_handler": "hand",
        "description": "",
        "env": [],
        "image": "",
        "volume_mounts": [],
        "volumes": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "secret_sources": []
      },
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "failed-func",
        "tag": "latest",
        "project": "default",
        "categories": [],
        "hash": "ef77f6d18f42ea33597c3a59490f96ebad8f67c6",
        "updated": "2021-08-31T17:55:42.863357+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "",
        "volumes": [],
        "volume_mounts": [],
        "env": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "hand",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ".mlrun/func-default-failed-func:latest",
          "base_image": "",
          "commands": [
            "failed & fail",
            "python -m pip install \"mlrun[complete]==0.7.0-rc13\""
          ]
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "status": {
        "state": "error",
        "build_pod": "mlrun-build-failed-func-hk758"
      },
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "name": "failed-func",
        "tag": "",
        "project": "default",
        "categories": [],
        "hash": "ef77f6d18f42ea33597c3a59490f96ebad8f67c6",
        "updated": "2021-08-31T17:54:15.149963+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "",
        "volumes": [],
        "volume_mounts": [],
        "env": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "hand",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ".mlrun/func-default-failed-func:latest",
          "base_image": "",
          "commands": [
            "failed & fail",
            "python -m pip install \"mlrun[complete]==0.7.0-rc13\""
          ]
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "local",
      "metadata": {
        "labels": {},
        "name": "erann-local",
        "tag": "",
        "project": "default",
        "hash": "f91c9f40b4fe3813c9f58e44cc14ddb91488372a",
        "updated": "2021-08-31T19:00:49.264212+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "",
          "commands": "",
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ""
        },
        "default_handler": "handler",
        "description": "",
        "env": [],
        "image": "mlrun/mlrun",
        "volume_mounts": [],
        "volumes": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "secret_sources": []
      },
      "status": null
    },
    {
      "kind": "local",
      "metadata": {
        "labels": {},
        "name": "erann-local",
        "project": "default",
        "tag": "",
        "hash": "19f00cbce2f1fbbab95e61be4c72c62cb87795e1",
        "updated": "2021-08-31T19:02:33.298736+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "",
          "commands": "",
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ""
        },
        "default_handler": "handler",
        "description": "",
        "env": [],
        "image": "",
        "volume_mounts": [],
        "volumes": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "secret_sources": []
      },
      "status": null
    },
    {
      "kind": "local",
      "metadata": {
        "name": "erann-local",
        "tag": "",
        "project": "default",
        "categories": [],
        "hash": "4451fdb3f2dceb6e5931383276eb0687d3dc10c0",
        "updated": "2021-08-31T19:02:33.684882+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ".mlrun/func-default-erann-local:latest",
          "base_image": "",
          "commands": ""
        },
        "description": "",
        "default_handler": "handler",
        "disable_auto_mount": false
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "local",
      "metadata": {
        "name": "erann-local",
        "tag": "latest",
        "hash": "a2760d7ec3965804abe7a972dd4a512b8a364520",
        "project": "default",
        "categories": [],
        "updated": "2021-08-31T19:07:10.433050+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": ".mlrun/func-default-erann-local:latest",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ".mlrun/func-default-erann-local:latest",
          "base_image": "",
          "commands": ""
        },
        "description": "",
        "default_handler": "handler",
        "disable_auto_mount": false
      },
      "verbose": false,
      "status": {}
    },
    {
      "kind": "job",
      "metadata": {
        "labels": {},
        "name": "erann-test",
        "project": "default",
        "tag": "",
        "hash": "c46e626370b916c85ffb883c05c493f07ea8212c",
        "updated": "2021-09-01T11:08:00.006326+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "",
          "commands": [],
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ""
        },
        "default_handler": "handler",
        "description": "",
        "env": [],
        "image": "mlrun/mlrun",
        "volume_mounts": [],
        "volumes": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "secret_sources": []
      },
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "labels": {},
        "name": "erann-test",
        "project": "default",
        "tag": "",
        "hash": "d1d5d477ea74458b018aca28d90e50dfd0692cf9",
        "updated": "2021-09-01T14:42:36.723452+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "",
          "commands": "",
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ""
        },
        "default_handler": "handler",
        "description": "",
        "env": [],
        "image": "mlrun/mlrun",
        "volume_mounts": [],
        "volumes": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "secret_sources": []
      },
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "aggregate",
        "tag": "",
        "hash": "0bfc2d6cfc9a5ca9b23e558475ff29dc5d645a5a",
        "project": "default",
        "labels": {
          "author": "avia"
        },
        "categories": [
          "data-preparation"
        ],
        "updated": "2021-09-03T13:53:30.457597+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [],
        "volume_mounts": [],
        "env": [],
        "default_handler": "aggregate",
        "entry_points": {
          "aggregate": {
            "name": "aggregate",
            "doc": "Time-series aggregation function\n\nWill perform a rolling aggregation on {df_artifact}, over {window} by the selected {keys}\napplying {metric_aggs} on {metrics} and {label_aggs} on {labels}. adding {suffix} to the \nfeature names.\n\nif not {inplace}, will return the original {df_artifact}, joined by the aggregated result.",
            "parameters": [
              {
                "name": "context",
                "default": ""
              },
              {
                "name": "df_artifact",
                "type": "Union[DataItem, DataFrame]",
                "doc": "MLRun input pointing to pandas dataframe (csv/parquet file path) or a  directory containing parquet files. * When given a directory the latest {files_to_select} will be selected",
                "default": ""
              },
              {
                "name": "save_to",
                "type": "str",
                "doc": "Where to save the result dataframe. * If relative will add to the {artifact_path}",
                "default": "aggregated-df.pq"
              },
              {
                "name": "keys",
                "type": "list",
                "doc": "Subset of indexes from the source dataframe to aggregate by (default=all)",
                "default": null
              },
              {
                "name": "metrics",
                "type": "list",
                "doc": "Array containing a list of metrics to run the aggregations on. (default=None) ",
                "default": null
              },
              {
                "name": "labels",
                "type": "list",
                "doc": "Array containing a list of labels to run the aggregations on. (default=None) ",
                "default": null
              },
              {
                "name": "metric_aggs",
                "type": "list",
                "doc": "Array containing a list of aggregation function names to run on {metrics}. (Ex: 'mean', 'std') (default='mean')",
                "default": [
                  "mean"
                ]
              },
              {
                "name": "label_aggs",
                "type": "list",
                "doc": "Array containing a list of aggregation function names to run on {metrics}. (Ex: 'max', 'min') (default='max') ",
                "default": [
                  "max"
                ]
              },
              {
                "name": "suffix",
                "type": "str",
                "doc": "Suffix to add to the feature name, E.g: <Feature_Name>_<Agg_Function>_<Suffix> (Ex: 'last_60_mintes') (default='')",
                "default": ""
              },
              {
                "name": "window",
                "type": "int",
                "doc": "Window size to perform the rolling aggregate on. (default=3)",
                "default": 3
              },
              {
                "name": "center",
                "type": "bool",
                "doc": "If True, Sets the value for the central sample in the window, If False, will set the value to the last sample. (default=False)",
                "default": false
              },
              {
                "name": "inplace",
                "type": "bool",
                "doc": "If True, will return only the aggregated results. If False, will join the aggregated results with the original dataframe",
                "default": false
              },
              {
                "name": "drop_na",
                "type": "bool",
                "doc": "Will drop na lines due to the Rolling.",
                "default": true
              },
              {
                "name": "files_to_select",
                "type": "int",
                "doc": "Specifies the number of *latest* files to select (and concat) for aggregation.",
                "default": 1
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 9
          }
        },
        "description": "Rolling aggregation over Metrics and Lables according to specifications",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG9zCmltcG9ydCBwYW5kYXMgYXMgcGQKZnJvbSBtbHJ1bi5kYXRhc3RvcmUgaW1wb3J0IERhdGFJdGVtCgpmcm9tIHR5cGluZyBpbXBvcnQgVW5pb24KCmRlZiBhZ2dyZWdhdGUoY29udGV4dCwKICAgICAgICAgICAgICBkZl9hcnRpZmFjdDogVW5pb25bRGF0YUl0ZW0sIHBkLmNvcmUuZnJhbWUuRGF0YUZyYW1lXSwKICAgICAgICAgICAgICBzYXZlX3RvOiBzdHIgPSAnYWdncmVnYXRlZC1kZi5wcScsIAogICAgICAgICAgICAgIGtleXM6IGxpc3QgPSBOb25lLCAKICAgICAgICAgICAgICBtZXRyaWNzOiBsaXN0ID0gTm9uZSwgCiAgICAgICAgICAgICAgbGFiZWxzOiBsaXN0ID0gTm9uZSwgCiAgICAgICAgICAgICAgbWV0cmljX2FnZ3M6IGxpc3QgPSBbJ21lYW4nXSwgCiAgICAgICAgICAgICAgbGFiZWxfYWdnczogbGlzdCA9IFsnbWF4J10sIAogICAgICAgICAgICAgIHN1ZmZpeDogc3RyID0gJycsIAogICAgICAgICAgICAgIHdpbmRvdzogaW50ID0gMywgCiAgICAgICAgICAgICAgY2VudGVyOiBib29sID0gRmFsc2UsIAogICAgICAgICAgICAgIGlucGxhY2U6IGJvb2wgPSBGYWxzZSwKICAgICAgICAgICAgICBkcm9wX25hOiBib29sID0gVHJ1ZSwKICAgICAgICAgICAgICBmaWxlc190b19zZWxlY3Q6IGludCA9IDEpOgogICAgIiIiVGltZS1zZXJpZXMgYWdncmVnYXRpb24gZnVuY3Rpb24KICAgIAogICAgV2lsbCBwZXJmb3JtIGEgcm9sbGluZyBhZ2dyZWdhdGlvbiBvbiB7ZGZfYXJ0aWZhY3R9LCBvdmVyIHt3aW5kb3d9IGJ5IHRoZSBzZWxlY3RlZCB7a2V5c30KICAgIGFwcGx5aW5nIHttZXRyaWNfYWdnc30gb24ge21ldHJpY3N9IGFuZCB7bGFiZWxfYWdnc30gb24ge2xhYmVsc30uIGFkZGluZyB7c3VmZml4fSB0byB0aGUgCiAgICBmZWF0dXJlIG5hbWVzLgogICAgCiAgICBpZiBub3Qge2lucGxhY2V9LCB3aWxsIHJldHVybiB0aGUgb3JpZ2luYWwge2RmX2FydGlmYWN0fSwgam9pbmVkIGJ5IHRoZSBhZ2dyZWdhdGVkIHJlc3VsdC4KICAgIAogICAgOnBhcmFtIGRmX2FydGlmYWN0OiBNTFJ1biBpbnB1dCBwb2ludGluZyB0byBwYW5kYXMgZGF0YWZyYW1lIChjc3YvcGFycXVldCBmaWxlIHBhdGgpIG9yIGEgCiAgICAgICAgICAgICAgICAgICAgICAgIGRpcmVjdG9yeSBjb250YWluaW5nIHBhcnF1ZXQgZmlsZXMuCiAgICAgICAgICAgICAgICAgICAgICAgICogV2hlbiBnaXZlbiBhIGRpcmVjdG9yeSB0aGUgbGF0ZXN0IHtmaWxlc190b19zZWxlY3R9IHdpbGwgYmUgc2VsZWN0ZWQKICAgIDpwYXJhbSBzYXZlX3RvOiAgICAgV2hlcmUgdG8gc2F2ZSB0aGUgcmVzdWx0IGRhdGFmcmFtZS4KICAgICAgICAgICAgICAgICAgICAgICAgKiBJZiByZWxhdGl2ZSB3aWxsIGFkZCB0byB0aGUge2FydGlmYWN0X3BhdGh9CiAgICA6cGFyYW0ga2V5czogICAgICAgIFN1YnNldCBvZiBpbmRleGVzIGZyb20gdGhlIHNvdXJjZSBkYXRhZnJhbWUgdG8gYWdncmVnYXRlIGJ5IChkZWZhdWx0PWFsbCkKICAgIDpwYXJhbSBtZXRyaWNzOiAgICAgQXJyYXkgY29udGFpbmluZyBhIGxpc3Qgb2YgbWV0cmljcyB0byBydW4gdGhlIGFnZ3JlZ2F0aW9ucyBvbi4gKGRlZmF1bHQ9Tm9uZSkgCiAgICA6cGFyYW0gbGFiZWxzOiAgICAgIEFycmF5IGNvbnRhaW5pbmcgYSBsaXN0IG9mIGxhYmVscyB0byBydW4gdGhlIGFnZ3JlZ2F0aW9ucyBvbi4gKGRlZmF1bHQ9Tm9uZSkgCiAgICA6cGFyYW0gbWV0cmljX2FnZ3M6IEFycmF5IGNvbnRhaW5pbmcgYSBsaXN0IG9mIGFnZ3JlZ2F0aW9uIGZ1bmN0aW9uIG5hbWVzIHRvIHJ1biBvbiB7bWV0cmljc30uCiAgICAgICAgICAgICAgICAgICAgICAgIChFeDogJ21lYW4nLCAnc3RkJykgKGRlZmF1bHQ9J21lYW4nKQogICAgOnBhcmFtIGxhYmVsX2FnZ3M6ICBBcnJheSBjb250YWluaW5nIGEgbGlzdCBvZiBhZ2dyZWdhdGlvbiBmdW5jdGlvbiBuYW1lcyB0byBydW4gb24ge21ldHJpY3N9LgogICAgICAgICAgICAgICAgICAgICAgICAoRXg6ICdtYXgnLCAnbWluJykgKGRlZmF1bHQ9J21heCcpIAogICAgOnBhcmFtIHN1ZmZpeDogICAgICBTdWZmaXggdG8gYWRkIHRvIHRoZSBmZWF0dXJlIG5hbWUsIEUuZzogPEZlYXR1cmVfTmFtZT5fPEFnZ19GdW5jdGlvbj5fPFN1ZmZpeD4KICAgICAgICAgICAgICAgICAgICAgICAgKEV4OiAnbGFzdF82MF9taW50ZXMnKSAoZGVmYXVsdD0nJykKICAgIDpwYXJhbSB3aW5kb3c6ICAgICAgV2luZG93IHNpemUgdG8gcGVyZm9ybSB0aGUgcm9sbGluZyBhZ2dyZWdhdGUgb24uIChkZWZhdWx0PTMpCiAgICA6cGFyYW0gY2VudGVyOiAgICAgIElmIFRydWUsIFNldHMgdGhlIHZhbHVlIGZvciB0aGUgY2VudHJhbCBzYW1wbGUgaW4gdGhlIHdpbmRvdywKICAgICAgICAgICAgICAgICAgICAgICAgSWYgRmFsc2UsIHdpbGwgc2V0IHRoZSB2YWx1ZSB0byB0aGUgbGFzdCBzYW1wbGUuIChkZWZhdWx0PUZhbHNlKQogICAgOnBhcmFtIGlucGxhY2U6ICAgICBJZiBUcnVlLCB3aWxsIHJldHVybiBvbmx5IHRoZSBhZ2dyZWdhdGVkIHJlc3VsdHMuCiAgICAgICAgICAgICAgICAgICAgICAgIElmIEZhbHNlLCB3aWxsIGpvaW4gdGhlIGFnZ3JlZ2F0ZWQgcmVzdWx0cyB3aXRoIHRoZSBvcmlnaW5hbCBkYXRhZnJhbWUKICAgIDpwYXJhbSBkcm9wX25hOiAgICAgV2lsbCBkcm9wIG5hIGxpbmVzIGR1ZSB0byB0aGUgUm9sbGluZy4KICAgIDpwYXJhbSBmaWxlc190b19zZWxlY3Q6IFNwZWNpZmllcyB0aGUgbnVtYmVyIG9mICpsYXRlc3QqIGZpbGVzIHRvIHNlbGVjdCAoYW5kIGNvbmNhdCkgZm9yIGFnZ3JlZ2F0aW9uLgogICAgIiIiCiAgICAKICAgIGZyb21fbW9kZWwgPSB0eXBlKGRmX2FydGlmYWN0KSA9PSBwZC5EYXRhRnJhbWUKICAgIGlmIGZyb21fbW9kZWw6CiAgICAgICAgY29udGV4dC5sb2dnZXIuaW5mbygnQWdncmVnYXRpbmcgZnJvbSBCdWZmZXInKQogICAgICAgIGlucHV0X2RmID0gZGZfYXJ0aWZhY3QKICAgIGVsc2U6CiAgICAgICAgaWYgZGZfYXJ0aWZhY3QudXJsLmVuZHN3aXRoKCcvJyk6ICAgIyBpcyBhIGRpcmVjdG9yeT8KICAgICAgICAgICAgbXBhdGggPSBbb3MucGF0aC5qb2luKGRmX2FydGlmYWN0LnVybCwgZmlsZSkgZm9yIGZpbGUgaW4gZGZfYXJ0aWZhY3QubGlzdGRpcigpIGlmIGZpbGUuZW5kc3dpdGgoKCdwYXJxdWV0JywgJ3BxJykpXQogICAgICAgICAgICBmaWxlc19ieV91cGRhdGVkID0gc29ydGVkKG1wYXRoLCBrZXk9b3MucGF0aC5nZXRtdGltZSwgcmV2ZXJzZT1UcnVlKQogICAgICAgICAgICBjb250ZXh0LmxvZ2dlci5pbmZvKGZpbGVzX2J5X3VwZGF0ZWQpCiAgICAgICAgICAgIGxhdGVzdCA9IGZpbGVzX2J5X3VwZGF0ZWRbOmZpbGVzX3RvX3NlbGVjdF0KICAgICAgICAgICAgY29udGV4dC5sb2dnZXIuaW5mbyhmJ0FnZ3JlZ2F0aW5nIHtsYXRlc3R9JykKICAgICAgICAgICAgaW5wdXRfZGYgPSBwZC5jb25jYXQoW2NvbnRleHQuZ2V0X2RhdGFpdGVtKGRmKS5hc19kZigpIGZvciBkZiBpbiBsYXRlc3RdKQogICAgICAgIGVsc2U6ICAjIEEgcmVndWxhciBhcnRpZmFjdAogICAgICAgICAgICBjb250ZXh0LmxvZ2dlci5pbmZvKGYnQWdncmVnYXRpbmcge2RmX2FydGlmYWN0LnVybH0nKQogICAgICAgICAgICBpbnB1dF9kZiA9IGRmX2FydGlmYWN0LmFzX2RmKCkKICAgIAogICAgaWYgbm90IChtZXRyaWNzIG9yIGxhYmVscyk6CiAgICAgICAgcmFpc2UgVmFsdWVFcnJvcigncGxlYXNlIHNwZWNpZnkgbWV0cmljcyBvciBsYWJlbHMgcGFyYW0nKQogICAgCiAgICBpZiBrZXlzOgogICAgICAgIGN1cnJlbnRfaW5kZXggPSBpbnB1dF9kZi5pbmRleC5uYW1lcwogICAgICAgIGluZGV4ZXNfdG9fZHJvcCA9IFtjb2wgZm9yIGNvbCBpbiBpbnB1dF9kZi5pbmRleC5uYW1lcyBpZiBjb2wgbm90IGluIGtleXNdCiAgICAgICAgZGYgPSBpbnB1dF9kZi5yZXNldF9pbmRleChsZXZlbD1pbmRleGVzX3RvX2Ryb3ApCiAgICBlbHNlOgogICAgICAgIGRmID0gaW5wdXRfZGYKICAgICAgICAKICAgIGlmIG1ldHJpY3M6CiAgICAgICAgbWV0cmljc19kZiA9IGRmLmxvY1s6LCBtZXRyaWNzXS5yb2xsaW5nKHdpbmRvdz13aW5kb3csIGNlbnRlcj1jZW50ZXIpLmFnZ3JlZ2F0ZShtZXRyaWNfYWdncykKICAgICAgICAKICAgICAgICBtZXRyaWNzX2RmLmNvbHVtbnMgPSBbJ18nLmpvaW4oY29sKS5zdHJpcCgpIGZvciBjb2wgaW4gbWV0cmljc19kZi5jb2x1bW5zLnZhbHVlc10KICAgICAgICAKICAgICAgICBpZiBzdWZmaXg6CiAgICAgICAgICAgIG1ldHJpY3NfZGYuY29sdW1ucyA9IFtmJ3ttZXRyaWN9X3tzdWZmaXh9JyBmb3IgbWV0cmljIGluIG1ldHJpY3NfZGYuY29sdW1uc10KICAgICAgICAgICAgCiAgICAgICAgaWYgbm90IGlucGxhY2U6CiAgICAgICAgICAgIGZpbmFsX2RmID0gcGQubWVyZ2UoaW5wdXRfZGYsIG1ldHJpY3NfZGYsIHN1ZmZpeGVzPSgnJywgc3VmZml4KSwgbGVmdF9pbmRleD1UcnVlLCByaWdodF9pbmRleD1UcnVlKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIGZpbmFsX2RmID0gbWV0cmljc19kZgoKICAgIGlmIGxhYmVsczoKICAgICAgICBsYWJlbHNfZGYgPSBkZi5sb2NbOiwgbGFiZWxzXS5yb2xsaW5nKHdpbmRvdz13aW5kb3csCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjZW50ZXI9Y2VudGVyKS5hZ2dyZWdhdGUobGFiZWxfYWdncykKICAgICAgICBsYWJlbHNfZGYuY29sdW1ucyA9IFsnXycuam9pbihjb2wpLnN0cmlwKCkgZm9yIGNvbCBpbiBsYWJlbHNfZGYuY29sdW1ucy52YWx1ZXNdCiAgICAgICAgCiAgICAgICAgaWYgc3VmZml4OgogICAgICAgICAgICBsYWJlbHNfZGYuY29sdW1ucyA9IFtmJ3tsYWJlbH1fe3N1ZmZpeH0nIGZvciBsYWJlbCBpbiBsYWJlbHNfZGYuY29sdW1uc10KICAgICAgICAgICAgCiAgICAgICAgaWYgbWV0cmljczoKICAgICAgICAgICAgZmluYWxfZGYgPSBwZC5tZXJnZShmaW5hbF9kZiwgbGFiZWxzX2RmLCBzdWZmaXhlcz0oJycsIHN1ZmZpeCksIGxlZnRfaW5kZXg9VHJ1ZSwgcmlnaHRfaW5kZXg9VHJ1ZSkgICAKICAgICAgICBlbHNlOgogICAgICAgICAgICBpZiBub3QgaW5wbGFjZToKICAgICAgICAgICAgICAgIGZpbmFsX2RmID0gcGQubWVyZ2UoaW5wdXRfZGYsIGxhYmVsc19kZiwgc3VmZml4ZXM9KCcnLCBzdWZmaXgpLCBsZWZ0X2luZGV4PVRydWUsIHJpZ2h0X2luZGV4PVRydWUpICAgICAgCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBmaW5hbF9kZiA9IGxhYmVsc19kZgogICAgICAgICAgICAgICAgCiAgICBpZiBkcm9wX25hOgogICAgICAgIGZpbmFsX2RmID0gZmluYWxfZGYuZHJvcG5hKCkKICAgICAgICAKICAgIGNvbnRleHQubG9nZ2VyLmluZm8oJ0xvZ2dpbmcgYXJ0aWZhY3QnKQogICAgaWYgbm90IGZyb21fbW9kZWw6CiAgICAgICAgY29udGV4dC5sb2dfZGF0YXNldChrZXk9J2FnZ3JlZ2F0ZScsIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGY9ZmluYWxfZGYsIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9ybWF0PSdwYXJxdWV0JywKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvY2FsX3BhdGg9c2F2ZV90bykKICAgIGVsc2U6CiAgICAgICAgcmV0dXJuIGZpbmFsX2RmCgo=",
          "commands": [],
          "code_origin": "https://github.com/daniels290813/functions.git#55a79c32be5d233cc11efcf40cd3edbe309bfdef:/home/kali/functions/aggregate/aggregate.py"
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "github-utils",
        "tag": "",
        "hash": "a608d3bb7cb30fab28206bd1491ed421558e606a",
        "project": "default",
        "labels": {
          "author": "yaronh"
        },
        "categories": [
          "utils"
        ],
        "updated": "2021-09-03T13:53:51.859167+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [],
        "volume_mounts": [],
        "env": [],
        "default_handler": "run_summary_comment",
        "entry_points": {
          "pr_comment": {
            "name": "pr_comment",
            "doc": "",
            "parameters": [
              {
                "name": "context",
                "default": ""
              },
              {
                "name": "repo",
                "type": "str",
                "default": ""
              },
              {
                "name": "issue",
                "type": "int",
                "default": ""
              },
              {
                "name": "message",
                "type": "str",
                "default": ""
              },
              {
                "name": "message_file",
                "type": "DataItem",
                "default": null
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 8
          },
          "run_summary_comment": {
            "name": "run_summary_comment",
            "doc": "",
            "parameters": [
              {
                "name": "context",
                "default": ""
              },
              {
                "name": "workflow_id",
                "default": ""
              },
              {
                "name": "repo",
                "type": "str",
                "default": ""
              },
              {
                "name": "issue",
                "type": "int",
                "default": ""
              },
              {
                "name": "project",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 31
          }
        },
        "description": "add comments to github pull request",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBvcwpmcm9tIG1scnVuIGltcG9ydCBEYXRhSXRlbSwgZ2V0X3J1bl9kYiwgbWxjb25mCgoKZGVmIHByX2NvbW1lbnQoCiAgICBjb250ZXh0LCByZXBvOiBzdHIsIGlzc3VlOiBpbnQsIG1lc3NhZ2U6IHN0ciA9ICIiLCBtZXNzYWdlX2ZpbGU6IERhdGFJdGVtID0gTm9uZQopOgoKICAgIHRva2VuID0gY29udGV4dC5nZXRfc2VjcmV0KCJHSVRIVUJfVE9LRU4iKSBvciBvcy5lbnZpcm9uLmdldCgiR0lUSFVCX1RPS0VOIikKICAgIGlmIG1lc3NhZ2VfZmlsZSBhbmQgbm90IG1lc3NhZ2U6CiAgICAgICAgbWVzc2FnZSA9IG1lc3NhZ2VfZmlsZS5nZXQoKQogICAgZWxpZiBub3QgbWVzc2FnZSBhbmQgbm90IG1lc3NhZ2VfZmlsZToKICAgICAgICByYWlzZSBWYWx1ZUVycm9yKCJwciBtZXNzYWdlIG9yIG1lc3NhZ2UgZmlsZSBtdXN0IGJlIHByb3ZpZGVkIikKCiAgICBoZWFkZXJzID0gewogICAgICAgICJBY2NlcHQiOiAiYXBwbGljYXRpb24vdm5kLmdpdGh1Yi52Mytqc29uIiwKICAgICAgICAiQXV0aG9yaXphdGlvbiI6IGYidG9rZW4ge3Rva2VufSIsCiAgICB9CiAgICB1cmwgPSBmImh0dHBzOi8vYXBpLmdpdGh1Yi5jb20vcmVwb3Mve3JlcG99L2lzc3Vlcy97aXNzdWV9L2NvbW1lbnRzIgoKICAgIHJlc3AgPSByZXF1ZXN0cy5wb3N0KHVybD11cmwsIGpzb249eyJib2R5Ijogc3RyKG1lc3NhZ2UpfSwgaGVhZGVycz1oZWFkZXJzKQogICAgaWYgbm90IHJlc3Aub2s6CiAgICAgICAgZXJybXNnID0gZiJiYWQgcHIgY29tbWVudCByZXNwISFcbntyZXNwLnRleHR9IgogICAgICAgIGNvbnRleHQubG9nZ2VyLmVycm9yKGVycm1zZykKICAgICAgICByYWlzZSBJT0Vycm9yKGVycm1zZykKCgpkZWYgcnVuX3N1bW1hcnlfY29tbWVudChjb250ZXh0LCB3b3JrZmxvd19pZCwgcmVwbzogc3RyLCBpc3N1ZTogaW50LCBwcm9qZWN0PSIiKToKICAgIGRiID0gZ2V0X3J1bl9kYigpLmNvbm5lY3QoKQogICAgcHJvamVjdCA9IHByb2plY3Qgb3IgY29udGV4dC5wcm9qZWN0CiAgICBydW5zID0gZGIubGlzdF9ydW5zKHByb2plY3Q9cHJvamVjdCwgbGFiZWxzPWYid29ya2Zsb3c9e3dvcmtmbG93X2lkfSIpCgogICAgaGFkX2Vycm9ycyA9IGkgPSAwCiAgICBmb3IgciBpbiBydW5zOgogICAgICAgIG5hbWUgPSByWyJtZXRhZGF0YSJdWyJuYW1lIl0KICAgICAgICBpZiByWyJzdGF0dXMiXS5nZXQoInN0YXRlIiwgIiIpID09ICJlcnJvciI6CiAgICAgICAgICAgIGhhZF9lcnJvcnMgKz0gMQogICAgICAgIGlmIG5hbWUgPT0gY29udGV4dC5uYW1lOgogICAgICAgICAgICBkZWwgcnVuc1tpXQogICAgICAgIGkgKz0gMQoKICAgIHByaW50KCJlcnJvcnM6IiwgaGFkX2Vycm9ycykKCiAgICBodG1sID0gIiMjIyBSdW4gUmVzdWx0c1xuV29ya2Zsb3cge30gZmluaXNoZWQgd2l0aCB7fSBlcnJvcnMiLmZvcm1hdCgKICAgICAgICB3b3JrZmxvd19pZCwgaGFkX2Vycm9ycwogICAgKQogICAgaHRtbCArPSAiPGJyPmNsaWNrIHRoZSBoeXBlciBsaW5rcyBiZWxvdyB0byBzZWUgZGV0YWlsZWQgcmVzdWx0czxicj4iCiAgICBodG1sICs9IHJ1bnMuc2hvdyhkaXNwbGF5PUZhbHNlLCBzaG9ydD1UcnVlKQogICAgaWYgcmVwbzoKICAgICAgICBwcl9jb21tZW50KGNvbnRleHQsIHJlcG8sIGlzc3VlLCBodG1sKQogICAgZWxzZToKICAgICAgICBwcmludCgicmVwbyBub3QgZGVmaW5lZCIpCiAgICAgICAgcHJpbnQoaHRtbCkK",
          "commands": [],
          "code_origin": "https://github.com/daniels290813/functions.git#55a79c32be5d233cc11efcf40cd3edbe309bfdef:/home/kali/functions/github_utils/github_utils.py"
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "erann-test",
        "tag": "",
        "hash": "7aed057803a893762cc9e3f2d83ec0af409c22f4",
        "project": "default",
        "categories": [],
        "updated": "2021-09-03T13:52:36.485338+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [],
        "volume_mounts": [],
        "env": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "handler",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": "",
          "base_image": "",
          "commands": ""
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "labels": {},
        "name": "erann-test",
        "project": "default",
        "tag": "",
        "hash": "fe837652d59c8b29d00845b8ec799c1da7cc29dc",
        "updated": "2021-09-06T09:06:58.263413+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "mlrun/mlrun",
          "commands": [
            "echo $PATH",
            "python -m pip install \"mlrun[complete]==0.7.0-rc15\""
          ],
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ""
        },
        "default_handler": "handler",
        "description": "",
        "env": [],
        "image": "",
        "volume_mounts": [],
        "volumes": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "secret_sources": []
      },
      "with_mlrun": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "labels": {},
        "name": "erann-test",
        "project": "default",
        "tag": "",
        "hash": "5c68e2226bc8f070b3db6f0e9564992f306ea4bf",
        "updated": "2021-09-06T09:07:44.887958+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "mlrun/mlrun",
          "commands": [
            "echo $PATH"
          ],
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ""
        },
        "default_handler": "handler",
        "description": "",
        "env": [],
        "image": "",
        "volume_mounts": [],
        "volumes": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "secret_sources": []
      },
      "with_mlrun": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "labels": {},
        "name": "erann-test",
        "project": "default",
        "tag": "",
        "hash": "5162a7a5889b1e84cc4c1112ea30bc1dbe5b8b57",
        "updated": "2021-09-06T09:08:59.180636+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "mlrun/mlrun",
          "commands": [
            "python -m pip install \"mlrun[complete]==0.7.0-rc15\""
          ],
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ""
        },
        "default_handler": "handler",
        "description": "",
        "env": [],
        "image": "",
        "volume_mounts": [],
        "volumes": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "secret_sources": []
      },
      "with_mlrun": true,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "erann-test",
        "tag": "",
        "project": "default",
        "categories": [],
        "hash": "096edd7cbfcf43596d8b96a43f67012e40a1599c",
        "updated": "2021-09-06T09:08:59.578277+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "",
        "volumes": [],
        "volume_mounts": [],
        "env": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "handler",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ".mlrun/func-default-erann-test:latest",
          "base_image": "mlrun/mlrun",
          "commands": [
            "python -m pip install \"mlrun[complete]==0.7.0-rc15\""
          ]
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "name": "erann-test",
        "tag": "",
        "project": "default",
        "categories": [],
        "hash": "129534a6fdf45af200638a4f7b8b0391283022f3",
        "updated": "2021-09-06T09:10:50.717757+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": ".mlrun/func-default-erann-test:latest",
        "volumes": [],
        "volume_mounts": [],
        "env": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "handler",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ".mlrun/func-default-erann-test:latest",
          "base_image": "mlrun/mlrun",
          "commands": [
            "python -m pip install \"mlrun[complete]==0.7.0-rc15\""
          ]
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "labels": {},
        "name": "erann-test",
        "project": "default",
        "tag": "",
        "hash": "03a731fbb5a83eac4eb78afe83be564d59608dcc",
        "updated": "2021-09-06T09:11:17.635511+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "mlrun/mlrun",
          "commands": [
            "echo $PATH"
          ],
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ".mlrun/func-default-erann-test:latest"
        },
        "default_handler": "handler",
        "description": "",
        "env": [],
        "image": ".mlrun/func-default-erann-test:latest",
        "volume_mounts": [],
        "volumes": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "secret_sources": []
      },
      "with_mlrun": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "erann-test",
        "tag": "",
        "project": "default",
        "categories": [],
        "hash": "bec06dcddc64f38bea149d68fcd825367a730642",
        "updated": "2021-09-06T09:12:44.422212+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": ".mlrun/func-default-erann-test:latest",
        "volumes": [],
        "volume_mounts": [],
        "env": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "handler",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ".mlrun/func-default-erann-test:latest",
          "base_image": "mlrun/mlrun",
          "commands": [
            "echo $PATH"
          ]
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "labels": {},
        "name": "erann-test",
        "project": "default",
        "tag": "",
        "hash": "ac2822cb53d67f8c7663551c671e3df161cba277",
        "updated": "2021-09-06T09:13:32.793678+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "mlrun/mlrun",
          "commands": [
            "echo $PATH",
            "python -m pip install \\\"mlrun[complete]==0.7.0-rc15\\\""
          ],
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ".mlrun/func-default-erann-test:latest"
        },
        "default_handler": "handler",
        "description": "",
        "env": [],
        "image": ".mlrun/func-default-erann-test:latest",
        "volume_mounts": [],
        "volumes": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "secret_sources": []
      },
      "with_mlrun": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "erann-test",
        "tag": "",
        "project": "default",
        "categories": [],
        "hash": "ba8822018053096be25e7e34dad3a2716ecdcd8f",
        "updated": "2021-09-06T09:13:33.147925+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": ".mlrun/func-default-erann-test:latest",
        "volumes": [],
        "volume_mounts": [],
        "env": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "handler",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ".mlrun/func-default-erann-test:latest",
          "base_image": "mlrun/mlrun",
          "commands": [
            "echo $PATH",
            "python -m pip install \\\"mlrun[complete]==0.7.0-rc15\\\""
          ]
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "labels": {},
        "name": "erann-test",
        "project": "default",
        "tag": "",
        "hash": "07ac270ca42b049e8422322e6ac6ecb18d74aa4a",
        "updated": "2021-09-06T09:15:29.393939+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "mlrun/mlrun",
          "commands": [
            "echo $PATH",
            "python -m pip install \"mlrun[complete]==0.7.0-rc15\""
          ],
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ".mlrun/func-default-erann-test:latest"
        },
        "default_handler": "handler",
        "description": "",
        "env": [],
        "image": ".mlrun/func-default-erann-test:latest",
        "volume_mounts": [],
        "volumes": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "secret_sources": []
      },
      "with_mlrun": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "erann-test",
        "tag": "",
        "project": "default",
        "categories": [],
        "hash": "634cf5a99ddc33ab47f0aeaece47759ccdc15b6f",
        "updated": "2021-09-06T09:16:59.555300+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": ".mlrun/func-default-erann-test:latest",
        "volumes": [],
        "volume_mounts": [],
        "env": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "handler",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ".mlrun/func-default-erann-test:latest",
          "base_image": "mlrun/mlrun",
          "commands": [
            "echo $PATH",
            "python -m pip install \"mlrun[complete]==0.7.0-rc15\""
          ]
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "name": "aggregate",
        "tag": "",
        "hash": "2c035f327143b44b167ac24ab2326be55caae77c",
        "project": "default",
        "labels": {
          "author": "avia"
        },
        "categories": [
          "data-preparation"
        ],
        "updated": "2021-09-07T11:42:54.086929+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [],
        "volume_mounts": [],
        "env": [],
        "resources": {
          "limits": {
            "cpu": "1",
            "memory": "1",
            "nvidia.com/gpu": "1"
          },
          "requests": {
            "cpu": "1",
            "memory": "1"
          }
        },
        "default_handler": "aggregate",
        "entry_points": {
          "aggregate": {
            "name": "aggregate",
            "doc": "Time-series aggregation function\n\nWill perform a rolling aggregation on {df_artifact}, over {window} by the selected {keys}\napplying {metric_aggs} on {metrics} and {label_aggs} on {labels}. adding {suffix} to the \nfeature names.\n\nif not {inplace}, will return the original {df_artifact}, joined by the aggregated result.",
            "parameters": [
              {
                "name": "context",
                "default": ""
              },
              {
                "name": "df_artifact",
                "type": "Union[DataItem, DataFrame]",
                "doc": "MLRun input pointing to pandas dataframe (csv/parquet file path) or a  directory containing parquet files. * When given a directory the latest {files_to_select} will be selected",
                "default": ""
              },
              {
                "name": "save_to",
                "type": "str",
                "doc": "Where to save the result dataframe. * If relative will add to the {artifact_path}",
                "default": "aggregated-df.pq"
              },
              {
                "name": "keys",
                "type": "list",
                "doc": "Subset of indexes from the source dataframe to aggregate by (default=all)",
                "default": null
              },
              {
                "name": "metrics",
                "type": "list",
                "doc": "Array containing a list of metrics to run the aggregations on. (default=None) ",
                "default": null
              },
              {
                "name": "labels",
                "type": "list",
                "doc": "Array containing a list of labels to run the aggregations on. (default=None) ",
                "default": null
              },
              {
                "name": "metric_aggs",
                "type": "list",
                "doc": "Array containing a list of aggregation function names to run on {metrics}. (Ex: 'mean', 'std') (default='mean')",
                "default": [
                  "mean"
                ]
              },
              {
                "name": "label_aggs",
                "type": "list",
                "doc": "Array containing a list of aggregation function names to run on {metrics}. (Ex: 'max', 'min') (default='max') ",
                "default": [
                  "max"
                ]
              },
              {
                "name": "suffix",
                "type": "str",
                "doc": "Suffix to add to the feature name, E.g: <Feature_Name>_<Agg_Function>_<Suffix> (Ex: 'last_60_mintes') (default='')",
                "default": ""
              },
              {
                "name": "window",
                "type": "int",
                "doc": "Window size to perform the rolling aggregate on. (default=3)",
                "default": 3
              },
              {
                "name": "center",
                "type": "bool",
                "doc": "If True, Sets the value for the central sample in the window, If False, will set the value to the last sample. (default=False)",
                "default": false
              },
              {
                "name": "inplace",
                "type": "bool",
                "doc": "If True, will return only the aggregated results. If False, will join the aggregated results with the original dataframe",
                "default": false
              },
              {
                "name": "drop_na",
                "type": "bool",
                "doc": "Will drop na lines due to the Rolling.",
                "default": true
              },
              {
                "name": "files_to_select",
                "type": "int",
                "doc": "Specifies the number of *latest* files to select (and concat) for aggregation.",
                "default": 1
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 9
          }
        },
        "description": "Rolling aggregation over Metrics and Lables according to specifications",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG9zCmltcG9ydCBwYW5kYXMgYXMgcGQKZnJvbSBtbHJ1bi5kYXRhc3RvcmUgaW1wb3J0IERhdGFJdGVtCgpmcm9tIHR5cGluZyBpbXBvcnQgVW5pb24KCmRlZiBhZ2dyZWdhdGUoY29udGV4dCwKICAgICAgICAgICAgICBkZl9hcnRpZmFjdDogVW5pb25bRGF0YUl0ZW0sIHBkLmNvcmUuZnJhbWUuRGF0YUZyYW1lXSwKICAgICAgICAgICAgICBzYXZlX3RvOiBzdHIgPSAnYWdncmVnYXRlZC1kZi5wcScsIAogICAgICAgICAgICAgIGtleXM6IGxpc3QgPSBOb25lLCAKICAgICAgICAgICAgICBtZXRyaWNzOiBsaXN0ID0gTm9uZSwgCiAgICAgICAgICAgICAgbGFiZWxzOiBsaXN0ID0gTm9uZSwgCiAgICAgICAgICAgICAgbWV0cmljX2FnZ3M6IGxpc3QgPSBbJ21lYW4nXSwgCiAgICAgICAgICAgICAgbGFiZWxfYWdnczogbGlzdCA9IFsnbWF4J10sIAogICAgICAgICAgICAgIHN1ZmZpeDogc3RyID0gJycsIAogICAgICAgICAgICAgIHdpbmRvdzogaW50ID0gMywgCiAgICAgICAgICAgICAgY2VudGVyOiBib29sID0gRmFsc2UsIAogICAgICAgICAgICAgIGlucGxhY2U6IGJvb2wgPSBGYWxzZSwKICAgICAgICAgICAgICBkcm9wX25hOiBib29sID0gVHJ1ZSwKICAgICAgICAgICAgICBmaWxlc190b19zZWxlY3Q6IGludCA9IDEpOgogICAgIiIiVGltZS1zZXJpZXMgYWdncmVnYXRpb24gZnVuY3Rpb24KICAgIAogICAgV2lsbCBwZXJmb3JtIGEgcm9sbGluZyBhZ2dyZWdhdGlvbiBvbiB7ZGZfYXJ0aWZhY3R9LCBvdmVyIHt3aW5kb3d9IGJ5IHRoZSBzZWxlY3RlZCB7a2V5c30KICAgIGFwcGx5aW5nIHttZXRyaWNfYWdnc30gb24ge21ldHJpY3N9IGFuZCB7bGFiZWxfYWdnc30gb24ge2xhYmVsc30uIGFkZGluZyB7c3VmZml4fSB0byB0aGUgCiAgICBmZWF0dXJlIG5hbWVzLgogICAgCiAgICBpZiBub3Qge2lucGxhY2V9LCB3aWxsIHJldHVybiB0aGUgb3JpZ2luYWwge2RmX2FydGlmYWN0fSwgam9pbmVkIGJ5IHRoZSBhZ2dyZWdhdGVkIHJlc3VsdC4KICAgIAogICAgOnBhcmFtIGRmX2FydGlmYWN0OiBNTFJ1biBpbnB1dCBwb2ludGluZyB0byBwYW5kYXMgZGF0YWZyYW1lIChjc3YvcGFycXVldCBmaWxlIHBhdGgpIG9yIGEgCiAgICAgICAgICAgICAgICAgICAgICAgIGRpcmVjdG9yeSBjb250YWluaW5nIHBhcnF1ZXQgZmlsZXMuCiAgICAgICAgICAgICAgICAgICAgICAgICogV2hlbiBnaXZlbiBhIGRpcmVjdG9yeSB0aGUgbGF0ZXN0IHtmaWxlc190b19zZWxlY3R9IHdpbGwgYmUgc2VsZWN0ZWQKICAgIDpwYXJhbSBzYXZlX3RvOiAgICAgV2hlcmUgdG8gc2F2ZSB0aGUgcmVzdWx0IGRhdGFmcmFtZS4KICAgICAgICAgICAgICAgICAgICAgICAgKiBJZiByZWxhdGl2ZSB3aWxsIGFkZCB0byB0aGUge2FydGlmYWN0X3BhdGh9CiAgICA6cGFyYW0ga2V5czogICAgICAgIFN1YnNldCBvZiBpbmRleGVzIGZyb20gdGhlIHNvdXJjZSBkYXRhZnJhbWUgdG8gYWdncmVnYXRlIGJ5IChkZWZhdWx0PWFsbCkKICAgIDpwYXJhbSBtZXRyaWNzOiAgICAgQXJyYXkgY29udGFpbmluZyBhIGxpc3Qgb2YgbWV0cmljcyB0byBydW4gdGhlIGFnZ3JlZ2F0aW9ucyBvbi4gKGRlZmF1bHQ9Tm9uZSkgCiAgICA6cGFyYW0gbGFiZWxzOiAgICAgIEFycmF5IGNvbnRhaW5pbmcgYSBsaXN0IG9mIGxhYmVscyB0byBydW4gdGhlIGFnZ3JlZ2F0aW9ucyBvbi4gKGRlZmF1bHQ9Tm9uZSkgCiAgICA6cGFyYW0gbWV0cmljX2FnZ3M6IEFycmF5IGNvbnRhaW5pbmcgYSBsaXN0IG9mIGFnZ3JlZ2F0aW9uIGZ1bmN0aW9uIG5hbWVzIHRvIHJ1biBvbiB7bWV0cmljc30uCiAgICAgICAgICAgICAgICAgICAgICAgIChFeDogJ21lYW4nLCAnc3RkJykgKGRlZmF1bHQ9J21lYW4nKQogICAgOnBhcmFtIGxhYmVsX2FnZ3M6ICBBcnJheSBjb250YWluaW5nIGEgbGlzdCBvZiBhZ2dyZWdhdGlvbiBmdW5jdGlvbiBuYW1lcyB0byBydW4gb24ge21ldHJpY3N9LgogICAgICAgICAgICAgICAgICAgICAgICAoRXg6ICdtYXgnLCAnbWluJykgKGRlZmF1bHQ9J21heCcpIAogICAgOnBhcmFtIHN1ZmZpeDogICAgICBTdWZmaXggdG8gYWRkIHRvIHRoZSBmZWF0dXJlIG5hbWUsIEUuZzogPEZlYXR1cmVfTmFtZT5fPEFnZ19GdW5jdGlvbj5fPFN1ZmZpeD4KICAgICAgICAgICAgICAgICAgICAgICAgKEV4OiAnbGFzdF82MF9taW50ZXMnKSAoZGVmYXVsdD0nJykKICAgIDpwYXJhbSB3aW5kb3c6ICAgICAgV2luZG93IHNpemUgdG8gcGVyZm9ybSB0aGUgcm9sbGluZyBhZ2dyZWdhdGUgb24uIChkZWZhdWx0PTMpCiAgICA6cGFyYW0gY2VudGVyOiAgICAgIElmIFRydWUsIFNldHMgdGhlIHZhbHVlIGZvciB0aGUgY2VudHJhbCBzYW1wbGUgaW4gdGhlIHdpbmRvdywKICAgICAgICAgICAgICAgICAgICAgICAgSWYgRmFsc2UsIHdpbGwgc2V0IHRoZSB2YWx1ZSB0byB0aGUgbGFzdCBzYW1wbGUuIChkZWZhdWx0PUZhbHNlKQogICAgOnBhcmFtIGlucGxhY2U6ICAgICBJZiBUcnVlLCB3aWxsIHJldHVybiBvbmx5IHRoZSBhZ2dyZWdhdGVkIHJlc3VsdHMuCiAgICAgICAgICAgICAgICAgICAgICAgIElmIEZhbHNlLCB3aWxsIGpvaW4gdGhlIGFnZ3JlZ2F0ZWQgcmVzdWx0cyB3aXRoIHRoZSBvcmlnaW5hbCBkYXRhZnJhbWUKICAgIDpwYXJhbSBkcm9wX25hOiAgICAgV2lsbCBkcm9wIG5hIGxpbmVzIGR1ZSB0byB0aGUgUm9sbGluZy4KICAgIDpwYXJhbSBmaWxlc190b19zZWxlY3Q6IFNwZWNpZmllcyB0aGUgbnVtYmVyIG9mICpsYXRlc3QqIGZpbGVzIHRvIHNlbGVjdCAoYW5kIGNvbmNhdCkgZm9yIGFnZ3JlZ2F0aW9uLgogICAgIiIiCiAgICAKICAgIGZyb21fbW9kZWwgPSB0eXBlKGRmX2FydGlmYWN0KSA9PSBwZC5EYXRhRnJhbWUKICAgIGlmIGZyb21fbW9kZWw6CiAgICAgICAgY29udGV4dC5sb2dnZXIuaW5mbygnQWdncmVnYXRpbmcgZnJvbSBCdWZmZXInKQogICAgICAgIGlucHV0X2RmID0gZGZfYXJ0aWZhY3QKICAgIGVsc2U6CiAgICAgICAgaWYgZGZfYXJ0aWZhY3QudXJsLmVuZHN3aXRoKCcvJyk6ICAgIyBpcyBhIGRpcmVjdG9yeT8KICAgICAgICAgICAgbXBhdGggPSBbb3MucGF0aC5qb2luKGRmX2FydGlmYWN0LnVybCwgZmlsZSkgZm9yIGZpbGUgaW4gZGZfYXJ0aWZhY3QubGlzdGRpcigpIGlmIGZpbGUuZW5kc3dpdGgoKCdwYXJxdWV0JywgJ3BxJykpXQogICAgICAgICAgICBmaWxlc19ieV91cGRhdGVkID0gc29ydGVkKG1wYXRoLCBrZXk9b3MucGF0aC5nZXRtdGltZSwgcmV2ZXJzZT1UcnVlKQogICAgICAgICAgICBjb250ZXh0LmxvZ2dlci5pbmZvKGZpbGVzX2J5X3VwZGF0ZWQpCiAgICAgICAgICAgIGxhdGVzdCA9IGZpbGVzX2J5X3VwZGF0ZWRbOmZpbGVzX3RvX3NlbGVjdF0KICAgICAgICAgICAgY29udGV4dC5sb2dnZXIuaW5mbyhmJ0FnZ3JlZ2F0aW5nIHtsYXRlc3R9JykKICAgICAgICAgICAgaW5wdXRfZGYgPSBwZC5jb25jYXQoW2NvbnRleHQuZ2V0X2RhdGFpdGVtKGRmKS5hc19kZigpIGZvciBkZiBpbiBsYXRlc3RdKQogICAgICAgIGVsc2U6ICAjIEEgcmVndWxhciBhcnRpZmFjdAogICAgICAgICAgICBjb250ZXh0LmxvZ2dlci5pbmZvKGYnQWdncmVnYXRpbmcge2RmX2FydGlmYWN0LnVybH0nKQogICAgICAgICAgICBpbnB1dF9kZiA9IGRmX2FydGlmYWN0LmFzX2RmKCkKICAgIAogICAgaWYgbm90IChtZXRyaWNzIG9yIGxhYmVscyk6CiAgICAgICAgcmFpc2UgVmFsdWVFcnJvcigncGxlYXNlIHNwZWNpZnkgbWV0cmljcyBvciBsYWJlbHMgcGFyYW0nKQogICAgCiAgICBpZiBrZXlzOgogICAgICAgIGN1cnJlbnRfaW5kZXggPSBpbnB1dF9kZi5pbmRleC5uYW1lcwogICAgICAgIGluZGV4ZXNfdG9fZHJvcCA9IFtjb2wgZm9yIGNvbCBpbiBpbnB1dF9kZi5pbmRleC5uYW1lcyBpZiBjb2wgbm90IGluIGtleXNdCiAgICAgICAgZGYgPSBpbnB1dF9kZi5yZXNldF9pbmRleChsZXZlbD1pbmRleGVzX3RvX2Ryb3ApCiAgICBlbHNlOgogICAgICAgIGRmID0gaW5wdXRfZGYKICAgICAgICAKICAgIGlmIG1ldHJpY3M6CiAgICAgICAgbWV0cmljc19kZiA9IGRmLmxvY1s6LCBtZXRyaWNzXS5yb2xsaW5nKHdpbmRvdz13aW5kb3csIGNlbnRlcj1jZW50ZXIpLmFnZ3JlZ2F0ZShtZXRyaWNfYWdncykKICAgICAgICAKICAgICAgICBtZXRyaWNzX2RmLmNvbHVtbnMgPSBbJ18nLmpvaW4oY29sKS5zdHJpcCgpIGZvciBjb2wgaW4gbWV0cmljc19kZi5jb2x1bW5zLnZhbHVlc10KICAgICAgICAKICAgICAgICBpZiBzdWZmaXg6CiAgICAgICAgICAgIG1ldHJpY3NfZGYuY29sdW1ucyA9IFtmJ3ttZXRyaWN9X3tzdWZmaXh9JyBmb3IgbWV0cmljIGluIG1ldHJpY3NfZGYuY29sdW1uc10KICAgICAgICAgICAgCiAgICAgICAgaWYgbm90IGlucGxhY2U6CiAgICAgICAgICAgIGZpbmFsX2RmID0gcGQubWVyZ2UoaW5wdXRfZGYsIG1ldHJpY3NfZGYsIHN1ZmZpeGVzPSgnJywgc3VmZml4KSwgbGVmdF9pbmRleD1UcnVlLCByaWdodF9pbmRleD1UcnVlKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIGZpbmFsX2RmID0gbWV0cmljc19kZgoKICAgIGlmIGxhYmVsczoKICAgICAgICBsYWJlbHNfZGYgPSBkZi5sb2NbOiwgbGFiZWxzXS5yb2xsaW5nKHdpbmRvdz13aW5kb3csCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjZW50ZXI9Y2VudGVyKS5hZ2dyZWdhdGUobGFiZWxfYWdncykKICAgICAgICBsYWJlbHNfZGYuY29sdW1ucyA9IFsnXycuam9pbihjb2wpLnN0cmlwKCkgZm9yIGNvbCBpbiBsYWJlbHNfZGYuY29sdW1ucy52YWx1ZXNdCiAgICAgICAgCiAgICAgICAgaWYgc3VmZml4OgogICAgICAgICAgICBsYWJlbHNfZGYuY29sdW1ucyA9IFtmJ3tsYWJlbH1fe3N1ZmZpeH0nIGZvciBsYWJlbCBpbiBsYWJlbHNfZGYuY29sdW1uc10KICAgICAgICAgICAgCiAgICAgICAgaWYgbWV0cmljczoKICAgICAgICAgICAgZmluYWxfZGYgPSBwZC5tZXJnZShmaW5hbF9kZiwgbGFiZWxzX2RmLCBzdWZmaXhlcz0oJycsIHN1ZmZpeCksIGxlZnRfaW5kZXg9VHJ1ZSwgcmlnaHRfaW5kZXg9VHJ1ZSkgICAKICAgICAgICBlbHNlOgogICAgICAgICAgICBpZiBub3QgaW5wbGFjZToKICAgICAgICAgICAgICAgIGZpbmFsX2RmID0gcGQubWVyZ2UoaW5wdXRfZGYsIGxhYmVsc19kZiwgc3VmZml4ZXM9KCcnLCBzdWZmaXgpLCBsZWZ0X2luZGV4PVRydWUsIHJpZ2h0X2luZGV4PVRydWUpICAgICAgCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBmaW5hbF9kZiA9IGxhYmVsc19kZgogICAgICAgICAgICAgICAgCiAgICBpZiBkcm9wX25hOgogICAgICAgIGZpbmFsX2RmID0gZmluYWxfZGYuZHJvcG5hKCkKICAgICAgICAKICAgIGNvbnRleHQubG9nZ2VyLmluZm8oJ0xvZ2dpbmcgYXJ0aWZhY3QnKQogICAgaWYgbm90IGZyb21fbW9kZWw6CiAgICAgICAgY29udGV4dC5sb2dfZGF0YXNldChrZXk9J2FnZ3JlZ2F0ZScsIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGY9ZmluYWxfZGYsIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9ybWF0PSdwYXJxdWV0JywKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvY2FsX3BhdGg9c2F2ZV90bykKICAgIGVsc2U6CiAgICAgICAgcmV0dXJuIGZpbmFsX2RmCgo=",
          "commands": [],
          "code_origin": "https://github.com/daniels290813/functions.git#55a79c32be5d233cc11efcf40cd3edbe309bfdef:/home/kali/functions/aggregate/aggregate.py"
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "labels": {},
        "name": "erann-test",
        "project": "default",
        "tag": "",
        "hash": "317d299ed97f09f5757217d0f1f87210df1d8d11",
        "updated": "2021-09-07T13:53:50.409304+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "mlrun/mlrun",
          "commands": [
            "echo $PATH",
            "python -m pip install \"mlrun[complete]==0.7.0-rc15\""
          ],
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ".mlrun/func-default-erann-test:latest"
        },
        "default_handler": "handler",
        "description": "",
        "env": [
          {
            "name": "ENV_VAR_KEY",
            "value": "env-var-value"
          }
        ],
        "image": ".mlrun/func-default-erann-test:latest",
        "volume_mounts": [
          {
            "name": "my-volume",
            "mountPath": "/my-path"
          }
        ],
        "volumes": [
          {
            "name": "my-volume",
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "242e47-a051-4ec3-8384-5f99a26c1451",
                "container": "projects",
                "subPath": "/mount"
              }
            }
          }
        ],
        "resources": {
          "limits": {
            "memory": "5Mi",
            "cpu": "1",
            "nvidia.com/gpu": "1"
          },
          "requests": {
            "memory": "5Mi",
            "cpu": "1"
          }
        },
        "secret_sources": []
      },
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "erann-test",
        "tag": "",
        "hash": "28159d3479464be205ca9ba02cf1ac4a5b3ec4d5",
        "project": "default",
        "categories": [],
        "updated": "2021-09-08T15:37:29.467631+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": ".mlrun/func-default-erann-test:latest",
        "volumes": [
          {
            "name": "my-volume",
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "242e47-a051-4ec3-8384-5f99a26c1451",
                "container": "projects",
                "subPath": "/mount"
              }
            }
          }
        ],
        "volume_mounts": [
          {
            "name": "my-volume",
            "mountPath": "/my-path"
          }
        ],
        "env": [
          {
            "name": "ENV_VAR_KEY",
            "value": "env-var-value"
          }
        ],
        "resources": {
          "limits": {
            "cpu": "1",
            "memory": "5Mi",
            "nvidia.com/gpu": "1"
          },
          "requests": {
            "cpu": "1",
            "memory": "5Mi"
          }
        },
        "default_handler": "handler",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ".mlrun/func-default-erann-test:latest",
          "base_image": "mlrun/mlrun",
          "commands": [
            "echo $PATH",
            "python -m pip install \"mlrun[complete]==0.7.0-rc15\""
          ]
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "labels": {},
        "name": "erann-with-mlrun",
        "project": "default",
        "tag": "",
        "hash": "3ba7b05b50f0fae1d7a4408f047077d3e81d0fbd",
        "updated": "2021-09-08T10:05:05.623946+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "mlrun/mlrun",
          "commands": [
            "python -m pip install \"mlrun[complete]==0.7.0-rc16\""
          ],
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ""
        },
        "default_handler": "handler",
        "description": "",
        "env": [],
        "image": "",
        "volume_mounts": [],
        "volumes": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "secret_sources": []
      },
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "erann-with-mlrun",
        "tag": "",
        "project": "default",
        "categories": [],
        "hash": "198374030f9f0eced2e1c527e2c17729f840ea57",
        "updated": "2021-09-08T10:05:05.928361+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "",
        "volumes": [],
        "volume_mounts": [],
        "env": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "handler",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ".mlrun/func-default-erann-with-mlrun:latest",
          "base_image": "mlrun/mlrun",
          "commands": [
            "python -m pip install \"mlrun[complete]==0.7.0-rc16\""
          ]
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "name": "erann-with-mlrun",
        "tag": "",
        "project": "default",
        "categories": [],
        "hash": "1df993a3f5cd981f35e9a7468749e8919825d963",
        "updated": "2021-09-08T10:35:05.666092+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": ".mlrun/func-default-erann-with-mlrun:latest",
        "volumes": [],
        "volume_mounts": [],
        "env": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "handler",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ".mlrun/func-default-erann-with-mlrun:latest",
          "base_image": "mlrun/mlrun",
          "commands": [
            "python -m pip install \"mlrun[complete]==0.7.0-rc16\""
          ]
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "labels": {},
        "name": "erann-test",
        "project": "default",
        "tag": "",
        "hash": "a0694092ab635e6899d1b0613a5a1599ca9e9b13",
        "updated": "2021-09-08T15:39:05.619915+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "mlrun/mlrun",
          "commands": [
            "echo $PATH",
            "python -m pip install \"mlrun[complete]==0.7.0-rc15\""
          ],
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ".mlrun/func-default-erann-test:latest"
        },
        "default_handler": "handler",
        "description": "",
        "env": [
          {
            "name": "ENV_VAR_KEY",
            "value": "env-var-value"
          }
        ],
        "image": ".mlrun/func-default-erann-test:latest",
        "volume_mounts": [
          {
            "name": "my-volume",
            "mountPath": "/my-path2"
          }
        ],
        "volumes": [
          {
            "name": "my-volume",
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "container": "projects",
                "accessKey": "242e47-a051-4ec3-8384-5f99a26c1451",
                "subPath": "/mount"
              }
            }
          }
        ],
        "resources": {
          "limits": {
            "cpu": "1",
            "memory": "5Mi",
            "nvidia.com/gpu": "1"
          },
          "requests": {
            "cpu": "1",
            "memory": "5Mi"
          }
        },
        "secret_sources": []
      },
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "erann-test",
        "tag": "",
        "hash": "aa2f8a35bc1eacfa57fcb894f6cffe1499541b6a",
        "project": "default",
        "categories": [],
        "updated": "2021-09-08T15:51:02.692879+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": ".mlrun/func-default-erann-test:latest",
        "volumes": [
          {
            "name": "my-volume",
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "container": "projects",
                "accessKey": "242e47-a051-4ec3-8384-5f99a26c1451",
                "subPath": "/mount"
              }
            }
          }
        ],
        "volume_mounts": [
          {
            "name": "my-volume",
            "mountPath": "/my-path2"
          }
        ],
        "env": [
          {
            "name": "ENV_VAR_KEY",
            "value": "env-var-value"
          }
        ],
        "resources": {
          "limits": {
            "cpu": "1",
            "memory": "5Mi",
            "nvidia.com/gpu": "1"
          },
          "requests": {
            "cpu": "1",
            "memory": "5Mi"
          }
        },
        "default_handler": "handler",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ".mlrun/func-default-erann-test:latest",
          "base_image": "mlrun/mlrun",
          "commands": [
            "echo $PATH",
            "python -m pip install \"mlrun[complete]==0.7.0-rc15\""
          ]
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "erann-test",
        "tag": "",
        "hash": "d6ab643566d4ff7024320c0103709718a8a9bb58",
        "project": "default",
        "categories": [],
        "updated": "2021-09-17T15:08:47.901095+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": ".mlrun/func-default-erann-test:latest",
        "volumes": [
          {
            "name": "my-volume",
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "container": "projects",
                "accessKey": "242e47-a051-4ec3-8384-5f99a26c1451",
                "subPath": "/mount"
              }
            }
          }
        ],
        "volume_mounts": [
          {
            "name": "my-volume",
            "mountPath": "/my-path3"
          }
        ],
        "env": [
          {
            "name": "ENV_VAR_KEY",
            "value": "env-var-value"
          }
        ],
        "resources": {
          "limits": {
            "cpu": "1",
            "memory": "5Mi",
            "nvidia.com/gpu": "1"
          },
          "requests": {
            "cpu": "1",
            "memory": "5Mi"
          }
        },
        "default_handler": "handler",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ".mlrun/func-default-erann-test:latest",
          "base_image": "mlrun/mlrun",
          "commands": [
            "echo $PATH",
            "python -m pip install \"mlrun[complete]==0.7.0-rc15\""
          ]
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "labels": {},
        "name": "erann-test",
        "project": "default",
        "tag": "",
        "hash": "f98bb1fad1326bde1ad3842fbac6d355d736cbb3",
        "updated": "2021-09-08T20:11:03.930775+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "mlrun/mlrun",
          "commands": [
            "echo $PATH",
            "python -m pip install \"mlrun[complete]==0.7.0-rc15\""
          ],
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ".mlrun/func-default-erann-test:latest"
        },
        "default_handler": "handler",
        "description": "",
        "env": [
          {
            "name": "ENV_VAR_KEY",
            "value": "env-var-value"
          }
        ],
        "image": ".mlrun/func-default-erann-test:latest",
        "volume_mounts": [
          {
            "name": "my-volume",
            "mountPath": "/my-path3"
          }
        ],
        "volumes": [
          {
            "name": "my-volume",
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "container": "projects",
                "accessKey": "242e47-a051-4ec3-8384-5f99a26c1451",
                "subPath": "/mount"
              }
            }
          }
        ],
        "resources": {
          "limits": {
            "cpu": "1",
            "memory": "5Mi",
            "nvidia.com/gpu": "1"
          },
          "requests": {
            "cpu": "1",
            "memory": "5Mi"
          }
        },
        "secret_sources": []
      },
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "labels": {},
        "name": "test",
        "tag": "",
        "project": "default",
        "hash": "a98d822437469e04752c5c121beda2e350fccf94",
        "updated": "2021-09-16T09:21:05.984023+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "mlrun/mlrun",
          "commands": [
            "python -m pip install \"mlrun[complete] @ git+https://github.com/mlrun/mlrun@development\""
          ],
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ""
        },
        "default_class": "",
        "default_handler": "test",
        "description": "",
        "env": [],
        "image": "",
        "secret_sources": [],
        "volume_mounts": [],
        "volumes": [],
        "resources": {
          "limits": {},
          "requests": {}
        }
      },
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "test",
        "tag": "",
        "project": "default",
        "categories": [],
        "hash": "b0950df76f3007cebd3e0b686c93d0f9de095f2f",
        "updated": "2021-09-16T09:21:06.385830+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "",
        "volumes": [],
        "volume_mounts": [],
        "env": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "test",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ".mlrun/func-default-test:latest",
          "base_image": "mlrun/mlrun",
          "commands": [
            "python -m pip install \"mlrun[complete] @ git+https://github.com/mlrun/mlrun@development\""
          ]
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "labels": {},
        "name": "erann-job-func",
        "tag": "",
        "project": "default",
        "hash": "bcf28bda51112e4da8ad85666322f157a1fa5b4a",
        "updated": "2021-09-16T15:16:28.438093+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "mlrun/mlrun",
          "commands": [
            "python -m pip install \"mlrun[complete] @ git+https://github.com/mlrun/mlrun@development\""
          ],
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": "docker-registry.default-tenant.app.vmdev36.lab.iguazeng.com:80/mlrun/func-default-erann-job-func:my-tag"
        },
        "default_class": "",
        "default_handler": "handler",
        "description": "",
        "env": [],
        "image": "",
        "secret_sources": [],
        "volume_mounts": [],
        "volumes": [],
        "resources": {
          "limits": {},
          "requests": {}
        }
      },
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "erann-job-func",
        "tag": "",
        "project": "default",
        "categories": [],
        "hash": "b60c67a625bdcb5b993a1ef15e97dfe04f30f65b",
        "updated": "2021-09-16T15:16:28.722411+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "",
        "volumes": [],
        "volume_mounts": [],
        "env": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "handler",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": "docker-registry.default-tenant.app.vmdev36.lab.iguazeng.com:80/mlrun/func-default-erann-job-func:my-tag",
          "base_image": "mlrun/mlrun",
          "commands": [
            "python -m pip install \"mlrun[complete] @ git+https://github.com/mlrun/mlrun@development\""
          ]
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "name": "erann-job-func",
        "tag": "my-tag",
        "project": "default",
        "categories": [],
        "hash": "282014f80c7d8aa4b42338216cfa9dbb37503ff5",
        "updated": "2021-09-16T15:19:17.423214+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "docker-registry.default-tenant.app.vmdev36.lab.iguazeng.com:80/mlrun/func-default-erann-job-func:my-tag",
        "volumes": [],
        "volume_mounts": [],
        "env": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "handler",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": "docker-registry.default-tenant.app.vmdev36.lab.iguazeng.com:80/mlrun/func-default-erann-job-func:my-tag",
          "base_image": "mlrun/mlrun",
          "commands": [
            "python -m pip install \"mlrun[complete] @ git+https://github.com/mlrun/mlrun@development\""
          ]
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "status": {
        "state": "ready",
        "build_pod": "mlrun-build-erann-job-func-p4v6g"
      },
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "labels": {},
        "name": "test",
        "tag": "",
        "project": "default",
        "hash": "7b46a60b122692d67c28b65d80c5b89bf721b501",
        "updated": "2021-09-17T07:25:35.128982+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "",
          "commands": [],
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ""
        },
        "default_handler": "handler",
        "description": "",
        "env": [],
        "image": "mlrun/mlrun",
        "volume_mounts": [],
        "volumes": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "secret_sources": []
      },
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "test",
        "tag": "",
        "project": "default",
        "categories": [],
        "hash": "a66072468b76ca11e9dbeaa495c781e5a52efbb5",
        "updated": "2021-09-17T07:25:35.702056+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [],
        "volume_mounts": [],
        "env": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "handler",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": "",
          "base_image": "",
          "commands": []
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "labels": {},
        "name": "test",
        "tag": "",
        "project": "default",
        "hash": "a6a366c4c66cf7a831c2dc920a3d86cd71fec3ac",
        "updated": "2021-09-17T07:26:05.417982+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "mlrun/mlrun",
          "commands": [
            "python -m pip install \"mlrun[complete] @ git+https://github.com/mlrun/mlrun@development\""
          ],
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ""
        },
        "default_handler": "handler",
        "description": "",
        "env": [],
        "image": "",
        "volume_mounts": [],
        "volumes": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "secret_sources": []
      },
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "test",
        "tag": "",
        "project": "default",
        "categories": [],
        "hash": "21c889e751ccd62d4620c574899b5ceed1b1f623",
        "updated": "2021-09-17T07:26:06.032588+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "",
        "volumes": [],
        "volume_mounts": [],
        "env": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "handler",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ".mlrun/func-default-test:latest",
          "base_image": "mlrun/mlrun",
          "commands": [
            "python -m pip install \"mlrun[complete] @ git+https://github.com/mlrun/mlrun@development\""
          ]
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "name": "test",
        "tag": "",
        "project": "default",
        "categories": [],
        "hash": "c3c5da23390346829bdb2a9720c0b936d01abbd1",
        "updated": "2021-09-17T08:58:20.596181+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": ".mlrun/func-default-test:latest",
        "volumes": [],
        "volume_mounts": [],
        "env": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "handler",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ".mlrun/func-default-test:latest",
          "base_image": "mlrun/mlrun",
          "commands": [
            "python -m pip install \"mlrun[complete] @ git+https://github.com/mlrun/mlrun@development\""
          ]
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
    "kind": "serving",
    "metadata": {
        "name": "model-monitoring-stream",
        "tag": "latest",
        "project": "default",
        "categories": [],
        "credentials": {
            "access_key": "$ref:mlrun-auth-secrets.36ade9f8ae7bddc0fc42b8c701469b8d23268177977bd695c36ed51c"
        },
        "hash": "85957751e571a92e07213781f5e0c35bfbe42c64",
        "updated": "2022-07-04T06:37:28.324783+00:00"
    },
    "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "build": {
            "commands": [],
            "code_origin": "/mlrun/mlrun/model_monitoring/stream_processing_fs.py",
            "origin_filename": "/mlrun/mlrun/model_monitoring/stream_processing_fs.py"
        },
        "description": "",
        "default_handler": "",
        "disable_auto_mount": true,
        "volumes": [],
        "volume_mounts": [],
        "env": [
            {
                "name": "MODEL_MONITORING_ACCESS_KEY",
                "valueFrom": {
                    "secretKeyRef": {
                        "key": "mlrun.model-monitoring.MODEL_MONITORING_ACCESS_KEY",
                        "name": "mlrun-project-secrets-default"
                    }
                }
            },
            {
                "name": "V3IO_API",
                "value": "http://v3io-webapi:8081"
            },
            {
                "name": "V3IO_USERNAME",
                "value": "pipelines"
            },
            {
                "name": "V3IO_ACCESS_KEY",
                "valueFrom": {
                    "secretKeyRef": {
                        "key": "accessKey",
                        "name": "mlrun-auth-secrets.27111631aff0f77b2ca9e3f972065f482a58b63645f0afd8d231028f"
                    }
                }
            },
            {
                "name": "V3IO_FRAMESD",
                "value": "http://framesd:8080"
            },
            {
                "name": "MLRUN_AUTH_SESSION",
                "valueFrom": {
                    "secretKeyRef": {
                        "key": "accessKey",
                        "name": "mlrun-auth-secrets.36ade9f8ae7bddc0fc42b8c701469b8d23268177977bd695c36ed51c"
                    }
                }
            },
            {
                "name": "MLRUN_K8S_SECRET__AZURE_RESOURCE_GROUP",
                "valueFrom": {
                    "secretKeyRef": {
                        "key": "AZURE_RESOURCE_GROUP",
                        "name": "mlrun-project-secrets-azureml-admin"
                    }
                }
            },
            {
                "name": "MLRUN_K8S_SECRET__AZURE_SERVICE_PRINCIPAL_ID",
                "valueFrom": {
                    "secretKeyRef": {
                        "key": "AZURE_SERVICE_PRINCIPAL_ID",
                        "name": "mlrun-project-secrets-azureml-admin"
                    }
                }
            },
            {
                "name": "MLRUN_K8S_SECRET__AZURE_SERVICE_PRINCIPAL_PASSWORD",
                "valueFrom": {
                    "secretKeyRef": {
                        "key": "AZURE_SERVICE_PRINCIPAL_PASSWORD",
                        "name": "mlrun-project-secrets-azureml-admin"
                    }
                }
            },
            {
                "name": "MLRUN_K8S_SECRET__AZURE_STORAGE_CONNECTION_STRING",
                "valueFrom": {
                    "secretKeyRef": {
                        "key": "AZURE_STORAGE_CONNECTION_STRING",
                        "name": "mlrun-project-secrets-azureml-admin"
                    }
                }
            },
            {
                "name": "MLRUN_K8S_SECRET__AZURE_SUBSCRIPTION_ID",
                "valueFrom": {
                    "secretKeyRef": {
                        "key": "AZURE_SUBSCRIPTION_ID",
                        "name": "mlrun-project-secrets-azureml-admin"
                    }
                }
            },
            {
                "name": "MLRUN_K8S_SECRET__AZURE_TENANT_ID",
                "valueFrom": {
                    "secretKeyRef": {
                        "key": "AZURE_TENANT_ID",
                        "name": "mlrun-project-secrets-azureml-admin"
                    }
                }
            },
            {
                "name": "MLRUN_K8S_SECRET__AZURE_WORKSPACE_NAME",
                "valueFrom": {
                    "secretKeyRef": {
                        "key": "AZURE_WORKSPACE_NAME",
                        "name": "mlrun-project-secrets-azureml-admin"
                    }
                }
            }
        ],
        "resources": {
            "requests": {
                "memory": "1Mi",
                "cpu": "25m"
            },
            "limits": {
                "memory": "20Gi",
                "cpu": "2"
            }
        },
        "priority_class_name": "igz-workload-medium",
        "preemption_mode": "prevent",
        "min_replicas": 1,
        "max_replicas": 1,
        "config": {
            "spec.triggers.monitoring_stream_trigger": {
                "kind": "v3ioStream",
                "url": "http://v3io-webapi:8081",
                "attributes": {
                    "containerName": "users",
                    "streamPath": "pipelines/default/model-endpoints/stream",
                    "consumerGroup": "serving",
                    "sequenceNumberCommitInterval": "1s",
                    "workerAllocationMode": "pool",
                    "sessionTimeout": "10s",
                    "heartbeatInterval": "3s",
                    "seekTo": "earliest",
                    "readBatchSize": 256,
                    "pollingIntervalMs": 500
                },
                "name": "monitoring_stream_trigger",
                "maxWorkers": 1,
                "password": "76ceea19-4b10-47d9-afbb-f687c91b9231"
            },
            "metadata.labels.mlrun/class": "serving",
            "spec.runtime": "python:3.7",
            "spec.serviceType": "ClusterIP",
            "spec.resources": {
                "requests": {
                    "memory": "1Mi",
                    "cpu": "25m"
                },
                "limits": {
                    "memory": "20Gi",
                    "cpu": "2"
                }
            },
            "spec.PreemptionMode": "prevent",
            "spec.priorityClassName": "igz-workload-medium",
            "spec.minReplicas": 1,
            "spec.maxReplicas": 1
        },
        "base_spec": {
            "apiVersion": "nuclio.io/v1",
            "kind": "Function",
            "metadata": {
                "name": "default-model-monitoring-stream",
                "labels": {
                    "mlrun/class": "serving",
                    "nuclio.io/project-name": "default"
                },
                "annotations": {
                    "nuclio.io/generated_by": "function generated from /mlrun/mlrun/model_monitoring/stream_processing_fs.py"
                }
            },
            "spec": {
                "runtime": "python:3.7",
                "handler": "stream_processing_fs:handler",
                "env": [
                    {
                        "name": "V3IO_API",
                        "value": "http://v3io-webapi:8081"
                    },
                    {
                        "name": "V3IO_USERNAME",
                        "value": "pipelines"
                    },
                    {
                        "name": "V3IO_FRAMESD",
                        "value": "http://framesd:8080"
                    },
                    {
                        "name": "MLRUN_DEFAULT_PROJECT",
                        "value": "azureml-admin"
                    },
                    {
                        "name": "MLRUN_DBPATH",
                        "value": "http://mlrun-api:8080"
                    },
                    {
                        "name": "MLRUN_NAMESPACE",
                        "value": "default-tenant"
                    },
                    {
                        "name": "MLRUN_AUTH_SESSION",
                        "valueFrom": {
                            "secretKeyRef": {
                                "key": "accessKey",
                                "name": "mlrun-auth-secrets.36ade9f8ae7bddc0fc42b8c701469b8d23268177977bd695c36ed51c"
                            }
                        }
                    },
                    {
                        "name": "SERVING_SPEC_ENV",
                        "value": "{\"function_uri\": \"azureml-admin/model-monitoring-stream\", \"version\": \"v2\", \"parameters\": {\"infer_options\": 0, \"overwrite\": null, \"featureset\": \"store://feature-sets/azureml-admin/monitoring\", \"source\": {\"kind\": \"http\", \"online\": true}, \"targets\": [{\"name\": \"parquet\", \"kind\": \"parquet\", \"path\": \"v3io:///projects/azureml-admin/model-endpoints/parquet\", \"after_step\": \"ProcessBeforeParquet\", \"attributes\": {\"infer_columns_from_data\": true}, \"partitioned\": true, \"key_bucketing_number\": 0, \"time_partitioning_granularity\": \"hour\", \"max_events\": 10000, \"flush_after_seconds\": 1800, \"storage_options\": {\"v3io_access_key\": \"55a0d13c-7d9a-44ab-a556-dd213d8c7165\", \"v3io_api\": \"http://v3io-webapi:8081\"}}]}, \"graph\": {\"steps\": {\"ProcessEndpointEvent\": {\"kind\": \"task\", \"class_name\": \"ProcessEndpointEvent\", \"class_args\": {\"kv_container\": \"users\", \"kv_path\": \"pipelines/azureml-admin/model-endpoints/endpoints/\", \"v3io_access_key\": \"76ceea19-4b10-47d9-afbb-f687c91b9231\"}, \"full_event\": true}, \"filter_none\": {\"kind\": \"task\", \"class_name\": \"storey.Filter\", \"class_args\": {\"_fn\": \"(event is not None)\"}, \"after\": [\"ProcessEndpointEvent\"]}, \"flatten_events\": {\"kind\": \"task\", \"class_name\": \"storey.FlatMap\", \"class_args\": {\"_fn\": \"(event)\"}, \"after\": [\"filter_none\"]}, \"MapFeatureNames\": {\"kind\": \"task\", \"class_name\": \"MapFeatureNames\", \"class_args\": {\"kv_container\": \"users\", \"kv_path\": \"pipelines/azureml-admin/model-endpoints/endpoints/\", \"access_key\": \"76ceea19-4b10-47d9-afbb-f687c91b9231\", \"infer_columns_from_data\": true}, \"after\": [\"flatten_events\"]}, \"Aggregates\": {\"kind\": \"task\", \"class_name\": \"storey.AggregateByKey\", \"class_args\": {\"aggregates\": [{\"name\": \"predictions\", \"column\": \"endpoint_id\", \"operations\": [\"count\"], \"windows\": [\"5m\", \"1h\"], \"period\": \"30s\"}, {\"name\": \"latency\", \"column\": \"latency\", \"operations\": [\"avg\"], \"windows\": [\"5m\", \"1h\"], \"period\": \"30s\"}], \"table\": \".\"}, \"after\": [\"MapFeatureNames\"]}, \"sample\": {\"kind\": \"task\", \"class_name\": \"storey.steps.SampleWindow\", \"class_args\": {\"window_size\": 10, \"key\": \"endpoint_id\"}, \"after\": [\"Aggregates\"]}, \"ProcessBeforeKV\": {\"kind\": \"task\", \"class_name\": \"ProcessBeforeKV\", \"after\": [\"sample\"]}, \"WriteToKV\": {\"kind\": \"task\", \"class_name\": \"WriteToKV\", \"class_args\": {\"container\": \"users\", \"table\": \"pipelines/azureml-admin/model-endpoints/endpoints/\"}, \"after\": [\"ProcessBeforeKV\"]}, \"InferSchema\": {\"kind\": \"task\", \"class_name\": \"InferSchema\", \"class_args\": {\"v3io_access_key\": \"76ceea19-4b10-47d9-afbb-f687c91b9231\", \"v3io_framesd\": \"http://framesd:8080\", \"container\": \"users\", \"table\": \"pipelines/azureml-admin/model-endpoints/endpoints/\"}, \"after\": [\"WriteToKV\"]}, \"ProcessBeforeTSDB\": {\"kind\": \"task\", \"class_name\": \"ProcessBeforeTSDB\", \"after\": [\"sample\"]}, \"FilterAndUnpackKeys1\": {\"kind\": \"task\", \"class_name\": \"FilterAndUnpackKeys\", \"class_args\": {\"keys\": [\"base_metrics\"]}, \"after\": [\"ProcessBeforeTSDB\"]}, \"tsdb1\": {\"kind\": \"task\", \"class_name\": \"storey.TSDBTarget\", \"class_args\": {\"path\": \"users/pipelines/azureml-admin/model-endpoints/events/\", \"rate\": \"10/m\", \"time_col\": \"timestamp\", \"container\": \"users\", \"access_key\": \"76ceea19-4b10-47d9-afbb-f687c91b9231\", \"v3io_frames\": \"http://framesd:8080\", \"index_cols\": [\"endpoint_id\", \"record_type\"], \"max_events\": 10, \"timeout_secs\": 300, \"key\": \"endpoint_id\"}, \"after\": [\"FilterAndUnpackKeys1\"]}, \"FilterAndUnpackKeys2\": {\"kind\": \"task\", \"class_name\": \"FilterAndUnpackKeys\", \"class_args\": {\"keys\": [\"endpoint_features\"]}, \"after\": [\"ProcessBeforeTSDB\"]}, \"tsdb2\": {\"kind\": \"task\", \"class_name\": \"storey.TSDBTarget\", \"class_args\": {\"path\": \"users/pipelines/azureml-admin/model-endpoints/events/\", \"rate\": \"10/m\", \"time_col\": \"timestamp\", \"container\": \"users\", \"access_key\": \"76ceea19-4b10-47d9-afbb-f687c91b9231\", \"v3io_frames\": \"http://framesd:8080\", \"index_cols\": [\"endpoint_id\", \"record_type\"], \"max_events\": 10, \"timeout_secs\": 300, \"key\": \"endpoint_id\"}, \"after\": [\"FilterAndUnpackKeys2\"]}, \"FilterAndUnpackKeys3\": {\"kind\": \"task\", \"class_name\": \"FilterAndUnpackKeys\", \"class_args\": {\"keys\": [\"custom_metrics\"]}, \"after\": [\"ProcessBeforeTSDB\"]}, \"FilterNotNone\": {\"kind\": \"task\", \"class_name\": \"storey.Filter\", \"class_args\": {\"_fn\": \"(event is not None)\"}, \"after\": [\"FilterAndUnpackKeys3\"]}, \"tsdb3\": {\"kind\": \"task\", \"class_name\": \"storey.TSDBTarget\", \"class_args\": {\"path\": \"users/pipelines/azureml-admin/model-endpoints/events/\", \"rate\": \"10/m\", \"time_col\": \"timestamp\", \"container\": \"users\", \"access_key\": \"76ceea19-4b10-47d9-afbb-f687c91b9231\", \"v3io_frames\": \"http://framesd:8080\", \"index_cols\": [\"endpoint_id\", \"record_type\"], \"max_events\": 10, \"timeout_secs\": 300, \"key\": \"endpoint_id\"}, \"after\": [\"FilterNotNone\"]}, \"ProcessBeforeParquet\": {\"kind\": \"task\", \"class_name\": \"ProcessBeforeParquet\", \"class_args\": {\"_fn\": \"(event)\"}, \"after\": [\"MapFeatureNames\"]}}, \"final_step\": \"ProcessBeforeParquet\"}, \"load_mode\": null, \"functions\": {}, \"graph_initializer\": \"mlrun.feature_store.ingestion.featureset_initializer\", \"error_stream\": null, \"track_models\": null, \"default_content_type\": null}"
                    },
                    {
                        "name": "MODEL_MONITORING_ACCESS_KEY",
                        "valueFrom": {
                            "secretKeyRef": {
                                "key": "mlrun.model-monitoring.MODEL_MONITORING_ACCESS_KEY",
                                "name": "mlrun-project-secrets-default"
                            }
                        }
                    },
                    {
                        "name": "V3IO_ACCESS_KEY",
                        "valueFrom": {
                            "secretKeyRef": {
                                "key": "accessKey",
                                "name": "mlrun-auth-secrets.27111631aff0f77b2ca9e3f972065f482a58b63645f0afd8d231028f"
                            }
                        }
                    },
                    {
                        "name": "MLRUN_K8S_SECRET__AZURE_RESOURCE_GROUP",
                        "valueFrom": {
                            "secretKeyRef": {
                                "key": "AZURE_RESOURCE_GROUP",
                                "name": "mlrun-project-secrets-default"
                            }
                        }
                    },
                    {
                        "name": "MLRUN_K8S_SECRET__AZURE_SERVICE_PRINCIPAL_ID",
                        "valueFrom": {
                            "secretKeyRef": {
                                "key": "AZURE_SERVICE_PRINCIPAL_ID",
                                "name": "mlrun-project-secrets-default"
                            }
                        }
                    },
                    {
                        "name": "MLRUN_K8S_SECRET__AZURE_SERVICE_PRINCIPAL_PASSWORD",
                        "valueFrom": {
                            "secretKeyRef": {
                                "key": "AZURE_SERVICE_PRINCIPAL_PASSWORD",
                                "name": "mlrun-project-secrets-default"
                            }
                        }
                    },
                    {
                        "name": "MLRUN_K8S_SECRET__AZURE_STORAGE_CONNECTION_STRING",
                        "valueFrom": {
                            "secretKeyRef": {
                                "key": "AZURE_STORAGE_CONNECTION_STRING",
                                "name": "mlrun-project-secrets-default"
                            }
                        }
                    },
                    {
                        "name": "MLRUN_K8S_SECRET__AZURE_SUBSCRIPTION_ID",
                        "valueFrom": {
                            "secretKeyRef": {
                                "key": "AZURE_SUBSCRIPTION_ID",
                                "name": "mlrun-project-secrets-default"
                            }
                        }
                    },
                    {
                        "name": "MLRUN_K8S_SECRET__AZURE_TENANT_ID",
                        "valueFrom": {
                            "secretKeyRef": {
                                "key": "AZURE_TENANT_ID",
                                "name": "mlrun-project-secrets-default"
                            }
                        }
                    },
                    {
                        "name": "MLRUN_K8S_SECRET__AZURE_WORKSPACE_NAME",
                        "valueFrom": {
                            "secretKeyRef": {
                                "key": "AZURE_WORKSPACE_NAME",
                                "name": "mlrun-project-secrets-default"
                            }
                        }
                    }
                ],
                "volumes": [],
                "build": {
                    "commands": [],
                    "noBaseImagesPull": true,
                    "functionSourceCode": "",
                    "baseImage": "datanode-registry.iguazio-platform.app.product-3-4.iguazio-cd1.com:80/quay.io/mlrun/mlrun:1.0.0"
                },
                "triggers": {
                    "monitoring_stream_trigger": {
                        "kind": "v3ioStream",
                        "url": "http://v3io-webapi:8081",
                        "attributes": {
                            "containerName": "users",
                            "streamPath": "pipelines/default/model-endpoints/stream",
                            "consumerGroup": "serving",
                            "sequenceNumberCommitInterval": "1s",
                            "workerAllocationMode": "pool",
                            "sessionTimeout": "10s",
                            "heartbeatInterval": "3s",
                            "seekTo": "earliest",
                            "readBatchSize": 256,
                            "pollingIntervalMs": 500
                        },
                        "name": "monitoring_stream_trigger",
                        "maxWorkers": 1,
                        "password": "76ceea19-4b10-47d9-afbb-f687c91b9231"
                    },
                    "http": {
                        "kind": "http",
                        "name": "http",
                        "maxWorkers": 1,
                        "workerAvailabilityTimeoutMilliseconds": 10000,
                        "attributes": {
                            "ingresses": {
                                "0": {
                                    "paths": [
                                        "/"
                                    ],
                                    "hostTemplate": "@nuclio.fromDefault"
                                }
                            },
                            "serviceType": "ClusterIP"
                        }
                    }
                },
                "serviceType": "ClusterIP",
                "resources": {
                    "requests": {
                        "memory": "1Mi",
                        "cpu": "25m"
                    },
                    "limits": {
                        "memory": "20Gi",
                        "cpu": "2"
                    }
                },
                "PreemptionMode": "prevent",
                "priorityClassName": "igz-workload-medium",
                "minReplicas": 1,
                "maxReplicas": 1
            }
        },
        "source": "",
        "function_kind": "serving_v2",
        "graph": {
            "steps": {
                "ProcessEndpointEvent": {
                    "kind": "task",
                    "class_name": "ProcessEndpointEvent",
                    "class_args": {
                        "kv_container": "users",
                        "kv_path": "pipelines/default/model-endpoints/endpoints/",
                        "v3io_access_key": "76ceea19-4b10-47d9-afbb-f687c91b9231"
                    },
                    "full_event": true
                },
                "filter_none": {
                    "kind": "task",
                    "class_name": "storey.Filter",
                    "class_args": {
                        "_fn": "(event is not None)"
                    },
                    "after": [
                        "ProcessEndpointEvent"
                    ]
                },
                "flatten_events": {
                    "kind": "task",
                    "class_name": "storey.FlatMap",
                    "class_args": {
                        "_fn": "(event)"
                    },
                    "after": [
                        "filter_none"
                    ]
                },
                "MapFeatureNames": {
                    "kind": "task",
                    "class_name": "MapFeatureNames",
                    "class_args": {
                        "kv_container": "users",
                        "kv_path": "pipelines/default/model-endpoints/endpoints/",
                        "access_key": "76ceea19-4b10-47d9-afbb-f687c91b9231",
                        "infer_columns_from_data": true
                    },
                    "after": [
                        "flatten_events"
                    ]
                },
                "Aggregates": {
                    "kind": "task",
                    "class_name": "storey.AggregateByKey",
                    "class_args": {
                        "aggregates": [
                            {
                                "name": "predictions",
                                "column": "endpoint_id",
                                "operations": [
                                    "count"
                                ],
                                "windows": [
                                    "5m",
                                    "1h"
                                ],
                                "period": "30s"
                            },
                            {
                                "name": "latency",
                                "column": "latency",
                                "operations": [
                                    "avg"
                                ],
                                "windows": [
                                    "5m",
                                    "1h"
                                ],
                                "period": "30s"
                            }
                        ],
                        "table": "."
                    },
                    "after": [
                        "MapFeatureNames"
                    ]
                },
                "sample": {
                    "kind": "task",
                    "class_name": "storey.steps.SampleWindow",
                    "class_args": {
                        "window_size": 10,
                        "key": "endpoint_id"
                    },
                    "after": [
                        "Aggregates"
                    ]
                },
                "ProcessBeforeKV": {
                    "kind": "task",
                    "class_name": "ProcessBeforeKV",
                    "after": [
                        "sample"
                    ]
                },
                "WriteToKV": {
                    "kind": "task",
                    "class_name": "WriteToKV",
                    "class_args": {
                        "container": "users",
                        "table": "pipelines/default/model-endpoints/endpoints/"
                    },
                    "after": [
                        "ProcessBeforeKV"
                    ]
                },
                "InferSchema": {
                    "kind": "task",
                    "class_name": "InferSchema",
                    "class_args": {
                        "v3io_access_key": "76ceea19-4b10-47d9-afbb-f687c91b9231",
                        "v3io_framesd": "http://framesd:8080",
                        "container": "users",
                        "table": "pipelines/default/model-endpoints/endpoints/"
                    },
                    "after": [
                        "WriteToKV"
                    ]
                },
                "ProcessBeforeTSDB": {
                    "kind": "task",
                    "class_name": "ProcessBeforeTSDB",
                    "after": [
                        "sample"
                    ]
                },
                "FilterAndUnpackKeys1": {
                    "kind": "task",
                    "class_name": "FilterAndUnpackKeys",
                    "class_args": {
                        "keys": [
                            "base_metrics"
                        ]
                    },
                    "after": [
                        "ProcessBeforeTSDB"
                    ]
                },
                "tsdb1": {
                    "kind": "task",
                    "class_name": "storey.TSDBTarget",
                    "class_args": {
                        "path": "users/pipelines/default/model-endpoints/events/",
                        "rate": "10/m",
                        "time_col": "timestamp",
                        "container": "users",
                        "access_key": "76ceea19-4b10-47d9-afbb-f687c91b9231",
                        "v3io_frames": "http://framesd:8080",
                        "index_cols": [
                            "endpoint_id",
                            "record_type"
                        ],
                        "max_events": 10,
                        "timeout_secs": 300,
                        "key": "endpoint_id"
                    },
                    "after": [
                        "FilterAndUnpackKeys1"
                    ]
                },
                "FilterAndUnpackKeys2": {
                    "kind": "task",
                    "class_name": "FilterAndUnpackKeys",
                    "class_args": {
                        "keys": [
                            "endpoint_features"
                        ]
                    },
                    "after": [
                        "ProcessBeforeTSDB"
                    ]
                },
                "tsdb2": {
                    "kind": "task",
                    "class_name": "storey.TSDBTarget",
                    "class_args": {
                        "path": "users/pipelines/default/model-endpoints/events/",
                        "rate": "10/m",
                        "time_col": "timestamp",
                        "container": "users",
                        "access_key": "76ceea19-4b10-47d9-afbb-f687c91b9231",
                        "v3io_frames": "http://framesd:8080",
                        "index_cols": [
                            "endpoint_id",
                            "record_type"
                        ],
                        "max_events": 10,
                        "timeout_secs": 300,
                        "key": "endpoint_id"
                    },
                    "after": [
                        "FilterAndUnpackKeys2"
                    ]
                },
                "FilterAndUnpackKeys3": {
                    "kind": "task",
                    "class_name": "FilterAndUnpackKeys",
                    "class_args": {
                        "keys": [
                            "custom_metrics"
                        ]
                    },
                    "after": [
                        "ProcessBeforeTSDB"
                    ]
                },
                "FilterNotNone": {
                    "kind": "task",
                    "class_name": "storey.Filter",
                    "class_args": {
                        "_fn": "(event is not None)"
                    },
                    "after": [
                        "FilterAndUnpackKeys3"
                    ]
                },
                "tsdb3": {
                    "kind": "task",
                    "class_name": "storey.TSDBTarget",
                    "class_args": {
                        "path": "users/pipelines/default/model-endpoints/events/",
                        "rate": "10/m",
                        "time_col": "timestamp",
                        "container": "users",
                        "access_key": "76ceea19-4b10-47d9-afbb-f687c91b9231",
                        "v3io_frames": "http://framesd:8080",
                        "index_cols": [
                            "endpoint_id",
                            "record_type"
                        ],
                        "max_events": 10,
                        "timeout_secs": 300,
                        "key": "endpoint_id"
                    },
                    "after": [
                        "FilterNotNone"
                    ]
                },
                "ProcessBeforeParquet": {
                    "kind": "task",
                    "class_name": "ProcessBeforeParquet",
                    "class_args": {
                        "_fn": "(event)"
                    },
                    "after": [
                        "MapFeatureNames"
                    ]
                }
            },
            "final_step": "ProcessBeforeParquet"
        },
        "graph_initializer": "mlrun.feature_store.ingestion.featureset_initializer",
        "parameters": {
            "infer_options": 0,
            "overwrite": null,
            "featureset": "store://feature-sets/default/monitoring",
            "source": {
                "kind": "http",
                "online": true
            },
            "targets": [
                {
                    "name": "parquet",
                    "kind": "parquet",
                    "path": "v3io:///projects/default/model-endpoints/parquet",
                    "after_step": "ProcessBeforeParquet",
                    "attributes": {
                        "infer_columns_from_data": true
                    },
                    "partitioned": true,
                    "key_bucketing_number": 0,
                    "time_partitioning_granularity": "hour",
                    "max_events": 10000,
                    "flush_after_seconds": 1800,
                    "storage_options": {
                        "v3io_access_key": "55a0d13c-7d9a-44ab-a556-dd213d8c7165",
                        "v3io_api": "http://v3io-webapi:8081"
                    }
                }
            ]
        },
        "secret_sources": [],
        "affinity": null,
        "tolerations": null
    },
    "status": {
        "nuclio_name": "default-model-monitoring-stream",
        "internal_invocation_urls": [],
        "external_invocation_urls": []
    },
    "verbose": false
},
    {
      "kind": "job",
      "metadata": {
        "name": "erann-test",
        "tag": "",
        "hash": "f7478a3b2e536cca99b5318487b4eb71b4d44600",
        "project": "default",
        "categories": [],
        "updated": "2021-09-30T12:03:14.353214+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": ".mlrun/func-default-erann-test:latest",
        "volumes": [
          {
            "name": "my-volume",
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "container": "projects",
                "accessKey": "242e47-a051-4ec3-8384-5f99a26c1451",
                "subPath": "/mount"
              }
            }
          }
        ],
        "volume_mounts": [
          {
            "name": "my-volume",
            "mountPath": "/my-path3"
          }
        ],
        "env": [
          {
            "name": "ENV_VAR_KEY",
            "value": "env-var-value"
          },
          {
            "name": "V3IO_API",
            "value": "http://v3io-webapi:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "http://framesd:8080"
          }
        ],
        "resources": {
          "limits": {
            "cpu": "1",
            "memory": "5Mi",
            "nvidia.com/gpu": "1"
          },
          "requests": {
            "cpu": "1",
            "memory": "5Mi"
          }
        },
        "default_handler": "handler",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ".mlrun/func-default-erann-test:latest",
          "base_image": "mlrun/mlrun",
          "commands": [
            "echo $PATH",
            "python -m pip install \"mlrun[complete]==0.7.0-rc15\""
          ]
        },
        "disable_auto_mount": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "erann-test",
        "tag": "",
        "hash": "fd16b107a5201065ad9f798def66ac98e7d20c73",
        "project": "default",
        "categories": [],
        "updated": "2021-10-10T10:27:23.841653+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": ".mlrun/func-default-erann-test:latest",
        "volumes": [
          {
            "name": "my-volume",
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "container": "projects",
                "accessKey": "242e47-a051-4ec3-8384-5f99a26c1451",
                "subPath": "/mount"
              }
            }
          }
        ],
        "volume_mounts": [
          {
            "name": "my-volume",
            "mountPath": "/my-path3"
          }
        ],
        "env": [
          {
            "name": "ENV_VAR_KEY",
            "value": "env-var-value"
          },
          {
            "name": "V3IO_API",
            "value": "http://v3io-webapi:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "pipelines"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b1410f67-92a9-41fd-9413-6d0015c493fd"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "http://framesd:8080"
          }
        ],
        "resources": {
          "limits": {
            "cpu": "1",
            "memory": "5Mi",
            "nvidia.com/gpu": "1"
          },
          "requests": {
            "cpu": "1",
            "memory": "5Mi"
          }
        },
        "default_handler": "handler",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ".mlrun/func-default-erann-test:latest",
          "base_image": "mlrun/mlrun",
          "commands": [
            "echo $PATH",
            "python -m pip install \"mlrun[complete]==0.7.0-rc15\""
          ]
        },
        "disable_auto_mount": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "send-email",
        "tag": "latest",
        "hash": "cc6b5f5c518241b078c4375b7cab6017d9cd6440",
        "project": "default",
        "labels": {
          "author": "saarc"
        },
        "categories": [
          "utils"
        ],
        "updated": "2021-10-06T14:10:00.382460+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/ml-models",
        "volumes": [],
        "volume_mounts": [],
        "env": [
          {
            "name": "V3IO_API",
            "value": "http://v3io-webapi:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "http://framesd:8080"
          }
        ],
        "default_handler": "send_email",
        "entry_points": {
          "send_email": {
            "name": "send_email",
            "doc": "Send an email.",
            "parameters": [
              {
                "name": "context",
                "type": "MLClientCtx",
                "doc": "The function context",
                "default": ""
              },
              {
                "name": "sender",
                "type": "str",
                "doc": "Sender email address",
                "default": ""
              },
              {
                "name": "to",
                "type": "str",
                "doc": "Email address of mail recipient",
                "default": ""
              },
              {
                "name": "subject",
                "type": "str",
                "doc": "Email subject",
                "default": ""
              },
              {
                "name": "content",
                "type": "str",
                "doc": "Optional mail text",
                "default": ""
              },
              {
                "name": "server_addr",
                "type": "str",
                "doc": "Address of SMTP server to use. Use format <addr>:<port>",
                "default": null
              },
              {
                "name": "attachments",
                "type": "List[str]",
                "doc": "List of attachments to add.",
                "default": []
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 13
          }
        },
        "description": "Send Email messages through SMTP server",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKZnJvbSBtbHJ1bi5leGVjdXRpb24gaW1wb3J0IE1MQ2xpZW50Q3R4CmZyb20gdHlwaW5nIGltcG9ydCBMaXN0CgppbXBvcnQgc210cGxpYgpmcm9tIGVtYWlsLm1lc3NhZ2UgaW1wb3J0IEVtYWlsTWVzc2FnZQppbXBvcnQgb3MKCmltcG9ydCBtaW1ldHlwZXMKCgpkZWYgc2VuZF9lbWFpbCgKICAgIGNvbnRleHQ6IE1MQ2xpZW50Q3R4LAogICAgc2VuZGVyOiBzdHIsCiAgICB0bzogc3RyLAogICAgc3ViamVjdDogc3RyLAogICAgY29udGVudDogc3RyID0gIiIsCiAgICBzZXJ2ZXJfYWRkcjogc3RyID0gTm9uZSwKICAgIGF0dGFjaG1lbnRzOiBMaXN0W3N0cl0gPSBbXSwKKSAtPiBOb25lOgogICAgIiIiU2VuZCBhbiBlbWFpbC4KICAgIDpwYXJhbSBzZW5kZXI6IFNlbmRlciBlbWFpbCBhZGRyZXNzCiAgICA6cGFyYW0gY29udGV4dDogVGhlIGZ1bmN0aW9uIGNvbnRleHQKICAgIDpwYXJhbSB0bzogRW1haWwgYWRkcmVzcyBvZiBtYWlsIHJlY2lwaWVudAogICAgOnBhcmFtIHN1YmplY3Q6IEVtYWlsIHN1YmplY3QKICAgIDpwYXJhbSBjb250ZW50OiBPcHRpb25hbCBtYWlsIHRleHQKICAgIDpwYXJhbSBzZXJ2ZXJfYWRkcjogQWRkcmVzcyBvZiBTTVRQIHNlcnZlciB0byB1c2UuIFVzZSBmb3JtYXQgPGFkZHI+Ojxwb3J0PgogICAgOnBhcmFtIGF0dGFjaG1lbnRzOiBMaXN0IG9mIGF0dGFjaG1lbnRzIHRvIGFkZC4KICAgICIiIgoKICAgIGVtYWlsX3VzZXIgPSBjb250ZXh0LmdldF9zZWNyZXQoIlNNVFBfVVNFUiIpCiAgICBlbWFpbF9wYXNzID0gY29udGV4dC5nZXRfc2VjcmV0KCJTTVRQX1BBU1NXT1JEIikKICAgIGlmIGVtYWlsX3VzZXIgaXMgTm9uZSBvciBlbWFpbF9wYXNzIGlzIE5vbmU6CiAgICAgICAgY29udGV4dC5sb2dnZXIuZXJyb3IoIk1pc3Npbmcgc2VuZGVyIGVtYWlsIG9yIHBhc3N3b3JkIC0gY2Fubm90IHNlbmQgZW1haWwuIikKICAgICAgICByZXR1cm4KCiAgICBpZiBzZXJ2ZXJfYWRkciBpcyBOb25lOgogICAgICAgIGNvbnRleHQubG9nZ2VyLmVycm9yKCJTZXJ2ZXIgbm90IHNwZWNpZmllZCAtIGNhbm5vdCBzZW5kIGVtYWlsLiIpCiAgICAgICAgcmV0dXJuCgogICAgbXNnID0gRW1haWxNZXNzYWdlKCkKICAgIG1zZ1siRnJvbSJdID0gc2VuZGVyCiAgICBtc2dbIlN1YmplY3QiXSA9IHN1YmplY3QKICAgIG1zZ1siVG8iXSA9IHRvCiAgICBtc2cuc2V0X2NvbnRlbnQoY29udGVudCkKCiAgICBmb3IgZmlsZW5hbWUgaW4gYXR0YWNobWVudHM6CiAgICAgICAgY29udGV4dC5sb2dnZXIuaW5mbyhmIkxvb2tpbmcgYXQgYXR0YWNobWVudDoge2ZpbGVuYW1lfSIpCiAgICAgICAgaWYgbm90IG9zLnBhdGguaXNmaWxlKGZpbGVuYW1lKToKICAgICAgICAgICAgY29udGV4dC5sb2dnZXIud2FybmluZyhmIkZpbGVuYW1lIGRvZXMgbm90IGV4aXN0IHtmaWxlbmFtZX0iKQogICAgICAgICAgICBjb250aW51ZQogICAgICAgIGN0eXBlLCBlbmNvZGluZyA9IG1pbWV0eXBlcy5ndWVzc190eXBlKGZpbGVuYW1lKQogICAgICAgIGlmIGN0eXBlIGlzIE5vbmUgb3IgZW5jb2RpbmcgaXMgbm90IE5vbmU6CiAgICAgICAgICAgIGN0eXBlID0gImFwcGxpY2F0aW9uL29jdGV0LXN0cmVhbSIKICAgICAgICBtYWludHlwZSwgc3VidHlwZSA9IGN0eXBlLnNwbGl0KCIvIiwgMSkKICAgICAgICB3aXRoIG9wZW4oZmlsZW5hbWUsICJyYiIpIGFzIGZwOgogICAgICAgICAgICBtc2cuYWRkX2F0dGFjaG1lbnQoCiAgICAgICAgICAgICAgICBmcC5yZWFkKCksCiAgICAgICAgICAgICAgICBtYWludHlwZT1tYWludHlwZSwKICAgICAgICAgICAgICAgIHN1YnR5cGU9c3VidHlwZSwKICAgICAgICAgICAgICAgIGZpbGVuYW1lPW9zLnBhdGguYmFzZW5hbWUoZmlsZW5hbWUpLAogICAgICAgICAgICApCiAgICAgICAgICAgIGNvbnRleHQubG9nZ2VyLmluZm8oCiAgICAgICAgICAgICAgICBmIkFkZGVkIGF0dGFjaG1lbnQ6IEZpbGVuYW1lOiB7ZmlsZW5hbWV9LCBvZiBtaW1ldHlwZToge21haW50eXBlfSwge3N1YnR5cGV9IgogICAgICAgICAgICApCgogICAgdHJ5OgogICAgICAgIHMgPSBzbXRwbGliLlNNVFAoaG9zdD1zZXJ2ZXJfYWRkcikKICAgICAgICBzLnN0YXJ0dGxzKCkKICAgICAgICBzLmxvZ2luKGVtYWlsX3VzZXIsIGVtYWlsX3Bhc3MpCiAgICAgICAgcy5zZW5kX21lc3NhZ2UobXNnKQogICAgICAgIGNvbnRleHQubG9nZ2VyLmluZm8oIkVtYWlsIHNlbnQgc3VjY2Vzc2Z1bGx5LiIpCiAgICBleGNlcHQgc210cGxpYi5TTVRQRXhjZXB0aW9uIGFzIGV4cDoKICAgICAgICBjb250ZXh0LmxvZ2dlci5lcnJvcihmIlNNVFAgZXhjZXB0aW9uIGNhdWdodCBpbiBTTVRQIGNvZGU6IHtleHB9IikKICAgIGV4Y2VwdCBDb25uZWN0aW9uRXJyb3IgYXMgY2U6CiAgICAgICAgY29udGV4dC5sb2dnZXIuZXJyb3IoZiJDb25uZWN0aW9uIGVycm9yIGNhdWdodCBpbiBTTVRQIGNvZGU6IHtjZX0iKQo=",
          "commands": [],
          "code_origin": "https://github.com/daniels290813/functions.git#55a79c32be5d233cc11efcf40cd3edbe309bfdef:/home/kali/functions/send_email/send_email.py"
        },
        "disable_auto_mount": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": {}
    },
    {
      "kind": "job",
      "metadata": {
        "labels": {},
        "name": "erann-test",
        "project": "default",
        "tag": "",
        "hash": "1455658d863de9ca104c46075643369d582cf6a8",
        "updated": "2021-10-12T20:19:33.094339+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "mlrun/mlrun",
          "commands": [
            "echo $PATH",
            "python -m pip install \"mlrun[complete]==0.7.0-rc15\""
          ],
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ".mlrun/func-default-erann-test:latest"
        },
        "description": "",
        "env": [
          {
            "name": "ENV_VAR_KEY",
            "value": "env-var-value"
          },
          {
            "name": "V3IO_API",
            "value": "http://v3io-webapi:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "pipelines"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b1410f67-92a9-41fd-9413-6d0015c493fd"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "http://framesd:8080"
          }
        ],
        "image": ".mlrun/func-default-erann-test:latest",
        "volume_mounts": [
          {
            "name": "my-volume",
            "mountPath": "/my-path3"
          }
        ],
        "volumes": [
          {
            "name": "my-volume",
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "container": "projects",
                "accessKey": "242e47-a051-4ec3-8384-5f99a26c1451",
                "subPath": "/mount"
              }
            }
          }
        ],
        "resources": {
          "limits": {
            "cpu": "1",
            "memory": "5Mi",
            "nvidia.com/gpu": "1"
          },
          "requests": {
            "cpu": "1",
            "memory": "5Mi"
          }
        },
        "default_handler": "handler"
      },
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "labels": {},
        "name": "test-m",
        "tag": "",
        "project": "default",
        "hash": "fb6634a6aa827c224ede32ac0c8982c0554a7dd1",
        "updated": "2021-10-13T11:45:18.105601+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "",
          "commands": [],
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ""
        },
        "default_class": "",
        "default_handler": "handler",
        "description": "",
        "env": [],
        "image": "mlrun/mlrun",
        "secret_sources": [],
        "volume_mounts": [],
        "volumes": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "disable_auto_mount": false
      },
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "test-m",
        "tag": "",
        "project": "default",
        "categories": [],
        "hash": "24fb05cf350c6d2e9c627599da975bc2e4deddd0",
        "updated": "2021-10-13T11:45:18.687923+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [],
        "volume_mounts": [],
        "env": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "handler",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": "",
          "base_image": "",
          "commands": []
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "labels": {},
        "name": "test-m",
        "tag": "",
        "project": "default",
        "hash": "f060b879be6db824e5cd09878dd4d7a0a4ddd01f",
        "updated": "2021-10-13T11:46:00.636911+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "mlrun/mlrun",
          "commands": [
            "python -m pip install \"mlrun[complete]==0.8.0-rc6\""
          ],
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": "docker-registry.default-tenant.app.vmdev36.lab.iguazeng.com:80/mlrun/func-default-test-m:latest"
        },
        "default_class": "",
        "default_handler": "handler",
        "description": "",
        "env": [],
        "image": "",
        "secret_sources": [],
        "volume_mounts": [],
        "volumes": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "disable_auto_mount": false
      },
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "test-m",
        "tag": "",
        "project": "default",
        "categories": [],
        "hash": "0d18f6da2b4527b076c1f42f51d8eb2cb602b94a",
        "updated": "2021-10-13T11:51:38.978864+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "",
        "volumes": [],
        "volume_mounts": [],
        "env": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "handler",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": "docker-registry.default-tenant.app.vmdev36.lab.iguazeng.com:80/mlrun/func-default-test-m:latest",
          "base_image": "mlrun/mlrun",
          "commands": [
            "python -m pip install \"mlrun[complete]==0.8.0-rc6\""
          ]
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "name": "test-m",
        "tag": "",
        "project": "default",
        "categories": [],
        "hash": "2fd83f2be8b19b65c681c1f5f5da9a00f7b0bb83",
        "updated": "2021-10-13T11:53:30.615410+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "docker-registry.default-tenant.app.vmdev36.lab.iguazeng.com:80/mlrun/func-default-test-m:latest",
        "volumes": [],
        "volume_mounts": [],
        "env": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "handler",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": "docker-registry.default-tenant.app.vmdev36.lab.iguazeng.com:80/mlrun/func-default-test-m:latest",
          "base_image": "mlrun/mlrun",
          "commands": [
            "python -m pip install \"mlrun[complete]==0.8.0-rc6\""
          ]
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "labels": {},
        "name": "test-m",
        "project": "default",
        "tag": "",
        "hash": "66d1d4dfe698edc441b1801d6d67fc9e77b6fdfa",
        "updated": "2021-10-13T11:51:38.389010+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "mlrun/mlrun",
          "commands": [
            "python -m pip install \"mlrun[complete]==0.8.0-rc6\""
          ],
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": "docker-registry.default-tenant.app.vmdev36.lab.iguazeng.com:80/mlrun/func-default-test-m:latest"
        },
        "description": "",
        "env": [],
        "image": "",
        "volume_mounts": [],
        "volumes": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "handler"
      },
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "test-m",
        "tag": "",
        "hash": "3eeb230d4ab85e967e4d416783b9653e41d09da2",
        "project": "default",
        "categories": [],
        "updated": "2021-10-13T15:14:24.314841+00:00",
        "credentials": {
          "access_key": "$generate"
        }
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "docker-registry.default-tenant.app.vmdev36.lab.iguazeng.com:80/mlrun/func-default-test-m:latest",
        "volumes": [],
        "volume_mounts": [],
        "env": [
          {
            "name": "V3IO_API",
            "value": "http://v3io-webapi:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "1bc19fc2-2089-4c9c-a622-2eaa9868382c"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "http://framesd:8080"
          }
        ],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "handler",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": "docker-registry.default-tenant.app.vmdev36.lab.iguazeng.com:80/mlrun/func-default-test-m:latest",
          "base_image": "mlrun/mlrun",
          "commands": [
            "python -m pip install \"mlrun[complete]==0.8.0-rc6\""
          ]
        },
        "disable_auto_mount": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "erann-test",
        "tag": "",
        "hash": "0c33d5daf43d3496f327c6d1173fe81ca05a2691",
        "project": "default",
        "categories": [],
        "updated": "2021-10-13T19:23:23.978026+00:00",
        "credentials": {
          "access_key": "$generate"
        }
      },
      "spec": {
        "command": "",
        "args": [],
        "image": ".mlrun/func-default-erann-test:latest",
        "volumes": [
          {
            "name": "my-volume",
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "container": "projects",
                "accessKey": "242e47-a051-4ec3-8384-5f99a26c1451",
                "subPath": "/mount"
              }
            }
          }
        ],
        "volume_mounts": [
          {
            "name": "my-volume",
            "mountPath": "/my-path3"
          }
        ],
        "env": [
          {
            "name": "ENV_VAR_KEY",
            "value": "env-var-value"
          },
          {
            "name": "V3IO_API",
            "value": "http://v3io-webapi:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "1bc19fc2-2089-4c9c-a622-2eaa9868382c"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "http://framesd:8080"
          }
        ],
        "resources": {
          "limits": {
            "cpu": "1",
            "memory": "5Mi",
            "nvidia.com/gpu": "1"
          },
          "requests": {
            "cpu": "1",
            "memory": "5Mi"
          }
        },
        "default_handler": "handler",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ".mlrun/func-default-erann-test:latest",
          "base_image": "mlrun/mlrun",
          "commands": [
            "echo $PATH",
            "python -m pip install \"mlrun[complete]==0.7.0-rc15\""
          ]
        },
        "disable_auto_mount": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "erann-test",
        "tag": "",
        "hash": "abd77c8d987a8ca59730b8428eac2dd55ecd48c6",
        "project": "default",
        "categories": [],
        "updated": "2021-10-13T19:22:17.368938+00:00",
        "credentials": {
          "access_key": "blabla"
        }
      },
      "spec": {
        "command": "",
        "args": [],
        "image": ".mlrun/func-default-erann-test:latest",
        "volumes": [
          {
            "name": "my-volume",
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "container": "projects",
                "accessKey": "242e47-a051-4ec3-8384-5f99a26c1451",
                "subPath": "/mount"
              }
            }
          }
        ],
        "volume_mounts": [
          {
            "name": "my-volume",
            "mountPath": "/my-path3"
          }
        ],
        "env": [
          {
            "name": "ENV_VAR_KEY",
            "value": "env-var-value"
          },
          {
            "name": "V3IO_API",
            "value": "http://v3io-webapi:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "1bc19fc2-2089-4c9c-a622-2eaa9868382c"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "http://framesd:8080"
          }
        ],
        "resources": {
          "limits": {
            "cpu": "1",
            "memory": "5Mi",
            "nvidia.com/gpu": "1"
          },
          "requests": {
            "cpu": "1",
            "memory": "5Mi"
          }
        },
        "default_handler": "handler",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ".mlrun/func-default-erann-test:latest",
          "base_image": "mlrun/mlrun",
          "commands": [
            "echo $PATH",
            "python -m pip install \"mlrun[complete]==0.7.0-rc15\""
          ]
        },
        "disable_auto_mount": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "credentials": {
          "access_key": "def"
        },
        "labels": {},
        "name": "erann-test",
        "project": "default",
        "tag": "",
        "hash": "ef6e81cf1a641de37ff0a0d53bb5dd480d1dc93a",
        "updated": "2021-10-13T20:09:58.424477+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "mlrun/mlrun",
          "commands": [
            "echo $PATH",
            "python -m pip install \"mlrun[complete]==0.7.0-rc15\""
          ],
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ".mlrun/func-default-erann-test:latest"
        },
        "description": "",
        "env": [
          {
            "name": "ENV_VAR_KEY",
            "value": "env-var-value"
          },
          {
            "name": "V3IO_API",
            "value": "http://v3io-webapi:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "1bc19fc2-2089-4c9c-a622-2eaa9868382c"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "http://framesd:8080"
          }
        ],
        "image": ".mlrun/func-default-erann-test:latest",
        "volume_mounts": [
          {
            "name": "my-volume",
            "mountPath": "/my-path3"
          }
        ],
        "volumes": [
          {
            "name": "my-volume",
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "container": "projects",
                "accessKey": "242e47-a051-4ec3-8384-5f99a26c1451",
                "subPath": "/mount"
              }
            }
          }
        ],
        "resources": {
          "limits": {
            "cpu": "1",
            "memory": "5Mi",
            "nvidia.com/gpu": "1"
          },
          "requests": {
            "cpu": "1",
            "memory": "5Mi"
          }
        },
        "default_handler": "handler"
      },
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "credentials": {
          "access_key": "$generate"
        },
        "labels": {},
        "name": "erann-test",
        "project": "default",
        "tag": "",
        "hash": "208f12f039c67274e967305ca65a032bce5156e0",
        "updated": "2021-10-13T19:37:16.020926+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "mlrun/mlrun",
          "commands": [
            "echo $PATH",
            "python -m pip install \"mlrun[complete]==0.7.0-rc15\""
          ],
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ".mlrun/func-default-erann-test:latest"
        },
        "description": "",
        "env": [
          {
            "name": "ENV_VAR_KEY",
            "value": "env-var-value"
          },
          {
            "name": "V3IO_API",
            "value": "http://v3io-webapi:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "1bc19fc2-2089-4c9c-a622-2eaa9868382c"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "http://framesd:8080"
          }
        ],
        "image": ".mlrun/func-default-erann-test:latest",
        "volume_mounts": [
          {
            "name": "my-volume",
            "mountPath": "/my-path3"
          }
        ],
        "volumes": [
          {
            "name": "my-volume",
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "container": "projects",
                "accessKey": "242e47-a051-4ec3-8384-5f99a26c1451",
                "subPath": "/mount"
              }
            }
          }
        ],
        "resources": {
          "limits": {
            "cpu": "1",
            "memory": "5Mi",
            "nvidia.com/gpu": "1"
          },
          "requests": {
            "cpu": "1",
            "memory": "5Mi"
          }
        },
        "default_handler": "handler"
      },
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "test-m",
        "tag": "",
        "hash": "d05d3a89791ce2ac076914b34ab1b86d2ea4d0ad",
        "project": "default",
        "categories": [],
        "updated": "2021-10-13T19:57:55.753223+00:00",
        "credentials": {
          "access_key": "test"
        }
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "docker-registry.default-tenant.app.vmdev36.lab.iguazeng.com:80/mlrun/func-default-test-m:latest",
        "volumes": [],
        "volume_mounts": [],
        "env": [
          {
            "name": "V3IO_API",
            "value": "http://v3io-webapi:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "1bc19fc2-2089-4c9c-a622-2eaa9868382c"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "http://framesd:8080"
          }
        ],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "handler",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": "docker-registry.default-tenant.app.vmdev36.lab.iguazeng.com:80/mlrun/func-default-test-m:latest",
          "base_image": "mlrun/mlrun",
          "commands": [
            "python -m pip install \"mlrun[complete]==0.8.0-rc6\""
          ]
        },
        "disable_auto_mount": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "erann-test",
        "tag": "",
        "hash": "f8ee31fd4fdf226fbeea162ff0182278583320b5",
        "project": "default",
        "categories": [],
        "updated": "2021-10-28T14:18:37.191965+00:00",
        "credentials": {
          "access_key": "$generate"
        }
      },
      "spec": {
        "command": "",
        "args": [],
        "image": ".mlrun/func-default-erann-test:latest",
        "volumes": [
          {
            "name": "my-volume",
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "container": "projects",
                "accessKey": "242e47-a051-4ec3-8384-5f99a26c1451",
                "subPath": "/mount"
              }
            }
          }
        ],
        "volume_mounts": [
          {
            "name": "my-volume",
            "mountPath": "/my-path3"
          }
        ],
        "env": [
          {
            "name": "ENV_VAR_KEY",
            "value": "env-var-value"
          },
          {
            "name": "V3IO_API",
            "value": "http://v3io-webapi:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "http://framesd:8080"
          }
        ],
        "resources": {
          "limits": {
            "cpu": "1",
            "memory": "5Mi",
            "nvidia.com/gpu": "1"
          },
          "requests": {
            "cpu": "1",
            "memory": "5Mi"
          }
        },
        "default_handler": "handler",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ".mlrun/func-default-erann-test:latest",
          "base_image": "mlrun/mlrun",
          "commands": [
            "echo $PATH",
            "python -m pip install \"mlrun[complete]==0.7.0-rc15\""
          ]
        },
        "disable_auto_mount": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "credentials": {
          "access_key": "$generate"
        },
        "labels": {},
        "name": "a",
        "tag": "",
        "project": "default",
        "hash": "7ccb5ec63e9235b5c504b00f158ec00867d19b9a",
        "updated": "2021-10-21T10:44:53.731963+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "",
          "commands": [],
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ""
        },
        "default_class": "",
        "default_handler": "a",
        "description": "",
        "env": [
          {
            "name": "a",
            "value_from": {
              "secret_key_ref": {
                "name": "sss",
                "key": "dddd"
              }
            }
          }
        ],
        "image": "mlrun/mlrun",
        "secret_sources": [],
        "volume_mounts": [],
        "volumes": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "disable_auto_mount": false
      },
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "aggregate",
        "tag": "",
        "hash": "d3d459ab355b0c6ec942b4cea7a5e22c890480f7",
        "project": "default",
        "labels": {
          "author": "avia"
        },
        "categories": [
          "data-preparation"
        ],
        "updated": "2021-11-08T11:42:59.051991+00:00",
        "credentials": {
          "access_key": "$generate"
        }
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [],
        "volume_mounts": [],
        "env": [
          {
            "name": "V3IO_API",
            "value": "http://v3io-webapi:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "1bc19fc2-2089-4c9c-a622-2eaa9868382c"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "http://framesd:8080"
          }
        ],
        "resources": {
          "limits": {
            "cpu": "1",
            "memory": "1",
            "nvidia.com/gpu": "1"
          },
          "requests": {
            "cpu": "1",
            "memory": "1"
          }
        },
        "default_handler": "aggregate",
        "entry_points": {
          "aggregate": {
            "name": "aggregate",
            "doc": "Time-series aggregation function\n\nWill perform a rolling aggregation on {df_artifact}, over {window} by the selected {keys}\napplying {metric_aggs} on {metrics} and {label_aggs} on {labels}. adding {suffix} to the \nfeature names.\n\nif not {inplace}, will return the original {df_artifact}, joined by the aggregated result.",
            "parameters": [
              {
                "name": "context",
                "default": ""
              },
              {
                "name": "df_artifact",
                "type": "Union[DataItem, DataFrame]",
                "doc": "MLRun input pointing to pandas dataframe (csv/parquet file path) or a  directory containing parquet files. * When given a directory the latest {files_to_select} will be selected",
                "default": ""
              },
              {
                "name": "save_to",
                "type": "str",
                "doc": "Where to save the result dataframe. * If relative will add to the {artifact_path}",
                "default": "aggregated-df.pq"
              },
              {
                "name": "keys",
                "type": "list",
                "doc": "Subset of indexes from the source dataframe to aggregate by (default=all)",
                "default": null
              },
              {
                "name": "metrics",
                "type": "list",
                "doc": "Array containing a list of metrics to run the aggregations on. (default=None) ",
                "default": null
              },
              {
                "name": "labels",
                "type": "list",
                "doc": "Array containing a list of labels to run the aggregations on. (default=None) ",
                "default": null
              },
              {
                "name": "metric_aggs",
                "type": "list",
                "doc": "Array containing a list of aggregation function names to run on {metrics}. (Ex: 'mean', 'std') (default='mean')",
                "default": [
                  "mean"
                ]
              },
              {
                "name": "label_aggs",
                "type": "list",
                "doc": "Array containing a list of aggregation function names to run on {metrics}. (Ex: 'max', 'min') (default='max') ",
                "default": [
                  "max"
                ]
              },
              {
                "name": "suffix",
                "type": "str",
                "doc": "Suffix to add to the feature name, E.g: <Feature_Name>_<Agg_Function>_<Suffix> (Ex: 'last_60_mintes') (default='')",
                "default": ""
              },
              {
                "name": "window",
                "type": "int",
                "doc": "Window size to perform the rolling aggregate on. (default=3)",
                "default": 3
              },
              {
                "name": "center",
                "type": "bool",
                "doc": "If True, Sets the value for the central sample in the window, If False, will set the value to the last sample. (default=False)",
                "default": false
              },
              {
                "name": "inplace",
                "type": "bool",
                "doc": "If True, will return only the aggregated results. If False, will join the aggregated results with the original dataframe",
                "default": false
              },
              {
                "name": "drop_na",
                "type": "bool",
                "doc": "Will drop na lines due to the Rolling.",
                "default": true
              },
              {
                "name": "files_to_select",
                "type": "int",
                "doc": "Specifies the number of *latest* files to select (and concat) for aggregation.",
                "default": 1
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 9
          }
        },
        "description": "Rolling aggregation over Metrics and Lables according to specifications",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG9zCmltcG9ydCBwYW5kYXMgYXMgcGQKZnJvbSBtbHJ1bi5kYXRhc3RvcmUgaW1wb3J0IERhdGFJdGVtCgpmcm9tIHR5cGluZyBpbXBvcnQgVW5pb24KCmRlZiBhZ2dyZWdhdGUoY29udGV4dCwKICAgICAgICAgICAgICBkZl9hcnRpZmFjdDogVW5pb25bRGF0YUl0ZW0sIHBkLmNvcmUuZnJhbWUuRGF0YUZyYW1lXSwKICAgICAgICAgICAgICBzYXZlX3RvOiBzdHIgPSAnYWdncmVnYXRlZC1kZi5wcScsIAogICAgICAgICAgICAgIGtleXM6IGxpc3QgPSBOb25lLCAKICAgICAgICAgICAgICBtZXRyaWNzOiBsaXN0ID0gTm9uZSwgCiAgICAgICAgICAgICAgbGFiZWxzOiBsaXN0ID0gTm9uZSwgCiAgICAgICAgICAgICAgbWV0cmljX2FnZ3M6IGxpc3QgPSBbJ21lYW4nXSwgCiAgICAgICAgICAgICAgbGFiZWxfYWdnczogbGlzdCA9IFsnbWF4J10sIAogICAgICAgICAgICAgIHN1ZmZpeDogc3RyID0gJycsIAogICAgICAgICAgICAgIHdpbmRvdzogaW50ID0gMywgCiAgICAgICAgICAgICAgY2VudGVyOiBib29sID0gRmFsc2UsIAogICAgICAgICAgICAgIGlucGxhY2U6IGJvb2wgPSBGYWxzZSwKICAgICAgICAgICAgICBkcm9wX25hOiBib29sID0gVHJ1ZSwKICAgICAgICAgICAgICBmaWxlc190b19zZWxlY3Q6IGludCA9IDEpOgogICAgIiIiVGltZS1zZXJpZXMgYWdncmVnYXRpb24gZnVuY3Rpb24KICAgIAogICAgV2lsbCBwZXJmb3JtIGEgcm9sbGluZyBhZ2dyZWdhdGlvbiBvbiB7ZGZfYXJ0aWZhY3R9LCBvdmVyIHt3aW5kb3d9IGJ5IHRoZSBzZWxlY3RlZCB7a2V5c30KICAgIGFwcGx5aW5nIHttZXRyaWNfYWdnc30gb24ge21ldHJpY3N9IGFuZCB7bGFiZWxfYWdnc30gb24ge2xhYmVsc30uIGFkZGluZyB7c3VmZml4fSB0byB0aGUgCiAgICBmZWF0dXJlIG5hbWVzLgogICAgCiAgICBpZiBub3Qge2lucGxhY2V9LCB3aWxsIHJldHVybiB0aGUgb3JpZ2luYWwge2RmX2FydGlmYWN0fSwgam9pbmVkIGJ5IHRoZSBhZ2dyZWdhdGVkIHJlc3VsdC4KICAgIAogICAgOnBhcmFtIGRmX2FydGlmYWN0OiBNTFJ1biBpbnB1dCBwb2ludGluZyB0byBwYW5kYXMgZGF0YWZyYW1lIChjc3YvcGFycXVldCBmaWxlIHBhdGgpIG9yIGEgCiAgICAgICAgICAgICAgICAgICAgICAgIGRpcmVjdG9yeSBjb250YWluaW5nIHBhcnF1ZXQgZmlsZXMuCiAgICAgICAgICAgICAgICAgICAgICAgICogV2hlbiBnaXZlbiBhIGRpcmVjdG9yeSB0aGUgbGF0ZXN0IHtmaWxlc190b19zZWxlY3R9IHdpbGwgYmUgc2VsZWN0ZWQKICAgIDpwYXJhbSBzYXZlX3RvOiAgICAgV2hlcmUgdG8gc2F2ZSB0aGUgcmVzdWx0IGRhdGFmcmFtZS4KICAgICAgICAgICAgICAgICAgICAgICAgKiBJZiByZWxhdGl2ZSB3aWxsIGFkZCB0byB0aGUge2FydGlmYWN0X3BhdGh9CiAgICA6cGFyYW0ga2V5czogICAgICAgIFN1YnNldCBvZiBpbmRleGVzIGZyb20gdGhlIHNvdXJjZSBkYXRhZnJhbWUgdG8gYWdncmVnYXRlIGJ5IChkZWZhdWx0PWFsbCkKICAgIDpwYXJhbSBtZXRyaWNzOiAgICAgQXJyYXkgY29udGFpbmluZyBhIGxpc3Qgb2YgbWV0cmljcyB0byBydW4gdGhlIGFnZ3JlZ2F0aW9ucyBvbi4gKGRlZmF1bHQ9Tm9uZSkgCiAgICA6cGFyYW0gbGFiZWxzOiAgICAgIEFycmF5IGNvbnRhaW5pbmcgYSBsaXN0IG9mIGxhYmVscyB0byBydW4gdGhlIGFnZ3JlZ2F0aW9ucyBvbi4gKGRlZmF1bHQ9Tm9uZSkgCiAgICA6cGFyYW0gbWV0cmljX2FnZ3M6IEFycmF5IGNvbnRhaW5pbmcgYSBsaXN0IG9mIGFnZ3JlZ2F0aW9uIGZ1bmN0aW9uIG5hbWVzIHRvIHJ1biBvbiB7bWV0cmljc30uCiAgICAgICAgICAgICAgICAgICAgICAgIChFeDogJ21lYW4nLCAnc3RkJykgKGRlZmF1bHQ9J21lYW4nKQogICAgOnBhcmFtIGxhYmVsX2FnZ3M6ICBBcnJheSBjb250YWluaW5nIGEgbGlzdCBvZiBhZ2dyZWdhdGlvbiBmdW5jdGlvbiBuYW1lcyB0byBydW4gb24ge21ldHJpY3N9LgogICAgICAgICAgICAgICAgICAgICAgICAoRXg6ICdtYXgnLCAnbWluJykgKGRlZmF1bHQ9J21heCcpIAogICAgOnBhcmFtIHN1ZmZpeDogICAgICBTdWZmaXggdG8gYWRkIHRvIHRoZSBmZWF0dXJlIG5hbWUsIEUuZzogPEZlYXR1cmVfTmFtZT5fPEFnZ19GdW5jdGlvbj5fPFN1ZmZpeD4KICAgICAgICAgICAgICAgICAgICAgICAgKEV4OiAnbGFzdF82MF9taW50ZXMnKSAoZGVmYXVsdD0nJykKICAgIDpwYXJhbSB3aW5kb3c6ICAgICAgV2luZG93IHNpemUgdG8gcGVyZm9ybSB0aGUgcm9sbGluZyBhZ2dyZWdhdGUgb24uIChkZWZhdWx0PTMpCiAgICA6cGFyYW0gY2VudGVyOiAgICAgIElmIFRydWUsIFNldHMgdGhlIHZhbHVlIGZvciB0aGUgY2VudHJhbCBzYW1wbGUgaW4gdGhlIHdpbmRvdywKICAgICAgICAgICAgICAgICAgICAgICAgSWYgRmFsc2UsIHdpbGwgc2V0IHRoZSB2YWx1ZSB0byB0aGUgbGFzdCBzYW1wbGUuIChkZWZhdWx0PUZhbHNlKQogICAgOnBhcmFtIGlucGxhY2U6ICAgICBJZiBUcnVlLCB3aWxsIHJldHVybiBvbmx5IHRoZSBhZ2dyZWdhdGVkIHJlc3VsdHMuCiAgICAgICAgICAgICAgICAgICAgICAgIElmIEZhbHNlLCB3aWxsIGpvaW4gdGhlIGFnZ3JlZ2F0ZWQgcmVzdWx0cyB3aXRoIHRoZSBvcmlnaW5hbCBkYXRhZnJhbWUKICAgIDpwYXJhbSBkcm9wX25hOiAgICAgV2lsbCBkcm9wIG5hIGxpbmVzIGR1ZSB0byB0aGUgUm9sbGluZy4KICAgIDpwYXJhbSBmaWxlc190b19zZWxlY3Q6IFNwZWNpZmllcyB0aGUgbnVtYmVyIG9mICpsYXRlc3QqIGZpbGVzIHRvIHNlbGVjdCAoYW5kIGNvbmNhdCkgZm9yIGFnZ3JlZ2F0aW9uLgogICAgIiIiCiAgICAKICAgIGZyb21fbW9kZWwgPSB0eXBlKGRmX2FydGlmYWN0KSA9PSBwZC5EYXRhRnJhbWUKICAgIGlmIGZyb21fbW9kZWw6CiAgICAgICAgY29udGV4dC5sb2dnZXIuaW5mbygnQWdncmVnYXRpbmcgZnJvbSBCdWZmZXInKQogICAgICAgIGlucHV0X2RmID0gZGZfYXJ0aWZhY3QKICAgIGVsc2U6CiAgICAgICAgaWYgZGZfYXJ0aWZhY3QudXJsLmVuZHN3aXRoKCcvJyk6ICAgIyBpcyBhIGRpcmVjdG9yeT8KICAgICAgICAgICAgbXBhdGggPSBbb3MucGF0aC5qb2luKGRmX2FydGlmYWN0LnVybCwgZmlsZSkgZm9yIGZpbGUgaW4gZGZfYXJ0aWZhY3QubGlzdGRpcigpIGlmIGZpbGUuZW5kc3dpdGgoKCdwYXJxdWV0JywgJ3BxJykpXQogICAgICAgICAgICBmaWxlc19ieV91cGRhdGVkID0gc29ydGVkKG1wYXRoLCBrZXk9b3MucGF0aC5nZXRtdGltZSwgcmV2ZXJzZT1UcnVlKQogICAgICAgICAgICBjb250ZXh0LmxvZ2dlci5pbmZvKGZpbGVzX2J5X3VwZGF0ZWQpCiAgICAgICAgICAgIGxhdGVzdCA9IGZpbGVzX2J5X3VwZGF0ZWRbOmZpbGVzX3RvX3NlbGVjdF0KICAgICAgICAgICAgY29udGV4dC5sb2dnZXIuaW5mbyhmJ0FnZ3JlZ2F0aW5nIHtsYXRlc3R9JykKICAgICAgICAgICAgaW5wdXRfZGYgPSBwZC5jb25jYXQoW2NvbnRleHQuZ2V0X2RhdGFpdGVtKGRmKS5hc19kZigpIGZvciBkZiBpbiBsYXRlc3RdKQogICAgICAgIGVsc2U6ICAjIEEgcmVndWxhciBhcnRpZmFjdAogICAgICAgICAgICBjb250ZXh0LmxvZ2dlci5pbmZvKGYnQWdncmVnYXRpbmcge2RmX2FydGlmYWN0LnVybH0nKQogICAgICAgICAgICBpbnB1dF9kZiA9IGRmX2FydGlmYWN0LmFzX2RmKCkKICAgIAogICAgaWYgbm90IChtZXRyaWNzIG9yIGxhYmVscyk6CiAgICAgICAgcmFpc2UgVmFsdWVFcnJvcigncGxlYXNlIHNwZWNpZnkgbWV0cmljcyBvciBsYWJlbHMgcGFyYW0nKQogICAgCiAgICBpZiBrZXlzOgogICAgICAgIGN1cnJlbnRfaW5kZXggPSBpbnB1dF9kZi5pbmRleC5uYW1lcwogICAgICAgIGluZGV4ZXNfdG9fZHJvcCA9IFtjb2wgZm9yIGNvbCBpbiBpbnB1dF9kZi5pbmRleC5uYW1lcyBpZiBjb2wgbm90IGluIGtleXNdCiAgICAgICAgZGYgPSBpbnB1dF9kZi5yZXNldF9pbmRleChsZXZlbD1pbmRleGVzX3RvX2Ryb3ApCiAgICBlbHNlOgogICAgICAgIGRmID0gaW5wdXRfZGYKICAgICAgICAKICAgIGlmIG1ldHJpY3M6CiAgICAgICAgbWV0cmljc19kZiA9IGRmLmxvY1s6LCBtZXRyaWNzXS5yb2xsaW5nKHdpbmRvdz13aW5kb3csIGNlbnRlcj1jZW50ZXIpLmFnZ3JlZ2F0ZShtZXRyaWNfYWdncykKICAgICAgICAKICAgICAgICBtZXRyaWNzX2RmLmNvbHVtbnMgPSBbJ18nLmpvaW4oY29sKS5zdHJpcCgpIGZvciBjb2wgaW4gbWV0cmljc19kZi5jb2x1bW5zLnZhbHVlc10KICAgICAgICAKICAgICAgICBpZiBzdWZmaXg6CiAgICAgICAgICAgIG1ldHJpY3NfZGYuY29sdW1ucyA9IFtmJ3ttZXRyaWN9X3tzdWZmaXh9JyBmb3IgbWV0cmljIGluIG1ldHJpY3NfZGYuY29sdW1uc10KICAgICAgICAgICAgCiAgICAgICAgaWYgbm90IGlucGxhY2U6CiAgICAgICAgICAgIGZpbmFsX2RmID0gcGQubWVyZ2UoaW5wdXRfZGYsIG1ldHJpY3NfZGYsIHN1ZmZpeGVzPSgnJywgc3VmZml4KSwgbGVmdF9pbmRleD1UcnVlLCByaWdodF9pbmRleD1UcnVlKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIGZpbmFsX2RmID0gbWV0cmljc19kZgoKICAgIGlmIGxhYmVsczoKICAgICAgICBsYWJlbHNfZGYgPSBkZi5sb2NbOiwgbGFiZWxzXS5yb2xsaW5nKHdpbmRvdz13aW5kb3csCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjZW50ZXI9Y2VudGVyKS5hZ2dyZWdhdGUobGFiZWxfYWdncykKICAgICAgICBsYWJlbHNfZGYuY29sdW1ucyA9IFsnXycuam9pbihjb2wpLnN0cmlwKCkgZm9yIGNvbCBpbiBsYWJlbHNfZGYuY29sdW1ucy52YWx1ZXNdCiAgICAgICAgCiAgICAgICAgaWYgc3VmZml4OgogICAgICAgICAgICBsYWJlbHNfZGYuY29sdW1ucyA9IFtmJ3tsYWJlbH1fe3N1ZmZpeH0nIGZvciBsYWJlbCBpbiBsYWJlbHNfZGYuY29sdW1uc10KICAgICAgICAgICAgCiAgICAgICAgaWYgbWV0cmljczoKICAgICAgICAgICAgZmluYWxfZGYgPSBwZC5tZXJnZShmaW5hbF9kZiwgbGFiZWxzX2RmLCBzdWZmaXhlcz0oJycsIHN1ZmZpeCksIGxlZnRfaW5kZXg9VHJ1ZSwgcmlnaHRfaW5kZXg9VHJ1ZSkgICAKICAgICAgICBlbHNlOgogICAgICAgICAgICBpZiBub3QgaW5wbGFjZToKICAgICAgICAgICAgICAgIGZpbmFsX2RmID0gcGQubWVyZ2UoaW5wdXRfZGYsIGxhYmVsc19kZiwgc3VmZml4ZXM9KCcnLCBzdWZmaXgpLCBsZWZ0X2luZGV4PVRydWUsIHJpZ2h0X2luZGV4PVRydWUpICAgICAgCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBmaW5hbF9kZiA9IGxhYmVsc19kZgogICAgICAgICAgICAgICAgCiAgICBpZiBkcm9wX25hOgogICAgICAgIGZpbmFsX2RmID0gZmluYWxfZGYuZHJvcG5hKCkKICAgICAgICAKICAgIGNvbnRleHQubG9nZ2VyLmluZm8oJ0xvZ2dpbmcgYXJ0aWZhY3QnKQogICAgaWYgbm90IGZyb21fbW9kZWw6CiAgICAgICAgY29udGV4dC5sb2dfZGF0YXNldChrZXk9J2FnZ3JlZ2F0ZScsIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGY9ZmluYWxfZGYsIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9ybWF0PSdwYXJxdWV0JywKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvY2FsX3BhdGg9c2F2ZV90bykKICAgIGVsc2U6CiAgICAgICAgcmV0dXJuIGZpbmFsX2RmCgo=",
          "commands": [],
          "code_origin": "https://github.com/daniels290813/functions.git#55a79c32be5d233cc11efcf40cd3edbe309bfdef:/home/kali/functions/aggregate/aggregate.py"
        },
        "disable_auto_mount": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "credentials": {
          "access_key": "$generate"
        },
        "labels": {},
        "name": "a",
        "tag": "latest",
        "project": "default",
        "hash": "ea4200a12ffc18972a2b7c144d5e228c4075bdd7",
        "updated": "2021-10-22T13:25:54.928649+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "",
          "commands": [],
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ""
        },
        "default_class": "",
        "default_handler": "a",
        "description": "",
        "env": [],
        "image": "mlrun/mlrun",
        "secret_sources": [],
        "volume_mounts": [],
        "volumes": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "disable_auto_mount": false
      },
      "status": {}
    },
    {
      "kind": "job",
      "metadata": {
        "credentials": {
          "access_key": "$generate"
        },
        "labels": {},
        "name": "abcdefg",
        "tag": "latest",
        "project": "default",
        "hash": "e5912c231118da3ad82df3f2fe512aaae812fbb2",
        "updated": "2021-10-27T17:13:28.001409+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "",
          "commands": [],
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ""
        },
        "default_class": "",
        "default_handler": "handler",
        "description": "",
        "env": [
          {
            "name": "ENV_SECRET",
            "valueFrom": {
              "secretKeyRef": {
                "name": "secret-name",
                "key": "secret-key"
              }
            }
          }
        ],
        "image": "mlrun/mlrun",
        "secret_sources": [],
        "volume_mounts": [],
        "volumes": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "disable_auto_mount": false
      },
      "status": {}
    },
    {
      "kind": "job",
      "metadata": {
        "name": "erann-test7_ingest",
        "project": "default",
        "categories": [],
        "credentials": {
          "access_key": "test"
        },
        "tag": "latest",
        "hash": "d99d2906fca4af46573d8ca478a253c49612ba84",
        "updated": "2021-10-28T13:43:03.978295+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [],
        "volume_mounts": [],
        "env": [
          {
            "name": "V3IO_API",
            "value": "http://v3io-webapi:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "http://framesd:8080"
          }
        ],
        "default_handler": "handler",
        "description": "",
        "build": {
          "functionSourceCode": "CmZyb20gbWxydW4uZmVhdHVyZV9zdG9yZS5hcGkgaW1wb3J0IGluZ2VzdApkZWYgaGFuZGxlcihjb250ZXh0KToKICAgIGluZ2VzdChtbHJ1bl9jb250ZXh0PWNvbnRleHQpCg==",
          "commands": []
        },
        "disable_auto_mount": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": {}
    },
    {
      "kind": "job",
      "metadata": {
        "name": "test",
        "tag": "",
        "hash": "f2e6d9380e9a8f67c8a300c0900d517fed611739",
        "project": "default",
        "categories": [],
        "updated": "2021-10-28T13:45:58.178653+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": ".mlrun/func-default-test:latest",
        "volumes": [],
        "volume_mounts": [],
        "env": [
          {
            "name": "V3IO_API",
            "value": "http://v3io-webapi:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "1bc19fc2-2089-4c9c-a622-2eaa9868382c"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "http://framesd:8080"
          }
        ],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "handler",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ".mlrun/func-default-test:latest",
          "base_image": "mlrun/mlrun",
          "commands": [
            "python -m pip install \"mlrun[complete] @ git+https://github.com/mlrun/mlrun@development\""
          ]
        },
        "disable_auto_mount": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "erann-test",
        "tag": "",
        "hash": "da4a290cd63ae2c2d02394b0dce116db01aeac17",
        "project": "default",
        "categories": [],
        "updated": "2021-10-28T18:12:56.058942+00:00",
        "credentials": {
          "access_key": "a"
        }
      },
      "spec": {
        "command": "",
        "args": [],
        "image": ".mlrun/func-default-erann-test:latest",
        "volumes": [
          {
            "name": "my-volume",
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "container": "projects",
                "accessKey": "242e47-a051-4ec3-8384-5f99a26c1451",
                "subPath": "/mount"
              }
            }
          }
        ],
        "volume_mounts": [
          {
            "name": "my-volume",
            "mountPath": "/my-path3"
          }
        ],
        "env": [
          {
            "name": "ENV_VAR_KEY",
            "value": "env-var-value"
          },
          {
            "name": "V3IO_API",
            "value": "http://v3io-webapi:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "http://framesd:8080"
          }
        ],
        "resources": {
          "limits": {
            "memory": "4Mi",
            "nvidia.com/gpu": "1"
          },
          "requests": {
            "cpu": "1",
            "memory": "1Mi"
          }
        },
        "default_handler": "handler",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ".mlrun/func-default-erann-test:latest",
          "base_image": "mlrun/mlrun",
          "commands": [
            "echo $PATH",
            "python -m pip install \"mlrun[complete]==0.7.0-rc15\""
          ]
        },
        "disable_auto_mount": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "test",
        "tag": "",
        "hash": "3df411d857667e071e6c47943c4831e1ec116d30",
        "project": "default",
        "categories": [],
        "updated": "2021-11-01T00:00:00.082786+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": ".mlrun/func-default-test:latest",
        "volumes": [],
        "volume_mounts": [],
        "env": [
          {
            "name": "V3IO_API",
            "value": "http://v3io-webapi:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "pipelines"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b1410f67-92a9-41fd-9413-6d0015c493fd"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "http://framesd:8080"
          }
        ],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "handler",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ".mlrun/func-default-test:latest",
          "base_image": "mlrun/mlrun",
          "commands": [
            "python -m pip install \"mlrun[complete] @ git+https://github.com/mlrun/mlrun@development\""
          ]
        },
        "disable_auto_mount": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "test",
        "tag": "",
        "hash": "0a38df9d2c35382a9169fa273867703b7be62d1a",
        "project": "default",
        "categories": [],
        "updated": "2021-11-08T11:35:55.804253+00:00",
        "credentials": {
          "access_key": "$generate"
        }
      },
      "spec": {
        "command": "",
        "args": [],
        "image": ".mlrun/func-default-test:latest",
        "volumes": [],
        "volume_mounts": [],
        "env": [
          {
            "name": "V3IO_API",
            "value": "http://v3io-webapi:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "pipelines"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b1410f67-92a9-41fd-9413-6d0015c493fd"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "http://framesd:8080"
          }
        ],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "handler",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ".mlrun/func-default-test:latest",
          "base_image": "mlrun/mlrun",
          "commands": [
            "python -m pip install \"mlrun[complete] @ git+https://github.com/mlrun/mlrun@development\""
          ]
        },
        "disable_auto_mount": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "github-utils",
        "tag": "latest",
        "hash": "b64ed79ea37704c6473e996bf2aee3fe77856cd5",
        "project": "default",
        "labels": {
          "author": "yaronh"
        },
        "categories": [
          "utils"
        ],
        "updated": "2021-11-08T11:43:11.577361+00:00",
        "credentials": {
          "access_key": "$generate"
        }
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [],
        "volume_mounts": [],
        "env": [
          {
            "name": "V3IO_API",
            "value": "http://v3io-webapi:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "1bc19fc2-2089-4c9c-a622-2eaa9868382c"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "http://framesd:8080"
          }
        ],
        "default_handler": "run_summary_comment",
        "entry_points": {
          "pr_comment": {
            "name": "pr_comment",
            "doc": "",
            "parameters": [
              {
                "name": "context",
                "default": ""
              },
              {
                "name": "repo",
                "type": "str",
                "default": ""
              },
              {
                "name": "issue",
                "type": "int",
                "default": ""
              },
              {
                "name": "message",
                "type": "str",
                "default": ""
              },
              {
                "name": "message_file",
                "type": "DataItem",
                "default": null
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 8
          },
          "run_summary_comment": {
            "name": "run_summary_comment",
            "doc": "",
            "parameters": [
              {
                "name": "context",
                "default": ""
              },
              {
                "name": "workflow_id",
                "default": ""
              },
              {
                "name": "repo",
                "type": "str",
                "default": ""
              },
              {
                "name": "issue",
                "type": "int",
                "default": ""
              },
              {
                "name": "project",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 31
          }
        },
        "description": "add comments to github pull request",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBvcwpmcm9tIG1scnVuIGltcG9ydCBEYXRhSXRlbSwgZ2V0X3J1bl9kYiwgbWxjb25mCgoKZGVmIHByX2NvbW1lbnQoCiAgICBjb250ZXh0LCByZXBvOiBzdHIsIGlzc3VlOiBpbnQsIG1lc3NhZ2U6IHN0ciA9ICIiLCBtZXNzYWdlX2ZpbGU6IERhdGFJdGVtID0gTm9uZQopOgoKICAgIHRva2VuID0gY29udGV4dC5nZXRfc2VjcmV0KCJHSVRIVUJfVE9LRU4iKSBvciBvcy5lbnZpcm9uLmdldCgiR0lUSFVCX1RPS0VOIikKICAgIGlmIG1lc3NhZ2VfZmlsZSBhbmQgbm90IG1lc3NhZ2U6CiAgICAgICAgbWVzc2FnZSA9IG1lc3NhZ2VfZmlsZS5nZXQoKQogICAgZWxpZiBub3QgbWVzc2FnZSBhbmQgbm90IG1lc3NhZ2VfZmlsZToKICAgICAgICByYWlzZSBWYWx1ZUVycm9yKCJwciBtZXNzYWdlIG9yIG1lc3NhZ2UgZmlsZSBtdXN0IGJlIHByb3ZpZGVkIikKCiAgICBoZWFkZXJzID0gewogICAgICAgICJBY2NlcHQiOiAiYXBwbGljYXRpb24vdm5kLmdpdGh1Yi52Mytqc29uIiwKICAgICAgICAiQXV0aG9yaXphdGlvbiI6IGYidG9rZW4ge3Rva2VufSIsCiAgICB9CiAgICB1cmwgPSBmImh0dHBzOi8vYXBpLmdpdGh1Yi5jb20vcmVwb3Mve3JlcG99L2lzc3Vlcy97aXNzdWV9L2NvbW1lbnRzIgoKICAgIHJlc3AgPSByZXF1ZXN0cy5wb3N0KHVybD11cmwsIGpzb249eyJib2R5Ijogc3RyKG1lc3NhZ2UpfSwgaGVhZGVycz1oZWFkZXJzKQogICAgaWYgbm90IHJlc3Aub2s6CiAgICAgICAgZXJybXNnID0gZiJiYWQgcHIgY29tbWVudCByZXNwISFcbntyZXNwLnRleHR9IgogICAgICAgIGNvbnRleHQubG9nZ2VyLmVycm9yKGVycm1zZykKICAgICAgICByYWlzZSBJT0Vycm9yKGVycm1zZykKCgpkZWYgcnVuX3N1bW1hcnlfY29tbWVudChjb250ZXh0LCB3b3JrZmxvd19pZCwgcmVwbzogc3RyLCBpc3N1ZTogaW50LCBwcm9qZWN0PSIiKToKICAgIGRiID0gZ2V0X3J1bl9kYigpLmNvbm5lY3QoKQogICAgcHJvamVjdCA9IHByb2plY3Qgb3IgY29udGV4dC5wcm9qZWN0CiAgICBydW5zID0gZGIubGlzdF9ydW5zKHByb2plY3Q9cHJvamVjdCwgbGFiZWxzPWYid29ya2Zsb3c9e3dvcmtmbG93X2lkfSIpCgogICAgaGFkX2Vycm9ycyA9IGkgPSAwCiAgICBmb3IgciBpbiBydW5zOgogICAgICAgIG5hbWUgPSByWyJtZXRhZGF0YSJdWyJuYW1lIl0KICAgICAgICBpZiByWyJzdGF0dXMiXS5nZXQoInN0YXRlIiwgIiIpID09ICJlcnJvciI6CiAgICAgICAgICAgIGhhZF9lcnJvcnMgKz0gMQogICAgICAgIGlmIG5hbWUgPT0gY29udGV4dC5uYW1lOgogICAgICAgICAgICBkZWwgcnVuc1tpXQogICAgICAgIGkgKz0gMQoKICAgIHByaW50KCJlcnJvcnM6IiwgaGFkX2Vycm9ycykKCiAgICBodG1sID0gIiMjIyBSdW4gUmVzdWx0c1xuV29ya2Zsb3cge30gZmluaXNoZWQgd2l0aCB7fSBlcnJvcnMiLmZvcm1hdCgKICAgICAgICB3b3JrZmxvd19pZCwgaGFkX2Vycm9ycwogICAgKQogICAgaHRtbCArPSAiPGJyPmNsaWNrIHRoZSBoeXBlciBsaW5rcyBiZWxvdyB0byBzZWUgZGV0YWlsZWQgcmVzdWx0czxicj4iCiAgICBodG1sICs9IHJ1bnMuc2hvdyhkaXNwbGF5PUZhbHNlLCBzaG9ydD1UcnVlKQogICAgaWYgcmVwbzoKICAgICAgICBwcl9jb21tZW50KGNvbnRleHQsIHJlcG8sIGlzc3VlLCBodG1sKQogICAgZWxzZToKICAgICAgICBwcmludCgicmVwbyBub3QgZGVmaW5lZCIpCiAgICAgICAgcHJpbnQoaHRtbCkK",
          "commands": [],
          "code_origin": "https://github.com/daniels290813/functions.git#55a79c32be5d233cc11efcf40cd3edbe309bfdef:/home/kali/functions/github_utils/github_utils.py"
        },
        "disable_auto_mount": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": {}
    },
    {
      "kind": "job",
      "metadata": {
        "name": "erann-with-mlrun",
        "tag": "latest",
        "hash": "3288ce3a6b0e7d2b8ba0168754982279268e01f9",
        "project": "default",
        "categories": [],
        "updated": "2021-11-08T11:46:43.663173+00:00",
        "credentials": {
          "access_key": "$generate"
        }
      },
      "spec": {
        "command": "",
        "args": [],
        "image": ".mlrun/func-default-erann-with-mlrun:latest",
        "volumes": [],
        "volume_mounts": [],
        "env": [
          {
            "name": "V3IO_API",
            "value": "http://v3io-webapi:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "1bc19fc2-2089-4c9c-a622-2eaa9868382c"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "http://framesd:8080"
          }
        ],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "handler",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ".mlrun/func-default-erann-with-mlrun:latest",
          "base_image": "mlrun/mlrun",
          "commands": [
            "python -m pip install \"mlrun[complete]==0.7.0-rc16\""
          ]
        },
        "disable_auto_mount": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": {}
    },
    {
      "kind": "job",
      "metadata": {
        "credentials": {
          "access_key": "$generate"
        },
        "labels": {},
        "name": "test-m",
        "tag": "",
        "project": "default",
        "hash": "2572a3f3f7b18f678eb44958fe2744953f1e05a0",
        "updated": "2021-11-23T09:31:50.877578+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "",
          "commands": [],
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ""
        },
        "default_class": "",
        "default_handler": "handler",
        "description": "",
        "env": [],
        "image": "mlrun/mlrun",
        "secret_sources": [],
        "volume_mounts": [],
        "volumes": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "disable_auto_mount": false
      },
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "test-m",
        "tag": "latest",
        "project": "default",
        "categories": [],
        "credentials": {
          "access_key": "$generate"
        },
        "hash": "29c9b5872c57fc6a173a8de3ebfbe21d87061dc6",
        "updated": "2021-11-23T09:31:51.380954+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [],
        "volume_mounts": [],
        "env": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "handler",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": "",
          "base_image": "",
          "commands": []
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "status": {
        "state": "ready"
      },
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "credentials": {
          "access_key": "$generate"
        },
        "labels": {},
        "name": "test-m",
        "project": "default",
        "tag": "1",
        "hash": "7bb8f6359d806be55ab990fc4615aa25036d23bd",
        "updated": "2021-11-22T14:22:37.538505+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "",
          "commands": [],
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ""
        },
        "description": "",
        "env": [],
        "image": "mlrun/mlrun",
        "volume_mounts": [],
        "volumes": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "handler"
      },
      "skip_deployed": true,
      "status": {}
    },
    {
      "kind": "job",
      "metadata": {
        "credentials": {
          "access_key": "$generate"
        },
        "labels": {},
        "name": "test-func",
        "tag": "",
        "project": "default",
        "hash": "db9a28ca9e73ec562513c8ee013ca1280f369eaf",
        "updated": "2021-11-23T13:04:43.253788+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "",
          "commands": [],
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ""
        },
        "default_class": "",
        "default_handler": "handler",
        "description": "",
        "env": [],
        "image": "mlrun/mlrun",
        "secret_sources": [],
        "volume_mounts": [],
        "volumes": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "disable_auto_mount": false
      },
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "test-func",
        "tag": "1",
        "project": "default",
        "categories": [],
        "credentials": {
          "access_key": "$generate"
        },
        "hash": "13e31c788582f6505dc8b17a6021f01c3606cd93",
        "updated": "2021-11-23T13:04:44.168863+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [],
        "volume_mounts": [],
        "env": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "handler",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": "",
          "base_image": "",
          "commands": []
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "status": {
        "state": "ready"
      },
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "name": "test-func",
        "tag": "latest",
        "project": "default",
        "categories": [],
        "credentials": {
          "access_key": "$generate"
        },
        "hash": "13e31c788582f6505dc8b17a6021f01c3606cd93",
        "updated": "2021-11-23T13:04:44.168863+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [],
        "volume_mounts": [],
        "env": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "handler",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": "",
          "base_image": "",
          "commands": []
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "status": {
        "state": "ready"
      },
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "credentials": {
          "access_key": "$generate"
        },
        "labels": {},
        "name": "test-func2",
        "tag": "",
        "project": "default",
        "hash": "666bdb7b777ee8a6acedae4505c50dbf4b2ef15a",
        "updated": "2021-11-23T10:01:25.645433+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "",
          "commands": [],
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ""
        },
        "default_class": "",
        "default_handler": "handler",
        "description": "",
        "env": [],
        "image": "mlrun/mlrun",
        "secret_sources": [],
        "volume_mounts": [],
        "volumes": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "disable_auto_mount": false
      },
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "test-func2",
        "tag": "",
        "project": "default",
        "categories": [],
        "credentials": {
          "access_key": "$generate"
        },
        "hash": "606fbba7859b2a2124bea4a358cb37fddb7c01f5",
        "updated": "2021-11-23T10:01:26.405694+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [],
        "volume_mounts": [],
        "env": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "handler",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": "",
          "base_image": "",
          "commands": []
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "name": "test-func2",
        "tag": "latest",
        "hash": "5f48cd7b441395c73927bc1c3d2a192e82c4a11f",
        "project": "default",
        "categories": [],
        "updated": "2021-11-23T10:03:28.049636+00:00",
        "credentials": {
          "access_key": "$generate"
        }
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [],
        "volume_mounts": [],
        "env": [
          {
            "name": "V3IO_API",
            "value": "http://v3io-webapi:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "1bc19fc2-2089-4c9c-a622-2eaa9868382c"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "http://framesd:8080"
          }
        ],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "handler",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": "",
          "base_image": "",
          "commands": []
        },
        "disable_auto_mount": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": {}
    },
    {
      "kind": "job",
      "metadata": {
        "name": "erann-test",
        "tag": "latest",
        "hash": "d662d7ae0a74fc40ec32416d92f0c126a4a59dee",
        "project": "default",
        "categories": [],
        "updated": "2021-11-23T10:03:38.099192+00:00",
        "credentials": {
          "access_key": "$generate"
        }
      },
      "spec": {
        "command": "",
        "args": [],
        "image": ".mlrun/func-default-erann-test:latest",
        "volumes": [
          {
            "name": "my-volume",
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "container": "projects",
                "accessKey": "242e47-a051-4ec3-8384-5f99a26c1451",
                "subPath": "/mount"
              }
            }
          }
        ],
        "volume_mounts": [
          {
            "name": "my-volume",
            "mountPath": "/my-path3"
          }
        ],
        "env": [
          {
            "name": "ENV_VAR_KEY",
            "value": "env-var-value"
          },
          {
            "name": "V3IO_API",
            "value": "http://v3io-webapi:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "http://framesd:8080"
          }
        ],
        "resources": {
          "limits": {
            "memory": "4Mi",
            "nvidia.com/gpu": "1"
          },
          "requests": {
            "cpu": "1",
            "memory": "1Mi"
          }
        },
        "default_handler": "handler",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ".mlrun/func-default-erann-test:latest",
          "base_image": "mlrun/mlrun",
          "commands": [
            "echo $PATH",
            "python -m pip install \"mlrun[complete]==0.7.0-rc15\""
          ]
        },
        "disable_auto_mount": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": {}
    },
    {
      "kind": "job",
      "metadata": {
        "name": "aggregate",
        "tag": "latest",
        "hash": "79fd83704a8514dc2415bded0e9d0ffd94262e92",
        "project": "default",
        "labels": {
          "author": "avia"
        },
        "categories": [
          "data-preparation"
        ],
        "updated": "2021-11-25T15:20:00.058634+00:00",
        "credentials": {
          "access_key": "$generate"
        }
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [],
        "volume_mounts": [],
        "env": [
          {
            "name": "V3IO_API",
            "value": "http://v3io-webapi:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "1bc19fc2-2089-4c9c-a622-2eaa9868382c"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "http://framesd:8080"
          }
        ],
        "default_handler": "aggregate",
        "entry_points": {
          "aggregate": {
            "name": "aggregate",
            "doc": "Time-series aggregation function\n\nWill perform a rolling aggregation on {df_artifact}, over {window} by the selected {keys}\napplying {metric_aggs} on {metrics} and {label_aggs} on {labels}. adding {suffix} to the \nfeature names.\n\nif not {inplace}, will return the original {df_artifact}, joined by the aggregated result.",
            "parameters": [
              {
                "name": "context",
                "default": ""
              },
              {
                "name": "df_artifact",
                "type": "Union[DataItem, DataFrame]",
                "doc": "MLRun input pointing to pandas dataframe (csv/parquet file path) or a  directory containing parquet files. * When given a directory the latest {files_to_select} will be selected",
                "default": ""
              },
              {
                "name": "save_to",
                "type": "str",
                "doc": "Where to save the result dataframe. * If relative will add to the {artifact_path}",
                "default": "aggregated-df.pq"
              },
              {
                "name": "keys",
                "type": "list",
                "doc": "Subset of indexes from the source dataframe to aggregate by (default=all)",
                "default": null
              },
              {
                "name": "metrics",
                "type": "list",
                "doc": "Array containing a list of metrics to run the aggregations on. (default=None) ",
                "default": null
              },
              {
                "name": "labels",
                "type": "list",
                "doc": "Array containing a list of labels to run the aggregations on. (default=None) ",
                "default": null
              },
              {
                "name": "metric_aggs",
                "type": "list",
                "doc": "Array containing a list of aggregation function names to run on {metrics}. (Ex: 'mean', 'std') (default='mean')",
                "default": [
                  "mean"
                ]
              },
              {
                "name": "label_aggs",
                "type": "list",
                "doc": "Array containing a list of aggregation function names to run on {metrics}. (Ex: 'max', 'min') (default='max') ",
                "default": [
                  "max"
                ]
              },
              {
                "name": "suffix",
                "type": "str",
                "doc": "Suffix to add to the feature name, E.g: <Feature_Name>_<Agg_Function>_<Suffix> (Ex: 'last_60_mintes') (default='')",
                "default": ""
              },
              {
                "name": "window",
                "type": "int",
                "doc": "Window size to perform the rolling aggregate on. (default=3)",
                "default": 3
              },
              {
                "name": "center",
                "type": "bool",
                "doc": "If True, Sets the value for the central sample in the window, If False, will set the value to the last sample. (default=False)",
                "default": false
              },
              {
                "name": "inplace",
                "type": "bool",
                "doc": "If True, will return only the aggregated results. If False, will join the aggregated results with the original dataframe",
                "default": false
              },
              {
                "name": "drop_na",
                "type": "bool",
                "doc": "Will drop na lines due to the Rolling.",
                "default": true
              },
              {
                "name": "files_to_select",
                "type": "int",
                "doc": "Specifies the number of *latest* files to select (and concat) for aggregation.",
                "default": 1
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 9
          }
        },
        "description": "Rolling aggregation over Metrics and Lables according to specifications",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG9zCmltcG9ydCBwYW5kYXMgYXMgcGQKZnJvbSBtbHJ1bi5kYXRhc3RvcmUgaW1wb3J0IERhdGFJdGVtCgpmcm9tIHR5cGluZyBpbXBvcnQgVW5pb24KCmRlZiBhZ2dyZWdhdGUoY29udGV4dCwKICAgICAgICAgICAgICBkZl9hcnRpZmFjdDogVW5pb25bRGF0YUl0ZW0sIHBkLmNvcmUuZnJhbWUuRGF0YUZyYW1lXSwKICAgICAgICAgICAgICBzYXZlX3RvOiBzdHIgPSAnYWdncmVnYXRlZC1kZi5wcScsIAogICAgICAgICAgICAgIGtleXM6IGxpc3QgPSBOb25lLCAKICAgICAgICAgICAgICBtZXRyaWNzOiBsaXN0ID0gTm9uZSwgCiAgICAgICAgICAgICAgbGFiZWxzOiBsaXN0ID0gTm9uZSwgCiAgICAgICAgICAgICAgbWV0cmljX2FnZ3M6IGxpc3QgPSBbJ21lYW4nXSwgCiAgICAgICAgICAgICAgbGFiZWxfYWdnczogbGlzdCA9IFsnbWF4J10sIAogICAgICAgICAgICAgIHN1ZmZpeDogc3RyID0gJycsIAogICAgICAgICAgICAgIHdpbmRvdzogaW50ID0gMywgCiAgICAgICAgICAgICAgY2VudGVyOiBib29sID0gRmFsc2UsIAogICAgICAgICAgICAgIGlucGxhY2U6IGJvb2wgPSBGYWxzZSwKICAgICAgICAgICAgICBkcm9wX25hOiBib29sID0gVHJ1ZSwKICAgICAgICAgICAgICBmaWxlc190b19zZWxlY3Q6IGludCA9IDEpOgogICAgIiIiVGltZS1zZXJpZXMgYWdncmVnYXRpb24gZnVuY3Rpb24KICAgIAogICAgV2lsbCBwZXJmb3JtIGEgcm9sbGluZyBhZ2dyZWdhdGlvbiBvbiB7ZGZfYXJ0aWZhY3R9LCBvdmVyIHt3aW5kb3d9IGJ5IHRoZSBzZWxlY3RlZCB7a2V5c30KICAgIGFwcGx5aW5nIHttZXRyaWNfYWdnc30gb24ge21ldHJpY3N9IGFuZCB7bGFiZWxfYWdnc30gb24ge2xhYmVsc30uIGFkZGluZyB7c3VmZml4fSB0byB0aGUgCiAgICBmZWF0dXJlIG5hbWVzLgogICAgCiAgICBpZiBub3Qge2lucGxhY2V9LCB3aWxsIHJldHVybiB0aGUgb3JpZ2luYWwge2RmX2FydGlmYWN0fSwgam9pbmVkIGJ5IHRoZSBhZ2dyZWdhdGVkIHJlc3VsdC4KICAgIAogICAgOnBhcmFtIGRmX2FydGlmYWN0OiBNTFJ1biBpbnB1dCBwb2ludGluZyB0byBwYW5kYXMgZGF0YWZyYW1lIChjc3YvcGFycXVldCBmaWxlIHBhdGgpIG9yIGEgCiAgICAgICAgICAgICAgICAgICAgICAgIGRpcmVjdG9yeSBjb250YWluaW5nIHBhcnF1ZXQgZmlsZXMuCiAgICAgICAgICAgICAgICAgICAgICAgICogV2hlbiBnaXZlbiBhIGRpcmVjdG9yeSB0aGUgbGF0ZXN0IHtmaWxlc190b19zZWxlY3R9IHdpbGwgYmUgc2VsZWN0ZWQKICAgIDpwYXJhbSBzYXZlX3RvOiAgICAgV2hlcmUgdG8gc2F2ZSB0aGUgcmVzdWx0IGRhdGFmcmFtZS4KICAgICAgICAgICAgICAgICAgICAgICAgKiBJZiByZWxhdGl2ZSB3aWxsIGFkZCB0byB0aGUge2FydGlmYWN0X3BhdGh9CiAgICA6cGFyYW0ga2V5czogICAgICAgIFN1YnNldCBvZiBpbmRleGVzIGZyb20gdGhlIHNvdXJjZSBkYXRhZnJhbWUgdG8gYWdncmVnYXRlIGJ5IChkZWZhdWx0PWFsbCkKICAgIDpwYXJhbSBtZXRyaWNzOiAgICAgQXJyYXkgY29udGFpbmluZyBhIGxpc3Qgb2YgbWV0cmljcyB0byBydW4gdGhlIGFnZ3JlZ2F0aW9ucyBvbi4gKGRlZmF1bHQ9Tm9uZSkgCiAgICA6cGFyYW0gbGFiZWxzOiAgICAgIEFycmF5IGNvbnRhaW5pbmcgYSBsaXN0IG9mIGxhYmVscyB0byBydW4gdGhlIGFnZ3JlZ2F0aW9ucyBvbi4gKGRlZmF1bHQ9Tm9uZSkgCiAgICA6cGFyYW0gbWV0cmljX2FnZ3M6IEFycmF5IGNvbnRhaW5pbmcgYSBsaXN0IG9mIGFnZ3JlZ2F0aW9uIGZ1bmN0aW9uIG5hbWVzIHRvIHJ1biBvbiB7bWV0cmljc30uCiAgICAgICAgICAgICAgICAgICAgICAgIChFeDogJ21lYW4nLCAnc3RkJykgKGRlZmF1bHQ9J21lYW4nKQogICAgOnBhcmFtIGxhYmVsX2FnZ3M6ICBBcnJheSBjb250YWluaW5nIGEgbGlzdCBvZiBhZ2dyZWdhdGlvbiBmdW5jdGlvbiBuYW1lcyB0byBydW4gb24ge21ldHJpY3N9LgogICAgICAgICAgICAgICAgICAgICAgICAoRXg6ICdtYXgnLCAnbWluJykgKGRlZmF1bHQ9J21heCcpIAogICAgOnBhcmFtIHN1ZmZpeDogICAgICBTdWZmaXggdG8gYWRkIHRvIHRoZSBmZWF0dXJlIG5hbWUsIEUuZzogPEZlYXR1cmVfTmFtZT5fPEFnZ19GdW5jdGlvbj5fPFN1ZmZpeD4KICAgICAgICAgICAgICAgICAgICAgICAgKEV4OiAnbGFzdF82MF9taW50ZXMnKSAoZGVmYXVsdD0nJykKICAgIDpwYXJhbSB3aW5kb3c6ICAgICAgV2luZG93IHNpemUgdG8gcGVyZm9ybSB0aGUgcm9sbGluZyBhZ2dyZWdhdGUgb24uIChkZWZhdWx0PTMpCiAgICA6cGFyYW0gY2VudGVyOiAgICAgIElmIFRydWUsIFNldHMgdGhlIHZhbHVlIGZvciB0aGUgY2VudHJhbCBzYW1wbGUgaW4gdGhlIHdpbmRvdywKICAgICAgICAgICAgICAgICAgICAgICAgSWYgRmFsc2UsIHdpbGwgc2V0IHRoZSB2YWx1ZSB0byB0aGUgbGFzdCBzYW1wbGUuIChkZWZhdWx0PUZhbHNlKQogICAgOnBhcmFtIGlucGxhY2U6ICAgICBJZiBUcnVlLCB3aWxsIHJldHVybiBvbmx5IHRoZSBhZ2dyZWdhdGVkIHJlc3VsdHMuCiAgICAgICAgICAgICAgICAgICAgICAgIElmIEZhbHNlLCB3aWxsIGpvaW4gdGhlIGFnZ3JlZ2F0ZWQgcmVzdWx0cyB3aXRoIHRoZSBvcmlnaW5hbCBkYXRhZnJhbWUKICAgIDpwYXJhbSBkcm9wX25hOiAgICAgV2lsbCBkcm9wIG5hIGxpbmVzIGR1ZSB0byB0aGUgUm9sbGluZy4KICAgIDpwYXJhbSBmaWxlc190b19zZWxlY3Q6IFNwZWNpZmllcyB0aGUgbnVtYmVyIG9mICpsYXRlc3QqIGZpbGVzIHRvIHNlbGVjdCAoYW5kIGNvbmNhdCkgZm9yIGFnZ3JlZ2F0aW9uLgogICAgIiIiCiAgICAKICAgIGZyb21fbW9kZWwgPSB0eXBlKGRmX2FydGlmYWN0KSA9PSBwZC5EYXRhRnJhbWUKICAgIGlmIGZyb21fbW9kZWw6CiAgICAgICAgY29udGV4dC5sb2dnZXIuaW5mbygnQWdncmVnYXRpbmcgZnJvbSBCdWZmZXInKQogICAgICAgIGlucHV0X2RmID0gZGZfYXJ0aWZhY3QKICAgIGVsc2U6CiAgICAgICAgaWYgZGZfYXJ0aWZhY3QudXJsLmVuZHN3aXRoKCcvJyk6ICAgIyBpcyBhIGRpcmVjdG9yeT8KICAgICAgICAgICAgbXBhdGggPSBbb3MucGF0aC5qb2luKGRmX2FydGlmYWN0LnVybCwgZmlsZSkgZm9yIGZpbGUgaW4gZGZfYXJ0aWZhY3QubGlzdGRpcigpIGlmIGZpbGUuZW5kc3dpdGgoKCdwYXJxdWV0JywgJ3BxJykpXQogICAgICAgICAgICBmaWxlc19ieV91cGRhdGVkID0gc29ydGVkKG1wYXRoLCBrZXk9b3MucGF0aC5nZXRtdGltZSwgcmV2ZXJzZT1UcnVlKQogICAgICAgICAgICBjb250ZXh0LmxvZ2dlci5pbmZvKGZpbGVzX2J5X3VwZGF0ZWQpCiAgICAgICAgICAgIGxhdGVzdCA9IGZpbGVzX2J5X3VwZGF0ZWRbOmZpbGVzX3RvX3NlbGVjdF0KICAgICAgICAgICAgY29udGV4dC5sb2dnZXIuaW5mbyhmJ0FnZ3JlZ2F0aW5nIHtsYXRlc3R9JykKICAgICAgICAgICAgaW5wdXRfZGYgPSBwZC5jb25jYXQoW2NvbnRleHQuZ2V0X2RhdGFpdGVtKGRmKS5hc19kZigpIGZvciBkZiBpbiBsYXRlc3RdKQogICAgICAgIGVsc2U6ICAjIEEgcmVndWxhciBhcnRpZmFjdAogICAgICAgICAgICBjb250ZXh0LmxvZ2dlci5pbmZvKGYnQWdncmVnYXRpbmcge2RmX2FydGlmYWN0LnVybH0nKQogICAgICAgICAgICBpbnB1dF9kZiA9IGRmX2FydGlmYWN0LmFzX2RmKCkKICAgIAogICAgaWYgbm90IChtZXRyaWNzIG9yIGxhYmVscyk6CiAgICAgICAgcmFpc2UgVmFsdWVFcnJvcigncGxlYXNlIHNwZWNpZnkgbWV0cmljcyBvciBsYWJlbHMgcGFyYW0nKQogICAgCiAgICBpZiBrZXlzOgogICAgICAgIGN1cnJlbnRfaW5kZXggPSBpbnB1dF9kZi5pbmRleC5uYW1lcwogICAgICAgIGluZGV4ZXNfdG9fZHJvcCA9IFtjb2wgZm9yIGNvbCBpbiBpbnB1dF9kZi5pbmRleC5uYW1lcyBpZiBjb2wgbm90IGluIGtleXNdCiAgICAgICAgZGYgPSBpbnB1dF9kZi5yZXNldF9pbmRleChsZXZlbD1pbmRleGVzX3RvX2Ryb3ApCiAgICBlbHNlOgogICAgICAgIGRmID0gaW5wdXRfZGYKICAgICAgICAKICAgIGlmIG1ldHJpY3M6CiAgICAgICAgbWV0cmljc19kZiA9IGRmLmxvY1s6LCBtZXRyaWNzXS5yb2xsaW5nKHdpbmRvdz13aW5kb3csIGNlbnRlcj1jZW50ZXIpLmFnZ3JlZ2F0ZShtZXRyaWNfYWdncykKICAgICAgICAKICAgICAgICBtZXRyaWNzX2RmLmNvbHVtbnMgPSBbJ18nLmpvaW4oY29sKS5zdHJpcCgpIGZvciBjb2wgaW4gbWV0cmljc19kZi5jb2x1bW5zLnZhbHVlc10KICAgICAgICAKICAgICAgICBpZiBzdWZmaXg6CiAgICAgICAgICAgIG1ldHJpY3NfZGYuY29sdW1ucyA9IFtmJ3ttZXRyaWN9X3tzdWZmaXh9JyBmb3IgbWV0cmljIGluIG1ldHJpY3NfZGYuY29sdW1uc10KICAgICAgICAgICAgCiAgICAgICAgaWYgbm90IGlucGxhY2U6CiAgICAgICAgICAgIGZpbmFsX2RmID0gcGQubWVyZ2UoaW5wdXRfZGYsIG1ldHJpY3NfZGYsIHN1ZmZpeGVzPSgnJywgc3VmZml4KSwgbGVmdF9pbmRleD1UcnVlLCByaWdodF9pbmRleD1UcnVlKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIGZpbmFsX2RmID0gbWV0cmljc19kZgoKICAgIGlmIGxhYmVsczoKICAgICAgICBsYWJlbHNfZGYgPSBkZi5sb2NbOiwgbGFiZWxzXS5yb2xsaW5nKHdpbmRvdz13aW5kb3csCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjZW50ZXI9Y2VudGVyKS5hZ2dyZWdhdGUobGFiZWxfYWdncykKICAgICAgICBsYWJlbHNfZGYuY29sdW1ucyA9IFsnXycuam9pbihjb2wpLnN0cmlwKCkgZm9yIGNvbCBpbiBsYWJlbHNfZGYuY29sdW1ucy52YWx1ZXNdCiAgICAgICAgCiAgICAgICAgaWYgc3VmZml4OgogICAgICAgICAgICBsYWJlbHNfZGYuY29sdW1ucyA9IFtmJ3tsYWJlbH1fe3N1ZmZpeH0nIGZvciBsYWJlbCBpbiBsYWJlbHNfZGYuY29sdW1uc10KICAgICAgICAgICAgCiAgICAgICAgaWYgbWV0cmljczoKICAgICAgICAgICAgZmluYWxfZGYgPSBwZC5tZXJnZShmaW5hbF9kZiwgbGFiZWxzX2RmLCBzdWZmaXhlcz0oJycsIHN1ZmZpeCksIGxlZnRfaW5kZXg9VHJ1ZSwgcmlnaHRfaW5kZXg9VHJ1ZSkgICAKICAgICAgICBlbHNlOgogICAgICAgICAgICBpZiBub3QgaW5wbGFjZToKICAgICAgICAgICAgICAgIGZpbmFsX2RmID0gcGQubWVyZ2UoaW5wdXRfZGYsIGxhYmVsc19kZiwgc3VmZml4ZXM9KCcnLCBzdWZmaXgpLCBsZWZ0X2luZGV4PVRydWUsIHJpZ2h0X2luZGV4PVRydWUpICAgICAgCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBmaW5hbF9kZiA9IGxhYmVsc19kZgogICAgICAgICAgICAgICAgCiAgICBpZiBkcm9wX25hOgogICAgICAgIGZpbmFsX2RmID0gZmluYWxfZGYuZHJvcG5hKCkKICAgICAgICAKICAgIGNvbnRleHQubG9nZ2VyLmluZm8oJ0xvZ2dpbmcgYXJ0aWZhY3QnKQogICAgaWYgbm90IGZyb21fbW9kZWw6CiAgICAgICAgY29udGV4dC5sb2dfZGF0YXNldChrZXk9J2FnZ3JlZ2F0ZScsIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGY9ZmluYWxfZGYsIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9ybWF0PSdwYXJxdWV0JywKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvY2FsX3BhdGg9c2F2ZV90bykKICAgIGVsc2U6CiAgICAgICAgcmV0dXJuIGZpbmFsX2RmCgo=",
          "commands": [],
          "code_origin": "https://github.com/daniels290813/functions.git#55a79c32be5d233cc11efcf40cd3edbe309bfdef:/home/kali/functions/aggregate/aggregate.py"
        },
        "disable_auto_mount": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": {}
    },
    {
      "kind": "job",
      "metadata": {
        "name": "test",
        "tag": "latest",
        "hash": "dd45ca4b0fe5857947c96f654a76076e7ae68dba",
        "project": "default",
        "categories": [],
        "updated": "2021-11-23T16:01:50.890806+00:00",
        "credentials": {
          "access_key": "test"
        }
      },
      "spec": {
        "command": "",
        "args": [],
        "image": ".mlrun/func-default-test:latest",
        "volumes": [],
        "volume_mounts": [],
        "env": [
          {
            "name": "V3IO_API",
            "value": "http://v3io-webapi:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "pipelines"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b1410f67-92a9-41fd-9413-6d0015c493fd"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "http://framesd:8080"
          }
        ],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "handler",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ".mlrun/func-default-test:latest",
          "base_image": "mlrun/mlrun",
          "commands": [
            "python -m pip install \"mlrun[complete] @ git+https://github.com/mlrun/mlrun@development\""
          ]
        },
        "disable_auto_mount": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": {}
    },
    {
      "kind": "job",
      "metadata": {
        "name": "patient_details_ingest",
        "project": "fsdemo-admin",
        "categories": [],
        "tag": "",
        "hash": "8aa9d2ec9b31cad9d6740780e2fc72767e41df64",
        "updated": "2021-08-29T19:44:45.191045+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "handler",
        "description": "",
        "build": {
          "functionSourceCode": "CmZyb20gbWxydW4uZmVhdHVyZV9zdG9yZS5hcGkgaW1wb3J0IGluZ2VzdApkZWYgaGFuZGxlcihjb250ZXh0KToKICAgIGluZ2VzdChtbHJ1bl9jb250ZXh0PWNvbnRleHQpCg==",
          "commands": []
        },
        "mount_applied": true,
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "patient_details_ingest",
        "tag": "",
        "hash": "7d6bd96326ede91a4ce8e43e138adc4be9dcf5a5",
        "project": "fsdemo-admin",
        "categories": [],
        "updated": "2021-08-29T19:44:45.308886+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "handler",
        "description": "",
        "build": {
          "functionSourceCode": "CmZyb20gbWxydW4uZmVhdHVyZV9zdG9yZS5hcGkgaW1wb3J0IGluZ2VzdApkZWYgaGFuZGxlcihjb250ZXh0KToKICAgIGluZ2VzdChtbHJ1bl9jb250ZXh0PWNvbnRleHQpCg==",
          "commands": []
        },
        "mount_applied": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "serving",
      "metadata": {
        "name": "ingest",
        "tag": "",
        "project": "fsdemo-admin",
        "categories": [],
        "hash": "fc0bec7eb14f3ec5ee3cc207ea566facb1a857ee",
        "updated": "2021-08-29T19:48:14.336320+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "description": "",
        "min_replicas": 1,
        "max_replicas": 4,
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "config": {
          "metadata.labels.mlrun/class": "serving",
          "spec.serviceType": "NodePort",
          "spec.minReplicas": 1,
          "spec.maxReplicas": 4
        },
        "base_spec": {
          "apiVersion": "nuclio.io/v1",
          "kind": "Function",
          "metadata": {
            "annotations": {
              "nuclio.io/generated_by": "function generated from https://github.com/mlrun/mlrun.git#4b8d0f942a52aebf5a50c430bbdb8b3823af87ed:ingest.ipynb"
            },
            "labels": {
              "mlrun/class": "serving",
              "nuclio.io/project-name": "fsdemo-admin"
            },
            "name": "fsdemo-admin-ingest"
          },
          "spec": {
            "build": {
              "commands": [],
              "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IGpzb24KaW1wb3J0IHN0b3JleQpmcm9tIHR5cGluZyBpbXBvcnQgTGlzdCwgRGljdAoKCmNsYXNzIERyb3BDb2x1bW5zKHN0b3JleS5NYXBDbGFzcyk6CiAgICBkZWYgX19pbml0X18oc2VsZiwgY29sdW1uczogTGlzdFtzdHJdLCAqKmt3YXJncyk6CiAgICAgICAgc3VwZXIoKS5fX2luaXRfXygqKmt3YXJncykKICAgICAgICBzZWxmLmNvbHVtbnMgPSBjb2x1bW5zCgogICAgZGVmIGRvKHNlbGYsIGV2ZW50KToKICAgICAgICBmb3IgY29sIGluIHNlbGYuY29sdW1uczoKICAgICAgICAgICAgaWYgY29sIGluIGV2ZW50OgogICAgICAgICAgICAgICAgZGVsIGV2ZW50W2NvbF0KICAgICAgICByZXR1cm4gZXZlbnQKCiAgICBkZWYgdG9fZGljdChzZWxmKToKICAgICAgICByZXR1cm4gewogICAgICAgICAgICAiY2xhc3NfbmFtZSI6ICJEcm9wQ29sdW1ucyIsCiAgICAgICAgICAgICJuYW1lIjogc2VsZi5uYW1lIG9yICJEcm9wQ29sdW1ucyIsCiAgICAgICAgICAgICJjbGFzc19hcmdzIjogewogICAgICAgICAgICAgICAgImNvbHVtbnMiOiBzZWxmLmNvbHVtbnMKICAgICAgICAgICAgfSwKICAgICAgICB9CgpjbGFzcyBSZW5hbWVDb2x1bW5zKHN0b3JleS5NYXBDbGFzcyk6CiAgICBkZWYgX19pbml0X18oc2VsZiwgbWFwcGluZzogRGljdFtzdHIsIHN0cl0sICoqa3dhcmdzKToKICAgICAgICBzdXBlcigpLl9faW5pdF9fKCoqa3dhcmdzKQogICAgICAgIHNlbGYubWFwcGluZyA9IG1hcHBpbmcKCiAgICBkZWYgZG8oc2VsZiwgZXZlbnQpOgogICAgICAgIGZvciBvbGRfY29sLCBuZXdfY29sIGluIHNlbGYubWFwcGluZy5pdGVtcygpOgogICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICBldmVudFtuZXdfY29sXSA9IGV2ZW50LnBvcChvbGRfY29sKQogICAgICAgICAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgICAgICAgICBwcmludChmJ3tvbGRfY29sfSBkb2VzbnQgZXhpc3QnKQogICAgICAgIHJldHVybiBldmVudAoKICAgIGRlZiB0b19kaWN0KHNlbGYpOgogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgICJjbGFzc19uYW1lIjogIlJlbmFtZUNvbHVtbnMiLAogICAgICAgICAgICAibmFtZSI6IHNlbGYubmFtZSBvciAiUmVuYW1lQ29sdW1ucyIsCiAgICAgICAgICAgICJjbGFzc19hcmdzIjogeyJtYXBwaW5nIjogc2VsZi5tYXBwaW5nfSwKICAgICAgICB9CgoKZnJvbSBtbHJ1bi5ydW50aW1lcyBpbXBvcnQgbnVjbGlvX2luaXRfaG9vawpkZWYgaW5pdF9jb250ZXh0KGNvbnRleHQpOgogICAgbnVjbGlvX2luaXRfaG9vayhjb250ZXh0LCBnbG9iYWxzKCksICdzZXJ2aW5nX3YyJykKCmRlZiBoYW5kbGVyKGNvbnRleHQsIGV2ZW50KToKICAgIHJldHVybiBjb250ZXh0Lm1scnVuX2hhbmRsZXIoY29udGV4dCwgZXZlbnQpCg==",
              "noBaseImagesPull": true,
              "baseImage": "mlrun/mlrun:0.7.0-rc11"
            },
            "env": [
              {
                "name": "V3IO_API",
                "value": "v3io-webapi.default-tenant.svc:8081"
              },
              {
                "name": "V3IO_USERNAME",
                "value": "admin"
              },
              {
                "name": "V3IO_ACCESS_KEY",
                "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              },
              {
                "name": "V3IO_FRAMESD",
                "value": "framesd:8081"
              },
              {
                "name": "MLRUN_DEFAULT_PROJECT",
                "value": "fsdemo-admin"
              },
              {
                "name": "MLRUN_DBPATH",
                "value": "http://mlrun-api:8080"
              },
              {
                "name": "MLRUN_NAMESPACE",
                "value": "default-tenant"
              },
              {
                "name": "SERVING_SPEC_ENV",
                "value": "{\"function_uri\": \"fsdemo-admin/ingest\", \"version\": \"v2\", \"parameters\": {\"infer_options\": 0, \"featureset\": \"store://feature-sets/fsdemo-admin/early_sense\", \"source\": {\"kind\": \"http\", \"key_field\": \"patient_id\", \"time_field\": \"timestamp\", \"online\": true}}, \"graph\": {\"steps\": {\"DropColumns\": {\"kind\": \"task\", \"class_name\": \"DropColumns\", \"class_args\": {\"columns\": [\"hr_is_error\", \"rr_is_error\", \"spo2_is_error\", \"movements_is_error\", \"turn_count_is_error\", \"is_in_bed_is_error\"]}}, \"RenameColumns\": {\"kind\": \"task\", \"class_name\": \"RenameColumns\", \"class_args\": {\"mapping\": {\"bad\": \"bed\"}}, \"after\": [\"DropColumns\"]}, \"Aggregates\": {\"kind\": \"task\", \"class_name\": \"storey.AggregateByKey\", \"class_args\": {\"aggregates\": [{\"name\": \"hr_h\", \"column\": \"hr\", \"operations\": [\"avg\", \"max\", \"min\"], \"windows\": [\"1h\"]}, {\"name\": \"hr_d\", \"column\": \"hr\", \"operations\": [\"avg\", \"max\", \"min\"], \"windows\": [\"1d\"]}, {\"name\": \"rr_h\", \"column\": \"rr\", \"operations\": [\"avg\", \"max\", \"min\"], \"windows\": [\"1h\"]}, {\"name\": \"rr_d\", \"column\": \"rr\", \"operations\": [\"avg\", \"max\", \"min\"], \"windows\": [\"1d\"]}, {\"name\": \"spo2_h\", \"column\": \"spo2\", \"operations\": [\"avg\", \"max\", \"min\"], \"windows\": [\"1h\"]}, {\"name\": \"spo2_d\", \"column\": \"spo2\", \"operations\": [\"avg\", \"max\", \"min\"], \"windows\": [\"1d\"]}, {\"name\": \"movements_h\", \"column\": \"movements\", \"operations\": [\"avg\", \"max\", \"min\"], \"windows\": [\"1h\"]}, {\"name\": \"movements_d\", \"column\": \"movements\", \"operations\": [\"avg\", \"max\", \"min\"], \"windows\": [\"1d\"]}, {\"name\": \"turn_count_h\", \"column\": \"turn_count\", \"operations\": [\"avg\", \"max\", \"min\"], \"windows\": [\"1h\"]}, {\"name\": \"turn_count_d\", \"column\": \"turn_count\", \"operations\": [\"avg\", \"max\", \"min\"], \"windows\": [\"1d\"]}, {\"name\": \"in_bed_h\", \"column\": \"is_in_bed\", \"operations\": [\"avg\"], \"windows\": [\"1h\"]}, {\"name\": \"in_bed_d\", \"column\": \"is_in_bed\", \"operations\": [\"avg\"], \"windows\": [\"1d\"]}], \"table\": \".\"}, \"after\": [\"RenameColumns\"]}}}, \"load_mode\": null, \"functions\": {}, \"graph_initializer\": \"mlrun.feature_store.ingestion.featureset_initializer\", \"error_stream\": null, \"track_models\": null, \"default_content_type\": null}"
              }
            ],
            "handler": "01-ingest-datasources:handler",
            "runtime": "python:3.6",
            "volumes": [
              {
                "volume": {
                  "flexVolume": {
                    "driver": "v3io/fuse",
                    "options": {
                      "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
                    }
                  },
                  "name": "v3io"
                },
                "volumeMount": {
                  "mountPath": "/v3io",
                  "name": "v3io",
                  "subPath": ""
                }
              },
              {
                "volume": {
                  "flexVolume": {
                    "driver": "v3io/fuse",
                    "options": {
                      "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
                    }
                  },
                  "name": "v3io"
                },
                "volumeMount": {
                  "mountPath": "/User",
                  "name": "v3io",
                  "subPath": "users/admin"
                }
              }
            ],
            "serviceType": "NodePort",
            "minReplicas": 1,
            "maxReplicas": 4
          }
        },
        "source": "",
        "function_kind": "serving_v2",
        "graph": {
          "steps": {
            "DropColumns": {
              "kind": "task",
              "class_name": "DropColumns",
              "class_args": {
                "columns": [
                  "hr_is_error",
                  "rr_is_error",
                  "spo2_is_error",
                  "movements_is_error",
                  "turn_count_is_error",
                  "is_in_bed_is_error"
                ]
              }
            },
            "RenameColumns": {
              "kind": "task",
              "class_name": "RenameColumns",
              "class_args": {
                "mapping": {
                  "bad": "bed"
                }
              },
              "after": [
                "DropColumns"
              ]
            },
            "Aggregates": {
              "kind": "task",
              "class_name": "storey.AggregateByKey",
              "class_args": {
                "aggregates": [
                  {
                    "name": "hr_h",
                    "column": "hr",
                    "operations": [
                      "avg",
                      "max",
                      "min"
                    ],
                    "windows": [
                      "1h"
                    ]
                  },
                  {
                    "name": "hr_d",
                    "column": "hr",
                    "operations": [
                      "avg",
                      "max",
                      "min"
                    ],
                    "windows": [
                      "1d"
                    ]
                  },
                  {
                    "name": "rr_h",
                    "column": "rr",
                    "operations": [
                      "avg",
                      "max",
                      "min"
                    ],
                    "windows": [
                      "1h"
                    ]
                  },
                  {
                    "name": "rr_d",
                    "column": "rr",
                    "operations": [
                      "avg",
                      "max",
                      "min"
                    ],
                    "windows": [
                      "1d"
                    ]
                  },
                  {
                    "name": "spo2_h",
                    "column": "spo2",
                    "operations": [
                      "avg",
                      "max",
                      "min"
                    ],
                    "windows": [
                      "1h"
                    ]
                  },
                  {
                    "name": "spo2_d",
                    "column": "spo2",
                    "operations": [
                      "avg",
                      "max",
                      "min"
                    ],
                    "windows": [
                      "1d"
                    ]
                  },
                  {
                    "name": "movements_h",
                    "column": "movements",
                    "operations": [
                      "avg",
                      "max",
                      "min"
                    ],
                    "windows": [
                      "1h"
                    ]
                  },
                  {
                    "name": "movements_d",
                    "column": "movements",
                    "operations": [
                      "avg",
                      "max",
                      "min"
                    ],
                    "windows": [
                      "1d"
                    ]
                  },
                  {
                    "name": "turn_count_h",
                    "column": "turn_count",
                    "operations": [
                      "avg",
                      "max",
                      "min"
                    ],
                    "windows": [
                      "1h"
                    ]
                  },
                  {
                    "name": "turn_count_d",
                    "column": "turn_count",
                    "operations": [
                      "avg",
                      "max",
                      "min"
                    ],
                    "windows": [
                      "1d"
                    ]
                  },
                  {
                    "name": "in_bed_h",
                    "column": "is_in_bed",
                    "operations": [
                      "avg"
                    ],
                    "windows": [
                      "1h"
                    ]
                  },
                  {
                    "name": "in_bed_d",
                    "column": "is_in_bed",
                    "operations": [
                      "avg"
                    ],
                    "windows": [
                      "1d"
                    ]
                  }
                ],
                "table": "."
              },
              "after": [
                "RenameColumns"
              ]
            }
          }
        },
        "parameters": {
          "infer_options": 0,
          "featureset": "store://feature-sets/fsdemo-admin/early_sense",
          "source": {
            "kind": "http",
            "key_field": "patient_id",
            "time_field": "timestamp",
            "online": true
          }
        },
        "build": {
          "commands": [],
          "code_origin": "https://github.com/mlrun/mlrun.git#4b8d0f942a52aebf5a50c430bbdb8b3823af87ed:ingest.ipynb",
          "origin_filename": "ingest.ipynb"
        },
        "graph_initializer": "mlrun.feature_store.ingestion.featureset_initializer",
        "secret_sources": [],
        "mount_applied": true,
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "labels": {},
        "name": "test",
        "tag": "test",
        "project": "fsdemo-admin",
        "hash": "232e5ef6d45a4c672800d33ae29986b174b13729",
        "updated": "2021-08-30T07:30:14.665597+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "",
          "commands": "",
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ""
        },
        "default_handler": "test-handler",
        "description": "",
        "env": [],
        "image": "mlrun/mlrun",
        "volume_mounts": [],
        "volumes": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "secret_sources": []
      },
      "status": {}
    },
    {
      "kind": "job",
      "metadata": {
        "labels": {},
        "name": "ingest",
        "tag": "latest",
        "project": "fsdemo-admin",
        "hash": "c5700d5b28ec5f951129d75f4b88667e66cb2db3",
        "updated": "2021-08-30T11:52:25.344253+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "",
          "commands": "",
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ""
        },
        "default_handler": "sef",
        "description": "",
        "env": [],
        "image": "mlrun/mlrun",
        "volume_mounts": [],
        "volumes": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "secret_sources": []
      },
      "status": {}
    },
    {
      "kind": "job",
      "metadata": {
        "labels": {},
        "name": "test",
        "tag": "latest",
        "project": "fsdemo-admin",
        "hash": "0a3c04d861a7d377c7ce4a98d4587f9d19f89938",
        "updated": "2021-09-01T13:18:37.100220+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "",
          "commands": "",
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ""
        },
        "default_handler": "handler",
        "description": "",
        "env": [],
        "image": "mlrun/mlrun",
        "volume_mounts": [],
        "volumes": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "secret_sources": []
      },
      "status": {}
    },
    {
      "kind": "job",
      "metadata": {
        "name": "test",
        "tag": "",
        "project": "fsdemo-admin",
        "categories": [],
        "hash": "3ca4f8547d66464d9369f158b6d7d49a102d83e3",
        "updated": "2021-08-30T11:54:25.280117+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [],
        "volume_mounts": [],
        "env": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "handler",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ".mlrun/func-fsdemo-admin-test:latest",
          "base_image": "",
          "commands": ""
        },
        "mount_applied": false,
        "priority_class_name": "",
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "name": "test",
        "tag": "",
        "project": "fsdemo-admin",
        "categories": [],
        "hash": "97fe14846d3e6a7a3b60a751bf2646dfd9d19601",
        "updated": "2021-08-30T13:30:08.111665+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": ".mlrun/func-fsdemo-admin-test:latest",
        "volumes": [],
        "volume_mounts": [],
        "env": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "handler",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ".mlrun/func-fsdemo-admin-test:latest",
          "base_image": "",
          "commands": ""
        },
        "mount_applied": false,
        "priority_class_name": "",
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "labels": {},
        "name": "test",
        "project": "fsdemo-admin",
        "tag": "",
        "hash": "65174282c00d2682e57a8f063dce08e619f7b2b3",
        "updated": "2021-09-01T13:17:53.529760+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "",
          "commands": "",
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ""
        },
        "default_handler": "sef",
        "description": "",
        "env": [],
        "image": "mlrun/mlrun",
        "volume_mounts": [],
        "volumes": [],
        "resources": {
          "limits": {
            "nvidia.com/gpu": "1",
            "cpu": "2",
            "memory": "2Mi"
          },
          "requests": {
            "cpu": "2",
            "memory": "2Mi"
          }
        },
        "secret_sources": []
      },
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "labels": {},
        "name": "patient_details_ingest",
        "project": "fsdemo-admin",
        "tag": "",
        "hash": "832a2c4c4edca83f6a02e8fd65db2be1f5b71e70",
        "updated": "2021-09-01T13:06:16.584425+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "",
          "commands": [],
          "functionSourceCode": "CmZyb20gbWxydW4uZmVhdHVyZV9zdG9yZS5hcGkgaW1wb3J0IGluZ2VzdApkZWYgaGFuZGxlcihjb250ZXh0KToKICAgIGluZ2VzdChtbHJ1bl9jb250ZXh0PWNvbnRleHQpCg==",
          "image": ""
        },
        "default_handler": "handler",
        "description": "",
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "image": "mlrun/mlrun",
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          }
        ],
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "secret_sources": []
      },
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "patient_details_ingest",
        "tag": "latest",
        "project": "fsdemo-admin",
        "categories": [],
        "hash": "60ff571217daeacd143f3266be331be16fdd719a",
        "updated": "2021-09-01T13:06:17.221452+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "handler",
        "description": "",
        "build": {
          "functionSourceCode": "CmZyb20gbWxydW4uZmVhdHVyZV9zdG9yZS5hcGkgaW1wb3J0IGluZ2VzdApkZWYgaGFuZGxlcihjb250ZXh0KToKICAgIGluZ2VzdChtbHJ1bl9jb250ZXh0PWNvbnRleHQpCg==",
          "image": ".mlrun/func-fsdemo-admin-patient_details_ingest:latest",
          "base_image": "",
          "commands": []
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "status": {
        "state": "deploying",
        "build_pod": "mlrun-build-patient-details-ingest-phlq4"
      },
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "labels": {},
        "name": "1",
        "tag": "",
        "project": "fsdemo-admin",
        "hash": "3cca9d9d065c364e979945f1d71bfc0b4d9fed25",
        "updated": "2021-09-03T14:14:39.560318+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "",
          "commands": [],
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ""
        },
        "default_handler": "1",
        "description": "",
        "env": [],
        "image": "mlrun/mlrun",
        "volume_mounts": [],
        "volumes": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "secret_sources": []
      },
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "labels": {},
        "name": "12",
        "tag": "",
        "project": "fsdemo-admin",
        "hash": "dcd41d68adcb828a5ba45bb2130b70226a42a1c6",
        "updated": "2021-09-03T14:15:08.245127+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "",
          "commands": [],
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ""
        },
        "default_handler": "1",
        "description": "",
        "env": [],
        "image": "mlrun/mlrun",
        "volume_mounts": [],
        "volumes": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "secret_sources": []
      },
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "12",
        "tag": "",
        "project": "fsdemo-admin",
        "categories": [],
        "hash": "6926726dbf89ebe1c577d428070c7590e68850b3",
        "updated": "2021-09-03T14:15:08.826679+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [],
        "volume_mounts": [],
        "env": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "1",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ".mlrun/func-fsdemo-admin-12:latest",
          "base_image": "",
          "commands": []
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "name": "12",
        "tag": "",
        "project": "fsdemo-admin",
        "categories": [],
        "hash": "16e2a95387dcf310cdd5747c208a80fc66fb7b2e",
        "updated": "2021-09-03T14:21:45.386081+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": ".mlrun/func-fsdemo-admin-12:latest",
        "volumes": [],
        "volume_mounts": [],
        "env": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "1",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ".mlrun/func-fsdemo-admin-12:latest",
          "base_image": "",
          "commands": []
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "labels": {},
        "name": "12",
        "project": "fsdemo-admin",
        "tag": "",
        "hash": "f107d81ba54dd024a84b116fb0ba502b6d2e6067",
        "updated": "2021-09-08T12:16:08.890624+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "",
          "commands": "",
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ""
        },
        "default_handler": "1",
        "description": "",
        "env": [],
        "image": "mlrun/mlrun",
        "volume_mounts": [
          {
            "name": "test",
            "mountPath": "test"
          },
          {
            "name": "test1",
            "mountPath": "test1"
          }
        ],
        "volumes": [
          {
            "name": "test",
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "test",
                "container": "test",
                "subPath": "test"
              }
            }
          },
          {
            "name": "test1",
            "configMap": {
              "name": "test1"
            }
          }
        ],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "secret_sources": []
      },
      "with_mlrun": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "12",
        "tag": "latest",
        "project": "fsdemo-admin",
        "categories": [],
        "hash": "c3212e5d14394a52faf59ec5554f9dc13ee37055",
        "updated": "2021-09-08T12:16:09.532508+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [
          {
            "name": "test",
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "test",
                "container": "test",
                "subPath": "test"
              }
            }
          },
          {
            "name": "test1",
            "configMap": {
              "name": "test1"
            }
          }
        ],
        "volume_mounts": [
          {
            "name": "test",
            "mountPath": "test"
          },
          {
            "name": "test1",
            "mountPath": "test1"
          }
        ],
        "env": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "1",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ".mlrun/func-fsdemo-admin-12:latest",
          "base_image": "",
          "commands": ""
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "status": {
        "state": "deploying",
        "build_pod": "mlrun-build-12-5t6ps"
      },
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "name": "1",
        "tag": "latest",
        "hash": "42b3e9a4ce70412698cd1642710e5ccfe3257571",
        "project": "fsdemo-admin",
        "categories": [],
        "updated": "2021-10-04T06:43:00.914629+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [],
        "volume_mounts": [],
        "env": [
          {
            "name": "V3IO_API",
            "value": "http://v3io-webapi:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "1bc19fc2-2089-4c9c-a622-2eaa9868382c"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "http://framesd:8080"
          }
        ],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "1",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": "",
          "base_image": "",
          "commands": []
        },
        "disable_auto_mount": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": {}
    },
    {
      "kind": "",
      "metadata": {
        "name": "prep-data",
        "tag": "",
        "project": "getting-started-tutorial-admin",
        "categories": [],
        "hash": "4b2c6b44a89feb0a72604c28d9c5bf9bf013419e",
        "updated": "2021-08-30T05:13:05.996981+00:00"
      },
      "spec": {
        "command": "/tmp/tmpyhgncll5-prep-data.py",
        "args": [],
        "image": "",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG1scnVuCmRlZiBwcmVwX2RhdGEoY29udGV4dCwgc291cmNlX3VybDogbWxydW4uRGF0YUl0ZW0sIGxhYmVsX2NvbHVtbj0nbGFiZWwnKToKCiAgICBkZiA9IHNvdXJjZV91cmwuYXNfZGYoKQogICAgZGZbbGFiZWxfY29sdW1uXSA9IGRmW2xhYmVsX2NvbHVtbl0uYXN0eXBlKCdjYXRlZ29yeScpLmNhdC5jb2RlcyAgICAKICAgIAogICAgY29udGV4dC5sb2dfcmVzdWx0KCdudW1fcm93cycsIGRmLnNoYXBlWzBdKQoKICAgIGNvbnRleHQubG9nX2RhdGFzZXQoJ2NsZWFuZWRfZGF0YScsIGRmPWRmLCBpbmRleD1GYWxzZSwgZm9ybWF0PSdjc3YnKQoK",
          "commands": [],
          "code_origin": "prep_data.ipynb",
          "origin_filename": "prep-data.ipynb"
        },
        "description": "",
        "mount_applied": false
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "",
      "metadata": {
        "name": "prep-data",
        "tag": "",
        "project": "getting-started-tutorial-admin",
        "categories": [],
        "hash": "89635d7c7baa3ecabc01894fcb551a006030cecf",
        "updated": "2021-08-30T05:13:08.396106+00:00"
      },
      "spec": {
        "command": "/tmp/tmpxgr0jd7d-prep-data.py",
        "args": [],
        "image": "",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG1scnVuCmRlZiBwcmVwX2RhdGEoY29udGV4dCwgc291cmNlX3VybDogbWxydW4uRGF0YUl0ZW0sIGxhYmVsX2NvbHVtbj0nbGFiZWwnKToKCiAgICBkZiA9IHNvdXJjZV91cmwuYXNfZGYoKQogICAgZGZbbGFiZWxfY29sdW1uXSA9IGRmW2xhYmVsX2NvbHVtbl0uYXN0eXBlKCdjYXRlZ29yeScpLmNhdC5jb2RlcyAgICAKICAgIAogICAgY29udGV4dC5sb2dfcmVzdWx0KCdudW1fcm93cycsIGRmLnNoYXBlWzBdKQoKICAgIGNvbnRleHQubG9nX2RhdGFzZXQoJ2NsZWFuZWRfZGF0YScsIGRmPWRmLCBpbmRleD1GYWxzZSwgZm9ybWF0PSdjc3YnKQoK",
          "commands": [],
          "code_origin": "prep_data.ipynb",
          "origin_filename": "prep-data.ipynb"
        },
        "description": "",
        "mount_applied": false
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "prep-data",
        "tag": "",
        "project": "getting-started-tutorial-admin",
        "hash": "386171f794b6e760852ad27ac8f727e2db7f1c57",
        "updated": "2021-08-30T05:13:19.221546+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/ml-models",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "",
        "entry_points": {
          "prep_data": {
            "name": "prep_data",
            "doc": "",
            "parameters": [
              {
                "name": "context",
                "default": ""
              },
              {
                "name": "source_url",
                "type": "DataItem",
                "default": ""
              },
              {
                "name": "label_column",
                "default": "label"
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 4
          }
        },
        "description": "",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG1scnVuCmRlZiBwcmVwX2RhdGEoY29udGV4dCwgc291cmNlX3VybDogbWxydW4uRGF0YUl0ZW0sIGxhYmVsX2NvbHVtbj0nbGFiZWwnKToKCiAgICBkZiA9IHNvdXJjZV91cmwuYXNfZGYoKQogICAgZGZbbGFiZWxfY29sdW1uXSA9IGRmW2xhYmVsX2NvbHVtbl0uYXN0eXBlKCdjYXRlZ29yeScpLmNhdC5jb2RlcyAgICAKICAgIAogICAgY29udGV4dC5sb2dfcmVzdWx0KCdudW1fcm93cycsIGRmLnNoYXBlWzBdKQoKICAgIGNvbnRleHQubG9nX2RhdGFzZXQoJ2NsZWFuZWRfZGF0YScsIGRmPWRmLCBpbmRleD1GYWxzZSwgZm9ybWF0PSdjc3YnKQoK",
          "commands": [],
          "code_origin": "prep_data.ipynb",
          "origin_filename": "prep-data.ipynb"
        },
        "mount_applied": true,
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "prep-data",
        "tag": "",
        "hash": "65062767ec14ca61c0758045285fa6db769a138f",
        "project": "getting-started-tutorial-admin",
        "categories": [],
        "updated": "2021-08-30T05:13:09.811460+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/ml-models",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "",
        "entry_points": {
          "prep_data": {
            "name": "prep_data",
            "doc": "",
            "parameters": [
              {
                "name": "context",
                "default": ""
              },
              {
                "name": "source_url",
                "type": "DataItem",
                "default": ""
              },
              {
                "name": "label_column",
                "default": "label"
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 4
          }
        },
        "description": "",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG1scnVuCmRlZiBwcmVwX2RhdGEoY29udGV4dCwgc291cmNlX3VybDogbWxydW4uRGF0YUl0ZW0sIGxhYmVsX2NvbHVtbj0nbGFiZWwnKToKCiAgICBkZiA9IHNvdXJjZV91cmwuYXNfZGYoKQogICAgZGZbbGFiZWxfY29sdW1uXSA9IGRmW2xhYmVsX2NvbHVtbl0uYXN0eXBlKCdjYXRlZ29yeScpLmNhdC5jb2RlcyAgICAKICAgIAogICAgY29udGV4dC5sb2dfcmVzdWx0KCdudW1fcm93cycsIGRmLnNoYXBlWzBdKQoKICAgIGNvbnRleHQubG9nX2RhdGFzZXQoJ2NsZWFuZWRfZGF0YScsIGRmPWRmLCBpbmRleD1GYWxzZSwgZm9ybWF0PSdjc3YnKQoK",
          "commands": [],
          "code_origin": "prep_data.ipynb",
          "origin_filename": "prep-data.ipynb"
        },
        "mount_applied": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "train-iris",
        "tag": "",
        "project": "getting-started-tutorial-admin",
        "hash": "bced63832a386f9df7d8d57a6e814864951a8279",
        "updated": "2021-08-30T05:14:43.131539+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/ml-models",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "train_iris",
        "entry_points": {
          "train_iris": {
            "name": "train_iris",
            "doc": "",
            "parameters": [
              {
                "name": "context",
                "type": "MLClientCtx",
                "default": ""
              },
              {
                "name": "dataset",
                "type": "DataItem",
                "default": ""
              },
              {
                "name": "label_column",
                "type": "str",
                "default": "labels"
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 14
          }
        },
        "description": "",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKZnJvbSBza2xlYXJuIGltcG9ydCBsaW5lYXJfbW9kZWwKZnJvbSBza2xlYXJuIGltcG9ydCBkYXRhc2V0cwpmcm9tIHNrbGVhcm4ubW9kZWxfc2VsZWN0aW9uIGltcG9ydCB0cmFpbl90ZXN0X3NwbGl0CmZyb20gY2xvdWRwaWNrbGUgaW1wb3J0IGR1bXBzCmltcG9ydCBwYW5kYXMgYXMgcGQKCmZyb20gbWxydW4uZXhlY3V0aW9uIGltcG9ydCBNTENsaWVudEN0eApmcm9tIG1scnVuLmRhdGFzdG9yZSBpbXBvcnQgRGF0YUl0ZW0KZnJvbSBtbHJ1bi5tbHV0aWxzLmRhdGEgaW1wb3J0IGdldF9zYW1wbGUKZnJvbSBtbHJ1bi5tbHV0aWxzLnBsb3RzIGltcG9ydCBldmFsX21vZGVsX3YyCgpkZWYgdHJhaW5faXJpcyhjb250ZXh0OiBNTENsaWVudEN0eCwKICAgICAgICAgICAgICAgZGF0YXNldDogRGF0YUl0ZW0sCiAgICAgICAgICAgICAgIGxhYmVsX2NvbHVtbjogc3RyID0gImxhYmVscyIpOgoKICAgIHJhdywgbGFiZWxzLCBoZWFkZXIgPSBnZXRfc2FtcGxlKGRhdGFzZXQsIHNhbXBsZT0tMSwgbGFiZWw9bGFiZWxfY29sdW1uKQogICAgCiAgICBYX3RyYWluLCBYX3Rlc3QsIHlfdHJhaW4sIHlfdGVzdCA9IHRyYWluX3Rlc3Rfc3BsaXQoCiAgICAgICAgcmF3LCBsYWJlbHMsIHRlc3Rfc2l6ZT0wLjIsIHJhbmRvbV9zdGF0ZT00MikKICAgIAogICAgY29udGV4dC5sb2dfZGF0YXNldCgndHJhaW5fc2V0JywgCiAgICAgICAgICAgICAgICAgICAgICAgIGRmPXBkLmNvbmNhdChbWF90cmFpbiwgeV90cmFpbi50b19mcmFtZSgpXSwgYXhpcz0xKSwKICAgICAgICAgICAgICAgICAgICAgICAgZm9ybWF0PSdjc3YnLCBpbmRleD1GYWxzZSwgCiAgICAgICAgICAgICAgICAgICAgICAgIGFydGlmYWN0X3BhdGg9Y29udGV4dC5hcnRpZmFjdF9zdWJwYXRoKCdkYXRhJykpCgogICAgY29udGV4dC5sb2dfZGF0YXNldCgndGVzdF9zZXQnLCAKICAgICAgICAgICAgICAgICAgICAgICAgZGY9cGQuY29uY2F0KFtYX3Rlc3QsIHlfdGVzdC50b19mcmFtZSgpXSwgYXhpcz0xKSwKICAgICAgICAgICAgICAgICAgICAgICAgZm9ybWF0PSdjc3YnLCBpbmRleD1GYWxzZSwgCiAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVscz17ImRhdGEtdHlwZSI6ICJoZWxkLW91dCJ9LAogICAgICAgICAgICAgICAgICAgICAgICBhcnRpZmFjdF9wYXRoPWNvbnRleHQuYXJ0aWZhY3Rfc3VicGF0aCgnZGF0YScpKQogICAgCiAgICBtb2RlbCA9IGxpbmVhcl9tb2RlbC5Mb2dpc3RpY1JlZ3Jlc3Npb24obWF4X2l0ZXI9MTAwMDApCiAgICBtb2RlbC5maXQoWF90cmFpbiwgeV90cmFpbikKICAgIAogICAgZXZhbF9tZXRyaWNzID0gZXZhbF9tb2RlbF92Mihjb250ZXh0LCBYX3Rlc3QsIHlfdGVzdCwgbW9kZWwpCiAgICAKICAgIGNvbnRleHQubG9nX21vZGVsKCJtb2RlbCIsCiAgICAgICAgICAgICAgICAgICAgICBib2R5PWR1bXBzKG1vZGVsKSwKICAgICAgICAgICAgICAgICAgICAgIGFydGlmYWN0X3BhdGg9Y29udGV4dC5hcnRpZmFjdF9zdWJwYXRoKCJtb2RlbHMiKSwKICAgICAgICAgICAgICAgICAgICAgIGV4dHJhX2RhdGE9ZXZhbF9tZXRyaWNzLCAKICAgICAgICAgICAgICAgICAgICAgIG1vZGVsX2ZpbGU9Im1vZGVsLnBrbCIsCiAgICAgICAgICAgICAgICAgICAgICBtZXRyaWNzPWNvbnRleHQucmVzdWx0cywKICAgICAgICAgICAgICAgICAgICAgIGxhYmVscz17ImNsYXNzIjogInNrbGVhcm4ubGluZWFyX21vZGVsLkxvZ2lzdGljUmVncmVzc2lvbiJ9KQoK",
          "commands": [],
          "code_origin": "train_iris.ipynb",
          "origin_filename": "train-iris.ipynb"
        },
        "mount_applied": true,
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "train-iris",
        "tag": "",
        "hash": "6190ac037844be5bfd19bca1582e57de5fd1557d",
        "project": "getting-started-tutorial-admin",
        "categories": [],
        "updated": "2021-08-30T05:14:43.229366+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/ml-models",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "train_iris",
        "entry_points": {
          "train_iris": {
            "name": "train_iris",
            "doc": "",
            "parameters": [
              {
                "name": "context",
                "type": "MLClientCtx",
                "default": ""
              },
              {
                "name": "dataset",
                "type": "DataItem",
                "default": ""
              },
              {
                "name": "label_column",
                "type": "str",
                "default": "labels"
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 14
          }
        },
        "description": "",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKZnJvbSBza2xlYXJuIGltcG9ydCBsaW5lYXJfbW9kZWwKZnJvbSBza2xlYXJuIGltcG9ydCBkYXRhc2V0cwpmcm9tIHNrbGVhcm4ubW9kZWxfc2VsZWN0aW9uIGltcG9ydCB0cmFpbl90ZXN0X3NwbGl0CmZyb20gY2xvdWRwaWNrbGUgaW1wb3J0IGR1bXBzCmltcG9ydCBwYW5kYXMgYXMgcGQKCmZyb20gbWxydW4uZXhlY3V0aW9uIGltcG9ydCBNTENsaWVudEN0eApmcm9tIG1scnVuLmRhdGFzdG9yZSBpbXBvcnQgRGF0YUl0ZW0KZnJvbSBtbHJ1bi5tbHV0aWxzLmRhdGEgaW1wb3J0IGdldF9zYW1wbGUKZnJvbSBtbHJ1bi5tbHV0aWxzLnBsb3RzIGltcG9ydCBldmFsX21vZGVsX3YyCgpkZWYgdHJhaW5faXJpcyhjb250ZXh0OiBNTENsaWVudEN0eCwKICAgICAgICAgICAgICAgZGF0YXNldDogRGF0YUl0ZW0sCiAgICAgICAgICAgICAgIGxhYmVsX2NvbHVtbjogc3RyID0gImxhYmVscyIpOgoKICAgIHJhdywgbGFiZWxzLCBoZWFkZXIgPSBnZXRfc2FtcGxlKGRhdGFzZXQsIHNhbXBsZT0tMSwgbGFiZWw9bGFiZWxfY29sdW1uKQogICAgCiAgICBYX3RyYWluLCBYX3Rlc3QsIHlfdHJhaW4sIHlfdGVzdCA9IHRyYWluX3Rlc3Rfc3BsaXQoCiAgICAgICAgcmF3LCBsYWJlbHMsIHRlc3Rfc2l6ZT0wLjIsIHJhbmRvbV9zdGF0ZT00MikKICAgIAogICAgY29udGV4dC5sb2dfZGF0YXNldCgndHJhaW5fc2V0JywgCiAgICAgICAgICAgICAgICAgICAgICAgIGRmPXBkLmNvbmNhdChbWF90cmFpbiwgeV90cmFpbi50b19mcmFtZSgpXSwgYXhpcz0xKSwKICAgICAgICAgICAgICAgICAgICAgICAgZm9ybWF0PSdjc3YnLCBpbmRleD1GYWxzZSwgCiAgICAgICAgICAgICAgICAgICAgICAgIGFydGlmYWN0X3BhdGg9Y29udGV4dC5hcnRpZmFjdF9zdWJwYXRoKCdkYXRhJykpCgogICAgY29udGV4dC5sb2dfZGF0YXNldCgndGVzdF9zZXQnLCAKICAgICAgICAgICAgICAgICAgICAgICAgZGY9cGQuY29uY2F0KFtYX3Rlc3QsIHlfdGVzdC50b19mcmFtZSgpXSwgYXhpcz0xKSwKICAgICAgICAgICAgICAgICAgICAgICAgZm9ybWF0PSdjc3YnLCBpbmRleD1GYWxzZSwgCiAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVscz17ImRhdGEtdHlwZSI6ICJoZWxkLW91dCJ9LAogICAgICAgICAgICAgICAgICAgICAgICBhcnRpZmFjdF9wYXRoPWNvbnRleHQuYXJ0aWZhY3Rfc3VicGF0aCgnZGF0YScpKQogICAgCiAgICBtb2RlbCA9IGxpbmVhcl9tb2RlbC5Mb2dpc3RpY1JlZ3Jlc3Npb24obWF4X2l0ZXI9MTAwMDApCiAgICBtb2RlbC5maXQoWF90cmFpbiwgeV90cmFpbikKICAgIAogICAgZXZhbF9tZXRyaWNzID0gZXZhbF9tb2RlbF92Mihjb250ZXh0LCBYX3Rlc3QsIHlfdGVzdCwgbW9kZWwpCiAgICAKICAgIGNvbnRleHQubG9nX21vZGVsKCJtb2RlbCIsCiAgICAgICAgICAgICAgICAgICAgICBib2R5PWR1bXBzKG1vZGVsKSwKICAgICAgICAgICAgICAgICAgICAgIGFydGlmYWN0X3BhdGg9Y29udGV4dC5hcnRpZmFjdF9zdWJwYXRoKCJtb2RlbHMiKSwKICAgICAgICAgICAgICAgICAgICAgIGV4dHJhX2RhdGE9ZXZhbF9tZXRyaWNzLCAKICAgICAgICAgICAgICAgICAgICAgIG1vZGVsX2ZpbGU9Im1vZGVsLnBrbCIsCiAgICAgICAgICAgICAgICAgICAgICBtZXRyaWNzPWNvbnRleHQucmVzdWx0cywKICAgICAgICAgICAgICAgICAgICAgIGxhYmVscz17ImNsYXNzIjogInNrbGVhcm4ubGluZWFyX21vZGVsLkxvZ2lzdGljUmVncmVzc2lvbiJ9KQoK",
          "commands": [],
          "code_origin": "train_iris.ipynb",
          "origin_filename": "train-iris.ipynb"
        },
        "mount_applied": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "describe",
        "tag": "",
        "hash": "929188361571cb00457af9d4c6d1a797c272ccd5",
        "project": "getting-started-tutorial-admin",
        "labels": {
          "author": "Iguazio"
        },
        "categories": [
          "data-analysis"
        ],
        "updated": "2021-08-30T05:14:53.493169+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "summarize",
        "entry_points": {
          "summarize": {
            "name": "summarize",
            "doc": "Summarize a table",
            "parameters": [
              {
                "name": "context",
                "type": "MLClientCtx",
                "doc": "the function context",
                "default": ""
              },
              {
                "name": "table",
                "type": "DataItem",
                "doc": "MLRun input pointing to pandas dataframe (csv/parquet file path)",
                "default": ""
              },
              {
                "name": "label_column",
                "type": "str",
                "doc": "ground truth column label",
                "default": null
              },
              {
                "name": "class_labels",
                "type": "List[str]",
                "doc": "label for each class in tables and plots",
                "default": []
              },
              {
                "name": "plot_hist",
                "type": "bool",
                "doc": "(True) set this to False for large tables",
                "default": true
              },
              {
                "name": "plots_dest",
                "type": "str",
                "doc": "destination folder of summary plots (relative to artifact_path)",
                "default": "plots"
              },
              {
                "name": "update_dataset",
                "doc": "when the table is a registered dataset update the charts in-place",
                "default": false
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 23
          }
        },
        "description": "describe and visualizes dataset stats",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHdhcm5pbmdzCgp3YXJuaW5ncy5zaW1wbGVmaWx0ZXIoYWN0aW9uPSJpZ25vcmUiLCBjYXRlZ29yeT1GdXR1cmVXYXJuaW5nKQoKaW1wb3J0IG9zCmltcG9ydCBudW1weSBhcyBucAppbXBvcnQgcGFuZGFzIGFzIHBkCmltcG9ydCBtYXRwbG90bGliLnB5cGxvdCBhcyBwbHQKaW1wb3J0IHNlYWJvcm4gYXMgc25zCgpmcm9tIG1scnVuLmV4ZWN1dGlvbiBpbXBvcnQgTUxDbGllbnRDdHgKZnJvbSBtbHJ1bi5kYXRhc3RvcmUgaW1wb3J0IERhdGFJdGVtCmZyb20gbWxydW4uYXJ0aWZhY3RzIGltcG9ydCBQbG90QXJ0aWZhY3QsIFRhYmxlQXJ0aWZhY3QKZnJvbSBtbHJ1bi5tbHV0aWxzLnBsb3RzIGltcG9ydCBnY2ZfY2xlYXIKCmZyb20gdHlwaW5nIGltcG9ydCBMaXN0CgpwZC5zZXRfb3B0aW9uKCJkaXNwbGF5LmZsb2F0X2Zvcm1hdCIsIGxhbWJkYSB4OiAiJS4yZiIgJSB4KQoKCmRlZiBzdW1tYXJpemUoCiAgICBjb250ZXh0OiBNTENsaWVudEN0eCwKICAgIHRhYmxlOiBEYXRhSXRlbSwKICAgIGxhYmVsX2NvbHVtbjogc3RyID0gTm9uZSwKICAgIGNsYXNzX2xhYmVsczogTGlzdFtzdHJdID0gW10sCiAgICBwbG90X2hpc3Q6IGJvb2wgPSBUcnVlLAogICAgcGxvdHNfZGVzdDogc3RyID0gInBsb3RzIiwKICAgIHVwZGF0ZV9kYXRhc2V0PUZhbHNlLAopIC0+IE5vbmU6CiAgICAiIiJTdW1tYXJpemUgYSB0YWJsZQoKICAgIDpwYXJhbSBjb250ZXh0OiAgICAgICAgIHRoZSBmdW5jdGlvbiBjb250ZXh0CiAgICA6cGFyYW0gdGFibGU6ICAgICAgICAgICBNTFJ1biBpbnB1dCBwb2ludGluZyB0byBwYW5kYXMgZGF0YWZyYW1lIChjc3YvcGFycXVldCBmaWxlIHBhdGgpCiAgICA6cGFyYW0gbGFiZWxfY29sdW1uOiAgICBncm91bmQgdHJ1dGggY29sdW1uIGxhYmVsCiAgICA6cGFyYW0gY2xhc3NfbGFiZWxzOiAgICBsYWJlbCBmb3IgZWFjaCBjbGFzcyBpbiB0YWJsZXMgYW5kIHBsb3RzCiAgICA6cGFyYW0gcGxvdF9oaXN0OiAgICAgICAoVHJ1ZSkgc2V0IHRoaXMgdG8gRmFsc2UgZm9yIGxhcmdlIHRhYmxlcwogICAgOnBhcmFtIHBsb3RzX2Rlc3Q6ICAgICAgZGVzdGluYXRpb24gZm9sZGVyIG9mIHN1bW1hcnkgcGxvdHMgKHJlbGF0aXZlIHRvIGFydGlmYWN0X3BhdGgpCiAgICA6cGFyYW0gdXBkYXRlX2RhdGFzZXQ6ICB3aGVuIHRoZSB0YWJsZSBpcyBhIHJlZ2lzdGVyZWQgZGF0YXNldCB1cGRhdGUgdGhlIGNoYXJ0cyBpbi1wbGFjZQogICAgIiIiCiAgICBkZiA9IHRhYmxlLmFzX2RmKCkKICAgIGhlYWRlciA9IGRmLmNvbHVtbnMudmFsdWVzCiAgICBleHRyYV9kYXRhID0ge30KCiAgICB0cnk6CiAgICAgICAgZ2NmX2NsZWFyKHBsdCkKICAgICAgICBzbnNwbHQgPSBzbnMucGFpcnBsb3QoZGYsIGh1ZT1sYWJlbF9jb2x1bW4pICAjICwgZGlhZ19rd3M9eyJidyI6IDEuNX0pCiAgICAgICAgZXh0cmFfZGF0YVsiaGlzdG9ncmFtcyJdID0gY29udGV4dC5sb2dfYXJ0aWZhY3QoCiAgICAgICAgICAgIFBsb3RBcnRpZmFjdCgiaGlzdG9ncmFtcyIsIGJvZHk9cGx0LmdjZigpKSwKICAgICAgICAgICAgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS9oaXN0Lmh0bWwiLAogICAgICAgICAgICBkYl9rZXk9RmFsc2UsCiAgICAgICAgKQogICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgIGNvbnRleHQubG9nZ2VyLmVycm9yKGYiRmFpbGVkIHRvIGNyZWF0ZSBwYWlycGxvdCBoaXN0b2dyYW1zIGR1ZSB0bzoge2V9IikKCiAgICB0cnk6CiAgICAgICAgZ2NmX2NsZWFyKHBsdCkKICAgICAgICBwbG90X2NvbHMgPSAzCiAgICAgICAgcGxvdF9yb3dzID0gaW50KChsZW4oaGVhZGVyKSAtIDEpIC8gcGxvdF9jb2xzKSArIDEKICAgICAgICBmaWcsIGF4ID0gcGx0LnN1YnBsb3RzKHBsb3Rfcm93cywgcGxvdF9jb2xzLCBmaWdzaXplPSgxNSwgNCkpCiAgICAgICAgZmlnLnRpZ2h0X2xheW91dChwYWQ9Mi4wKQogICAgICAgIGZvciBpIGluIHJhbmdlKHBsb3Rfcm93cyAqIHBsb3RfY29scyk6CiAgICAgICAgICAgIGlmIGkgPCBsZW4oaGVhZGVyKToKICAgICAgICAgICAgICAgIHNucy52aW9saW5wbG90KAogICAgICAgICAgICAgICAgICAgIHg9ZGZbaGVhZGVyW2ldXSwKICAgICAgICAgICAgICAgICAgICBheD1heFtpbnQoaSAvIHBsb3RfY29scyldW2kgJSBwbG90X2NvbHNdLAogICAgICAgICAgICAgICAgICAgIG9yaWVudD0iaCIsCiAgICAgICAgICAgICAgICAgICAgd2lkdGg9MC43LAogICAgICAgICAgICAgICAgICAgIGlubmVyPSJxdWFydGlsZSIsCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBmaWcuZGVsYXhlcyhheFtpbnQoaSAvIHBsb3RfY29scyldW2kgJSBwbG90X2NvbHNdKQogICAgICAgICAgICBpICs9IDEKICAgICAgICBleHRyYV9kYXRhWyJ2aW9saW4iXSA9IGNvbnRleHQubG9nX2FydGlmYWN0KAogICAgICAgICAgICBQbG90QXJ0aWZhY3QoInZpb2xpbiIsIGJvZHk9cGx0LmdjZigpLCB0aXRsZT0iVmlvbGluIFBsb3QiKSwKICAgICAgICAgICAgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS92aW9saW4uaHRtbCIsCiAgICAgICAgICAgIGRiX2tleT1GYWxzZSwKICAgICAgICApCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgY29udGV4dC5sb2dnZXIud2FybihmIkZhaWxlZCB0byBjcmVhdGUgdmlvbGluIGRpc3RyaWJ1dGlvbiBwbG90cyBkdWUgdG86IHtlfSIpCgogICAgaWYgbGFiZWxfY29sdW1uOgogICAgICAgIGxhYmVscyA9IGRmLnBvcChsYWJlbF9jb2x1bW4pCiAgICAgICAgaW1idGFibGUgPSBsYWJlbHMudmFsdWVfY291bnRzKG5vcm1hbGl6ZT1UcnVlKS5zb3J0X2luZGV4KCkKICAgICAgICB0cnk6CiAgICAgICAgICAgIGdjZl9jbGVhcihwbHQpCiAgICAgICAgICAgIGJhbGFuY2ViYXIgPSBpbWJ0YWJsZS5wbG90KGtpbmQ9ImJhciIsIHRpdGxlPSJjbGFzcyBpbWJhbGFuY2UgLSBsYWJlbHMiKQogICAgICAgICAgICBiYWxhbmNlYmFyLnNldF94bGFiZWwoImNsYXNzIikKICAgICAgICAgICAgYmFsYW5jZWJhci5zZXRfeWxhYmVsKCJwcm9wb3J0aW9uIG9mIHRvdGFsIikKICAgICAgICAgICAgZXh0cmFfZGF0YVsiaW1iYWxhbmNlIl0gPSBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICAgICAgICAgIFBsb3RBcnRpZmFjdCgiaW1iYWxhbmNlIiwgYm9keT1wbHQuZ2NmKCkpLAogICAgICAgICAgICAgICAgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS9pbWJhbGFuY2UuaHRtbCIsCiAgICAgICAgICAgICkKICAgICAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgICAgIGNvbnRleHQubG9nZ2VyLndhcm4oZiJGYWlsZWQgdG8gY3JlYXRlIGNsYXNzIGltYmFsYW5jZSBwbG90IGR1ZSB0bzoge2V9IikKICAgICAgICBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICAgICAgVGFibGVBcnRpZmFjdCgKICAgICAgICAgICAgICAgICJpbWJhbGFuY2Utd2VpZ2h0cy12ZWMiLCBkZj1wZC5EYXRhRnJhbWUoeyJ3ZWlnaHRzIjogaW1idGFibGV9KQogICAgICAgICAgICApLAogICAgICAgICAgICBsb2NhbF9wYXRoPWYie3Bsb3RzX2Rlc3R9L2ltYmFsYW5jZS13ZWlnaHRzLXZlYy5jc3YiLAogICAgICAgICAgICBkYl9rZXk9RmFsc2UsCiAgICAgICAgKQoKICAgIHRibGNvcnIgPSBkZi5jb3JyKCkKICAgIG1hc2sgPSBucC56ZXJvc19saWtlKHRibGNvcnIsIGR0eXBlPW5wLmJvb2wpCiAgICBtYXNrW25wLnRyaXVfaW5kaWNlc19mcm9tKG1hc2spXSA9IFRydWUKCiAgICBkZmNvcnIgPSBwZC5EYXRhRnJhbWUoZGF0YT10Ymxjb3JyLCBjb2x1bW5zPWhlYWRlciwgaW5kZXg9aGVhZGVyKQogICAgZGZjb3JyID0gZGZjb3JyW25wLmFyYW5nZShkZmNvcnIuc2hhcGVbMF0pWzosIE5vbmVdID4gbnAuYXJhbmdlKGRmY29yci5zaGFwZVsxXSldCiAgICBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICBUYWJsZUFydGlmYWN0KCJjb3JyZWxhdGlvbi1tYXRyaXgiLCBkZj10Ymxjb3JyLCB2aXNpYmxlPVRydWUpLAogICAgICAgIGxvY2FsX3BhdGg9ZiJ7cGxvdHNfZGVzdH0vY29ycmVsYXRpb24tbWF0cml4LmNzdiIsCiAgICAgICAgZGJfa2V5PUZhbHNlLAogICAgKQoKICAgIHRyeToKICAgICAgICBnY2ZfY2xlYXIocGx0KQogICAgICAgIGF4ID0gcGx0LmF4ZXMoKQogICAgICAgIHNucy5oZWF0bWFwKHRibGNvcnIsIGF4PWF4LCBtYXNrPW1hc2ssIGFubm90PUZhbHNlLCBjbWFwPXBsdC5jbS5SZWRzKQogICAgICAgIGF4LnNldF90aXRsZSgiZmVhdHVyZXMgY29ycmVsYXRpb24iKQogICAgICAgIGV4dHJhX2RhdGFbImNvcnJlbGF0aW9uIl0gPSBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICAgICAgUGxvdEFydGlmYWN0KCJjb3JyZWxhdGlvbiIsIGJvZHk9cGx0LmdjZigpLCB0aXRsZT0iQ29ycmVsYXRpb24gTWF0cml4IiksCiAgICAgICAgICAgIGxvY2FsX3BhdGg9ZiJ7cGxvdHNfZGVzdH0vY29yci5odG1sIiwKICAgICAgICAgICAgZGJfa2V5PUZhbHNlLAogICAgICAgICkKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICBjb250ZXh0LmxvZ2dlci53YXJuKGYiRmFpbGVkIHRvIGNyZWF0ZSBmZWF0dXJlcyBjb3JyZWxhdGlvbiBwbG90IGR1ZSB0bzoge2V9IikKCiAgICBnY2ZfY2xlYXIocGx0KQogICAgaWYgdXBkYXRlX2RhdGFzZXQgYW5kIHRhYmxlLm1ldGEgYW5kIHRhYmxlLm1ldGEua2luZCA9PSAiZGF0YXNldCI6CiAgICAgICAgZnJvbSBtbHJ1bi5hcnRpZmFjdHMgaW1wb3J0IHVwZGF0ZV9kYXRhc2V0X21ldGEKCiAgICAgICAgdXBkYXRlX2RhdGFzZXRfbWV0YSh0YWJsZS5tZXRhLCBleHRyYV9kYXRhPWV4dHJhX2RhdGEpCg==",
          "commands": [],
          "code_origin": "https://github.com/daniels290813/functions.git#55a79c32be5d233cc11efcf40cd3edbe309bfdef:/home/kali/functions/describe/describe.py"
        },
        "mount_applied": true,
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "describe",
        "tag": "",
        "hash": "ed5b98e5ddfd331d5ee98566a10684b63e1c6cd0",
        "project": "getting-started-tutorial-admin",
        "labels": {
          "author": "Iguazio"
        },
        "categories": [
          "data-analysis"
        ],
        "updated": "2021-08-30T05:14:53.592028+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "summarize",
        "entry_points": {
          "summarize": {
            "name": "summarize",
            "doc": "Summarize a table",
            "parameters": [
              {
                "name": "context",
                "type": "MLClientCtx",
                "doc": "the function context",
                "default": ""
              },
              {
                "name": "table",
                "type": "DataItem",
                "doc": "MLRun input pointing to pandas dataframe (csv/parquet file path)",
                "default": ""
              },
              {
                "name": "label_column",
                "type": "str",
                "doc": "ground truth column label",
                "default": null
              },
              {
                "name": "class_labels",
                "type": "List[str]",
                "doc": "label for each class in tables and plots",
                "default": []
              },
              {
                "name": "plot_hist",
                "type": "bool",
                "doc": "(True) set this to False for large tables",
                "default": true
              },
              {
                "name": "plots_dest",
                "type": "str",
                "doc": "destination folder of summary plots (relative to artifact_path)",
                "default": "plots"
              },
              {
                "name": "update_dataset",
                "doc": "when the table is a registered dataset update the charts in-place",
                "default": false
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 23
          }
        },
        "description": "describe and visualizes dataset stats",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHdhcm5pbmdzCgp3YXJuaW5ncy5zaW1wbGVmaWx0ZXIoYWN0aW9uPSJpZ25vcmUiLCBjYXRlZ29yeT1GdXR1cmVXYXJuaW5nKQoKaW1wb3J0IG9zCmltcG9ydCBudW1weSBhcyBucAppbXBvcnQgcGFuZGFzIGFzIHBkCmltcG9ydCBtYXRwbG90bGliLnB5cGxvdCBhcyBwbHQKaW1wb3J0IHNlYWJvcm4gYXMgc25zCgpmcm9tIG1scnVuLmV4ZWN1dGlvbiBpbXBvcnQgTUxDbGllbnRDdHgKZnJvbSBtbHJ1bi5kYXRhc3RvcmUgaW1wb3J0IERhdGFJdGVtCmZyb20gbWxydW4uYXJ0aWZhY3RzIGltcG9ydCBQbG90QXJ0aWZhY3QsIFRhYmxlQXJ0aWZhY3QKZnJvbSBtbHJ1bi5tbHV0aWxzLnBsb3RzIGltcG9ydCBnY2ZfY2xlYXIKCmZyb20gdHlwaW5nIGltcG9ydCBMaXN0CgpwZC5zZXRfb3B0aW9uKCJkaXNwbGF5LmZsb2F0X2Zvcm1hdCIsIGxhbWJkYSB4OiAiJS4yZiIgJSB4KQoKCmRlZiBzdW1tYXJpemUoCiAgICBjb250ZXh0OiBNTENsaWVudEN0eCwKICAgIHRhYmxlOiBEYXRhSXRlbSwKICAgIGxhYmVsX2NvbHVtbjogc3RyID0gTm9uZSwKICAgIGNsYXNzX2xhYmVsczogTGlzdFtzdHJdID0gW10sCiAgICBwbG90X2hpc3Q6IGJvb2wgPSBUcnVlLAogICAgcGxvdHNfZGVzdDogc3RyID0gInBsb3RzIiwKICAgIHVwZGF0ZV9kYXRhc2V0PUZhbHNlLAopIC0+IE5vbmU6CiAgICAiIiJTdW1tYXJpemUgYSB0YWJsZQoKICAgIDpwYXJhbSBjb250ZXh0OiAgICAgICAgIHRoZSBmdW5jdGlvbiBjb250ZXh0CiAgICA6cGFyYW0gdGFibGU6ICAgICAgICAgICBNTFJ1biBpbnB1dCBwb2ludGluZyB0byBwYW5kYXMgZGF0YWZyYW1lIChjc3YvcGFycXVldCBmaWxlIHBhdGgpCiAgICA6cGFyYW0gbGFiZWxfY29sdW1uOiAgICBncm91bmQgdHJ1dGggY29sdW1uIGxhYmVsCiAgICA6cGFyYW0gY2xhc3NfbGFiZWxzOiAgICBsYWJlbCBmb3IgZWFjaCBjbGFzcyBpbiB0YWJsZXMgYW5kIHBsb3RzCiAgICA6cGFyYW0gcGxvdF9oaXN0OiAgICAgICAoVHJ1ZSkgc2V0IHRoaXMgdG8gRmFsc2UgZm9yIGxhcmdlIHRhYmxlcwogICAgOnBhcmFtIHBsb3RzX2Rlc3Q6ICAgICAgZGVzdGluYXRpb24gZm9sZGVyIG9mIHN1bW1hcnkgcGxvdHMgKHJlbGF0aXZlIHRvIGFydGlmYWN0X3BhdGgpCiAgICA6cGFyYW0gdXBkYXRlX2RhdGFzZXQ6ICB3aGVuIHRoZSB0YWJsZSBpcyBhIHJlZ2lzdGVyZWQgZGF0YXNldCB1cGRhdGUgdGhlIGNoYXJ0cyBpbi1wbGFjZQogICAgIiIiCiAgICBkZiA9IHRhYmxlLmFzX2RmKCkKICAgIGhlYWRlciA9IGRmLmNvbHVtbnMudmFsdWVzCiAgICBleHRyYV9kYXRhID0ge30KCiAgICB0cnk6CiAgICAgICAgZ2NmX2NsZWFyKHBsdCkKICAgICAgICBzbnNwbHQgPSBzbnMucGFpcnBsb3QoZGYsIGh1ZT1sYWJlbF9jb2x1bW4pICAjICwgZGlhZ19rd3M9eyJidyI6IDEuNX0pCiAgICAgICAgZXh0cmFfZGF0YVsiaGlzdG9ncmFtcyJdID0gY29udGV4dC5sb2dfYXJ0aWZhY3QoCiAgICAgICAgICAgIFBsb3RBcnRpZmFjdCgiaGlzdG9ncmFtcyIsIGJvZHk9cGx0LmdjZigpKSwKICAgICAgICAgICAgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS9oaXN0Lmh0bWwiLAogICAgICAgICAgICBkYl9rZXk9RmFsc2UsCiAgICAgICAgKQogICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgIGNvbnRleHQubG9nZ2VyLmVycm9yKGYiRmFpbGVkIHRvIGNyZWF0ZSBwYWlycGxvdCBoaXN0b2dyYW1zIGR1ZSB0bzoge2V9IikKCiAgICB0cnk6CiAgICAgICAgZ2NmX2NsZWFyKHBsdCkKICAgICAgICBwbG90X2NvbHMgPSAzCiAgICAgICAgcGxvdF9yb3dzID0gaW50KChsZW4oaGVhZGVyKSAtIDEpIC8gcGxvdF9jb2xzKSArIDEKICAgICAgICBmaWcsIGF4ID0gcGx0LnN1YnBsb3RzKHBsb3Rfcm93cywgcGxvdF9jb2xzLCBmaWdzaXplPSgxNSwgNCkpCiAgICAgICAgZmlnLnRpZ2h0X2xheW91dChwYWQ9Mi4wKQogICAgICAgIGZvciBpIGluIHJhbmdlKHBsb3Rfcm93cyAqIHBsb3RfY29scyk6CiAgICAgICAgICAgIGlmIGkgPCBsZW4oaGVhZGVyKToKICAgICAgICAgICAgICAgIHNucy52aW9saW5wbG90KAogICAgICAgICAgICAgICAgICAgIHg9ZGZbaGVhZGVyW2ldXSwKICAgICAgICAgICAgICAgICAgICBheD1heFtpbnQoaSAvIHBsb3RfY29scyldW2kgJSBwbG90X2NvbHNdLAogICAgICAgICAgICAgICAgICAgIG9yaWVudD0iaCIsCiAgICAgICAgICAgICAgICAgICAgd2lkdGg9MC43LAogICAgICAgICAgICAgICAgICAgIGlubmVyPSJxdWFydGlsZSIsCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBmaWcuZGVsYXhlcyhheFtpbnQoaSAvIHBsb3RfY29scyldW2kgJSBwbG90X2NvbHNdKQogICAgICAgICAgICBpICs9IDEKICAgICAgICBleHRyYV9kYXRhWyJ2aW9saW4iXSA9IGNvbnRleHQubG9nX2FydGlmYWN0KAogICAgICAgICAgICBQbG90QXJ0aWZhY3QoInZpb2xpbiIsIGJvZHk9cGx0LmdjZigpLCB0aXRsZT0iVmlvbGluIFBsb3QiKSwKICAgICAgICAgICAgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS92aW9saW4uaHRtbCIsCiAgICAgICAgICAgIGRiX2tleT1GYWxzZSwKICAgICAgICApCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgY29udGV4dC5sb2dnZXIud2FybihmIkZhaWxlZCB0byBjcmVhdGUgdmlvbGluIGRpc3RyaWJ1dGlvbiBwbG90cyBkdWUgdG86IHtlfSIpCgogICAgaWYgbGFiZWxfY29sdW1uOgogICAgICAgIGxhYmVscyA9IGRmLnBvcChsYWJlbF9jb2x1bW4pCiAgICAgICAgaW1idGFibGUgPSBsYWJlbHMudmFsdWVfY291bnRzKG5vcm1hbGl6ZT1UcnVlKS5zb3J0X2luZGV4KCkKICAgICAgICB0cnk6CiAgICAgICAgICAgIGdjZl9jbGVhcihwbHQpCiAgICAgICAgICAgIGJhbGFuY2ViYXIgPSBpbWJ0YWJsZS5wbG90KGtpbmQ9ImJhciIsIHRpdGxlPSJjbGFzcyBpbWJhbGFuY2UgLSBsYWJlbHMiKQogICAgICAgICAgICBiYWxhbmNlYmFyLnNldF94bGFiZWwoImNsYXNzIikKICAgICAgICAgICAgYmFsYW5jZWJhci5zZXRfeWxhYmVsKCJwcm9wb3J0aW9uIG9mIHRvdGFsIikKICAgICAgICAgICAgZXh0cmFfZGF0YVsiaW1iYWxhbmNlIl0gPSBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICAgICAgICAgIFBsb3RBcnRpZmFjdCgiaW1iYWxhbmNlIiwgYm9keT1wbHQuZ2NmKCkpLAogICAgICAgICAgICAgICAgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS9pbWJhbGFuY2UuaHRtbCIsCiAgICAgICAgICAgICkKICAgICAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgICAgIGNvbnRleHQubG9nZ2VyLndhcm4oZiJGYWlsZWQgdG8gY3JlYXRlIGNsYXNzIGltYmFsYW5jZSBwbG90IGR1ZSB0bzoge2V9IikKICAgICAgICBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICAgICAgVGFibGVBcnRpZmFjdCgKICAgICAgICAgICAgICAgICJpbWJhbGFuY2Utd2VpZ2h0cy12ZWMiLCBkZj1wZC5EYXRhRnJhbWUoeyJ3ZWlnaHRzIjogaW1idGFibGV9KQogICAgICAgICAgICApLAogICAgICAgICAgICBsb2NhbF9wYXRoPWYie3Bsb3RzX2Rlc3R9L2ltYmFsYW5jZS13ZWlnaHRzLXZlYy5jc3YiLAogICAgICAgICAgICBkYl9rZXk9RmFsc2UsCiAgICAgICAgKQoKICAgIHRibGNvcnIgPSBkZi5jb3JyKCkKICAgIG1hc2sgPSBucC56ZXJvc19saWtlKHRibGNvcnIsIGR0eXBlPW5wLmJvb2wpCiAgICBtYXNrW25wLnRyaXVfaW5kaWNlc19mcm9tKG1hc2spXSA9IFRydWUKCiAgICBkZmNvcnIgPSBwZC5EYXRhRnJhbWUoZGF0YT10Ymxjb3JyLCBjb2x1bW5zPWhlYWRlciwgaW5kZXg9aGVhZGVyKQogICAgZGZjb3JyID0gZGZjb3JyW25wLmFyYW5nZShkZmNvcnIuc2hhcGVbMF0pWzosIE5vbmVdID4gbnAuYXJhbmdlKGRmY29yci5zaGFwZVsxXSldCiAgICBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICBUYWJsZUFydGlmYWN0KCJjb3JyZWxhdGlvbi1tYXRyaXgiLCBkZj10Ymxjb3JyLCB2aXNpYmxlPVRydWUpLAogICAgICAgIGxvY2FsX3BhdGg9ZiJ7cGxvdHNfZGVzdH0vY29ycmVsYXRpb24tbWF0cml4LmNzdiIsCiAgICAgICAgZGJfa2V5PUZhbHNlLAogICAgKQoKICAgIHRyeToKICAgICAgICBnY2ZfY2xlYXIocGx0KQogICAgICAgIGF4ID0gcGx0LmF4ZXMoKQogICAgICAgIHNucy5oZWF0bWFwKHRibGNvcnIsIGF4PWF4LCBtYXNrPW1hc2ssIGFubm90PUZhbHNlLCBjbWFwPXBsdC5jbS5SZWRzKQogICAgICAgIGF4LnNldF90aXRsZSgiZmVhdHVyZXMgY29ycmVsYXRpb24iKQogICAgICAgIGV4dHJhX2RhdGFbImNvcnJlbGF0aW9uIl0gPSBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICAgICAgUGxvdEFydGlmYWN0KCJjb3JyZWxhdGlvbiIsIGJvZHk9cGx0LmdjZigpLCB0aXRsZT0iQ29ycmVsYXRpb24gTWF0cml4IiksCiAgICAgICAgICAgIGxvY2FsX3BhdGg9ZiJ7cGxvdHNfZGVzdH0vY29yci5odG1sIiwKICAgICAgICAgICAgZGJfa2V5PUZhbHNlLAogICAgICAgICkKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICBjb250ZXh0LmxvZ2dlci53YXJuKGYiRmFpbGVkIHRvIGNyZWF0ZSBmZWF0dXJlcyBjb3JyZWxhdGlvbiBwbG90IGR1ZSB0bzoge2V9IikKCiAgICBnY2ZfY2xlYXIocGx0KQogICAgaWYgdXBkYXRlX2RhdGFzZXQgYW5kIHRhYmxlLm1ldGEgYW5kIHRhYmxlLm1ldGEua2luZCA9PSAiZGF0YXNldCI6CiAgICAgICAgZnJvbSBtbHJ1bi5hcnRpZmFjdHMgaW1wb3J0IHVwZGF0ZV9kYXRhc2V0X21ldGEKCiAgICAgICAgdXBkYXRlX2RhdGFzZXRfbWV0YSh0YWJsZS5tZXRhLCBleHRyYV9kYXRhPWV4dHJhX2RhdGEpCg==",
          "commands": [],
          "code_origin": "https://github.com/daniels290813/functions.git#55a79c32be5d233cc11efcf40cd3edbe309bfdef:/home/kali/functions/describe/describe.py"
        },
        "mount_applied": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "test-classifier",
        "tag": "",
        "hash": "b3572df2910d3bc8cafe2e6eebf4d089c086b4ef",
        "project": "getting-started-tutorial-admin",
        "labels": {
          "author": "yjb",
          "framework": "sklearn"
        },
        "categories": [
          "machine-learning",
          "model-testing"
        ],
        "updated": "2021-08-30T05:15:13.536559+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "test_classifier",
        "entry_points": {
          "test_classifier": {
            "name": "test_classifier",
            "doc": "Test one or more classifier models against held-out dataset\n\nUsing held-out test features, evaluates the peformance of the estimated model\n\nCan be part of a kubeflow pipeline as a test step that is run post EDA and\ntraining/validation cycles",
            "parameters": [
              {
                "name": "context",
                "doc": "the function context",
                "default": ""
              },
              {
                "name": "models_path",
                "type": "DataItem",
                "doc": "artifact models representing a file or a folder",
                "default": ""
              },
              {
                "name": "test_set",
                "type": "DataItem",
                "doc": "test features and labels",
                "default": ""
              },
              {
                "name": "label_column",
                "type": "str",
                "doc": "column name for ground truth labels",
                "default": ""
              },
              {
                "name": "score_method",
                "type": "str",
                "doc": "for multiclass classification",
                "default": "micro"
              },
              {
                "name": "plots_dest",
                "type": "str",
                "doc": "dir for test plots",
                "default": ""
              },
              {
                "name": "model_evaluator",
                "doc": "NOT IMPLEMENTED: specific method to generate eval, passed in as string or available in this folder",
                "default": null
              },
              {
                "name": "default_model",
                "type": "str",
                "default": "model.pkl"
              },
              {
                "name": "predictions_column",
                "type": "str",
                "doc": "column name for the predictions column on the resulted artifact",
                "default": "yscore"
              },
              {
                "name": "model_update",
                "doc": "(True) update model, when running as stand alone no need in update",
                "default": true
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 17
          }
        },
        "description": "test a classifier using held-out or new data",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHdhcm5pbmdzCgp3YXJuaW5ncy5maWx0ZXJ3YXJuaW5ncygiaWdub3JlIikKCmltcG9ydCBvcwppbXBvcnQgcGFuZGFzIGFzIHBkCgpmcm9tIG1scnVuLmRhdGFzdG9yZSBpbXBvcnQgRGF0YUl0ZW0KZnJvbSBtbHJ1bi5hcnRpZmFjdHMgaW1wb3J0IGdldF9tb2RlbCwgdXBkYXRlX21vZGVsCmZyb20gbWxydW4ubWx1dGlscy5tb2RlbHMgaW1wb3J0IGV2YWxfbW9kZWxfdjIKZnJvbSBjbG91ZHBpY2tsZSBpbXBvcnQgbG9hZApmcm9tIHVybGxpYi5yZXF1ZXN0IGltcG9ydCB1cmxvcGVuCgoKZGVmIHRlc3RfY2xhc3NpZmllcigKICAgIGNvbnRleHQsCiAgICBtb2RlbHNfcGF0aDogRGF0YUl0ZW0sCiAgICB0ZXN0X3NldDogRGF0YUl0ZW0sCiAgICBsYWJlbF9jb2x1bW46IHN0ciwKICAgIHNjb3JlX21ldGhvZDogc3RyID0gIm1pY3JvIiwKICAgIHBsb3RzX2Rlc3Q6IHN0ciA9ICIiLAogICAgbW9kZWxfZXZhbHVhdG9yPU5vbmUsCiAgICBkZWZhdWx0X21vZGVsOiBzdHIgPSAibW9kZWwucGtsIiwKICAgIHByZWRpY3Rpb25zX2NvbHVtbjogc3RyID0gInlzY29yZSIsCiAgICBtb2RlbF91cGRhdGU9VHJ1ZSwKKSAtPiBOb25lOgogICAgIiIiVGVzdCBvbmUgb3IgbW9yZSBjbGFzc2lmaWVyIG1vZGVscyBhZ2FpbnN0IGhlbGQtb3V0IGRhdGFzZXQKCiAgICBVc2luZyBoZWxkLW91dCB0ZXN0IGZlYXR1cmVzLCBldmFsdWF0ZXMgdGhlIHBlZm9ybWFuY2Ugb2YgdGhlIGVzdGltYXRlZCBtb2RlbAoKICAgIENhbiBiZSBwYXJ0IG9mIGEga3ViZWZsb3cgcGlwZWxpbmUgYXMgYSB0ZXN0IHN0ZXAgdGhhdCBpcyBydW4gcG9zdCBFREEgYW5kCiAgICB0cmFpbmluZy92YWxpZGF0aW9uIGN5Y2xlcwoKICAgIDpwYXJhbSBjb250ZXh0OiAgICAgICAgICAgIHRoZSBmdW5jdGlvbiBjb250ZXh0CiAgICA6cGFyYW0gbW9kZWxzX3BhdGg6ICAgICAgICBhcnRpZmFjdCBtb2RlbHMgcmVwcmVzZW50aW5nIGEgZmlsZSBvciBhIGZvbGRlcgogICAgOnBhcmFtIHRlc3Rfc2V0OiAgICAgICAgICAgdGVzdCBmZWF0dXJlcyBhbmQgbGFiZWxzCiAgICA6cGFyYW0gbGFiZWxfY29sdW1uOiAgICAgICBjb2x1bW4gbmFtZSBmb3IgZ3JvdW5kIHRydXRoIGxhYmVscwogICAgOnBhcmFtIHNjb3JlX21ldGhvZDogICAgICAgZm9yIG11bHRpY2xhc3MgY2xhc3NpZmljYXRpb24KICAgIDpwYXJhbSBwbG90c19kZXN0OiAgICAgICAgIGRpciBmb3IgdGVzdCBwbG90cwogICAgOnBhcmFtIG1vZGVsX2V2YWx1YXRvcjogICAgTk9UIElNUExFTUVOVEVEOiBzcGVjaWZpYyBtZXRob2QgdG8gZ2VuZXJhdGUgZXZhbCwgcGFzc2VkIGluIGFzIHN0cmluZwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3IgYXZhaWxhYmxlIGluIHRoaXMgZm9sZGVyCiAgICA6cGFyYW0gcHJlZGljdGlvbnNfY29sdW1uOiBjb2x1bW4gbmFtZSBmb3IgdGhlIHByZWRpY3Rpb25zIGNvbHVtbiBvbiB0aGUgcmVzdWx0ZWQgYXJ0aWZhY3QKICAgIDpwYXJhbSBtb2RlbF91cGRhdGU6ICAgICAgIChUcnVlKSB1cGRhdGUgbW9kZWwsIHdoZW4gcnVubmluZyBhcyBzdGFuZCBhbG9uZSBubyBuZWVkIGluIHVwZGF0ZQogICAgIiIiCiAgICB4dGVzdCA9IHRlc3Rfc2V0LmFzX2RmKCkKICAgIHl0ZXN0ID0geHRlc3QucG9wKGxhYmVsX2NvbHVtbikKCiAgICB0cnk6CiAgICAgICAgbW9kZWxfZmlsZSwgbW9kZWxfb2JqLCBfID0gZ2V0X21vZGVsKG1vZGVsc19wYXRoLCBzdWZmaXg9Ii5wa2wiKQogICAgICAgIG1vZGVsX29iaiA9IGxvYWQob3Blbihtb2RlbF9maWxlLCAicmIiKSkKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgYToKICAgICAgICByYWlzZSBFeGNlcHRpb24oIm1vZGVsIGxvY2F0aW9uIGxpa2VseSBzcGVjaWZpZWQiKQoKICAgIGV4dHJhX2RhdGEgPSBldmFsX21vZGVsX3YyKGNvbnRleHQsIHh0ZXN0LCB5dGVzdC52YWx1ZXMsIG1vZGVsX29iaikKICAgIGlmIG1vZGVsX29iaiBhbmQgbW9kZWxfdXBkYXRlID09IFRydWU6CiAgICAgICAgdXBkYXRlX21vZGVsKAogICAgICAgICAgICBtb2RlbHNfcGF0aCwKICAgICAgICAgICAgZXh0cmFfZGF0YT1leHRyYV9kYXRhLAogICAgICAgICAgICBtZXRyaWNzPWNvbnRleHQucmVzdWx0cywKICAgICAgICAgICAga2V5X3ByZWZpeD0idmFsaWRhdGlvbi0iLAogICAgICAgICkKCiAgICB5X2hhdCA9IG1vZGVsX29iai5wcmVkaWN0KHh0ZXN0KQogICAgaWYgeV9oYXQubmRpbSA9PSAxIG9yIHlfaGF0LnNoYXBlWzFdID09IDE6CiAgICAgICAgc2NvcmVfbmFtZXMgPSBbcHJlZGljdGlvbnNfY29sdW1uXQogICAgZWxzZToKICAgICAgICBzY29yZV9uYW1lcyA9IFtmIntwcmVkaWN0aW9uc19jb2x1bW59XyIgKyBzdHIoeCkgZm9yIHggaW4gcmFuZ2UoeV9oYXQuc2hhcGVbMV0pXQoKICAgIGRmID0gcGQuY29uY2F0KFt4dGVzdCwgeXRlc3QsIHBkLkRhdGFGcmFtZSh5X2hhdCwgY29sdW1ucz1zY29yZV9uYW1lcyldLCBheGlzPTEpCiAgICBjb250ZXh0LmxvZ19kYXRhc2V0KCJ0ZXN0X3NldF9wcmVkcyIsIGRmPWRmLCBmb3JtYXQ9InBhcnF1ZXQiLCBpbmRleD1GYWxzZSkK",
          "commands": [],
          "code_origin": "https://github.com/daniels290813/functions.git#55a79c32be5d233cc11efcf40cd3edbe309bfdef:/home/kali/functions/test_classifier/test_classifier.py"
        },
        "mount_applied": true,
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "test-classifier",
        "tag": "",
        "hash": "c9893c2e8c2aff73ae0664dd10e929db7f4f4e10",
        "project": "getting-started-tutorial-admin",
        "labels": {
          "author": "yjb",
          "framework": "sklearn"
        },
        "categories": [
          "machine-learning",
          "model-testing"
        ],
        "updated": "2021-08-30T05:15:13.671388+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "test_classifier",
        "entry_points": {
          "test_classifier": {
            "name": "test_classifier",
            "doc": "Test one or more classifier models against held-out dataset\n\nUsing held-out test features, evaluates the peformance of the estimated model\n\nCan be part of a kubeflow pipeline as a test step that is run post EDA and\ntraining/validation cycles",
            "parameters": [
              {
                "name": "context",
                "doc": "the function context",
                "default": ""
              },
              {
                "name": "models_path",
                "type": "DataItem",
                "doc": "artifact models representing a file or a folder",
                "default": ""
              },
              {
                "name": "test_set",
                "type": "DataItem",
                "doc": "test features and labels",
                "default": ""
              },
              {
                "name": "label_column",
                "type": "str",
                "doc": "column name for ground truth labels",
                "default": ""
              },
              {
                "name": "score_method",
                "type": "str",
                "doc": "for multiclass classification",
                "default": "micro"
              },
              {
                "name": "plots_dest",
                "type": "str",
                "doc": "dir for test plots",
                "default": ""
              },
              {
                "name": "model_evaluator",
                "doc": "NOT IMPLEMENTED: specific method to generate eval, passed in as string or available in this folder",
                "default": null
              },
              {
                "name": "default_model",
                "type": "str",
                "default": "model.pkl"
              },
              {
                "name": "predictions_column",
                "type": "str",
                "doc": "column name for the predictions column on the resulted artifact",
                "default": "yscore"
              },
              {
                "name": "model_update",
                "doc": "(True) update model, when running as stand alone no need in update",
                "default": true
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 17
          }
        },
        "description": "test a classifier using held-out or new data",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHdhcm5pbmdzCgp3YXJuaW5ncy5maWx0ZXJ3YXJuaW5ncygiaWdub3JlIikKCmltcG9ydCBvcwppbXBvcnQgcGFuZGFzIGFzIHBkCgpmcm9tIG1scnVuLmRhdGFzdG9yZSBpbXBvcnQgRGF0YUl0ZW0KZnJvbSBtbHJ1bi5hcnRpZmFjdHMgaW1wb3J0IGdldF9tb2RlbCwgdXBkYXRlX21vZGVsCmZyb20gbWxydW4ubWx1dGlscy5tb2RlbHMgaW1wb3J0IGV2YWxfbW9kZWxfdjIKZnJvbSBjbG91ZHBpY2tsZSBpbXBvcnQgbG9hZApmcm9tIHVybGxpYi5yZXF1ZXN0IGltcG9ydCB1cmxvcGVuCgoKZGVmIHRlc3RfY2xhc3NpZmllcigKICAgIGNvbnRleHQsCiAgICBtb2RlbHNfcGF0aDogRGF0YUl0ZW0sCiAgICB0ZXN0X3NldDogRGF0YUl0ZW0sCiAgICBsYWJlbF9jb2x1bW46IHN0ciwKICAgIHNjb3JlX21ldGhvZDogc3RyID0gIm1pY3JvIiwKICAgIHBsb3RzX2Rlc3Q6IHN0ciA9ICIiLAogICAgbW9kZWxfZXZhbHVhdG9yPU5vbmUsCiAgICBkZWZhdWx0X21vZGVsOiBzdHIgPSAibW9kZWwucGtsIiwKICAgIHByZWRpY3Rpb25zX2NvbHVtbjogc3RyID0gInlzY29yZSIsCiAgICBtb2RlbF91cGRhdGU9VHJ1ZSwKKSAtPiBOb25lOgogICAgIiIiVGVzdCBvbmUgb3IgbW9yZSBjbGFzc2lmaWVyIG1vZGVscyBhZ2FpbnN0IGhlbGQtb3V0IGRhdGFzZXQKCiAgICBVc2luZyBoZWxkLW91dCB0ZXN0IGZlYXR1cmVzLCBldmFsdWF0ZXMgdGhlIHBlZm9ybWFuY2Ugb2YgdGhlIGVzdGltYXRlZCBtb2RlbAoKICAgIENhbiBiZSBwYXJ0IG9mIGEga3ViZWZsb3cgcGlwZWxpbmUgYXMgYSB0ZXN0IHN0ZXAgdGhhdCBpcyBydW4gcG9zdCBFREEgYW5kCiAgICB0cmFpbmluZy92YWxpZGF0aW9uIGN5Y2xlcwoKICAgIDpwYXJhbSBjb250ZXh0OiAgICAgICAgICAgIHRoZSBmdW5jdGlvbiBjb250ZXh0CiAgICA6cGFyYW0gbW9kZWxzX3BhdGg6ICAgICAgICBhcnRpZmFjdCBtb2RlbHMgcmVwcmVzZW50aW5nIGEgZmlsZSBvciBhIGZvbGRlcgogICAgOnBhcmFtIHRlc3Rfc2V0OiAgICAgICAgICAgdGVzdCBmZWF0dXJlcyBhbmQgbGFiZWxzCiAgICA6cGFyYW0gbGFiZWxfY29sdW1uOiAgICAgICBjb2x1bW4gbmFtZSBmb3IgZ3JvdW5kIHRydXRoIGxhYmVscwogICAgOnBhcmFtIHNjb3JlX21ldGhvZDogICAgICAgZm9yIG11bHRpY2xhc3MgY2xhc3NpZmljYXRpb24KICAgIDpwYXJhbSBwbG90c19kZXN0OiAgICAgICAgIGRpciBmb3IgdGVzdCBwbG90cwogICAgOnBhcmFtIG1vZGVsX2V2YWx1YXRvcjogICAgTk9UIElNUExFTUVOVEVEOiBzcGVjaWZpYyBtZXRob2QgdG8gZ2VuZXJhdGUgZXZhbCwgcGFzc2VkIGluIGFzIHN0cmluZwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3IgYXZhaWxhYmxlIGluIHRoaXMgZm9sZGVyCiAgICA6cGFyYW0gcHJlZGljdGlvbnNfY29sdW1uOiBjb2x1bW4gbmFtZSBmb3IgdGhlIHByZWRpY3Rpb25zIGNvbHVtbiBvbiB0aGUgcmVzdWx0ZWQgYXJ0aWZhY3QKICAgIDpwYXJhbSBtb2RlbF91cGRhdGU6ICAgICAgIChUcnVlKSB1cGRhdGUgbW9kZWwsIHdoZW4gcnVubmluZyBhcyBzdGFuZCBhbG9uZSBubyBuZWVkIGluIHVwZGF0ZQogICAgIiIiCiAgICB4dGVzdCA9IHRlc3Rfc2V0LmFzX2RmKCkKICAgIHl0ZXN0ID0geHRlc3QucG9wKGxhYmVsX2NvbHVtbikKCiAgICB0cnk6CiAgICAgICAgbW9kZWxfZmlsZSwgbW9kZWxfb2JqLCBfID0gZ2V0X21vZGVsKG1vZGVsc19wYXRoLCBzdWZmaXg9Ii5wa2wiKQogICAgICAgIG1vZGVsX29iaiA9IGxvYWQob3Blbihtb2RlbF9maWxlLCAicmIiKSkKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgYToKICAgICAgICByYWlzZSBFeGNlcHRpb24oIm1vZGVsIGxvY2F0aW9uIGxpa2VseSBzcGVjaWZpZWQiKQoKICAgIGV4dHJhX2RhdGEgPSBldmFsX21vZGVsX3YyKGNvbnRleHQsIHh0ZXN0LCB5dGVzdC52YWx1ZXMsIG1vZGVsX29iaikKICAgIGlmIG1vZGVsX29iaiBhbmQgbW9kZWxfdXBkYXRlID09IFRydWU6CiAgICAgICAgdXBkYXRlX21vZGVsKAogICAgICAgICAgICBtb2RlbHNfcGF0aCwKICAgICAgICAgICAgZXh0cmFfZGF0YT1leHRyYV9kYXRhLAogICAgICAgICAgICBtZXRyaWNzPWNvbnRleHQucmVzdWx0cywKICAgICAgICAgICAga2V5X3ByZWZpeD0idmFsaWRhdGlvbi0iLAogICAgICAgICkKCiAgICB5X2hhdCA9IG1vZGVsX29iai5wcmVkaWN0KHh0ZXN0KQogICAgaWYgeV9oYXQubmRpbSA9PSAxIG9yIHlfaGF0LnNoYXBlWzFdID09IDE6CiAgICAgICAgc2NvcmVfbmFtZXMgPSBbcHJlZGljdGlvbnNfY29sdW1uXQogICAgZWxzZToKICAgICAgICBzY29yZV9uYW1lcyA9IFtmIntwcmVkaWN0aW9uc19jb2x1bW59XyIgKyBzdHIoeCkgZm9yIHggaW4gcmFuZ2UoeV9oYXQuc2hhcGVbMV0pXQoKICAgIGRmID0gcGQuY29uY2F0KFt4dGVzdCwgeXRlc3QsIHBkLkRhdGFGcmFtZSh5X2hhdCwgY29sdW1ucz1zY29yZV9uYW1lcyldLCBheGlzPTEpCiAgICBjb250ZXh0LmxvZ19kYXRhc2V0KCJ0ZXN0X3NldF9wcmVkcyIsIGRmPWRmLCBmb3JtYXQ9InBhcnF1ZXQiLCBpbmRleD1GYWxzZSkK",
          "commands": [],
          "code_origin": "https://github.com/daniels290813/functions.git#55a79c32be5d233cc11efcf40cd3edbe309bfdef:/home/kali/functions/test_classifier/test_classifier.py"
        },
        "mount_applied": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "serving",
      "metadata": {
        "name": "serving",
        "tag": "",
        "project": "getting-started-tutorial-admin",
        "categories": [],
        "hash": "2643261b809a7d4ce647a2f534d97d1c8db3d834",
        "updated": "2021-08-30T05:16:10.071637+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "description": "",
        "min_replicas": 1,
        "max_replicas": 4,
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "config": {
          "metadata.labels.mlrun/class": "serving",
          "spec.serviceType": "NodePort",
          "spec.minReplicas": 1,
          "spec.maxReplicas": 4
        },
        "base_spec": {
          "apiVersion": "nuclio.io/v1",
          "kind": "Function",
          "metadata": {
            "annotations": {
              "nuclio.io/generated_by": "function generated from serving.ipynb"
            },
            "labels": {
              "mlrun/class": "serving",
              "nuclio.io/project-name": "getting-started-tutorial-admin"
            },
            "name": "getting-started-tutorial-admin-serving"
          },
          "spec": {
            "build": {
              "commands": [],
              "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKZnJvbSBjbG91ZHBpY2tsZSBpbXBvcnQgbG9hZAppbXBvcnQgbnVtcHkgYXMgbnAKZnJvbSB0eXBpbmcgaW1wb3J0IExpc3QKaW1wb3J0IG1scnVuCgpjbGFzcyBDbGFzc2lmaWVyTW9kZWwobWxydW4uc2VydmluZy5WMk1vZGVsU2VydmVyKToKICAgIGRlZiBsb2FkKHNlbGYpOgogICAgICAgICIiImxvYWQgYW5kIGluaXRpYWxpemUgdGhlIG1vZGVsIGFuZC9vciBvdGhlciBlbGVtZW50cyIiIgogICAgICAgIG1vZGVsX2ZpbGUsIGV4dHJhX2RhdGEgPSBzZWxmLmdldF9tb2RlbCgnLnBrbCcpCiAgICAgICAgc2VsZi5tb2RlbCA9IGxvYWQob3Blbihtb2RlbF9maWxlLCAncmInKSkKCiAgICBkZWYgcHJlZGljdChzZWxmLCBib2R5OiBkaWN0KSAtPiBMaXN0OgogICAgICAgICIiIkdlbmVyYXRlIG1vZGVsIHByZWRpY3Rpb25zIGZyb20gc2FtcGxlLiIiIgogICAgICAgIGZlYXRzID0gbnAuYXNhcnJheShib2R5WydpbnB1dHMnXSkKICAgICAgICByZXN1bHQ6IG5wLm5kYXJyYXkgPSBzZWxmLm1vZGVsLnByZWRpY3QoZmVhdHMpCiAgICAgICAgcmV0dXJuIHJlc3VsdC50b2xpc3QoKQoKCmZyb20gbWxydW4ucnVudGltZXMgaW1wb3J0IG51Y2xpb19pbml0X2hvb2sKZGVmIGluaXRfY29udGV4dChjb250ZXh0KToKICAgIG51Y2xpb19pbml0X2hvb2soY29udGV4dCwgZ2xvYmFscygpLCAnc2VydmluZ192MicpCgpkZWYgaGFuZGxlcihjb250ZXh0LCBldmVudCk6CiAgICByZXR1cm4gY29udGV4dC5tbHJ1bl9oYW5kbGVyKGNvbnRleHQsIGV2ZW50KQo=",
              "noBaseImagesPull": true,
              "baseImage": "mlrun/mlrun:0.7.0-rc11"
            },
            "env": [
              {
                "name": "V3IO_API",
                "value": "v3io-webapi.default-tenant.svc:8081"
              },
              {
                "name": "V3IO_USERNAME",
                "value": "admin"
              },
              {
                "name": "V3IO_ACCESS_KEY",
                "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              },
              {
                "name": "V3IO_FRAMESD",
                "value": "framesd:8081"
              },
              {
                "name": "MLRUN_DEFAULT_PROJECT",
                "value": "getting-started-tutorial-admin"
              },
              {
                "name": "MLRUN_DBPATH",
                "value": "http://mlrun-api:8080"
              },
              {
                "name": "MLRUN_NAMESPACE",
                "value": "default-tenant"
              },
              {
                "name": "SERVING_SPEC_ENV",
                "value": "{\"function_uri\": \"getting-started-tutorial-admin/serving\", \"version\": \"v2\", \"parameters\": {}, \"graph\": {\"kind\": \"router\", \"full_event\": true, \"routes\": {\"my_model\": {\"kind\": \"task\", \"class_name\": \"ClassifierModel\", \"class_args\": {\"model_path\": \"store://getting-started-tutorial-admin/train-iris-train_iris_model\"}, \"full_event\": true}}}, \"load_mode\": null, \"functions\": {}, \"graph_initializer\": null, \"error_stream\": null, \"track_models\": null, \"default_content_type\": null}"
              }
            ],
            "handler": "03-model-serving:handler",
            "runtime": "python:3.6",
            "volumes": [
              {
                "volume": {
                  "flexVolume": {
                    "driver": "v3io/fuse",
                    "options": {
                      "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
                    }
                  },
                  "name": "v3io"
                },
                "volumeMount": {
                  "mountPath": "/v3io",
                  "name": "v3io",
                  "subPath": ""
                }
              },
              {
                "volume": {
                  "flexVolume": {
                    "driver": "v3io/fuse",
                    "options": {
                      "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
                    }
                  },
                  "name": "v3io"
                },
                "volumeMount": {
                  "mountPath": "/User",
                  "name": "v3io",
                  "subPath": "users/admin"
                }
              }
            ],
            "serviceType": "NodePort",
            "minReplicas": 1,
            "maxReplicas": 4
          }
        },
        "source": "",
        "function_kind": "serving_v2",
        "graph": {
          "kind": "router",
          "full_event": true,
          "routes": {
            "my_model": {
              "kind": "task",
              "class_name": "ClassifierModel",
              "class_args": {
                "model_path": "store://getting-started-tutorial-admin/train-iris-train_iris_model"
              },
              "full_event": true
            }
          }
        },
        "default_class": "ClassifierModel",
        "build": {
          "commands": [],
          "code_origin": "serving.ipynb",
          "origin_filename": "serving.ipynb"
        },
        "secret_sources": [],
        "mount_applied": true,
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "serving",
      "metadata": {
        "name": "serving",
        "tag": "",
        "hash": "2914febb010f9333a5a52a8c81b64d9d7c3ddff8",
        "project": "getting-started-tutorial-admin",
        "categories": [],
        "updated": "2021-08-30T05:18:14.776234+00:00"
      },
      "spec": {
        "command": "http://default-tenant.app.vmdev36.lab.iguazeng.com:31617",
        "args": [],
        "image": "mlrun/mlrun",
        "description": "",
        "min_replicas": 1,
        "max_replicas": 4,
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "base_spec": {
          "apiVersion": "nuclio.io/v1",
          "kind": "Function",
          "metadata": {
            "annotations": {
              "nuclio.io/generated_by": "function generated from /User/demos/getting-started-tutorial/03-model-serving.ipynb"
            },
            "labels": {},
            "name": "serving"
          },
          "spec": {
            "build": {
              "commands": [],
              "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKZnJvbSBjbG91ZHBpY2tsZSBpbXBvcnQgbG9hZAppbXBvcnQgbnVtcHkgYXMgbnAKZnJvbSB0eXBpbmcgaW1wb3J0IExpc3QKaW1wb3J0IG1scnVuCgpjbGFzcyBDbGFzc2lmaWVyTW9kZWwobWxydW4uc2VydmluZy5WMk1vZGVsU2VydmVyKToKICAgIGRlZiBsb2FkKHNlbGYpOgogICAgICAgICIiImxvYWQgYW5kIGluaXRpYWxpemUgdGhlIG1vZGVsIGFuZC9vciBvdGhlciBlbGVtZW50cyIiIgogICAgICAgIG1vZGVsX2ZpbGUsIGV4dHJhX2RhdGEgPSBzZWxmLmdldF9tb2RlbCgnLnBrbCcpCiAgICAgICAgc2VsZi5tb2RlbCA9IGxvYWQob3Blbihtb2RlbF9maWxlLCAncmInKSkKCiAgICBkZWYgcHJlZGljdChzZWxmLCBib2R5OiBkaWN0KSAtPiBMaXN0OgogICAgICAgICIiIkdlbmVyYXRlIG1vZGVsIHByZWRpY3Rpb25zIGZyb20gc2FtcGxlLiIiIgogICAgICAgIGZlYXRzID0gbnAuYXNhcnJheShib2R5WydpbnB1dHMnXSkKICAgICAgICByZXN1bHQ6IG5wLm5kYXJyYXkgPSBzZWxmLm1vZGVsLnByZWRpY3QoZmVhdHMpCiAgICAgICAgcmV0dXJuIHJlc3VsdC50b2xpc3QoKQoKCmZyb20gbWxydW4ucnVudGltZXMgaW1wb3J0IG51Y2xpb19pbml0X2hvb2sKZGVmIGluaXRfY29udGV4dChjb250ZXh0KToKICAgIG51Y2xpb19pbml0X2hvb2soY29udGV4dCwgZ2xvYmFscygpLCAnc2VydmluZ192MicpCgpkZWYgaGFuZGxlcihjb250ZXh0LCBldmVudCk6CiAgICByZXR1cm4gY29udGV4dC5tbHJ1bl9oYW5kbGVyKGNvbnRleHQsIGV2ZW50KQo=",
              "noBaseImagesPull": true
            },
            "env": [],
            "handler": "03-model-serving:handler",
            "runtime": "python:3.6",
            "volumes": []
          }
        },
        "source": "",
        "function_kind": "serving_v2",
        "graph": {
          "kind": "router",
          "full_event": true,
          "routes": {
            "my_model": {
              "kind": "task",
              "class_name": "ClassifierModel",
              "class_args": {
                "model_path": "store://getting-started-tutorial-admin/train-iris-train_iris_model"
              },
              "full_event": true
            }
          }
        },
        "default_class": "ClassifierModel",
        "build": {
          "commands": [],
          "origin_filename": "serving.ipynb"
        },
        "secret_sources": [],
        "mount_applied": true,
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "name": "prep-data",
        "tag": "",
        "hash": "51c5b235e74a326b98d8220f5ea63dfcadfc73e5",
        "project": "getting-started-tutorial-admin",
        "categories": [],
        "updated": "2021-08-30T05:18:20.174978+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/ml-models",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "",
        "entry_points": {
          "prep_data": {
            "name": "prep_data",
            "doc": "",
            "parameters": [
              {
                "name": "context",
                "default": ""
              },
              {
                "name": "source_url",
                "type": "DataItem",
                "default": ""
              },
              {
                "name": "label_column",
                "default": "label"
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 4
          }
        },
        "description": "",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG1scnVuCmRlZiBwcmVwX2RhdGEoY29udGV4dCwgc291cmNlX3VybDogbWxydW4uRGF0YUl0ZW0sIGxhYmVsX2NvbHVtbj0nbGFiZWwnKToKCiAgICBkZiA9IHNvdXJjZV91cmwuYXNfZGYoKQogICAgZGZbbGFiZWxfY29sdW1uXSA9IGRmW2xhYmVsX2NvbHVtbl0uYXN0eXBlKCdjYXRlZ29yeScpLmNhdC5jb2RlcyAgICAKICAgIAogICAgY29udGV4dC5sb2dfcmVzdWx0KCdudW1fcm93cycsIGRmLnNoYXBlWzBdKQoKICAgIGNvbnRleHQubG9nX2RhdGFzZXQoJ2NsZWFuZWRfZGF0YScsIGRmPWRmLCBpbmRleD1GYWxzZSwgZm9ybWF0PSdjc3YnKQoK",
          "commands": [],
          "origin_filename": "prep-data.ipynb"
        },
        "mount_applied": true,
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "prep-data",
        "tag": "",
        "hash": "487ad280f417614f0c9f64399a4754138a9b472a",
        "project": "getting-started-tutorial-admin",
        "categories": [],
        "updated": "2021-08-30T05:18:20.266545+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/ml-models",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "",
        "entry_points": {
          "prep_data": {
            "name": "prep_data",
            "doc": "",
            "parameters": [
              {
                "name": "context",
                "default": ""
              },
              {
                "name": "source_url",
                "type": "DataItem",
                "default": ""
              },
              {
                "name": "label_column",
                "default": "label"
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 4
          }
        },
        "description": "",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG1scnVuCmRlZiBwcmVwX2RhdGEoY29udGV4dCwgc291cmNlX3VybDogbWxydW4uRGF0YUl0ZW0sIGxhYmVsX2NvbHVtbj0nbGFiZWwnKToKCiAgICBkZiA9IHNvdXJjZV91cmwuYXNfZGYoKQogICAgZGZbbGFiZWxfY29sdW1uXSA9IGRmW2xhYmVsX2NvbHVtbl0uYXN0eXBlKCdjYXRlZ29yeScpLmNhdC5jb2RlcyAgICAKICAgIAogICAgY29udGV4dC5sb2dfcmVzdWx0KCdudW1fcm93cycsIGRmLnNoYXBlWzBdKQoKICAgIGNvbnRleHQubG9nX2RhdGFzZXQoJ2NsZWFuZWRfZGF0YScsIGRmPWRmLCBpbmRleD1GYWxzZSwgZm9ybWF0PSdjc3YnKQoK",
          "commands": [],
          "origin_filename": "prep-data.ipynb"
        },
        "mount_applied": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "train-iris",
        "tag": "",
        "hash": "2134b699a9c72ff11998859ac06607c5846b363e",
        "project": "getting-started-tutorial-admin",
        "categories": [],
        "updated": "2021-08-30T05:18:37.683195+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/ml-models",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "train_iris",
        "entry_points": {
          "train_iris": {
            "name": "train_iris",
            "doc": "",
            "parameters": [
              {
                "name": "context",
                "type": "MLClientCtx",
                "default": ""
              },
              {
                "name": "dataset",
                "type": "DataItem",
                "default": ""
              },
              {
                "name": "label_column",
                "type": "str",
                "default": "labels"
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 14
          }
        },
        "description": "",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKZnJvbSBza2xlYXJuIGltcG9ydCBsaW5lYXJfbW9kZWwKZnJvbSBza2xlYXJuIGltcG9ydCBkYXRhc2V0cwpmcm9tIHNrbGVhcm4ubW9kZWxfc2VsZWN0aW9uIGltcG9ydCB0cmFpbl90ZXN0X3NwbGl0CmZyb20gY2xvdWRwaWNrbGUgaW1wb3J0IGR1bXBzCmltcG9ydCBwYW5kYXMgYXMgcGQKCmZyb20gbWxydW4uZXhlY3V0aW9uIGltcG9ydCBNTENsaWVudEN0eApmcm9tIG1scnVuLmRhdGFzdG9yZSBpbXBvcnQgRGF0YUl0ZW0KZnJvbSBtbHJ1bi5tbHV0aWxzLmRhdGEgaW1wb3J0IGdldF9zYW1wbGUKZnJvbSBtbHJ1bi5tbHV0aWxzLnBsb3RzIGltcG9ydCBldmFsX21vZGVsX3YyCgpkZWYgdHJhaW5faXJpcyhjb250ZXh0OiBNTENsaWVudEN0eCwKICAgICAgICAgICAgICAgZGF0YXNldDogRGF0YUl0ZW0sCiAgICAgICAgICAgICAgIGxhYmVsX2NvbHVtbjogc3RyID0gImxhYmVscyIpOgoKICAgIHJhdywgbGFiZWxzLCBoZWFkZXIgPSBnZXRfc2FtcGxlKGRhdGFzZXQsIHNhbXBsZT0tMSwgbGFiZWw9bGFiZWxfY29sdW1uKQogICAgCiAgICBYX3RyYWluLCBYX3Rlc3QsIHlfdHJhaW4sIHlfdGVzdCA9IHRyYWluX3Rlc3Rfc3BsaXQoCiAgICAgICAgcmF3LCBsYWJlbHMsIHRlc3Rfc2l6ZT0wLjIsIHJhbmRvbV9zdGF0ZT00MikKICAgIAogICAgY29udGV4dC5sb2dfZGF0YXNldCgndHJhaW5fc2V0JywgCiAgICAgICAgICAgICAgICAgICAgICAgIGRmPXBkLmNvbmNhdChbWF90cmFpbiwgeV90cmFpbi50b19mcmFtZSgpXSwgYXhpcz0xKSwKICAgICAgICAgICAgICAgICAgICAgICAgZm9ybWF0PSdjc3YnLCBpbmRleD1GYWxzZSwgCiAgICAgICAgICAgICAgICAgICAgICAgIGFydGlmYWN0X3BhdGg9Y29udGV4dC5hcnRpZmFjdF9zdWJwYXRoKCdkYXRhJykpCgogICAgY29udGV4dC5sb2dfZGF0YXNldCgndGVzdF9zZXQnLCAKICAgICAgICAgICAgICAgICAgICAgICAgZGY9cGQuY29uY2F0KFtYX3Rlc3QsIHlfdGVzdC50b19mcmFtZSgpXSwgYXhpcz0xKSwKICAgICAgICAgICAgICAgICAgICAgICAgZm9ybWF0PSdjc3YnLCBpbmRleD1GYWxzZSwgCiAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVscz17ImRhdGEtdHlwZSI6ICJoZWxkLW91dCJ9LAogICAgICAgICAgICAgICAgICAgICAgICBhcnRpZmFjdF9wYXRoPWNvbnRleHQuYXJ0aWZhY3Rfc3VicGF0aCgnZGF0YScpKQogICAgCiAgICBtb2RlbCA9IGxpbmVhcl9tb2RlbC5Mb2dpc3RpY1JlZ3Jlc3Npb24obWF4X2l0ZXI9MTAwMDApCiAgICBtb2RlbC5maXQoWF90cmFpbiwgeV90cmFpbikKICAgIAogICAgZXZhbF9tZXRyaWNzID0gZXZhbF9tb2RlbF92Mihjb250ZXh0LCBYX3Rlc3QsIHlfdGVzdCwgbW9kZWwpCiAgICAKICAgIGNvbnRleHQubG9nX21vZGVsKCJtb2RlbCIsCiAgICAgICAgICAgICAgICAgICAgICBib2R5PWR1bXBzKG1vZGVsKSwKICAgICAgICAgICAgICAgICAgICAgIGFydGlmYWN0X3BhdGg9Y29udGV4dC5hcnRpZmFjdF9zdWJwYXRoKCJtb2RlbHMiKSwKICAgICAgICAgICAgICAgICAgICAgIGV4dHJhX2RhdGE9ZXZhbF9tZXRyaWNzLCAKICAgICAgICAgICAgICAgICAgICAgIG1vZGVsX2ZpbGU9Im1vZGVsLnBrbCIsCiAgICAgICAgICAgICAgICAgICAgICBtZXRyaWNzPWNvbnRleHQucmVzdWx0cywKICAgICAgICAgICAgICAgICAgICAgIGxhYmVscz17ImNsYXNzIjogInNrbGVhcm4ubGluZWFyX21vZGVsLkxvZ2lzdGljUmVncmVzc2lvbiJ9KQoK",
          "commands": [],
          "origin_filename": "train-iris.ipynb"
        },
        "mount_applied": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "test-classifier",
        "tag": "",
        "hash": "cb65fcc47ac25e82ca355c2295f62e81e9e59bac",
        "project": "getting-started-tutorial-admin",
        "labels": {
          "author": "yjb",
          "framework": "sklearn"
        },
        "categories": [
          "machine-learning",
          "model-testing"
        ],
        "updated": "2021-08-30T05:18:55.370709+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "test_classifier",
        "entry_points": {
          "test_classifier": {
            "name": "test_classifier",
            "doc": "Test one or more classifier models against held-out dataset\n\nUsing held-out test features, evaluates the peformance of the estimated model\n\nCan be part of a kubeflow pipeline as a test step that is run post EDA and\ntraining/validation cycles",
            "parameters": [
              {
                "name": "context",
                "doc": "the function context",
                "default": ""
              },
              {
                "name": "models_path",
                "type": "DataItem",
                "doc": "artifact models representing a file or a folder",
                "default": ""
              },
              {
                "name": "test_set",
                "type": "DataItem",
                "doc": "test features and labels",
                "default": ""
              },
              {
                "name": "label_column",
                "type": "str",
                "doc": "column name for ground truth labels",
                "default": ""
              },
              {
                "name": "score_method",
                "type": "str",
                "doc": "for multiclass classification",
                "default": "micro"
              },
              {
                "name": "plots_dest",
                "type": "str",
                "doc": "dir for test plots",
                "default": ""
              },
              {
                "name": "model_evaluator",
                "doc": "NOT IMPLEMENTED: specific method to generate eval, passed in as string or available in this folder",
                "default": null
              },
              {
                "name": "default_model",
                "type": "str",
                "default": "model.pkl"
              },
              {
                "name": "predictions_column",
                "type": "str",
                "doc": "column name for the predictions column on the resulted artifact",
                "default": "yscore"
              },
              {
                "name": "model_update",
                "doc": "(True) update model, when running as stand alone no need in update",
                "default": true
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 17
          }
        },
        "description": "test a classifier using held-out or new data",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHdhcm5pbmdzCgp3YXJuaW5ncy5maWx0ZXJ3YXJuaW5ncygiaWdub3JlIikKCmltcG9ydCBvcwppbXBvcnQgcGFuZGFzIGFzIHBkCgpmcm9tIG1scnVuLmRhdGFzdG9yZSBpbXBvcnQgRGF0YUl0ZW0KZnJvbSBtbHJ1bi5hcnRpZmFjdHMgaW1wb3J0IGdldF9tb2RlbCwgdXBkYXRlX21vZGVsCmZyb20gbWxydW4ubWx1dGlscy5tb2RlbHMgaW1wb3J0IGV2YWxfbW9kZWxfdjIKZnJvbSBjbG91ZHBpY2tsZSBpbXBvcnQgbG9hZApmcm9tIHVybGxpYi5yZXF1ZXN0IGltcG9ydCB1cmxvcGVuCgoKZGVmIHRlc3RfY2xhc3NpZmllcigKICAgIGNvbnRleHQsCiAgICBtb2RlbHNfcGF0aDogRGF0YUl0ZW0sCiAgICB0ZXN0X3NldDogRGF0YUl0ZW0sCiAgICBsYWJlbF9jb2x1bW46IHN0ciwKICAgIHNjb3JlX21ldGhvZDogc3RyID0gIm1pY3JvIiwKICAgIHBsb3RzX2Rlc3Q6IHN0ciA9ICIiLAogICAgbW9kZWxfZXZhbHVhdG9yPU5vbmUsCiAgICBkZWZhdWx0X21vZGVsOiBzdHIgPSAibW9kZWwucGtsIiwKICAgIHByZWRpY3Rpb25zX2NvbHVtbjogc3RyID0gInlzY29yZSIsCiAgICBtb2RlbF91cGRhdGU9VHJ1ZSwKKSAtPiBOb25lOgogICAgIiIiVGVzdCBvbmUgb3IgbW9yZSBjbGFzc2lmaWVyIG1vZGVscyBhZ2FpbnN0IGhlbGQtb3V0IGRhdGFzZXQKCiAgICBVc2luZyBoZWxkLW91dCB0ZXN0IGZlYXR1cmVzLCBldmFsdWF0ZXMgdGhlIHBlZm9ybWFuY2Ugb2YgdGhlIGVzdGltYXRlZCBtb2RlbAoKICAgIENhbiBiZSBwYXJ0IG9mIGEga3ViZWZsb3cgcGlwZWxpbmUgYXMgYSB0ZXN0IHN0ZXAgdGhhdCBpcyBydW4gcG9zdCBFREEgYW5kCiAgICB0cmFpbmluZy92YWxpZGF0aW9uIGN5Y2xlcwoKICAgIDpwYXJhbSBjb250ZXh0OiAgICAgICAgICAgIHRoZSBmdW5jdGlvbiBjb250ZXh0CiAgICA6cGFyYW0gbW9kZWxzX3BhdGg6ICAgICAgICBhcnRpZmFjdCBtb2RlbHMgcmVwcmVzZW50aW5nIGEgZmlsZSBvciBhIGZvbGRlcgogICAgOnBhcmFtIHRlc3Rfc2V0OiAgICAgICAgICAgdGVzdCBmZWF0dXJlcyBhbmQgbGFiZWxzCiAgICA6cGFyYW0gbGFiZWxfY29sdW1uOiAgICAgICBjb2x1bW4gbmFtZSBmb3IgZ3JvdW5kIHRydXRoIGxhYmVscwogICAgOnBhcmFtIHNjb3JlX21ldGhvZDogICAgICAgZm9yIG11bHRpY2xhc3MgY2xhc3NpZmljYXRpb24KICAgIDpwYXJhbSBwbG90c19kZXN0OiAgICAgICAgIGRpciBmb3IgdGVzdCBwbG90cwogICAgOnBhcmFtIG1vZGVsX2V2YWx1YXRvcjogICAgTk9UIElNUExFTUVOVEVEOiBzcGVjaWZpYyBtZXRob2QgdG8gZ2VuZXJhdGUgZXZhbCwgcGFzc2VkIGluIGFzIHN0cmluZwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3IgYXZhaWxhYmxlIGluIHRoaXMgZm9sZGVyCiAgICA6cGFyYW0gcHJlZGljdGlvbnNfY29sdW1uOiBjb2x1bW4gbmFtZSBmb3IgdGhlIHByZWRpY3Rpb25zIGNvbHVtbiBvbiB0aGUgcmVzdWx0ZWQgYXJ0aWZhY3QKICAgIDpwYXJhbSBtb2RlbF91cGRhdGU6ICAgICAgIChUcnVlKSB1cGRhdGUgbW9kZWwsIHdoZW4gcnVubmluZyBhcyBzdGFuZCBhbG9uZSBubyBuZWVkIGluIHVwZGF0ZQogICAgIiIiCiAgICB4dGVzdCA9IHRlc3Rfc2V0LmFzX2RmKCkKICAgIHl0ZXN0ID0geHRlc3QucG9wKGxhYmVsX2NvbHVtbikKCiAgICB0cnk6CiAgICAgICAgbW9kZWxfZmlsZSwgbW9kZWxfb2JqLCBfID0gZ2V0X21vZGVsKG1vZGVsc19wYXRoLCBzdWZmaXg9Ii5wa2wiKQogICAgICAgIG1vZGVsX29iaiA9IGxvYWQob3Blbihtb2RlbF9maWxlLCAicmIiKSkKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgYToKICAgICAgICByYWlzZSBFeGNlcHRpb24oIm1vZGVsIGxvY2F0aW9uIGxpa2VseSBzcGVjaWZpZWQiKQoKICAgIGV4dHJhX2RhdGEgPSBldmFsX21vZGVsX3YyKGNvbnRleHQsIHh0ZXN0LCB5dGVzdC52YWx1ZXMsIG1vZGVsX29iaikKICAgIGlmIG1vZGVsX29iaiBhbmQgbW9kZWxfdXBkYXRlID09IFRydWU6CiAgICAgICAgdXBkYXRlX21vZGVsKAogICAgICAgICAgICBtb2RlbHNfcGF0aCwKICAgICAgICAgICAgZXh0cmFfZGF0YT1leHRyYV9kYXRhLAogICAgICAgICAgICBtZXRyaWNzPWNvbnRleHQucmVzdWx0cywKICAgICAgICAgICAga2V5X3ByZWZpeD0idmFsaWRhdGlvbi0iLAogICAgICAgICkKCiAgICB5X2hhdCA9IG1vZGVsX29iai5wcmVkaWN0KHh0ZXN0KQogICAgaWYgeV9oYXQubmRpbSA9PSAxIG9yIHlfaGF0LnNoYXBlWzFdID09IDE6CiAgICAgICAgc2NvcmVfbmFtZXMgPSBbcHJlZGljdGlvbnNfY29sdW1uXQogICAgZWxzZToKICAgICAgICBzY29yZV9uYW1lcyA9IFtmIntwcmVkaWN0aW9uc19jb2x1bW59XyIgKyBzdHIoeCkgZm9yIHggaW4gcmFuZ2UoeV9oYXQuc2hhcGVbMV0pXQoKICAgIGRmID0gcGQuY29uY2F0KFt4dGVzdCwgeXRlc3QsIHBkLkRhdGFGcmFtZSh5X2hhdCwgY29sdW1ucz1zY29yZV9uYW1lcyldLCBheGlzPTEpCiAgICBjb250ZXh0LmxvZ19kYXRhc2V0KCJ0ZXN0X3NldF9wcmVkcyIsIGRmPWRmLCBmb3JtYXQ9InBhcnF1ZXQiLCBpbmRleD1GYWxzZSkK",
          "commands": []
        },
        "mount_applied": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "serving",
      "metadata": {
        "name": "serving",
        "tag": "",
        "hash": "fe993287db1303da7f24b64cc4f52b4b836c90f0",
        "project": "getting-started-tutorial-admin",
        "categories": [],
        "updated": "2021-08-30T05:19:07.145388+00:00"
      },
      "spec": {
        "command": "http://default-tenant.app.vmdev36.lab.iguazeng.com:31617",
        "args": [],
        "image": "mlrun/mlrun",
        "description": "",
        "min_replicas": 1,
        "max_replicas": 4,
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "config": {
          "metadata.labels.mlrun/class": "serving",
          "spec.serviceType": "NodePort",
          "spec.minReplicas": 1,
          "spec.maxReplicas": 4
        },
        "base_spec": {
          "apiVersion": "nuclio.io/v1",
          "kind": "Function",
          "metadata": {
            "annotations": {
              "nuclio.io/generated_by": "function generated from /User/demos/getting-started-tutorial/03-model-serving.ipynb"
            },
            "labels": {
              "mlrun/class": "serving",
              "nuclio.io/project-name": "getting-started-tutorial-admin"
            },
            "name": "getting-started-tutorial-admin-serving"
          },
          "spec": {
            "build": {
              "commands": [],
              "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKZnJvbSBjbG91ZHBpY2tsZSBpbXBvcnQgbG9hZAppbXBvcnQgbnVtcHkgYXMgbnAKZnJvbSB0eXBpbmcgaW1wb3J0IExpc3QKaW1wb3J0IG1scnVuCgpjbGFzcyBDbGFzc2lmaWVyTW9kZWwobWxydW4uc2VydmluZy5WMk1vZGVsU2VydmVyKToKICAgIGRlZiBsb2FkKHNlbGYpOgogICAgICAgICIiImxvYWQgYW5kIGluaXRpYWxpemUgdGhlIG1vZGVsIGFuZC9vciBvdGhlciBlbGVtZW50cyIiIgogICAgICAgIG1vZGVsX2ZpbGUsIGV4dHJhX2RhdGEgPSBzZWxmLmdldF9tb2RlbCgnLnBrbCcpCiAgICAgICAgc2VsZi5tb2RlbCA9IGxvYWQob3Blbihtb2RlbF9maWxlLCAncmInKSkKCiAgICBkZWYgcHJlZGljdChzZWxmLCBib2R5OiBkaWN0KSAtPiBMaXN0OgogICAgICAgICIiIkdlbmVyYXRlIG1vZGVsIHByZWRpY3Rpb25zIGZyb20gc2FtcGxlLiIiIgogICAgICAgIGZlYXRzID0gbnAuYXNhcnJheShib2R5WydpbnB1dHMnXSkKICAgICAgICByZXN1bHQ6IG5wLm5kYXJyYXkgPSBzZWxmLm1vZGVsLnByZWRpY3QoZmVhdHMpCiAgICAgICAgcmV0dXJuIHJlc3VsdC50b2xpc3QoKQoKCmZyb20gbWxydW4ucnVudGltZXMgaW1wb3J0IG51Y2xpb19pbml0X2hvb2sKZGVmIGluaXRfY29udGV4dChjb250ZXh0KToKICAgIG51Y2xpb19pbml0X2hvb2soY29udGV4dCwgZ2xvYmFscygpLCAnc2VydmluZ192MicpCgpkZWYgaGFuZGxlcihjb250ZXh0LCBldmVudCk6CiAgICByZXR1cm4gY29udGV4dC5tbHJ1bl9oYW5kbGVyKGNvbnRleHQsIGV2ZW50KQo=",
              "noBaseImagesPull": true,
              "baseImage": "mlrun/mlrun:0.7.0-rc11"
            },
            "env": [
              {
                "name": "V3IO_API",
                "value": "v3io-webapi.default-tenant.svc:8081"
              },
              {
                "name": "V3IO_USERNAME",
                "value": "admin"
              },
              {
                "name": "V3IO_ACCESS_KEY",
                "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              },
              {
                "name": "V3IO_FRAMESD",
                "value": "framesd:8081"
              },
              {
                "name": "MLRUN_DEFAULT_PROJECT",
                "value": "getting-started-tutorial-admin"
              },
              {
                "name": "MLRUN_DBPATH",
                "value": "http://mlrun-api:8080"
              },
              {
                "name": "MLRUN_NAMESPACE",
                "value": "default-tenant"
              },
              {
                "name": "SERVING_SPEC_ENV",
                "value": "{\"function_uri\": \"getting-started-tutorial-admin/serving\", \"version\": \"v2\", \"parameters\": {}, \"graph\": {\"kind\": \"router\", \"full_event\": true, \"routes\": {\"my_model\": {\"kind\": \"task\", \"class_name\": \"ClassifierModel\", \"class_args\": {\"model_path\": \"store://getting-started-tutorial-admin/train-iris-train_iris_model\"}, \"full_event\": true}, \"cleaned_data_v1\": {\"kind\": \"task\", \"class_name\": \"ClassifierModel\", \"class_args\": {\"model_path\": \"store://artifacts/getting-started-tutorial-admin/train_model:dd5972cb-cbc2-4998-ab0e-705dba1b307d\"}}}}, \"load_mode\": null, \"functions\": {}, \"graph_initializer\": null, \"error_stream\": null, \"track_models\": null, \"default_content_type\": null}"
              }
            ],
            "handler": "03-model-serving:handler",
            "runtime": "python:3.6",
            "volumes": [
              {
                "volume": {
                  "flexVolume": {
                    "driver": "v3io/fuse",
                    "options": {
                      "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
                    }
                  },
                  "name": "v3io"
                },
                "volumeMount": {
                  "mountPath": "/v3io",
                  "name": "v3io",
                  "subPath": ""
                }
              },
              {
                "volume": {
                  "flexVolume": {
                    "driver": "v3io/fuse",
                    "options": {
                      "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
                    }
                  },
                  "name": "v3io"
                },
                "volumeMount": {
                  "mountPath": "/User",
                  "name": "v3io",
                  "subPath": "users/admin"
                }
              }
            ],
            "serviceType": "NodePort",
            "minReplicas": 1,
            "maxReplicas": 4
          }
        },
        "source": "",
        "function_kind": "serving_v2",
        "graph": {
          "kind": "router",
          "full_event": true,
          "routes": {
            "my_model": {
              "kind": "task",
              "class_name": "ClassifierModel",
              "class_args": {
                "model_path": "store://getting-started-tutorial-admin/train-iris-train_iris_model"
              },
              "full_event": true
            },
            "cleaned_data_v1": {
              "kind": "task",
              "class_name": "ClassifierModel",
              "class_args": {
                "model_path": "store://artifacts/getting-started-tutorial-admin/train_model:dd5972cb-cbc2-4998-ab0e-705dba1b307d"
              }
            }
          }
        },
        "default_class": "ClassifierModel",
        "build": {
          "commands": [],
          "origin_filename": "serving.ipynb"
        },
        "secret_sources": [],
        "mount_applied": true,
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "serving",
      "metadata": {
        "name": "serving",
        "tag": "",
        "hash": "894d30b2a86dbf18e0cee8d6727f4e1f3a67c688",
        "project": "getting-started-tutorial-admin",
        "categories": [],
        "updated": "2021-11-02T08:26:08.097366+00:00"
      },
      "spec": {
        "command": "http://default-tenant.app.vmdev36.lab.iguazeng.com:31617",
        "args": [],
        "image": "mlrun/mlrun",
        "description": "",
        "min_replicas": 1,
        "max_replicas": 4,
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "base_spec": {
          "apiVersion": "nuclio.io/v1",
          "kind": "Function",
          "metadata": {
            "annotations": {
              "nuclio.io/generated_by": "function generated from /User/demos/getting-started-tutorial/03-model-serving.ipynb"
            },
            "labels": {},
            "name": "serving"
          },
          "spec": {
            "build": {
              "commands": [],
              "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKZnJvbSBjbG91ZHBpY2tsZSBpbXBvcnQgbG9hZAppbXBvcnQgbnVtcHkgYXMgbnAKZnJvbSB0eXBpbmcgaW1wb3J0IExpc3QKaW1wb3J0IG1scnVuCgpjbGFzcyBDbGFzc2lmaWVyTW9kZWwobWxydW4uc2VydmluZy5WMk1vZGVsU2VydmVyKToKICAgIGRlZiBsb2FkKHNlbGYpOgogICAgICAgICIiImxvYWQgYW5kIGluaXRpYWxpemUgdGhlIG1vZGVsIGFuZC9vciBvdGhlciBlbGVtZW50cyIiIgogICAgICAgIG1vZGVsX2ZpbGUsIGV4dHJhX2RhdGEgPSBzZWxmLmdldF9tb2RlbCgnLnBrbCcpCiAgICAgICAgc2VsZi5tb2RlbCA9IGxvYWQob3Blbihtb2RlbF9maWxlLCAncmInKSkKCiAgICBkZWYgcHJlZGljdChzZWxmLCBib2R5OiBkaWN0KSAtPiBMaXN0OgogICAgICAgICIiIkdlbmVyYXRlIG1vZGVsIHByZWRpY3Rpb25zIGZyb20gc2FtcGxlLiIiIgogICAgICAgIGZlYXRzID0gbnAuYXNhcnJheShib2R5WydpbnB1dHMnXSkKICAgICAgICByZXN1bHQ6IG5wLm5kYXJyYXkgPSBzZWxmLm1vZGVsLnByZWRpY3QoZmVhdHMpCiAgICAgICAgcmV0dXJuIHJlc3VsdC50b2xpc3QoKQoKCmZyb20gbWxydW4ucnVudGltZXMgaW1wb3J0IG51Y2xpb19pbml0X2hvb2sKZGVmIGluaXRfY29udGV4dChjb250ZXh0KToKICAgIG51Y2xpb19pbml0X2hvb2soY29udGV4dCwgZ2xvYmFscygpLCAnc2VydmluZ192MicpCgpkZWYgaGFuZGxlcihjb250ZXh0LCBldmVudCk6CiAgICByZXR1cm4gY29udGV4dC5tbHJ1bl9oYW5kbGVyKGNvbnRleHQsIGV2ZW50KQo=",
              "noBaseImagesPull": true
            },
            "env": [],
            "handler": "03-model-serving:handler",
            "runtime": "python:3.6",
            "volumes": []
          }
        },
        "source": "",
        "function_kind": "serving_v2",
        "graph": {
          "kind": "router",
          "full_event": true,
          "routes": {
            "my_model": {
              "kind": "task",
              "class_name": "ClassifierModel",
              "class_args": {
                "model_path": "store://getting-started-tutorial-admin/train-iris-train_iris_model"
              },
              "full_event": true
            },
            "cleaned_data_v1": {
              "kind": "task",
              "class_name": "ClassifierModel",
              "class_args": {
                "model_path": "store://artifacts/getting-started-tutorial-admin/train_model:dd5972cb-cbc2-4998-ab0e-705dba1b307d"
              }
            }
          }
        },
        "default_class": "ClassifierModel",
        "build": {
          "commands": [],
          "origin_filename": "serving.ipynb"
        },
        "secret_sources": [],
        "mount_applied": true,
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "name": "prep-data",
        "tag": "latest",
        "hash": "a9e0b216dbfdb33c1d354e2e117c9bf6912ef5cf",
        "project": "getting-started-tutorial-admin",
        "categories": [],
        "updated": "2021-11-23T10:00:00.025552+00:00",
        "credentials": {
          "access_key": "$generate"
        }
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/ml-models",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "name": "v3io",
            "mountPath": "/v3io"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "http://v3io-webapi:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "1bc19fc2-2089-4c9c-a622-2eaa9868382c"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "http://framesd:8080"
          }
        ],
        "default_handler": "",
        "entry_points": {
          "prep_data": {
            "name": "prep_data",
            "doc": "",
            "parameters": [
              {
                "name": "context",
                "default": ""
              },
              {
                "name": "source_url",
                "type": "DataItem",
                "default": ""
              },
              {
                "name": "label_column",
                "default": "label"
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 4
          }
        },
        "description": "",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG1scnVuCmRlZiBwcmVwX2RhdGEoY29udGV4dCwgc291cmNlX3VybDogbWxydW4uRGF0YUl0ZW0sIGxhYmVsX2NvbHVtbj0nbGFiZWwnKToKCiAgICBkZiA9IHNvdXJjZV91cmwuYXNfZGYoKQogICAgZGZbbGFiZWxfY29sdW1uXSA9IGRmW2xhYmVsX2NvbHVtbl0uYXN0eXBlKCdjYXRlZ29yeScpLmNhdC5jb2RlcyAgICAKICAgIAogICAgY29udGV4dC5sb2dfcmVzdWx0KCdudW1fcm93cycsIGRmLnNoYXBlWzBdKQoKICAgIGNvbnRleHQubG9nX2RhdGFzZXQoJ2NsZWFuZWRfZGF0YScsIGRmPWRmLCBpbmRleD1GYWxzZSwgZm9ybWF0PSdjc3YnKQoK",
          "commands": [],
          "origin_filename": "prep-data.ipynb"
        },
        "disable_auto_mount": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": {}
    },
    {
      "kind": "job",
      "metadata": {
        "name": "train-iris",
        "tag": "",
        "hash": "7d463f6302d1f9a501b8c8c2adb56395b527fb6a",
        "project": "getting-started-tutorial-admin",
        "categories": [],
        "updated": "2021-11-08T16:20:38.895059+00:00",
        "credentials": {
          "access_key": "$generate"
        }
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/ml-models",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "name": "v3io",
            "mountPath": "/v3io"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "http://v3io-webapi:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "1bc19fc2-2089-4c9c-a622-2eaa9868382c"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "http://framesd:8080"
          }
        ],
        "default_handler": "train_iris",
        "entry_points": {
          "train_iris": {
            "name": "train_iris",
            "doc": "",
            "parameters": [
              {
                "name": "context",
                "type": "MLClientCtx",
                "default": ""
              },
              {
                "name": "dataset",
                "type": "DataItem",
                "default": ""
              },
              {
                "name": "label_column",
                "type": "str",
                "default": "labels"
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 14
          }
        },
        "description": "",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKZnJvbSBza2xlYXJuIGltcG9ydCBsaW5lYXJfbW9kZWwKZnJvbSBza2xlYXJuIGltcG9ydCBkYXRhc2V0cwpmcm9tIHNrbGVhcm4ubW9kZWxfc2VsZWN0aW9uIGltcG9ydCB0cmFpbl90ZXN0X3NwbGl0CmZyb20gY2xvdWRwaWNrbGUgaW1wb3J0IGR1bXBzCmltcG9ydCBwYW5kYXMgYXMgcGQKCmZyb20gbWxydW4uZXhlY3V0aW9uIGltcG9ydCBNTENsaWVudEN0eApmcm9tIG1scnVuLmRhdGFzdG9yZSBpbXBvcnQgRGF0YUl0ZW0KZnJvbSBtbHJ1bi5tbHV0aWxzLmRhdGEgaW1wb3J0IGdldF9zYW1wbGUKZnJvbSBtbHJ1bi5tbHV0aWxzLnBsb3RzIGltcG9ydCBldmFsX21vZGVsX3YyCgpkZWYgdHJhaW5faXJpcyhjb250ZXh0OiBNTENsaWVudEN0eCwKICAgICAgICAgICAgICAgZGF0YXNldDogRGF0YUl0ZW0sCiAgICAgICAgICAgICAgIGxhYmVsX2NvbHVtbjogc3RyID0gImxhYmVscyIpOgoKICAgIHJhdywgbGFiZWxzLCBoZWFkZXIgPSBnZXRfc2FtcGxlKGRhdGFzZXQsIHNhbXBsZT0tMSwgbGFiZWw9bGFiZWxfY29sdW1uKQogICAgCiAgICBYX3RyYWluLCBYX3Rlc3QsIHlfdHJhaW4sIHlfdGVzdCA9IHRyYWluX3Rlc3Rfc3BsaXQoCiAgICAgICAgcmF3LCBsYWJlbHMsIHRlc3Rfc2l6ZT0wLjIsIHJhbmRvbV9zdGF0ZT00MikKICAgIAogICAgY29udGV4dC5sb2dfZGF0YXNldCgndHJhaW5fc2V0JywgCiAgICAgICAgICAgICAgICAgICAgICAgIGRmPXBkLmNvbmNhdChbWF90cmFpbiwgeV90cmFpbi50b19mcmFtZSgpXSwgYXhpcz0xKSwKICAgICAgICAgICAgICAgICAgICAgICAgZm9ybWF0PSdjc3YnLCBpbmRleD1GYWxzZSwgCiAgICAgICAgICAgICAgICAgICAgICAgIGFydGlmYWN0X3BhdGg9Y29udGV4dC5hcnRpZmFjdF9zdWJwYXRoKCdkYXRhJykpCgogICAgY29udGV4dC5sb2dfZGF0YXNldCgndGVzdF9zZXQnLCAKICAgICAgICAgICAgICAgICAgICAgICAgZGY9cGQuY29uY2F0KFtYX3Rlc3QsIHlfdGVzdC50b19mcmFtZSgpXSwgYXhpcz0xKSwKICAgICAgICAgICAgICAgICAgICAgICAgZm9ybWF0PSdjc3YnLCBpbmRleD1GYWxzZSwgCiAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVscz17ImRhdGEtdHlwZSI6ICJoZWxkLW91dCJ9LAogICAgICAgICAgICAgICAgICAgICAgICBhcnRpZmFjdF9wYXRoPWNvbnRleHQuYXJ0aWZhY3Rfc3VicGF0aCgnZGF0YScpKQogICAgCiAgICBtb2RlbCA9IGxpbmVhcl9tb2RlbC5Mb2dpc3RpY1JlZ3Jlc3Npb24obWF4X2l0ZXI9MTAwMDApCiAgICBtb2RlbC5maXQoWF90cmFpbiwgeV90cmFpbikKICAgIAogICAgZXZhbF9tZXRyaWNzID0gZXZhbF9tb2RlbF92Mihjb250ZXh0LCBYX3Rlc3QsIHlfdGVzdCwgbW9kZWwpCiAgICAKICAgIGNvbnRleHQubG9nX21vZGVsKCJtb2RlbCIsCiAgICAgICAgICAgICAgICAgICAgICBib2R5PWR1bXBzKG1vZGVsKSwKICAgICAgICAgICAgICAgICAgICAgIGFydGlmYWN0X3BhdGg9Y29udGV4dC5hcnRpZmFjdF9zdWJwYXRoKCJtb2RlbHMiKSwKICAgICAgICAgICAgICAgICAgICAgIGV4dHJhX2RhdGE9ZXZhbF9tZXRyaWNzLCAKICAgICAgICAgICAgICAgICAgICAgIG1vZGVsX2ZpbGU9Im1vZGVsLnBrbCIsCiAgICAgICAgICAgICAgICAgICAgICBtZXRyaWNzPWNvbnRleHQucmVzdWx0cywKICAgICAgICAgICAgICAgICAgICAgIGxhYmVscz17ImNsYXNzIjogInNrbGVhcm4ubGluZWFyX21vZGVsLkxvZ2lzdGljUmVncmVzc2lvbiJ9KQoK",
          "commands": [],
          "origin_filename": "train-iris.ipynb"
        },
        "disable_auto_mount": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "describe",
        "tag": "",
        "hash": "7fdf34b88cc9ea054de8d273df59a248910fce62",
        "project": "getting-started-tutorial-admin",
        "labels": {
          "author": "Iguazio"
        },
        "categories": [
          "data-analysis"
        ],
        "updated": "2021-11-08T16:20:45.979095+00:00",
        "credentials": {
          "access_key": "$generate"
        }
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "name": "v3io",
            "mountPath": "/v3io"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "http://v3io-webapi:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "1bc19fc2-2089-4c9c-a622-2eaa9868382c"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "http://framesd:8080"
          }
        ],
        "default_handler": "summarize",
        "entry_points": {
          "summarize": {
            "name": "summarize",
            "doc": "Summarize a table",
            "parameters": [
              {
                "name": "context",
                "type": "MLClientCtx",
                "doc": "the function context",
                "default": ""
              },
              {
                "name": "table",
                "type": "DataItem",
                "doc": "MLRun input pointing to pandas dataframe (csv/parquet file path)",
                "default": ""
              },
              {
                "name": "label_column",
                "type": "str",
                "doc": "ground truth column label",
                "default": null
              },
              {
                "name": "class_labels",
                "type": "List[str]",
                "doc": "label for each class in tables and plots",
                "default": []
              },
              {
                "name": "plot_hist",
                "type": "bool",
                "doc": "(True) set this to False for large tables",
                "default": true
              },
              {
                "name": "plots_dest",
                "type": "str",
                "doc": "destination folder of summary plots (relative to artifact_path)",
                "default": "plots"
              },
              {
                "name": "update_dataset",
                "doc": "when the table is a registered dataset update the charts in-place",
                "default": false
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 23
          }
        },
        "description": "describe and visualizes dataset stats",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHdhcm5pbmdzCgp3YXJuaW5ncy5zaW1wbGVmaWx0ZXIoYWN0aW9uPSJpZ25vcmUiLCBjYXRlZ29yeT1GdXR1cmVXYXJuaW5nKQoKaW1wb3J0IG9zCmltcG9ydCBudW1weSBhcyBucAppbXBvcnQgcGFuZGFzIGFzIHBkCmltcG9ydCBtYXRwbG90bGliLnB5cGxvdCBhcyBwbHQKaW1wb3J0IHNlYWJvcm4gYXMgc25zCgpmcm9tIG1scnVuLmV4ZWN1dGlvbiBpbXBvcnQgTUxDbGllbnRDdHgKZnJvbSBtbHJ1bi5kYXRhc3RvcmUgaW1wb3J0IERhdGFJdGVtCmZyb20gbWxydW4uYXJ0aWZhY3RzIGltcG9ydCBQbG90QXJ0aWZhY3QsIFRhYmxlQXJ0aWZhY3QKZnJvbSBtbHJ1bi5tbHV0aWxzLnBsb3RzIGltcG9ydCBnY2ZfY2xlYXIKCmZyb20gdHlwaW5nIGltcG9ydCBMaXN0CgpwZC5zZXRfb3B0aW9uKCJkaXNwbGF5LmZsb2F0X2Zvcm1hdCIsIGxhbWJkYSB4OiAiJS4yZiIgJSB4KQoKCmRlZiBzdW1tYXJpemUoCiAgICBjb250ZXh0OiBNTENsaWVudEN0eCwKICAgIHRhYmxlOiBEYXRhSXRlbSwKICAgIGxhYmVsX2NvbHVtbjogc3RyID0gTm9uZSwKICAgIGNsYXNzX2xhYmVsczogTGlzdFtzdHJdID0gW10sCiAgICBwbG90X2hpc3Q6IGJvb2wgPSBUcnVlLAogICAgcGxvdHNfZGVzdDogc3RyID0gInBsb3RzIiwKICAgIHVwZGF0ZV9kYXRhc2V0PUZhbHNlLAopIC0+IE5vbmU6CiAgICAiIiJTdW1tYXJpemUgYSB0YWJsZQoKICAgIDpwYXJhbSBjb250ZXh0OiAgICAgICAgIHRoZSBmdW5jdGlvbiBjb250ZXh0CiAgICA6cGFyYW0gdGFibGU6ICAgICAgICAgICBNTFJ1biBpbnB1dCBwb2ludGluZyB0byBwYW5kYXMgZGF0YWZyYW1lIChjc3YvcGFycXVldCBmaWxlIHBhdGgpCiAgICA6cGFyYW0gbGFiZWxfY29sdW1uOiAgICBncm91bmQgdHJ1dGggY29sdW1uIGxhYmVsCiAgICA6cGFyYW0gY2xhc3NfbGFiZWxzOiAgICBsYWJlbCBmb3IgZWFjaCBjbGFzcyBpbiB0YWJsZXMgYW5kIHBsb3RzCiAgICA6cGFyYW0gcGxvdF9oaXN0OiAgICAgICAoVHJ1ZSkgc2V0IHRoaXMgdG8gRmFsc2UgZm9yIGxhcmdlIHRhYmxlcwogICAgOnBhcmFtIHBsb3RzX2Rlc3Q6ICAgICAgZGVzdGluYXRpb24gZm9sZGVyIG9mIHN1bW1hcnkgcGxvdHMgKHJlbGF0aXZlIHRvIGFydGlmYWN0X3BhdGgpCiAgICA6cGFyYW0gdXBkYXRlX2RhdGFzZXQ6ICB3aGVuIHRoZSB0YWJsZSBpcyBhIHJlZ2lzdGVyZWQgZGF0YXNldCB1cGRhdGUgdGhlIGNoYXJ0cyBpbi1wbGFjZQogICAgIiIiCiAgICBkZiA9IHRhYmxlLmFzX2RmKCkKICAgIGhlYWRlciA9IGRmLmNvbHVtbnMudmFsdWVzCiAgICBleHRyYV9kYXRhID0ge30KCiAgICB0cnk6CiAgICAgICAgZ2NmX2NsZWFyKHBsdCkKICAgICAgICBzbnNwbHQgPSBzbnMucGFpcnBsb3QoZGYsIGh1ZT1sYWJlbF9jb2x1bW4pICAjICwgZGlhZ19rd3M9eyJidyI6IDEuNX0pCiAgICAgICAgZXh0cmFfZGF0YVsiaGlzdG9ncmFtcyJdID0gY29udGV4dC5sb2dfYXJ0aWZhY3QoCiAgICAgICAgICAgIFBsb3RBcnRpZmFjdCgiaGlzdG9ncmFtcyIsIGJvZHk9cGx0LmdjZigpKSwKICAgICAgICAgICAgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS9oaXN0Lmh0bWwiLAogICAgICAgICAgICBkYl9rZXk9RmFsc2UsCiAgICAgICAgKQogICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgIGNvbnRleHQubG9nZ2VyLmVycm9yKGYiRmFpbGVkIHRvIGNyZWF0ZSBwYWlycGxvdCBoaXN0b2dyYW1zIGR1ZSB0bzoge2V9IikKCiAgICB0cnk6CiAgICAgICAgZ2NmX2NsZWFyKHBsdCkKICAgICAgICBwbG90X2NvbHMgPSAzCiAgICAgICAgcGxvdF9yb3dzID0gaW50KChsZW4oaGVhZGVyKSAtIDEpIC8gcGxvdF9jb2xzKSArIDEKICAgICAgICBmaWcsIGF4ID0gcGx0LnN1YnBsb3RzKHBsb3Rfcm93cywgcGxvdF9jb2xzLCBmaWdzaXplPSgxNSwgNCkpCiAgICAgICAgZmlnLnRpZ2h0X2xheW91dChwYWQ9Mi4wKQogICAgICAgIGZvciBpIGluIHJhbmdlKHBsb3Rfcm93cyAqIHBsb3RfY29scyk6CiAgICAgICAgICAgIGlmIGkgPCBsZW4oaGVhZGVyKToKICAgICAgICAgICAgICAgIHNucy52aW9saW5wbG90KAogICAgICAgICAgICAgICAgICAgIHg9ZGZbaGVhZGVyW2ldXSwKICAgICAgICAgICAgICAgICAgICBheD1heFtpbnQoaSAvIHBsb3RfY29scyldW2kgJSBwbG90X2NvbHNdLAogICAgICAgICAgICAgICAgICAgIG9yaWVudD0iaCIsCiAgICAgICAgICAgICAgICAgICAgd2lkdGg9MC43LAogICAgICAgICAgICAgICAgICAgIGlubmVyPSJxdWFydGlsZSIsCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBmaWcuZGVsYXhlcyhheFtpbnQoaSAvIHBsb3RfY29scyldW2kgJSBwbG90X2NvbHNdKQogICAgICAgICAgICBpICs9IDEKICAgICAgICBleHRyYV9kYXRhWyJ2aW9saW4iXSA9IGNvbnRleHQubG9nX2FydGlmYWN0KAogICAgICAgICAgICBQbG90QXJ0aWZhY3QoInZpb2xpbiIsIGJvZHk9cGx0LmdjZigpLCB0aXRsZT0iVmlvbGluIFBsb3QiKSwKICAgICAgICAgICAgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS92aW9saW4uaHRtbCIsCiAgICAgICAgICAgIGRiX2tleT1GYWxzZSwKICAgICAgICApCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgY29udGV4dC5sb2dnZXIud2FybihmIkZhaWxlZCB0byBjcmVhdGUgdmlvbGluIGRpc3RyaWJ1dGlvbiBwbG90cyBkdWUgdG86IHtlfSIpCgogICAgaWYgbGFiZWxfY29sdW1uOgogICAgICAgIGxhYmVscyA9IGRmLnBvcChsYWJlbF9jb2x1bW4pCiAgICAgICAgaW1idGFibGUgPSBsYWJlbHMudmFsdWVfY291bnRzKG5vcm1hbGl6ZT1UcnVlKS5zb3J0X2luZGV4KCkKICAgICAgICB0cnk6CiAgICAgICAgICAgIGdjZl9jbGVhcihwbHQpCiAgICAgICAgICAgIGJhbGFuY2ViYXIgPSBpbWJ0YWJsZS5wbG90KGtpbmQ9ImJhciIsIHRpdGxlPSJjbGFzcyBpbWJhbGFuY2UgLSBsYWJlbHMiKQogICAgICAgICAgICBiYWxhbmNlYmFyLnNldF94bGFiZWwoImNsYXNzIikKICAgICAgICAgICAgYmFsYW5jZWJhci5zZXRfeWxhYmVsKCJwcm9wb3J0aW9uIG9mIHRvdGFsIikKICAgICAgICAgICAgZXh0cmFfZGF0YVsiaW1iYWxhbmNlIl0gPSBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICAgICAgICAgIFBsb3RBcnRpZmFjdCgiaW1iYWxhbmNlIiwgYm9keT1wbHQuZ2NmKCkpLAogICAgICAgICAgICAgICAgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS9pbWJhbGFuY2UuaHRtbCIsCiAgICAgICAgICAgICkKICAgICAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgICAgIGNvbnRleHQubG9nZ2VyLndhcm4oZiJGYWlsZWQgdG8gY3JlYXRlIGNsYXNzIGltYmFsYW5jZSBwbG90IGR1ZSB0bzoge2V9IikKICAgICAgICBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICAgICAgVGFibGVBcnRpZmFjdCgKICAgICAgICAgICAgICAgICJpbWJhbGFuY2Utd2VpZ2h0cy12ZWMiLCBkZj1wZC5EYXRhRnJhbWUoeyJ3ZWlnaHRzIjogaW1idGFibGV9KQogICAgICAgICAgICApLAogICAgICAgICAgICBsb2NhbF9wYXRoPWYie3Bsb3RzX2Rlc3R9L2ltYmFsYW5jZS13ZWlnaHRzLXZlYy5jc3YiLAogICAgICAgICAgICBkYl9rZXk9RmFsc2UsCiAgICAgICAgKQoKICAgIHRibGNvcnIgPSBkZi5jb3JyKCkKICAgIG1hc2sgPSBucC56ZXJvc19saWtlKHRibGNvcnIsIGR0eXBlPW5wLmJvb2wpCiAgICBtYXNrW25wLnRyaXVfaW5kaWNlc19mcm9tKG1hc2spXSA9IFRydWUKCiAgICBkZmNvcnIgPSBwZC5EYXRhRnJhbWUoZGF0YT10Ymxjb3JyLCBjb2x1bW5zPWhlYWRlciwgaW5kZXg9aGVhZGVyKQogICAgZGZjb3JyID0gZGZjb3JyW25wLmFyYW5nZShkZmNvcnIuc2hhcGVbMF0pWzosIE5vbmVdID4gbnAuYXJhbmdlKGRmY29yci5zaGFwZVsxXSldCiAgICBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICBUYWJsZUFydGlmYWN0KCJjb3JyZWxhdGlvbi1tYXRyaXgiLCBkZj10Ymxjb3JyLCB2aXNpYmxlPVRydWUpLAogICAgICAgIGxvY2FsX3BhdGg9ZiJ7cGxvdHNfZGVzdH0vY29ycmVsYXRpb24tbWF0cml4LmNzdiIsCiAgICAgICAgZGJfa2V5PUZhbHNlLAogICAgKQoKICAgIHRyeToKICAgICAgICBnY2ZfY2xlYXIocGx0KQogICAgICAgIGF4ID0gcGx0LmF4ZXMoKQogICAgICAgIHNucy5oZWF0bWFwKHRibGNvcnIsIGF4PWF4LCBtYXNrPW1hc2ssIGFubm90PUZhbHNlLCBjbWFwPXBsdC5jbS5SZWRzKQogICAgICAgIGF4LnNldF90aXRsZSgiZmVhdHVyZXMgY29ycmVsYXRpb24iKQogICAgICAgIGV4dHJhX2RhdGFbImNvcnJlbGF0aW9uIl0gPSBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICAgICAgUGxvdEFydGlmYWN0KCJjb3JyZWxhdGlvbiIsIGJvZHk9cGx0LmdjZigpLCB0aXRsZT0iQ29ycmVsYXRpb24gTWF0cml4IiksCiAgICAgICAgICAgIGxvY2FsX3BhdGg9ZiJ7cGxvdHNfZGVzdH0vY29yci5odG1sIiwKICAgICAgICAgICAgZGJfa2V5PUZhbHNlLAogICAgICAgICkKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICBjb250ZXh0LmxvZ2dlci53YXJuKGYiRmFpbGVkIHRvIGNyZWF0ZSBmZWF0dXJlcyBjb3JyZWxhdGlvbiBwbG90IGR1ZSB0bzoge2V9IikKCiAgICBnY2ZfY2xlYXIocGx0KQogICAgaWYgdXBkYXRlX2RhdGFzZXQgYW5kIHRhYmxlLm1ldGEgYW5kIHRhYmxlLm1ldGEua2luZCA9PSAiZGF0YXNldCI6CiAgICAgICAgZnJvbSBtbHJ1bi5hcnRpZmFjdHMgaW1wb3J0IHVwZGF0ZV9kYXRhc2V0X21ldGEKCiAgICAgICAgdXBkYXRlX2RhdGFzZXRfbWV0YSh0YWJsZS5tZXRhLCBleHRyYV9kYXRhPWV4dHJhX2RhdGEpCg==",
          "commands": [],
          "code_origin": "https://github.com/daniels290813/functions.git#55a79c32be5d233cc11efcf40cd3edbe309bfdef:/home/kali/functions/describe/describe.py"
        },
        "disable_auto_mount": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "serving",
      "metadata": {
        "name": "serving",
        "tag": "latest",
        "hash": "c0e3488819d259f0eb145c373d29d6286ac0140d",
        "project": "getting-started-tutorial-admin",
        "categories": [],
        "updated": "2021-11-08T16:21:00.683647+00:00",
        "credentials": {
          "access_key": "$generate"
        }
      },
      "spec": {
        "command": "http://default-tenant.app.vmdev36.lab.iguazeng.com:31617",
        "args": [],
        "image": "mlrun/mlrun",
        "description": "",
        "min_replicas": 1,
        "max_replicas": 4,
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "name": "v3io",
            "mountPath": "/v3io"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "http://v3io-webapi:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "1bc19fc2-2089-4c9c-a622-2eaa9868382c"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "http://framesd:8080"
          }
        ],
        "base_spec": {
          "apiVersion": "nuclio.io/v1",
          "kind": "Function",
          "metadata": {
            "annotations": {
              "nuclio.io/generated_by": "function generated from /User/demos/getting-started-tutorial/03-model-serving.ipynb"
            },
            "labels": {},
            "name": "serving"
          },
          "spec": {
            "build": {
              "commands": [],
              "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKZnJvbSBjbG91ZHBpY2tsZSBpbXBvcnQgbG9hZAppbXBvcnQgbnVtcHkgYXMgbnAKZnJvbSB0eXBpbmcgaW1wb3J0IExpc3QKaW1wb3J0IG1scnVuCgpjbGFzcyBDbGFzc2lmaWVyTW9kZWwobWxydW4uc2VydmluZy5WMk1vZGVsU2VydmVyKToKICAgIGRlZiBsb2FkKHNlbGYpOgogICAgICAgICIiImxvYWQgYW5kIGluaXRpYWxpemUgdGhlIG1vZGVsIGFuZC9vciBvdGhlciBlbGVtZW50cyIiIgogICAgICAgIG1vZGVsX2ZpbGUsIGV4dHJhX2RhdGEgPSBzZWxmLmdldF9tb2RlbCgnLnBrbCcpCiAgICAgICAgc2VsZi5tb2RlbCA9IGxvYWQob3Blbihtb2RlbF9maWxlLCAncmInKSkKCiAgICBkZWYgcHJlZGljdChzZWxmLCBib2R5OiBkaWN0KSAtPiBMaXN0OgogICAgICAgICIiIkdlbmVyYXRlIG1vZGVsIHByZWRpY3Rpb25zIGZyb20gc2FtcGxlLiIiIgogICAgICAgIGZlYXRzID0gbnAuYXNhcnJheShib2R5WydpbnB1dHMnXSkKICAgICAgICByZXN1bHQ6IG5wLm5kYXJyYXkgPSBzZWxmLm1vZGVsLnByZWRpY3QoZmVhdHMpCiAgICAgICAgcmV0dXJuIHJlc3VsdC50b2xpc3QoKQoKCmZyb20gbWxydW4ucnVudGltZXMgaW1wb3J0IG51Y2xpb19pbml0X2hvb2sKZGVmIGluaXRfY29udGV4dChjb250ZXh0KToKICAgIG51Y2xpb19pbml0X2hvb2soY29udGV4dCwgZ2xvYmFscygpLCAnc2VydmluZ192MicpCgpkZWYgaGFuZGxlcihjb250ZXh0LCBldmVudCk6CiAgICByZXR1cm4gY29udGV4dC5tbHJ1bl9oYW5kbGVyKGNvbnRleHQsIGV2ZW50KQo=",
              "noBaseImagesPull": true
            },
            "env": [],
            "handler": "03-model-serving:handler",
            "runtime": "python:3.6",
            "volumes": []
          }
        },
        "source": "",
        "function_kind": "serving_v2",
        "graph": {
          "kind": "router",
          "full_event": true,
          "routes": {
            "my_model": {
              "kind": "task",
              "class_name": "ClassifierModel",
              "class_args": {
                "model_path": "store://getting-started-tutorial-admin/train-iris-train_iris_model"
              },
              "full_event": true
            },
            "cleaned_data_v1": {
              "kind": "task",
              "class_name": "ClassifierModel",
              "class_args": {
                "model_path": "store://artifacts/getting-started-tutorial-admin/train_model:dd5972cb-cbc2-4998-ab0e-705dba1b307d"
              }
            }
          }
        },
        "default_class": "ClassifierModel",
        "build": {
          "commands": [],
          "origin_filename": "serving.ipynb"
        },
        "secret_sources": [],
        "disable_auto_mount": true,
        "priority_class_name": "",
        "affinity": null
      },
      "status": {
        "internal_invocation_urls": [],
        "external_invocation_urls": []
      },
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "name": "test-classifier",
        "tag": "",
        "hash": "284e42ccf0bb550c6715e3634416f63f8d025d6d",
        "project": "getting-started-tutorial-admin",
        "labels": {
          "author": "yjb",
          "framework": "sklearn"
        },
        "categories": [
          "machine-learning",
          "model-testing"
        ],
        "updated": "2021-11-08T16:21:28.102237+00:00",
        "credentials": {
          "access_key": "$generate"
        }
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "name": "v3io",
            "mountPath": "/v3io"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "http://v3io-webapi:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "1bc19fc2-2089-4c9c-a622-2eaa9868382c"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "http://framesd:8080"
          }
        ],
        "default_handler": "test_classifier",
        "entry_points": {
          "test_classifier": {
            "name": "test_classifier",
            "doc": "Test one or more classifier models against held-out dataset\n\nUsing held-out test features, evaluates the peformance of the estimated model\n\nCan be part of a kubeflow pipeline as a test step that is run post EDA and\ntraining/validation cycles",
            "parameters": [
              {
                "name": "context",
                "doc": "the function context",
                "default": ""
              },
              {
                "name": "models_path",
                "type": "DataItem",
                "doc": "artifact models representing a file or a folder",
                "default": ""
              },
              {
                "name": "test_set",
                "type": "DataItem",
                "doc": "test features and labels",
                "default": ""
              },
              {
                "name": "label_column",
                "type": "str",
                "doc": "column name for ground truth labels",
                "default": ""
              },
              {
                "name": "score_method",
                "type": "str",
                "doc": "for multiclass classification",
                "default": "micro"
              },
              {
                "name": "plots_dest",
                "type": "str",
                "doc": "dir for test plots",
                "default": ""
              },
              {
                "name": "model_evaluator",
                "doc": "NOT IMPLEMENTED: specific method to generate eval, passed in as string or available in this folder",
                "default": null
              },
              {
                "name": "default_model",
                "type": "str",
                "default": "model.pkl"
              },
              {
                "name": "predictions_column",
                "type": "str",
                "doc": "column name for the predictions column on the resulted artifact",
                "default": "yscore"
              },
              {
                "name": "model_update",
                "doc": "(True) update model, when running as stand alone no need in update",
                "default": true
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 17
          }
        },
        "description": "test a classifier using held-out or new data",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHdhcm5pbmdzCgp3YXJuaW5ncy5maWx0ZXJ3YXJuaW5ncygiaWdub3JlIikKCmltcG9ydCBvcwppbXBvcnQgcGFuZGFzIGFzIHBkCgpmcm9tIG1scnVuLmRhdGFzdG9yZSBpbXBvcnQgRGF0YUl0ZW0KZnJvbSBtbHJ1bi5hcnRpZmFjdHMgaW1wb3J0IGdldF9tb2RlbCwgdXBkYXRlX21vZGVsCmZyb20gbWxydW4ubWx1dGlscy5tb2RlbHMgaW1wb3J0IGV2YWxfbW9kZWxfdjIKZnJvbSBjbG91ZHBpY2tsZSBpbXBvcnQgbG9hZApmcm9tIHVybGxpYi5yZXF1ZXN0IGltcG9ydCB1cmxvcGVuCgoKZGVmIHRlc3RfY2xhc3NpZmllcigKICAgIGNvbnRleHQsCiAgICBtb2RlbHNfcGF0aDogRGF0YUl0ZW0sCiAgICB0ZXN0X3NldDogRGF0YUl0ZW0sCiAgICBsYWJlbF9jb2x1bW46IHN0ciwKICAgIHNjb3JlX21ldGhvZDogc3RyID0gIm1pY3JvIiwKICAgIHBsb3RzX2Rlc3Q6IHN0ciA9ICIiLAogICAgbW9kZWxfZXZhbHVhdG9yPU5vbmUsCiAgICBkZWZhdWx0X21vZGVsOiBzdHIgPSAibW9kZWwucGtsIiwKICAgIHByZWRpY3Rpb25zX2NvbHVtbjogc3RyID0gInlzY29yZSIsCiAgICBtb2RlbF91cGRhdGU9VHJ1ZSwKKSAtPiBOb25lOgogICAgIiIiVGVzdCBvbmUgb3IgbW9yZSBjbGFzc2lmaWVyIG1vZGVscyBhZ2FpbnN0IGhlbGQtb3V0IGRhdGFzZXQKCiAgICBVc2luZyBoZWxkLW91dCB0ZXN0IGZlYXR1cmVzLCBldmFsdWF0ZXMgdGhlIHBlZm9ybWFuY2Ugb2YgdGhlIGVzdGltYXRlZCBtb2RlbAoKICAgIENhbiBiZSBwYXJ0IG9mIGEga3ViZWZsb3cgcGlwZWxpbmUgYXMgYSB0ZXN0IHN0ZXAgdGhhdCBpcyBydW4gcG9zdCBFREEgYW5kCiAgICB0cmFpbmluZy92YWxpZGF0aW9uIGN5Y2xlcwoKICAgIDpwYXJhbSBjb250ZXh0OiAgICAgICAgICAgIHRoZSBmdW5jdGlvbiBjb250ZXh0CiAgICA6cGFyYW0gbW9kZWxzX3BhdGg6ICAgICAgICBhcnRpZmFjdCBtb2RlbHMgcmVwcmVzZW50aW5nIGEgZmlsZSBvciBhIGZvbGRlcgogICAgOnBhcmFtIHRlc3Rfc2V0OiAgICAgICAgICAgdGVzdCBmZWF0dXJlcyBhbmQgbGFiZWxzCiAgICA6cGFyYW0gbGFiZWxfY29sdW1uOiAgICAgICBjb2x1bW4gbmFtZSBmb3IgZ3JvdW5kIHRydXRoIGxhYmVscwogICAgOnBhcmFtIHNjb3JlX21ldGhvZDogICAgICAgZm9yIG11bHRpY2xhc3MgY2xhc3NpZmljYXRpb24KICAgIDpwYXJhbSBwbG90c19kZXN0OiAgICAgICAgIGRpciBmb3IgdGVzdCBwbG90cwogICAgOnBhcmFtIG1vZGVsX2V2YWx1YXRvcjogICAgTk9UIElNUExFTUVOVEVEOiBzcGVjaWZpYyBtZXRob2QgdG8gZ2VuZXJhdGUgZXZhbCwgcGFzc2VkIGluIGFzIHN0cmluZwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3IgYXZhaWxhYmxlIGluIHRoaXMgZm9sZGVyCiAgICA6cGFyYW0gcHJlZGljdGlvbnNfY29sdW1uOiBjb2x1bW4gbmFtZSBmb3IgdGhlIHByZWRpY3Rpb25zIGNvbHVtbiBvbiB0aGUgcmVzdWx0ZWQgYXJ0aWZhY3QKICAgIDpwYXJhbSBtb2RlbF91cGRhdGU6ICAgICAgIChUcnVlKSB1cGRhdGUgbW9kZWwsIHdoZW4gcnVubmluZyBhcyBzdGFuZCBhbG9uZSBubyBuZWVkIGluIHVwZGF0ZQogICAgIiIiCiAgICB4dGVzdCA9IHRlc3Rfc2V0LmFzX2RmKCkKICAgIHl0ZXN0ID0geHRlc3QucG9wKGxhYmVsX2NvbHVtbikKCiAgICB0cnk6CiAgICAgICAgbW9kZWxfZmlsZSwgbW9kZWxfb2JqLCBfID0gZ2V0X21vZGVsKG1vZGVsc19wYXRoLCBzdWZmaXg9Ii5wa2wiKQogICAgICAgIG1vZGVsX29iaiA9IGxvYWQob3Blbihtb2RlbF9maWxlLCAicmIiKSkKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgYToKICAgICAgICByYWlzZSBFeGNlcHRpb24oIm1vZGVsIGxvY2F0aW9uIGxpa2VseSBzcGVjaWZpZWQiKQoKICAgIGV4dHJhX2RhdGEgPSBldmFsX21vZGVsX3YyKGNvbnRleHQsIHh0ZXN0LCB5dGVzdC52YWx1ZXMsIG1vZGVsX29iaikKICAgIGlmIG1vZGVsX29iaiBhbmQgbW9kZWxfdXBkYXRlID09IFRydWU6CiAgICAgICAgdXBkYXRlX21vZGVsKAogICAgICAgICAgICBtb2RlbHNfcGF0aCwKICAgICAgICAgICAgZXh0cmFfZGF0YT1leHRyYV9kYXRhLAogICAgICAgICAgICBtZXRyaWNzPWNvbnRleHQucmVzdWx0cywKICAgICAgICAgICAga2V5X3ByZWZpeD0idmFsaWRhdGlvbi0iLAogICAgICAgICkKCiAgICB5X2hhdCA9IG1vZGVsX29iai5wcmVkaWN0KHh0ZXN0KQogICAgaWYgeV9oYXQubmRpbSA9PSAxIG9yIHlfaGF0LnNoYXBlWzFdID09IDE6CiAgICAgICAgc2NvcmVfbmFtZXMgPSBbcHJlZGljdGlvbnNfY29sdW1uXQogICAgZWxzZToKICAgICAgICBzY29yZV9uYW1lcyA9IFtmIntwcmVkaWN0aW9uc19jb2x1bW59XyIgKyBzdHIoeCkgZm9yIHggaW4gcmFuZ2UoeV9oYXQuc2hhcGVbMV0pXQoKICAgIGRmID0gcGQuY29uY2F0KFt4dGVzdCwgeXRlc3QsIHBkLkRhdGFGcmFtZSh5X2hhdCwgY29sdW1ucz1zY29yZV9uYW1lcyldLCBheGlzPTEpCiAgICBjb250ZXh0LmxvZ19kYXRhc2V0KCJ0ZXN0X3NldF9wcmVkcyIsIGRmPWRmLCBmb3JtYXQ9InBhcnF1ZXQiLCBpbmRleD1GYWxzZSkK",
          "commands": []
        },
        "disable_auto_mount": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "test-classifier",
        "tag": "latest",
        "hash": "fdc090d4845dead6768fc7181a86dca656370801",
        "project": "getting-started-tutorial-admin",
        "labels": {
          "author": "yjb",
          "framework": "sklearn"
        },
        "categories": [
          "machine-learning",
          "model-testing"
        ],
        "updated": "2021-11-08T16:26:14.881359+00:00",
        "credentials": {
          "access_key": "$generate"
        }
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "name": "v3io",
            "mountPath": "/v3io"
          },
          {
            "name": "v3io",
            "mountPath": "/User"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "http://v3io-webapi:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "1bc19fc2-2089-4c9c-a622-2eaa9868382c"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "http://framesd:8080"
          }
        ],
        "default_handler": "test_classifier",
        "entry_points": {
          "test_classifier": {
            "name": "test_classifier",
            "doc": "Test one or more classifier models against held-out dataset\n\nUsing held-out test features, evaluates the peformance of the estimated model\n\nCan be part of a kubeflow pipeline as a test step that is run post EDA and\ntraining/validation cycles",
            "parameters": [
              {
                "name": "context",
                "doc": "the function context",
                "default": ""
              },
              {
                "name": "models_path",
                "type": "DataItem",
                "doc": "artifact models representing a file or a folder",
                "default": ""
              },
              {
                "name": "test_set",
                "type": "DataItem",
                "doc": "test features and labels",
                "default": ""
              },
              {
                "name": "label_column",
                "type": "str",
                "doc": "column name for ground truth labels",
                "default": ""
              },
              {
                "name": "score_method",
                "type": "str",
                "doc": "for multiclass classification",
                "default": "micro"
              },
              {
                "name": "plots_dest",
                "type": "str",
                "doc": "dir for test plots",
                "default": ""
              },
              {
                "name": "model_evaluator",
                "doc": "NOT IMPLEMENTED: specific method to generate eval, passed in as string or available in this folder",
                "default": null
              },
              {
                "name": "default_model",
                "type": "str",
                "default": "model.pkl"
              },
              {
                "name": "predictions_column",
                "type": "str",
                "doc": "column name for the predictions column on the resulted artifact",
                "default": "yscore"
              },
              {
                "name": "model_update",
                "doc": "(True) update model, when running as stand alone no need in update",
                "default": true
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 17
          }
        },
        "description": "test a classifier using held-out or new data",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHdhcm5pbmdzCgp3YXJuaW5ncy5maWx0ZXJ3YXJuaW5ncygiaWdub3JlIikKCmltcG9ydCBvcwppbXBvcnQgcGFuZGFzIGFzIHBkCgpmcm9tIG1scnVuLmRhdGFzdG9yZSBpbXBvcnQgRGF0YUl0ZW0KZnJvbSBtbHJ1bi5hcnRpZmFjdHMgaW1wb3J0IGdldF9tb2RlbCwgdXBkYXRlX21vZGVsCmZyb20gbWxydW4ubWx1dGlscy5tb2RlbHMgaW1wb3J0IGV2YWxfbW9kZWxfdjIKZnJvbSBjbG91ZHBpY2tsZSBpbXBvcnQgbG9hZApmcm9tIHVybGxpYi5yZXF1ZXN0IGltcG9ydCB1cmxvcGVuCgoKZGVmIHRlc3RfY2xhc3NpZmllcigKICAgIGNvbnRleHQsCiAgICBtb2RlbHNfcGF0aDogRGF0YUl0ZW0sCiAgICB0ZXN0X3NldDogRGF0YUl0ZW0sCiAgICBsYWJlbF9jb2x1bW46IHN0ciwKICAgIHNjb3JlX21ldGhvZDogc3RyID0gIm1pY3JvIiwKICAgIHBsb3RzX2Rlc3Q6IHN0ciA9ICIiLAogICAgbW9kZWxfZXZhbHVhdG9yPU5vbmUsCiAgICBkZWZhdWx0X21vZGVsOiBzdHIgPSAibW9kZWwucGtsIiwKICAgIHByZWRpY3Rpb25zX2NvbHVtbjogc3RyID0gInlzY29yZSIsCiAgICBtb2RlbF91cGRhdGU9VHJ1ZSwKKSAtPiBOb25lOgogICAgIiIiVGVzdCBvbmUgb3IgbW9yZSBjbGFzc2lmaWVyIG1vZGVscyBhZ2FpbnN0IGhlbGQtb3V0IGRhdGFzZXQKCiAgICBVc2luZyBoZWxkLW91dCB0ZXN0IGZlYXR1cmVzLCBldmFsdWF0ZXMgdGhlIHBlZm9ybWFuY2Ugb2YgdGhlIGVzdGltYXRlZCBtb2RlbAoKICAgIENhbiBiZSBwYXJ0IG9mIGEga3ViZWZsb3cgcGlwZWxpbmUgYXMgYSB0ZXN0IHN0ZXAgdGhhdCBpcyBydW4gcG9zdCBFREEgYW5kCiAgICB0cmFpbmluZy92YWxpZGF0aW9uIGN5Y2xlcwoKICAgIDpwYXJhbSBjb250ZXh0OiAgICAgICAgICAgIHRoZSBmdW5jdGlvbiBjb250ZXh0CiAgICA6cGFyYW0gbW9kZWxzX3BhdGg6ICAgICAgICBhcnRpZmFjdCBtb2RlbHMgcmVwcmVzZW50aW5nIGEgZmlsZSBvciBhIGZvbGRlcgogICAgOnBhcmFtIHRlc3Rfc2V0OiAgICAgICAgICAgdGVzdCBmZWF0dXJlcyBhbmQgbGFiZWxzCiAgICA6cGFyYW0gbGFiZWxfY29sdW1uOiAgICAgICBjb2x1bW4gbmFtZSBmb3IgZ3JvdW5kIHRydXRoIGxhYmVscwogICAgOnBhcmFtIHNjb3JlX21ldGhvZDogICAgICAgZm9yIG11bHRpY2xhc3MgY2xhc3NpZmljYXRpb24KICAgIDpwYXJhbSBwbG90c19kZXN0OiAgICAgICAgIGRpciBmb3IgdGVzdCBwbG90cwogICAgOnBhcmFtIG1vZGVsX2V2YWx1YXRvcjogICAgTk9UIElNUExFTUVOVEVEOiBzcGVjaWZpYyBtZXRob2QgdG8gZ2VuZXJhdGUgZXZhbCwgcGFzc2VkIGluIGFzIHN0cmluZwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3IgYXZhaWxhYmxlIGluIHRoaXMgZm9sZGVyCiAgICA6cGFyYW0gcHJlZGljdGlvbnNfY29sdW1uOiBjb2x1bW4gbmFtZSBmb3IgdGhlIHByZWRpY3Rpb25zIGNvbHVtbiBvbiB0aGUgcmVzdWx0ZWQgYXJ0aWZhY3QKICAgIDpwYXJhbSBtb2RlbF91cGRhdGU6ICAgICAgIChUcnVlKSB1cGRhdGUgbW9kZWwsIHdoZW4gcnVubmluZyBhcyBzdGFuZCBhbG9uZSBubyBuZWVkIGluIHVwZGF0ZQogICAgIiIiCiAgICB4dGVzdCA9IHRlc3Rfc2V0LmFzX2RmKCkKICAgIHl0ZXN0ID0geHRlc3QucG9wKGxhYmVsX2NvbHVtbikKCiAgICB0cnk6CiAgICAgICAgbW9kZWxfZmlsZSwgbW9kZWxfb2JqLCBfID0gZ2V0X21vZGVsKG1vZGVsc19wYXRoLCBzdWZmaXg9Ii5wa2wiKQogICAgICAgIG1vZGVsX29iaiA9IGxvYWQob3Blbihtb2RlbF9maWxlLCAicmIiKSkKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgYToKICAgICAgICByYWlzZSBFeGNlcHRpb24oIm1vZGVsIGxvY2F0aW9uIGxpa2VseSBzcGVjaWZpZWQiKQoKICAgIGV4dHJhX2RhdGEgPSBldmFsX21vZGVsX3YyKGNvbnRleHQsIHh0ZXN0LCB5dGVzdC52YWx1ZXMsIG1vZGVsX29iaikKICAgIGlmIG1vZGVsX29iaiBhbmQgbW9kZWxfdXBkYXRlID09IFRydWU6CiAgICAgICAgdXBkYXRlX21vZGVsKAogICAgICAgICAgICBtb2RlbHNfcGF0aCwKICAgICAgICAgICAgZXh0cmFfZGF0YT1leHRyYV9kYXRhLAogICAgICAgICAgICBtZXRyaWNzPWNvbnRleHQucmVzdWx0cywKICAgICAgICAgICAga2V5X3ByZWZpeD0idmFsaWRhdGlvbi0iLAogICAgICAgICkKCiAgICB5X2hhdCA9IG1vZGVsX29iai5wcmVkaWN0KHh0ZXN0KQogICAgaWYgeV9oYXQubmRpbSA9PSAxIG9yIHlfaGF0LnNoYXBlWzFdID09IDE6CiAgICAgICAgc2NvcmVfbmFtZXMgPSBbcHJlZGljdGlvbnNfY29sdW1uXQogICAgZWxzZToKICAgICAgICBzY29yZV9uYW1lcyA9IFtmIntwcmVkaWN0aW9uc19jb2x1bW59XyIgKyBzdHIoeCkgZm9yIHggaW4gcmFuZ2UoeV9oYXQuc2hhcGVbMV0pXQoKICAgIGRmID0gcGQuY29uY2F0KFt4dGVzdCwgeXRlc3QsIHBkLkRhdGFGcmFtZSh5X2hhdCwgY29sdW1ucz1zY29yZV9uYW1lcyldLCBheGlzPTEpCiAgICBjb250ZXh0LmxvZ19kYXRhc2V0KCJ0ZXN0X3NldF9wcmVkcyIsIGRmPWRmLCBmb3JtYXQ9InBhcnF1ZXQiLCBpbmRleD1GYWxzZSkK",
          "commands": []
        },
        "disable_auto_mount": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": {}
    },
    {
      "kind": "job",
      "metadata": {
        "name": "describe",
        "tag": "latest",
        "hash": "cdf77fafae2d4ac555405a59dfcfa427e56f2e70",
        "project": "getting-started-tutorial-admin",
        "labels": {
          "author": "Iguazio"
        },
        "categories": [
          "data-analysis"
        ],
        "updated": "2021-11-08T16:26:23.973930+00:00",
        "credentials": {
          "access_key": "$generate"
        }
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "name": "v3io",
            "mountPath": "/v3io"
          },
          {
            "name": "v3io",
            "mountPath": "/User"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "http://v3io-webapi:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "1bc19fc2-2089-4c9c-a622-2eaa9868382c"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "http://framesd:8080"
          }
        ],
        "default_handler": "summarize",
        "entry_points": {
          "summarize": {
            "name": "summarize",
            "doc": "Summarize a table",
            "parameters": [
              {
                "name": "context",
                "type": "MLClientCtx",
                "doc": "the function context",
                "default": ""
              },
              {
                "name": "table",
                "type": "DataItem",
                "doc": "MLRun input pointing to pandas dataframe (csv/parquet file path)",
                "default": ""
              },
              {
                "name": "label_column",
                "type": "str",
                "doc": "ground truth column label",
                "default": null
              },
              {
                "name": "class_labels",
                "type": "List[str]",
                "doc": "label for each class in tables and plots",
                "default": []
              },
              {
                "name": "plot_hist",
                "type": "bool",
                "doc": "(True) set this to False for large tables",
                "default": true
              },
              {
                "name": "plots_dest",
                "type": "str",
                "doc": "destination folder of summary plots (relative to artifact_path)",
                "default": "plots"
              },
              {
                "name": "update_dataset",
                "doc": "when the table is a registered dataset update the charts in-place",
                "default": false
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 23
          }
        },
        "description": "describe and visualizes dataset stats",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHdhcm5pbmdzCgp3YXJuaW5ncy5zaW1wbGVmaWx0ZXIoYWN0aW9uPSJpZ25vcmUiLCBjYXRlZ29yeT1GdXR1cmVXYXJuaW5nKQoKaW1wb3J0IG9zCmltcG9ydCBudW1weSBhcyBucAppbXBvcnQgcGFuZGFzIGFzIHBkCmltcG9ydCBtYXRwbG90bGliLnB5cGxvdCBhcyBwbHQKaW1wb3J0IHNlYWJvcm4gYXMgc25zCgpmcm9tIG1scnVuLmV4ZWN1dGlvbiBpbXBvcnQgTUxDbGllbnRDdHgKZnJvbSBtbHJ1bi5kYXRhc3RvcmUgaW1wb3J0IERhdGFJdGVtCmZyb20gbWxydW4uYXJ0aWZhY3RzIGltcG9ydCBQbG90QXJ0aWZhY3QsIFRhYmxlQXJ0aWZhY3QKZnJvbSBtbHJ1bi5tbHV0aWxzLnBsb3RzIGltcG9ydCBnY2ZfY2xlYXIKCmZyb20gdHlwaW5nIGltcG9ydCBMaXN0CgpwZC5zZXRfb3B0aW9uKCJkaXNwbGF5LmZsb2F0X2Zvcm1hdCIsIGxhbWJkYSB4OiAiJS4yZiIgJSB4KQoKCmRlZiBzdW1tYXJpemUoCiAgICBjb250ZXh0OiBNTENsaWVudEN0eCwKICAgIHRhYmxlOiBEYXRhSXRlbSwKICAgIGxhYmVsX2NvbHVtbjogc3RyID0gTm9uZSwKICAgIGNsYXNzX2xhYmVsczogTGlzdFtzdHJdID0gW10sCiAgICBwbG90X2hpc3Q6IGJvb2wgPSBUcnVlLAogICAgcGxvdHNfZGVzdDogc3RyID0gInBsb3RzIiwKICAgIHVwZGF0ZV9kYXRhc2V0PUZhbHNlLAopIC0+IE5vbmU6CiAgICAiIiJTdW1tYXJpemUgYSB0YWJsZQoKICAgIDpwYXJhbSBjb250ZXh0OiAgICAgICAgIHRoZSBmdW5jdGlvbiBjb250ZXh0CiAgICA6cGFyYW0gdGFibGU6ICAgICAgICAgICBNTFJ1biBpbnB1dCBwb2ludGluZyB0byBwYW5kYXMgZGF0YWZyYW1lIChjc3YvcGFycXVldCBmaWxlIHBhdGgpCiAgICA6cGFyYW0gbGFiZWxfY29sdW1uOiAgICBncm91bmQgdHJ1dGggY29sdW1uIGxhYmVsCiAgICA6cGFyYW0gY2xhc3NfbGFiZWxzOiAgICBsYWJlbCBmb3IgZWFjaCBjbGFzcyBpbiB0YWJsZXMgYW5kIHBsb3RzCiAgICA6cGFyYW0gcGxvdF9oaXN0OiAgICAgICAoVHJ1ZSkgc2V0IHRoaXMgdG8gRmFsc2UgZm9yIGxhcmdlIHRhYmxlcwogICAgOnBhcmFtIHBsb3RzX2Rlc3Q6ICAgICAgZGVzdGluYXRpb24gZm9sZGVyIG9mIHN1bW1hcnkgcGxvdHMgKHJlbGF0aXZlIHRvIGFydGlmYWN0X3BhdGgpCiAgICA6cGFyYW0gdXBkYXRlX2RhdGFzZXQ6ICB3aGVuIHRoZSB0YWJsZSBpcyBhIHJlZ2lzdGVyZWQgZGF0YXNldCB1cGRhdGUgdGhlIGNoYXJ0cyBpbi1wbGFjZQogICAgIiIiCiAgICBkZiA9IHRhYmxlLmFzX2RmKCkKICAgIGhlYWRlciA9IGRmLmNvbHVtbnMudmFsdWVzCiAgICBleHRyYV9kYXRhID0ge30KCiAgICB0cnk6CiAgICAgICAgZ2NmX2NsZWFyKHBsdCkKICAgICAgICBzbnNwbHQgPSBzbnMucGFpcnBsb3QoZGYsIGh1ZT1sYWJlbF9jb2x1bW4pICAjICwgZGlhZ19rd3M9eyJidyI6IDEuNX0pCiAgICAgICAgZXh0cmFfZGF0YVsiaGlzdG9ncmFtcyJdID0gY29udGV4dC5sb2dfYXJ0aWZhY3QoCiAgICAgICAgICAgIFBsb3RBcnRpZmFjdCgiaGlzdG9ncmFtcyIsIGJvZHk9cGx0LmdjZigpKSwKICAgICAgICAgICAgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS9oaXN0Lmh0bWwiLAogICAgICAgICAgICBkYl9rZXk9RmFsc2UsCiAgICAgICAgKQogICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgIGNvbnRleHQubG9nZ2VyLmVycm9yKGYiRmFpbGVkIHRvIGNyZWF0ZSBwYWlycGxvdCBoaXN0b2dyYW1zIGR1ZSB0bzoge2V9IikKCiAgICB0cnk6CiAgICAgICAgZ2NmX2NsZWFyKHBsdCkKICAgICAgICBwbG90X2NvbHMgPSAzCiAgICAgICAgcGxvdF9yb3dzID0gaW50KChsZW4oaGVhZGVyKSAtIDEpIC8gcGxvdF9jb2xzKSArIDEKICAgICAgICBmaWcsIGF4ID0gcGx0LnN1YnBsb3RzKHBsb3Rfcm93cywgcGxvdF9jb2xzLCBmaWdzaXplPSgxNSwgNCkpCiAgICAgICAgZmlnLnRpZ2h0X2xheW91dChwYWQ9Mi4wKQogICAgICAgIGZvciBpIGluIHJhbmdlKHBsb3Rfcm93cyAqIHBsb3RfY29scyk6CiAgICAgICAgICAgIGlmIGkgPCBsZW4oaGVhZGVyKToKICAgICAgICAgICAgICAgIHNucy52aW9saW5wbG90KAogICAgICAgICAgICAgICAgICAgIHg9ZGZbaGVhZGVyW2ldXSwKICAgICAgICAgICAgICAgICAgICBheD1heFtpbnQoaSAvIHBsb3RfY29scyldW2kgJSBwbG90X2NvbHNdLAogICAgICAgICAgICAgICAgICAgIG9yaWVudD0iaCIsCiAgICAgICAgICAgICAgICAgICAgd2lkdGg9MC43LAogICAgICAgICAgICAgICAgICAgIGlubmVyPSJxdWFydGlsZSIsCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBmaWcuZGVsYXhlcyhheFtpbnQoaSAvIHBsb3RfY29scyldW2kgJSBwbG90X2NvbHNdKQogICAgICAgICAgICBpICs9IDEKICAgICAgICBleHRyYV9kYXRhWyJ2aW9saW4iXSA9IGNvbnRleHQubG9nX2FydGlmYWN0KAogICAgICAgICAgICBQbG90QXJ0aWZhY3QoInZpb2xpbiIsIGJvZHk9cGx0LmdjZigpLCB0aXRsZT0iVmlvbGluIFBsb3QiKSwKICAgICAgICAgICAgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS92aW9saW4uaHRtbCIsCiAgICAgICAgICAgIGRiX2tleT1GYWxzZSwKICAgICAgICApCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgY29udGV4dC5sb2dnZXIud2FybihmIkZhaWxlZCB0byBjcmVhdGUgdmlvbGluIGRpc3RyaWJ1dGlvbiBwbG90cyBkdWUgdG86IHtlfSIpCgogICAgaWYgbGFiZWxfY29sdW1uOgogICAgICAgIGxhYmVscyA9IGRmLnBvcChsYWJlbF9jb2x1bW4pCiAgICAgICAgaW1idGFibGUgPSBsYWJlbHMudmFsdWVfY291bnRzKG5vcm1hbGl6ZT1UcnVlKS5zb3J0X2luZGV4KCkKICAgICAgICB0cnk6CiAgICAgICAgICAgIGdjZl9jbGVhcihwbHQpCiAgICAgICAgICAgIGJhbGFuY2ViYXIgPSBpbWJ0YWJsZS5wbG90KGtpbmQ9ImJhciIsIHRpdGxlPSJjbGFzcyBpbWJhbGFuY2UgLSBsYWJlbHMiKQogICAgICAgICAgICBiYWxhbmNlYmFyLnNldF94bGFiZWwoImNsYXNzIikKICAgICAgICAgICAgYmFsYW5jZWJhci5zZXRfeWxhYmVsKCJwcm9wb3J0aW9uIG9mIHRvdGFsIikKICAgICAgICAgICAgZXh0cmFfZGF0YVsiaW1iYWxhbmNlIl0gPSBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICAgICAgICAgIFBsb3RBcnRpZmFjdCgiaW1iYWxhbmNlIiwgYm9keT1wbHQuZ2NmKCkpLAogICAgICAgICAgICAgICAgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS9pbWJhbGFuY2UuaHRtbCIsCiAgICAgICAgICAgICkKICAgICAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgICAgIGNvbnRleHQubG9nZ2VyLndhcm4oZiJGYWlsZWQgdG8gY3JlYXRlIGNsYXNzIGltYmFsYW5jZSBwbG90IGR1ZSB0bzoge2V9IikKICAgICAgICBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICAgICAgVGFibGVBcnRpZmFjdCgKICAgICAgICAgICAgICAgICJpbWJhbGFuY2Utd2VpZ2h0cy12ZWMiLCBkZj1wZC5EYXRhRnJhbWUoeyJ3ZWlnaHRzIjogaW1idGFibGV9KQogICAgICAgICAgICApLAogICAgICAgICAgICBsb2NhbF9wYXRoPWYie3Bsb3RzX2Rlc3R9L2ltYmFsYW5jZS13ZWlnaHRzLXZlYy5jc3YiLAogICAgICAgICAgICBkYl9rZXk9RmFsc2UsCiAgICAgICAgKQoKICAgIHRibGNvcnIgPSBkZi5jb3JyKCkKICAgIG1hc2sgPSBucC56ZXJvc19saWtlKHRibGNvcnIsIGR0eXBlPW5wLmJvb2wpCiAgICBtYXNrW25wLnRyaXVfaW5kaWNlc19mcm9tKG1hc2spXSA9IFRydWUKCiAgICBkZmNvcnIgPSBwZC5EYXRhRnJhbWUoZGF0YT10Ymxjb3JyLCBjb2x1bW5zPWhlYWRlciwgaW5kZXg9aGVhZGVyKQogICAgZGZjb3JyID0gZGZjb3JyW25wLmFyYW5nZShkZmNvcnIuc2hhcGVbMF0pWzosIE5vbmVdID4gbnAuYXJhbmdlKGRmY29yci5zaGFwZVsxXSldCiAgICBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICBUYWJsZUFydGlmYWN0KCJjb3JyZWxhdGlvbi1tYXRyaXgiLCBkZj10Ymxjb3JyLCB2aXNpYmxlPVRydWUpLAogICAgICAgIGxvY2FsX3BhdGg9ZiJ7cGxvdHNfZGVzdH0vY29ycmVsYXRpb24tbWF0cml4LmNzdiIsCiAgICAgICAgZGJfa2V5PUZhbHNlLAogICAgKQoKICAgIHRyeToKICAgICAgICBnY2ZfY2xlYXIocGx0KQogICAgICAgIGF4ID0gcGx0LmF4ZXMoKQogICAgICAgIHNucy5oZWF0bWFwKHRibGNvcnIsIGF4PWF4LCBtYXNrPW1hc2ssIGFubm90PUZhbHNlLCBjbWFwPXBsdC5jbS5SZWRzKQogICAgICAgIGF4LnNldF90aXRsZSgiZmVhdHVyZXMgY29ycmVsYXRpb24iKQogICAgICAgIGV4dHJhX2RhdGFbImNvcnJlbGF0aW9uIl0gPSBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICAgICAgUGxvdEFydGlmYWN0KCJjb3JyZWxhdGlvbiIsIGJvZHk9cGx0LmdjZigpLCB0aXRsZT0iQ29ycmVsYXRpb24gTWF0cml4IiksCiAgICAgICAgICAgIGxvY2FsX3BhdGg9ZiJ7cGxvdHNfZGVzdH0vY29yci5odG1sIiwKICAgICAgICAgICAgZGJfa2V5PUZhbHNlLAogICAgICAgICkKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICBjb250ZXh0LmxvZ2dlci53YXJuKGYiRmFpbGVkIHRvIGNyZWF0ZSBmZWF0dXJlcyBjb3JyZWxhdGlvbiBwbG90IGR1ZSB0bzoge2V9IikKCiAgICBnY2ZfY2xlYXIocGx0KQogICAgaWYgdXBkYXRlX2RhdGFzZXQgYW5kIHRhYmxlLm1ldGEgYW5kIHRhYmxlLm1ldGEua2luZCA9PSAiZGF0YXNldCI6CiAgICAgICAgZnJvbSBtbHJ1bi5hcnRpZmFjdHMgaW1wb3J0IHVwZGF0ZV9kYXRhc2V0X21ldGEKCiAgICAgICAgdXBkYXRlX2RhdGFzZXRfbWV0YSh0YWJsZS5tZXRhLCBleHRyYV9kYXRhPWV4dHJhX2RhdGEpCg==",
          "commands": [],
          "code_origin": "https://github.com/daniels290813/functions.git#55a79c32be5d233cc11efcf40cd3edbe309bfdef:/home/kali/functions/describe/describe.py"
        },
        "disable_auto_mount": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": {}
    },
    {
      "kind": "job",
      "metadata": {
        "credentials": {
          "access_key": "$generate"
        },
        "labels": {},
        "name": "train-iris",
        "project": "getting-started-tutorial-admin",
        "tag": "",
        "hash": "c21677d6d0f77e982fc8c3360eedaa9740c75ec8",
        "updated": "2021-11-22T14:07:16.162317+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "mlrun/mlrun",
          "commands": [
            "python -m pip install \"mlrun[complete]==0.8.0-rc15\"",
            "echo test"
          ],
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKZnJvbSBza2xlYXJuIGltcG9ydCBsaW5lYXJfbW9kZWwKZnJvbSBza2xlYXJuIGltcG9ydCBkYXRhc2V0cwpmcm9tIHNrbGVhcm4ubW9kZWxfc2VsZWN0aW9uIGltcG9ydCB0cmFpbl90ZXN0X3NwbGl0CmZyb20gY2xvdWRwaWNrbGUgaW1wb3J0IGR1bXBzCmltcG9ydCBwYW5kYXMgYXMgcGQKCmZyb20gbWxydW4uZXhlY3V0aW9uIGltcG9ydCBNTENsaWVudEN0eApmcm9tIG1scnVuLmRhdGFzdG9yZSBpbXBvcnQgRGF0YUl0ZW0KZnJvbSBtbHJ1bi5tbHV0aWxzLmRhdGEgaW1wb3J0IGdldF9zYW1wbGUKZnJvbSBtbHJ1bi5tbHV0aWxzLnBsb3RzIGltcG9ydCBldmFsX21vZGVsX3YyCgpkZWYgdHJhaW5faXJpcyhjb250ZXh0OiBNTENsaWVudEN0eCwKICAgICAgICAgICAgICAgZGF0YXNldDogRGF0YUl0ZW0sCiAgICAgICAgICAgICAgIGxhYmVsX2NvbHVtbjogc3RyID0gImxhYmVscyIpOgoKICAgIHJhdywgbGFiZWxzLCBoZWFkZXIgPSBnZXRfc2FtcGxlKGRhdGFzZXQsIHNhbXBsZT0tMSwgbGFiZWw9bGFiZWxfY29sdW1uKQogICAgCiAgICBYX3RyYWluLCBYX3Rlc3QsIHlfdHJhaW4sIHlfdGVzdCA9IHRyYWluX3Rlc3Rfc3BsaXQoCiAgICAgICAgcmF3LCBsYWJlbHMsIHRlc3Rfc2l6ZT0wLjIsIHJhbmRvbV9zdGF0ZT00MikKICAgIAogICAgY29udGV4dC5sb2dfZGF0YXNldCgndHJhaW5fc2V0JywgCiAgICAgICAgICAgICAgICAgICAgICAgIGRmPXBkLmNvbmNhdChbWF90cmFpbiwgeV90cmFpbi50b19mcmFtZSgpXSwgYXhpcz0xKSwKICAgICAgICAgICAgICAgICAgICAgICAgZm9ybWF0PSdjc3YnLCBpbmRleD1GYWxzZSwgCiAgICAgICAgICAgICAgICAgICAgICAgIGFydGlmYWN0X3BhdGg9Y29udGV4dC5hcnRpZmFjdF9zdWJwYXRoKCdkYXRhJykpCgogICAgY29udGV4dC5sb2dfZGF0YXNldCgndGVzdF9zZXQnLCAKICAgICAgICAgICAgICAgICAgICAgICAgZGY9cGQuY29uY2F0KFtYX3Rlc3QsIHlfdGVzdC50b19mcmFtZSgpXSwgYXhpcz0xKSwKICAgICAgICAgICAgICAgICAgICAgICAgZm9ybWF0PSdjc3YnLCBpbmRleD1GYWxzZSwgCiAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVscz17ImRhdGEtdHlwZSI6ICJoZWxkLW91dCJ9LAogICAgICAgICAgICAgICAgICAgICAgICBhcnRpZmFjdF9wYXRoPWNvbnRleHQuYXJ0aWZhY3Rfc3VicGF0aCgnZGF0YScpKQogICAgCiAgICBtb2RlbCA9IGxpbmVhcl9tb2RlbC5Mb2dpc3RpY1JlZ3Jlc3Npb24obWF4X2l0ZXI9MTAwMDApCiAgICBtb2RlbC5maXQoWF90cmFpbiwgeV90cmFpbikKICAgIAogICAgZXZhbF9tZXRyaWNzID0gZXZhbF9tb2RlbF92Mihjb250ZXh0LCBYX3Rlc3QsIHlfdGVzdCwgbW9kZWwpCiAgICAKICAgIGNvbnRleHQubG9nX21vZGVsKCJtb2RlbCIsCiAgICAgICAgICAgICAgICAgICAgICBib2R5PWR1bXBzKG1vZGVsKSwKICAgICAgICAgICAgICAgICAgICAgIGFydGlmYWN0X3BhdGg9Y29udGV4dC5hcnRpZmFjdF9zdWJwYXRoKCJtb2RlbHMiKSwKICAgICAgICAgICAgICAgICAgICAgIGV4dHJhX2RhdGE9ZXZhbF9tZXRyaWNzLCAKICAgICAgICAgICAgICAgICAgICAgIG1vZGVsX2ZpbGU9Im1vZGVsLnBrbCIsCiAgICAgICAgICAgICAgICAgICAgICBtZXRyaWNzPWNvbnRleHQucmVzdWx0cywKICAgICAgICAgICAgICAgICAgICAgIGxhYmVscz17ImNsYXNzIjogInNrbGVhcm4ubGluZWFyX21vZGVsLkxvZ2lzdGljUmVncmVzc2lvbiJ9KQoK",
          "image": "docker-registry.default-tenant.app.vmdev36.lab.iguazeng.com:80/mlrun/func-getting-started-tutorial-admin-train-iris:latest"
        },
        "description": "",
        "env": [
          {
            "name": "V3IO_API",
            "value": "http://v3io-webapi:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "1bc19fc2-2089-4c9c-a622-2eaa9868382c"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "http://framesd:8080"
          }
        ],
        "image": "mlrun/ml-models",
        "volume_mounts": [
          {
            "name": "v3io",
            "mountPath": "/v3io"
          }
        ],
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "train_iris"
      },
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "train-iris",
        "tag": "",
        "project": "getting-started-tutorial-admin",
        "categories": [],
        "credentials": {
          "access_key": "$generate"
        },
        "hash": "e755a85d85a89dc745583ed54247744ec8b6ff2a",
        "updated": "2021-11-22T14:07:16.432975+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/ml-models",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "name": "v3io",
            "mountPath": "/v3io"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "http://v3io-webapi:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "1bc19fc2-2089-4c9c-a622-2eaa9868382c"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "http://framesd:8080"
          }
        ],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "train_iris",
        "description": "",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKZnJvbSBza2xlYXJuIGltcG9ydCBsaW5lYXJfbW9kZWwKZnJvbSBza2xlYXJuIGltcG9ydCBkYXRhc2V0cwpmcm9tIHNrbGVhcm4ubW9kZWxfc2VsZWN0aW9uIGltcG9ydCB0cmFpbl90ZXN0X3NwbGl0CmZyb20gY2xvdWRwaWNrbGUgaW1wb3J0IGR1bXBzCmltcG9ydCBwYW5kYXMgYXMgcGQKCmZyb20gbWxydW4uZXhlY3V0aW9uIGltcG9ydCBNTENsaWVudEN0eApmcm9tIG1scnVuLmRhdGFzdG9yZSBpbXBvcnQgRGF0YUl0ZW0KZnJvbSBtbHJ1bi5tbHV0aWxzLmRhdGEgaW1wb3J0IGdldF9zYW1wbGUKZnJvbSBtbHJ1bi5tbHV0aWxzLnBsb3RzIGltcG9ydCBldmFsX21vZGVsX3YyCgpkZWYgdHJhaW5faXJpcyhjb250ZXh0OiBNTENsaWVudEN0eCwKICAgICAgICAgICAgICAgZGF0YXNldDogRGF0YUl0ZW0sCiAgICAgICAgICAgICAgIGxhYmVsX2NvbHVtbjogc3RyID0gImxhYmVscyIpOgoKICAgIHJhdywgbGFiZWxzLCBoZWFkZXIgPSBnZXRfc2FtcGxlKGRhdGFzZXQsIHNhbXBsZT0tMSwgbGFiZWw9bGFiZWxfY29sdW1uKQogICAgCiAgICBYX3RyYWluLCBYX3Rlc3QsIHlfdHJhaW4sIHlfdGVzdCA9IHRyYWluX3Rlc3Rfc3BsaXQoCiAgICAgICAgcmF3LCBsYWJlbHMsIHRlc3Rfc2l6ZT0wLjIsIHJhbmRvbV9zdGF0ZT00MikKICAgIAogICAgY29udGV4dC5sb2dfZGF0YXNldCgndHJhaW5fc2V0JywgCiAgICAgICAgICAgICAgICAgICAgICAgIGRmPXBkLmNvbmNhdChbWF90cmFpbiwgeV90cmFpbi50b19mcmFtZSgpXSwgYXhpcz0xKSwKICAgICAgICAgICAgICAgICAgICAgICAgZm9ybWF0PSdjc3YnLCBpbmRleD1GYWxzZSwgCiAgICAgICAgICAgICAgICAgICAgICAgIGFydGlmYWN0X3BhdGg9Y29udGV4dC5hcnRpZmFjdF9zdWJwYXRoKCdkYXRhJykpCgogICAgY29udGV4dC5sb2dfZGF0YXNldCgndGVzdF9zZXQnLCAKICAgICAgICAgICAgICAgICAgICAgICAgZGY9cGQuY29uY2F0KFtYX3Rlc3QsIHlfdGVzdC50b19mcmFtZSgpXSwgYXhpcz0xKSwKICAgICAgICAgICAgICAgICAgICAgICAgZm9ybWF0PSdjc3YnLCBpbmRleD1GYWxzZSwgCiAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVscz17ImRhdGEtdHlwZSI6ICJoZWxkLW91dCJ9LAogICAgICAgICAgICAgICAgICAgICAgICBhcnRpZmFjdF9wYXRoPWNvbnRleHQuYXJ0aWZhY3Rfc3VicGF0aCgnZGF0YScpKQogICAgCiAgICBtb2RlbCA9IGxpbmVhcl9tb2RlbC5Mb2dpc3RpY1JlZ3Jlc3Npb24obWF4X2l0ZXI9MTAwMDApCiAgICBtb2RlbC5maXQoWF90cmFpbiwgeV90cmFpbikKICAgIAogICAgZXZhbF9tZXRyaWNzID0gZXZhbF9tb2RlbF92Mihjb250ZXh0LCBYX3Rlc3QsIHlfdGVzdCwgbW9kZWwpCiAgICAKICAgIGNvbnRleHQubG9nX21vZGVsKCJtb2RlbCIsCiAgICAgICAgICAgICAgICAgICAgICBib2R5PWR1bXBzKG1vZGVsKSwKICAgICAgICAgICAgICAgICAgICAgIGFydGlmYWN0X3BhdGg9Y29udGV4dC5hcnRpZmFjdF9zdWJwYXRoKCJtb2RlbHMiKSwKICAgICAgICAgICAgICAgICAgICAgIGV4dHJhX2RhdGE9ZXZhbF9tZXRyaWNzLCAKICAgICAgICAgICAgICAgICAgICAgIG1vZGVsX2ZpbGU9Im1vZGVsLnBrbCIsCiAgICAgICAgICAgICAgICAgICAgICBtZXRyaWNzPWNvbnRleHQucmVzdWx0cywKICAgICAgICAgICAgICAgICAgICAgIGxhYmVscz17ImNsYXNzIjogInNrbGVhcm4ubGluZWFyX21vZGVsLkxvZ2lzdGljUmVncmVzc2lvbiJ9KQoK",
          "image": "docker-registry.default-tenant.app.vmdev36.lab.iguazeng.com:80/mlrun/func-getting-started-tutorial-admin-train-iris:latest",
          "base_image": "mlrun/mlrun",
          "commands": [
            "python -m pip install \"mlrun[complete]==0.8.0-rc15\"",
            "echo test"
          ]
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "name": "train-iris",
        "tag": "latest",
        "project": "getting-started-tutorial-admin",
        "categories": [],
        "credentials": {
          "access_key": "$generate"
        },
        "hash": "2b5855879ecb801824d421b04872c690511bc0d4",
        "updated": "2021-11-22T14:12:23.821271+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "docker-registry.default-tenant.app.vmdev36.lab.iguazeng.com:80/mlrun/func-getting-started-tutorial-admin-train-iris:latest",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "name": "v3io",
            "mountPath": "/v3io"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "http://v3io-webapi:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "1bc19fc2-2089-4c9c-a622-2eaa9868382c"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "http://framesd:8080"
          }
        ],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "train_iris",
        "description": "",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKZnJvbSBza2xlYXJuIGltcG9ydCBsaW5lYXJfbW9kZWwKZnJvbSBza2xlYXJuIGltcG9ydCBkYXRhc2V0cwpmcm9tIHNrbGVhcm4ubW9kZWxfc2VsZWN0aW9uIGltcG9ydCB0cmFpbl90ZXN0X3NwbGl0CmZyb20gY2xvdWRwaWNrbGUgaW1wb3J0IGR1bXBzCmltcG9ydCBwYW5kYXMgYXMgcGQKCmZyb20gbWxydW4uZXhlY3V0aW9uIGltcG9ydCBNTENsaWVudEN0eApmcm9tIG1scnVuLmRhdGFzdG9yZSBpbXBvcnQgRGF0YUl0ZW0KZnJvbSBtbHJ1bi5tbHV0aWxzLmRhdGEgaW1wb3J0IGdldF9zYW1wbGUKZnJvbSBtbHJ1bi5tbHV0aWxzLnBsb3RzIGltcG9ydCBldmFsX21vZGVsX3YyCgpkZWYgdHJhaW5faXJpcyhjb250ZXh0OiBNTENsaWVudEN0eCwKICAgICAgICAgICAgICAgZGF0YXNldDogRGF0YUl0ZW0sCiAgICAgICAgICAgICAgIGxhYmVsX2NvbHVtbjogc3RyID0gImxhYmVscyIpOgoKICAgIHJhdywgbGFiZWxzLCBoZWFkZXIgPSBnZXRfc2FtcGxlKGRhdGFzZXQsIHNhbXBsZT0tMSwgbGFiZWw9bGFiZWxfY29sdW1uKQogICAgCiAgICBYX3RyYWluLCBYX3Rlc3QsIHlfdHJhaW4sIHlfdGVzdCA9IHRyYWluX3Rlc3Rfc3BsaXQoCiAgICAgICAgcmF3LCBsYWJlbHMsIHRlc3Rfc2l6ZT0wLjIsIHJhbmRvbV9zdGF0ZT00MikKICAgIAogICAgY29udGV4dC5sb2dfZGF0YXNldCgndHJhaW5fc2V0JywgCiAgICAgICAgICAgICAgICAgICAgICAgIGRmPXBkLmNvbmNhdChbWF90cmFpbiwgeV90cmFpbi50b19mcmFtZSgpXSwgYXhpcz0xKSwKICAgICAgICAgICAgICAgICAgICAgICAgZm9ybWF0PSdjc3YnLCBpbmRleD1GYWxzZSwgCiAgICAgICAgICAgICAgICAgICAgICAgIGFydGlmYWN0X3BhdGg9Y29udGV4dC5hcnRpZmFjdF9zdWJwYXRoKCdkYXRhJykpCgogICAgY29udGV4dC5sb2dfZGF0YXNldCgndGVzdF9zZXQnLCAKICAgICAgICAgICAgICAgICAgICAgICAgZGY9cGQuY29uY2F0KFtYX3Rlc3QsIHlfdGVzdC50b19mcmFtZSgpXSwgYXhpcz0xKSwKICAgICAgICAgICAgICAgICAgICAgICAgZm9ybWF0PSdjc3YnLCBpbmRleD1GYWxzZSwgCiAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVscz17ImRhdGEtdHlwZSI6ICJoZWxkLW91dCJ9LAogICAgICAgICAgICAgICAgICAgICAgICBhcnRpZmFjdF9wYXRoPWNvbnRleHQuYXJ0aWZhY3Rfc3VicGF0aCgnZGF0YScpKQogICAgCiAgICBtb2RlbCA9IGxpbmVhcl9tb2RlbC5Mb2dpc3RpY1JlZ3Jlc3Npb24obWF4X2l0ZXI9MTAwMDApCiAgICBtb2RlbC5maXQoWF90cmFpbiwgeV90cmFpbikKICAgIAogICAgZXZhbF9tZXRyaWNzID0gZXZhbF9tb2RlbF92Mihjb250ZXh0LCBYX3Rlc3QsIHlfdGVzdCwgbW9kZWwpCiAgICAKICAgIGNvbnRleHQubG9nX21vZGVsKCJtb2RlbCIsCiAgICAgICAgICAgICAgICAgICAgICBib2R5PWR1bXBzKG1vZGVsKSwKICAgICAgICAgICAgICAgICAgICAgIGFydGlmYWN0X3BhdGg9Y29udGV4dC5hcnRpZmFjdF9zdWJwYXRoKCJtb2RlbHMiKSwKICAgICAgICAgICAgICAgICAgICAgIGV4dHJhX2RhdGE9ZXZhbF9tZXRyaWNzLCAKICAgICAgICAgICAgICAgICAgICAgIG1vZGVsX2ZpbGU9Im1vZGVsLnBrbCIsCiAgICAgICAgICAgICAgICAgICAgICBtZXRyaWNzPWNvbnRleHQucmVzdWx0cywKICAgICAgICAgICAgICAgICAgICAgIGxhYmVscz17ImNsYXNzIjogInNrbGVhcm4ubGluZWFyX21vZGVsLkxvZ2lzdGljUmVncmVzc2lvbiJ9KQoK",
          "image": "docker-registry.default-tenant.app.vmdev36.lab.iguazeng.com:80/mlrun/func-getting-started-tutorial-admin-train-iris:latest",
          "base_image": "mlrun/mlrun",
          "commands": [
            "python -m pip install \"mlrun[complete]==0.8.0-rc15\"",
            "echo test"
          ]
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "status": {
        "state": "ready",
        "build_pod": "mlrun-build-train-iris-nqzdh"
      },
      "verbose": false
    },
    {
      "kind": "",
      "metadata": {
        "name": "hedi-simple-func",
        "tag": "latest",
        "project": "hedi-proj",
        "categories": [],
        "hash": "75cd61eaf9c10191b8358a91e2f4185c333d821b",
        "updated": "2021-08-31T19:47:38.360215+00:00"
      },
      "spec": {
        "command": "/tmp/tmp3uvmqyeg-hedi-simple-func.py",
        "args": [],
        "image": "",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHRpbWUKCmRlZiBkb19zb21ldGhpbmcoY29udGV4dCwgZmFpbDogYm9vbCA9IEZhbHNlKToKICAgIGNvbnRleHQubG9nZ2VyLmluZm8oJ3N0YXJ0ZWQgam9iLCBzbGVlcCAxNScpCiAgICB0aW1lLnNsZWVwKDE1KQogICAgY29udGV4dC5sb2dnZXIuaW5mbygnZmluaXNoZWQgc2xlZXBpbmcsIGZhaWwgb3IgZmluaXNoJywgZmFpbD1mYWlsKQogICAgaWYgZmFpbDoKICAgICAgICByYWlzZSBFeGNlcHRpb24oIkkgZGVjaWRlZCB0byBmYWlsIHRoaXMgam9iIikKCg==",
          "commands": [],
          "code_origin": "hedi-simple-func.ipynb",
          "origin_filename": "hedi-simple-func.ipynb"
        },
        "description": "",
        "mount_applied": false
      },
      "verbose": false,
      "status": {}
    },
    {
      "kind": "job",
      "metadata": {
        "credentials": {
          "access_key": "$generate"
        },
        "labels": {},
        "name": "a",
        "tag": "latest",
        "project": "hedi-proj",
        "hash": "a0044111acf7c5359a68bd92f8a352726273203c",
        "updated": "2021-10-21T10:46:10.920587+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "",
          "commands": [],
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ""
        },
        "default_class": "",
        "default_handler": "aaa",
        "description": "",
        "env": [
          {
            "name": "name",
            "value_from": {
              "secret_key_ref": {
                "name": "asd",
                "key": "dfgh"
              }
            }
          }
        ],
        "image": "mlrun/mlrun",
        "secret_sources": [],
        "volume_mounts": [],
        "volumes": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "disable_auto_mount": false
      },
      "status": {}
    },
    {
      "kind": "job",
      "metadata": {
        "name": "data-generator",
        "tag": "",
        "project": "model-deployment-pipeline-admin",
        "categories": [],
        "hash": "cd6dfba8490778563a19e5febc2ea252a98cf0d2",
        "updated": "2021-08-29T20:03:38.512104+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "",
        "volumes": [],
        "volume_mounts": [],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          }
        ],
        "default_handler": "main",
        "entry_points": {
          "gen_postcode": {
            "name": "gen_postcode",
            "doc": "",
            "parameters": [
              {
                "name": "is_churn",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 12
          },
          "new_registration": {
            "name": "new_registration",
            "doc": "",
            "parameters": [
              {
                "name": "fake",
                "default": ""
              },
              {
                "name": "user_id",
                "default": ""
              },
              {
                "name": "event_time",
                "default": ""
              },
              {
                "name": "is_churn",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 21
          },
          "new_purchase": {
            "name": "new_purchase",
            "doc": "",
            "parameters": [
              {
                "name": "fake",
                "default": ""
              },
              {
                "name": "user_id",
                "default": ""
              },
              {
                "name": "event_time",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 35
          },
          "new_bet": {
            "name": "new_bet",
            "doc": "",
            "parameters": [
              {
                "name": "fake",
                "default": ""
              },
              {
                "name": "user_id",
                "default": ""
              },
              {
                "name": "event_time",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 42
          },
          "new_win": {
            "name": "new_win",
            "doc": "",
            "parameters": [
              {
                "name": "fake",
                "default": ""
              },
              {
                "name": "user_id",
                "default": ""
              },
              {
                "name": "event_time",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 49
          },
          "gen_event_date": {
            "name": "gen_event_date",
            "doc": "",
            "parameters": [
              {
                "name": "is_churn",
                "default": ""
              },
              {
                "name": "prev_event_date",
                "default": null
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 56
          },
          "generate_events": {
            "name": "generate_events",
            "doc": "",
            "parameters": [
              {
                "name": "fake",
                "default": ""
              },
              {
                "name": "num_users",
                "default": ""
              },
              {
                "name": "events_dist",
                "default": ""
              },
              {
                "name": "num_events",
                "default": ""
              },
              {
                "name": "is_churn",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 66
          },
          "generate_user_ids": {
            "name": "generate_user_ids",
            "doc": "",
            "parameters": [
              {
                "name": "n",
                "type": "int",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 88
          },
          "generate_event_stream": {
            "name": "generate_event_stream",
            "doc": "",
            "parameters": [
              {
                "name": "v3io_client",
                "default": ""
              },
              {
                "name": "container",
                "default": ""
              },
              {
                "name": "output_stream_path",
                "default": ""
              },
              {
                "name": "num_users_group1",
                "default": ""
              },
              {
                "name": "num_users_group2",
                "default": ""
              },
              {
                "name": "events_per_user",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 92
          },
          "create_enrichment_table": {
            "name": "create_enrichment_table",
            "doc": "",
            "parameters": [
              {
                "name": "v3io_client",
                "default": ""
              },
              {
                "name": "container",
                "default": ""
              },
              {
                "name": "enrichment_table_path",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 123
          },
          "main": {
            "name": "main",
            "doc": "",
            "parameters": [
              {
                "name": "context",
                "type": "MLClientCtx",
                "default": ""
              },
              {
                "name": "container",
                "type": "str",
                "default": ""
              },
              {
                "name": "output_stream_path",
                "type": "str",
                "default": ""
              },
              {
                "name": "enrichment_table_path",
                "type": "str",
                "default": ""
              },
              {
                "name": "num_users_group1",
                "type": "int",
                "default": 1400
              },
              {
                "name": "num_users_group2",
                "type": "int",
                "default": 600
              },
              {
                "name": "events_per_user",
                "type": "int",
                "default": 1000
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 140
          }
        },
        "description": "",
        "build": {
          "functionSourceCode": "",
          "image": ".mlrun/func-model-deployment-pipeline-admin-data-generator:latest",
          "base_image": "mlrun/mlrun",
          "commands": [
            "python -m pip install faker"
          ],
          "code_origin": "functions/data-generator.ipynb",
          "origin_filename": "functions/data-generator.ipynb"
        },
        "mount_applied": false,
        "priority_class_name": "",
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "name": "data-generator",
        "tag": "",
        "project": "model-deployment-pipeline-admin",
        "categories": [],
        "hash": "d3d55df7f76b6f3e8410719cfe3df19c7f965a11",
        "updated": "2021-08-29T20:05:19.807824+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": ".mlrun/func-model-deployment-pipeline-admin-data-generator:latest",
        "volumes": [],
        "volume_mounts": [],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          }
        ],
        "default_handler": "main",
        "entry_points": {
          "gen_postcode": {
            "name": "gen_postcode",
            "doc": "",
            "parameters": [
              {
                "name": "is_churn",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 12
          },
          "new_registration": {
            "name": "new_registration",
            "doc": "",
            "parameters": [
              {
                "name": "fake",
                "default": ""
              },
              {
                "name": "user_id",
                "default": ""
              },
              {
                "name": "event_time",
                "default": ""
              },
              {
                "name": "is_churn",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 21
          },
          "new_purchase": {
            "name": "new_purchase",
            "doc": "",
            "parameters": [
              {
                "name": "fake",
                "default": ""
              },
              {
                "name": "user_id",
                "default": ""
              },
              {
                "name": "event_time",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 35
          },
          "new_bet": {
            "name": "new_bet",
            "doc": "",
            "parameters": [
              {
                "name": "fake",
                "default": ""
              },
              {
                "name": "user_id",
                "default": ""
              },
              {
                "name": "event_time",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 42
          },
          "new_win": {
            "name": "new_win",
            "doc": "",
            "parameters": [
              {
                "name": "fake",
                "default": ""
              },
              {
                "name": "user_id",
                "default": ""
              },
              {
                "name": "event_time",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 49
          },
          "gen_event_date": {
            "name": "gen_event_date",
            "doc": "",
            "parameters": [
              {
                "name": "is_churn",
                "default": ""
              },
              {
                "name": "prev_event_date",
                "default": null
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 56
          },
          "generate_events": {
            "name": "generate_events",
            "doc": "",
            "parameters": [
              {
                "name": "fake",
                "default": ""
              },
              {
                "name": "num_users",
                "default": ""
              },
              {
                "name": "events_dist",
                "default": ""
              },
              {
                "name": "num_events",
                "default": ""
              },
              {
                "name": "is_churn",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 66
          },
          "generate_user_ids": {
            "name": "generate_user_ids",
            "doc": "",
            "parameters": [
              {
                "name": "n",
                "type": "int",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 88
          },
          "generate_event_stream": {
            "name": "generate_event_stream",
            "doc": "",
            "parameters": [
              {
                "name": "v3io_client",
                "default": ""
              },
              {
                "name": "container",
                "default": ""
              },
              {
                "name": "output_stream_path",
                "default": ""
              },
              {
                "name": "num_users_group1",
                "default": ""
              },
              {
                "name": "num_users_group2",
                "default": ""
              },
              {
                "name": "events_per_user",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 92
          },
          "create_enrichment_table": {
            "name": "create_enrichment_table",
            "doc": "",
            "parameters": [
              {
                "name": "v3io_client",
                "default": ""
              },
              {
                "name": "container",
                "default": ""
              },
              {
                "name": "enrichment_table_path",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 123
          },
          "main": {
            "name": "main",
            "doc": "",
            "parameters": [
              {
                "name": "context",
                "type": "MLClientCtx",
                "default": ""
              },
              {
                "name": "container",
                "type": "str",
                "default": ""
              },
              {
                "name": "output_stream_path",
                "type": "str",
                "default": ""
              },
              {
                "name": "enrichment_table_path",
                "type": "str",
                "default": ""
              },
              {
                "name": "num_users_group1",
                "type": "int",
                "default": 1400
              },
              {
                "name": "num_users_group2",
                "type": "int",
                "default": 600
              },
              {
                "name": "events_per_user",
                "type": "int",
                "default": 1000
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 140
          }
        },
        "description": "",
        "build": {
          "functionSourceCode": "",
          "image": ".mlrun/func-model-deployment-pipeline-admin-data-generator:latest",
          "base_image": "mlrun/mlrun",
          "commands": [
            "python -m pip install faker"
          ],
          "code_origin": "functions/data-generator.ipynb",
          "origin_filename": "functions/data-generator.ipynb"
        },
        "mount_applied": false,
        "priority_class_name": "",
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "name": "data-generator",
        "tag": "",
        "project": "model-deployment-pipeline-admin",
        "hash": "13937203914815869a4c6429ee403868f41c5df7",
        "updated": "2021-08-29T20:05:19.926565+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": ".mlrun/func-model-deployment-pipeline-admin-data-generator:latest",
        "volumes": [],
        "volume_mounts": [],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          }
        ],
        "default_handler": "main",
        "entry_points": {
          "gen_postcode": {
            "name": "gen_postcode",
            "doc": "",
            "parameters": [
              {
                "name": "is_churn",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 12
          },
          "new_registration": {
            "name": "new_registration",
            "doc": "",
            "parameters": [
              {
                "name": "fake",
                "default": ""
              },
              {
                "name": "user_id",
                "default": ""
              },
              {
                "name": "event_time",
                "default": ""
              },
              {
                "name": "is_churn",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 21
          },
          "new_purchase": {
            "name": "new_purchase",
            "doc": "",
            "parameters": [
              {
                "name": "fake",
                "default": ""
              },
              {
                "name": "user_id",
                "default": ""
              },
              {
                "name": "event_time",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 35
          },
          "new_bet": {
            "name": "new_bet",
            "doc": "",
            "parameters": [
              {
                "name": "fake",
                "default": ""
              },
              {
                "name": "user_id",
                "default": ""
              },
              {
                "name": "event_time",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 42
          },
          "new_win": {
            "name": "new_win",
            "doc": "",
            "parameters": [
              {
                "name": "fake",
                "default": ""
              },
              {
                "name": "user_id",
                "default": ""
              },
              {
                "name": "event_time",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 49
          },
          "gen_event_date": {
            "name": "gen_event_date",
            "doc": "",
            "parameters": [
              {
                "name": "is_churn",
                "default": ""
              },
              {
                "name": "prev_event_date",
                "default": null
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 56
          },
          "generate_events": {
            "name": "generate_events",
            "doc": "",
            "parameters": [
              {
                "name": "fake",
                "default": ""
              },
              {
                "name": "num_users",
                "default": ""
              },
              {
                "name": "events_dist",
                "default": ""
              },
              {
                "name": "num_events",
                "default": ""
              },
              {
                "name": "is_churn",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 66
          },
          "generate_user_ids": {
            "name": "generate_user_ids",
            "doc": "",
            "parameters": [
              {
                "name": "n",
                "type": "int",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 88
          },
          "generate_event_stream": {
            "name": "generate_event_stream",
            "doc": "",
            "parameters": [
              {
                "name": "v3io_client",
                "default": ""
              },
              {
                "name": "container",
                "default": ""
              },
              {
                "name": "output_stream_path",
                "default": ""
              },
              {
                "name": "num_users_group1",
                "default": ""
              },
              {
                "name": "num_users_group2",
                "default": ""
              },
              {
                "name": "events_per_user",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 92
          },
          "create_enrichment_table": {
            "name": "create_enrichment_table",
            "doc": "",
            "parameters": [
              {
                "name": "v3io_client",
                "default": ""
              },
              {
                "name": "container",
                "default": ""
              },
              {
                "name": "enrichment_table_path",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 123
          },
          "main": {
            "name": "main",
            "doc": "",
            "parameters": [
              {
                "name": "context",
                "type": "MLClientCtx",
                "default": ""
              },
              {
                "name": "container",
                "type": "str",
                "default": ""
              },
              {
                "name": "output_stream_path",
                "type": "str",
                "default": ""
              },
              {
                "name": "enrichment_table_path",
                "type": "str",
                "default": ""
              },
              {
                "name": "num_users_group1",
                "type": "int",
                "default": 1400
              },
              {
                "name": "num_users_group2",
                "type": "int",
                "default": 600
              },
              {
                "name": "events_per_user",
                "type": "int",
                "default": 1000
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 140
          }
        },
        "description": "",
        "build": {
          "functionSourceCode": "",
          "base_image": "mlrun/mlrun",
          "commands": [
            "python -m pip install faker"
          ],
          "code_origin": "functions/data-generator.ipynb",
          "origin_filename": "functions/data-generator.ipynb"
        },
        "mount_applied": false,
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "name": "data-generator",
        "tag": "latest",
        "hash": "dc08316994cae68567c715dbbf9f0079c4d08a16",
        "project": "model-deployment-pipeline-admin",
        "categories": [],
        "updated": "2021-08-29T20:05:20.028973+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": ".mlrun/func-model-deployment-pipeline-admin-data-generator:latest",
        "volumes": [],
        "volume_mounts": [],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          }
        ],
        "default_handler": "main",
        "entry_points": {
          "gen_postcode": {
            "name": "gen_postcode",
            "doc": "",
            "parameters": [
              {
                "name": "is_churn",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 12
          },
          "new_registration": {
            "name": "new_registration",
            "doc": "",
            "parameters": [
              {
                "name": "fake",
                "default": ""
              },
              {
                "name": "user_id",
                "default": ""
              },
              {
                "name": "event_time",
                "default": ""
              },
              {
                "name": "is_churn",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 21
          },
          "new_purchase": {
            "name": "new_purchase",
            "doc": "",
            "parameters": [
              {
                "name": "fake",
                "default": ""
              },
              {
                "name": "user_id",
                "default": ""
              },
              {
                "name": "event_time",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 35
          },
          "new_bet": {
            "name": "new_bet",
            "doc": "",
            "parameters": [
              {
                "name": "fake",
                "default": ""
              },
              {
                "name": "user_id",
                "default": ""
              },
              {
                "name": "event_time",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 42
          },
          "new_win": {
            "name": "new_win",
            "doc": "",
            "parameters": [
              {
                "name": "fake",
                "default": ""
              },
              {
                "name": "user_id",
                "default": ""
              },
              {
                "name": "event_time",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 49
          },
          "gen_event_date": {
            "name": "gen_event_date",
            "doc": "",
            "parameters": [
              {
                "name": "is_churn",
                "default": ""
              },
              {
                "name": "prev_event_date",
                "default": null
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 56
          },
          "generate_events": {
            "name": "generate_events",
            "doc": "",
            "parameters": [
              {
                "name": "fake",
                "default": ""
              },
              {
                "name": "num_users",
                "default": ""
              },
              {
                "name": "events_dist",
                "default": ""
              },
              {
                "name": "num_events",
                "default": ""
              },
              {
                "name": "is_churn",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 66
          },
          "generate_user_ids": {
            "name": "generate_user_ids",
            "doc": "",
            "parameters": [
              {
                "name": "n",
                "type": "int",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 88
          },
          "generate_event_stream": {
            "name": "generate_event_stream",
            "doc": "",
            "parameters": [
              {
                "name": "v3io_client",
                "default": ""
              },
              {
                "name": "container",
                "default": ""
              },
              {
                "name": "output_stream_path",
                "default": ""
              },
              {
                "name": "num_users_group1",
                "default": ""
              },
              {
                "name": "num_users_group2",
                "default": ""
              },
              {
                "name": "events_per_user",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 92
          },
          "create_enrichment_table": {
            "name": "create_enrichment_table",
            "doc": "",
            "parameters": [
              {
                "name": "v3io_client",
                "default": ""
              },
              {
                "name": "container",
                "default": ""
              },
              {
                "name": "enrichment_table_path",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 123
          },
          "main": {
            "name": "main",
            "doc": "",
            "parameters": [
              {
                "name": "context",
                "type": "MLClientCtx",
                "default": ""
              },
              {
                "name": "container",
                "type": "str",
                "default": ""
              },
              {
                "name": "output_stream_path",
                "type": "str",
                "default": ""
              },
              {
                "name": "enrichment_table_path",
                "type": "str",
                "default": ""
              },
              {
                "name": "num_users_group1",
                "type": "int",
                "default": 1400
              },
              {
                "name": "num_users_group2",
                "type": "int",
                "default": 600
              },
              {
                "name": "events_per_user",
                "type": "int",
                "default": 1000
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 140
          }
        },
        "description": "",
        "build": {
          "functionSourceCode": "",
          "base_image": "mlrun/mlrun",
          "commands": [
            "python -m pip install faker"
          ],
          "code_origin": "functions/data-generator.ipynb",
          "origin_filename": "functions/data-generator.ipynb"
        },
        "mount_applied": false,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": {}
    },
    {
      "kind": "remote",
      "metadata": {
        "name": "event-handler",
        "tag": "latest",
        "project": "model-deployment-pipeline-admin",
        "hash": "c64067e6e9e65fe350531b205a5272a32acc288a",
        "updated": "2021-08-29T20:07:31.825966+00:00"
      },
      "spec": {
        "command": "http://default-tenant.app.vmdev36.lab.iguazeng.com:31666",
        "args": [],
        "image": "",
        "description": "",
        "replicas": 1,
        "min_replicas": 1,
        "max_replicas": 4,
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "PARQUET_SINK_FLAG",
            "value": "true"
          },
          {
            "name": "STREAM_SINK_FLAG",
            "value": "true"
          },
          {
            "name": "PARQUET_TARGET_PATH",
            "value": "/User/examples/model-deployment-pipeline/data/events-pq"
          },
          {
            "name": "PARQUET_BATCH_SIZE",
            "value": "8192"
          },
          {
            "name": "TS_KEY",
            "value": "event_time"
          },
          {
            "name": "TS_FORMAT",
            "value": "%Y-%m-%d %H:%M:%S.%f"
          },
          {
            "name": "CONTAINER",
            "value": "users"
          },
          {
            "name": "OUTPUT_STREAM_PATH",
            "value": "admin/examples/model-deployment-pipeline/data/incoming-events-stream"
          },
          {
            "name": "PARTITION_ATTR",
            "value": "user_id"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "config": {
          "spec.triggers.serving_stream": {
            "kind": "v3ioStream",
            "url": "http://v3io-webapi:8081/users/admin/examples/model-deployment-pipeline/data/generated-stream@eh",
            "attributes": {
              "seekTo": "earliest",
              "readBatchSize": 64,
              "pollingIntervalMs": 500
            },
            "maxWorkers": 10,
            "password": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          }
        },
        "base_spec": {
          "apiVersion": "nuclio.io/v1",
          "kind": "Function",
          "metadata": {
            "annotations": {
              "nuclio.io/generated_by": "function generated from functions/event-handler.ipynb"
            },
            "labels": {},
            "name": "event-handler"
          },
          "spec": {
            "build": {
              "baseImage": "mlrun/mlrun",
              "commands": [],
              "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG9zCmltcG9ydCBwYW5kYXMgYXMgcGQKaW1wb3J0IGpzb24KaW1wb3J0IGRhdGV0aW1lCmZyb20gZGF0ZXRpbWUgaW1wb3J0IGRhdGV0aW1lCmltcG9ydCB2M2lvLmRhdGFwbGFuZQoKZGVmIGluaXRfY29udGV4dChjb250ZXh0KToKICAgIHNldGF0dHIoY29udGV4dCwgJ3N0cmVhbV9zaW5rX2ZsYWcnLCBvcy5nZXRlbnYoJ1NUUkVBTV9TSU5LX0ZMQUcnKSkKICAgIHNldGF0dHIoY29udGV4dCwgJ3BhcnF1ZXRfc2lua19mbGFnJywgb3MuZ2V0ZW52KCdQQVJRVUVUX1NJTktfRkxBRycpKQoKICAgIGlmIGNvbnRleHQucGFycXVldF9zaW5rX2ZsYWcubG93ZXIoKSA9PSAndHJ1ZSc6CiAgICAgICAgc2V0YXR0cihjb250ZXh0LCAnYmF0Y2gnLCBbXSkKICAgICAgICBzZXRhdHRyKGNvbnRleHQsICdiYXRjaF9zaXplJywgaW50KG9zLmdldGVudignUEFSUVVFVF9CQVRDSF9TSVpFJywgMTAyNCkpKQoKICAgICAgICBzZXRhdHRyKGNvbnRleHQsICd0aW1lc3RhbXBfa2V5Jywgb3MuZ2V0ZW52KCdUU19LRVknKSkKICAgICAgICBzZXRhdHRyKGNvbnRleHQsICd0aW1lc3RhbXBfZm9ybWF0Jywgb3MuZ2V0ZW52KCdUU19GT1JNQVQnLCAnJVktJW0tJWQgJUg6JU06JVMuJWYnKSkKCiAgICAgICAgc2V0YXR0cihjb250ZXh0LCAncHFfcGFydGl0aW9ucycsIFsncHFfeWVhcicsICdwcV9tb250aCcsICdwcV9kYXknLCAncHFfaG91ciddKQoKICAgICAgICBzZXRhdHRyKGNvbnRleHQsICd0YXJnZXRfcGF0aCcsIG9zLmdldGVudignUEFSUVVFVF9UQVJHRVRfUEFUSCcpKQogICAgICAgIG9zLm1ha2VkaXJzKGNvbnRleHQudGFyZ2V0X3BhdGgsIGV4aXN0X29rPVRydWUpCgogICAgICAgIGZlYXR1cmVzID0gb3MuZ2V0ZW52KCdGRUFUVVJFUycpCiAgICAgICAgaWYgZmVhdHVyZXMgaXMgbm90IE5vbmU6CiAgICAgICAgICAgIGZlYXR1cmVzID0gZmVhdHVyZXMuc3BsaXQoJywnKQogICAgICAgIHNldGF0dHIoY29udGV4dCwgJ2ZlYXR1cmVzJywgZmVhdHVyZXMpCgogICAgICAgIHByZWRpY3Rpb25zID0gb3MuZ2V0ZW52KCdQUkVESUNUSU9OUycpCiAgICAgICAgaWYgcHJlZGljdGlvbnMgaXMgbm90IE5vbmU6CiAgICAgICAgICAgIHByZWRpY3Rpb25zID0gcHJlZGljdGlvbnMuc3BsaXQoJywnKQogICAgICAgIHNldGF0dHIoY29udGV4dCwgJ3ByZWRpY3Rpb25zJywgcHJlZGljdGlvbnMpCgogICAgaWYgY29udGV4dC5zdHJlYW1fc2lua19mbGFnLmxvd2VyKCkgPT0gJ3RydWUnOgogICAgICAgIHYzaW9fYWNjZXNzX2tleSA9IG9zLmdldGVudignVjNJT19BQ0NFU1NfS0VZJykKICAgICAgICBjb250YWluZXIgPSBvcy5nZXRlbnYoJ0NPTlRBSU5FUicpCiAgICAgICAgb3V0cHV0X3N0cmVhbV9wYXRoID0gb3MuZ2V0ZW52KCdPVVRQVVRfU1RSRUFNX1BBVEgnKQogICAgICAgIHBhcnRpdGlvbl9hdHRyID0gb3MuZ2V0ZW52KCdQQVJUSVRJT05fQVRUUicpCiAgICAgICAgdjNpb19hcGkgPSBvcy5nZXRlbnYoJ1YzSU9fQVBJJykKICAgICAgICB2M2lvX2NsaWVudCA9IHYzaW8uZGF0YXBsYW5lLkNsaWVudChlbmRwb2ludD12M2lvX2FwaSwgYWNjZXNzX2tleT12M2lvX2FjY2Vzc19rZXkpCgogICAgICAgIHNldGF0dHIoY29udGV4dCwgJ3YzaW9fY2xpZW50JywgdjNpb19jbGllbnQpCiAgICAgICAgc2V0YXR0cihjb250ZXh0LCAncGFydGl0aW9uX2F0dHInLCBwYXJ0aXRpb25fYXR0cikKICAgICAgICBzZXRhdHRyKGNvbnRleHQsICdjb250YWluZXInLCBjb250YWluZXIpCiAgICAgICAgc2V0YXR0cihjb250ZXh0LCAnb3V0cHV0X3N0cmVhbV9wYXRoJywgb3V0cHV0X3N0cmVhbV9wYXRoKQogICAgcGFzcwoKZGVmIGhhbmRsZXIoY29udGV4dCwgZXZlbnQpOgogICAgaWYgdHlwZShldmVudC5ib2R5KSBpcyBkaWN0OgogICAgICAgIGV2ZW50X2RpY3QgPSBldmVudC5ib2R5CiAgICBlbHNlOgogICAgICAgIGV2ZW50X2RpY3QgPSBqc29uLmxvYWRzKGV2ZW50LmJvZHkpCgogICAgY29udGV4dC5sb2dnZXIuaW5mb193aXRoKCdHb3QgaW52b2tlZCcsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJpZ2dlcl9raW5kPWV2ZW50LnRyaWdnZXIua2luZCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBldmVudF9ib2R5PWV2ZW50X2RpY3QpCgogICAgaWYgY29udGV4dC5zdHJlYW1fc2lua19mbGFnLmxvd2VyKCkgPT0gJ3RydWUnOgogICAgICAgIHN0cmVhbV9zaW5rX2hhbmRsZXIoY29udGV4dCwgZXZlbnRfZGljdCkKICAgIGlmIGNvbnRleHQucGFycXVldF9zaW5rX2ZsYWcubG93ZXIoKSA9PSAndHJ1ZSc6CiAgICAgICAgcGFycXVldF9zaW5rX2hhbmRsZXIoY29udGV4dCwgZXZlbnRfZGljdCkKICAgIHBhc3MKCgpkZWYgc3RyZWFtX3NpbmtfaGFuZGxlcihjb250ZXh0LCBldmVudCk6CiAgICBwYXJ0aXRpb25fa2V5ID0gZXZlbnQuZ2V0KGNvbnRleHQucGFydGl0aW9uX2F0dHIpCiAgICByZWNvcmQgPSBldmVudF90b19yZWNvcmQoZXZlbnQsIHBhcnRpdGlvbl9rZXkpCiAgICAKICAgIHJlc3AgPSBjb250ZXh0LnYzaW9fY2xpZW50LnN0cmVhbS5wdXRfcmVjb3Jkcyhjb250YWluZXI9Y29udGV4dC5jb250YWluZXIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RyZWFtX3BhdGg9Y29udGV4dC5vdXRwdXRfc3RyZWFtX3BhdGgsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVjb3Jkcz1bcmVjb3JkXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByYWlzZV9mb3Jfc3RhdHVzPXYzaW8uZGF0YXBsYW5lLlJhaXNlRm9yU3RhdHVzLm5ldmVyKQoKICAgIGNvbnRleHQubG9nZ2VyLmluZm9fd2l0aCgnU2VudCBldmVudCB0byBzdHJlYW0nLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlY29yZD1yZWNvcmQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2Vfc3RhdHVzPXJlc3Auc3RhdHVzX2NvZGUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2VfYm9keT1yZXNwLmJvZHkuZGVjb2RlKCd1dGYtOCcpKQogICAgcGFzcwoKCmRlZiBldmVudF90b19yZWNvcmQoZXZlbnRfZGljdCwgcGFydGl0aW9uX2tleSk6CiAgICBldmVudF9zdHIgPSBqc29uLmR1bXBzKGV2ZW50X2RpY3QpCiAgICByZXR1cm4geydkYXRhJzogZXZlbnRfc3RyLCAncGFydGl0aW9uX2tleSc6IHN0cihwYXJ0aXRpb25fa2V5KX0KCgpkZWYgcGFycXVldF9zaW5rX2hhbmRsZXIoY29udGV4dCwgZXZlbnQpOgogICAgaWYgY29udGV4dC5mZWF0dXJlcyBpcyBub3QgTm9uZSBhbmQgY29udGV4dC5wcmVkaWN0aW9ucyBpcyBub3QgTm9uZToKICAgICAgICBldmVudCA9IGZsYXR0ZW5faW5mZXJlbmNlX2V2ZW50KGNvbnRleHQsIGV2ZW50KQoKICAgIGV2ZW50X3dpdGhfdGltZV9wYXJ0aXRpb25zID0gYWRkX3RpbWVfcGFydGl0aW9uX2F0dHJpYnV0ZXMoY29udGV4dCwgZXZlbnQpCgogICAgY29udGV4dC5iYXRjaC5hcHBlbmQoZXZlbnRfd2l0aF90aW1lX3BhcnRpdGlvbnMpCgogICAgaWYgY29udGV4dC5iYXRjaF9zaXplID09IGxlbihjb250ZXh0LmJhdGNoKToKICAgICAgICB3cml0dGVuX3JlY29yZHMgPSB3cml0ZV9iYXRjaChjb250ZXh0KQogICAgICAgIGNvbnRleHQubG9nZ2VyLmluZm9fd2l0aCgnV3JpdHRlbiBiYXRjaCcsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFdyaXR0ZW50X3JlY29yZHM9d3JpdHRlbl9yZWNvcmRzKQogICAgcGFzcwoKCmRlZiBmbGF0dGVuX2luZmVyZW5jZV9ldmVudChjb250ZXh0LCBldmVudCk6CiAgICBmZWF0dXJlX3ZhbHVlcyA9IGV2ZW50WydyZXF1ZXN0J11bJ2luc3RhbmNlcyddWzBdCiAgICBldmVudC51cGRhdGUoemlwKGNvbnRleHQuZmVhdHVyZXMsIGZlYXR1cmVfdmFsdWVzKSkKCiAgICBwcmVkaWN0aW9uX3ZhbHVlcyA9IGV2ZW50WydyZXNwJ10KICAgIGV2ZW50LnVwZGF0ZSh6aXAoY29udGV4dC5wcmVkaWN0aW9ucywgcHJlZGljdGlvbl92YWx1ZXMpKQoKICAgIHJldHVybiBldmVudAoKCmRlZiBhZGRfdGltZV9wYXJ0aXRpb25fYXR0cmlidXRlcyhjb250ZXh0LCBldmVudCk6CiAgICBpZiBoYXNhdHRyKGNvbnRleHQsICd0aW1lc3RhbXBfa2V5JykgYW5kIGV2ZW50LmdldChjb250ZXh0LnRpbWVzdGFtcF9rZXkpIGlzIG5vdCBOb25lOgogICAgICAgIGR0X29iamVjdCA9IGRhdGV0aW1lLnN0cnB0aW1lKGV2ZW50W2NvbnRleHQudGltZXN0YW1wX2tleV0sIGNvbnRleHQudGltZXN0YW1wX2Zvcm1hdCkKICAgIGVsc2U6CiAgICAgICAgZHRfb2JqZWN0ID0gZGF0ZXRpbWUubm93KCkKCiAgICBldmVudFsncHFfeWVhciddID0gZHRfb2JqZWN0LnN0cmZ0aW1lKCclWScpCiAgICBldmVudFsncHFfbW9udGgnXSA9IGR0X29iamVjdC5zdHJmdGltZSgnJW0nKQogICAgZXZlbnRbJ3BxX2RheSddID0gZHRfb2JqZWN0LnN0cmZ0aW1lKCclZCcpCiAgICBldmVudFsncHFfaG91ciddID0gZHRfb2JqZWN0LnN0cmZ0aW1lKCclSCcpCgogICAgcmV0dXJuIGV2ZW50CgoKZGVmIHdyaXRlX2JhdGNoKGNvbnRleHQpOgogICAgZGYgPSBwZC5EYXRhRnJhbWUuZnJvbV9yZWNvcmRzKGNvbnRleHQuYmF0Y2gpCiAgICBkZi50b19wYXJxdWV0KHBhdGg9Y29udGV4dC50YXJnZXRfcGF0aCwgcGFydGl0aW9uX2NvbHM9Y29udGV4dC5wcV9wYXJ0aXRpb25zKQogICAgY29udGV4dC5iYXRjaCA9IFtdCiAgICByZXR1cm4gbGVuKGRmLmluZGV4KQoK",
              "noBaseImagesPull": true
            },
            "env": [],
            "handler": "event-handler:handler",
            "readinessTimeoutSeconds": 200,
            "runtime": "python:3.6",
            "volumes": []
          }
        },
        "source": "",
        "build": {
          "commands": [],
          "code_origin": "functions/event-handler.ipynb",
          "origin_filename": "functions/event-handler.ipynb"
        },
        "default_handler": "handler",
        "mount_applied": true,
        "affinity": null
      },
      "status": {
        "state": "ready",
        "nuclio_name": "model-deployment-pipeline-admin-event-handler",
        "address": "default-tenant.app.vmdev36.lab.iguazeng.com:31666",
        "internal_invocation_urls": [
          "nuclio-model-deployment-pipeline-admin-event-handler.default-tenant.svc.cluster.local:8080"
        ],
        "external_invocation_urls": [
          "default-tenant.app.vmdev36.lab.iguazeng.com:31666"
        ]
      },
      "verbose": false
    },
    {
      "kind": "remote",
      "metadata": {
        "name": "event-handler",
        "tag": "",
        "project": "model-deployment-pipeline-admin",
        "categories": [],
        "hash": "052cec5373ad7a911cf636c326e4248ab31cdade",
        "updated": "2021-08-29T20:07:31.736380+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "",
        "description": "",
        "replicas": 1,
        "min_replicas": 1,
        "max_replicas": 4,
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "PARQUET_SINK_FLAG",
            "value": "true"
          },
          {
            "name": "STREAM_SINK_FLAG",
            "value": "true"
          },
          {
            "name": "PARQUET_TARGET_PATH",
            "value": "/User/examples/model-deployment-pipeline/data/events-pq"
          },
          {
            "name": "PARQUET_BATCH_SIZE",
            "value": "8192"
          },
          {
            "name": "TS_KEY",
            "value": "event_time"
          },
          {
            "name": "TS_FORMAT",
            "value": "%Y-%m-%d %H:%M:%S.%f"
          },
          {
            "name": "CONTAINER",
            "value": "users"
          },
          {
            "name": "OUTPUT_STREAM_PATH",
            "value": "admin/examples/model-deployment-pipeline/data/incoming-events-stream"
          },
          {
            "name": "PARTITION_ATTR",
            "value": "user_id"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "config": {
          "spec.triggers.serving_stream": {
            "kind": "v3ioStream",
            "url": "http://v3io-webapi:8081/users/admin/examples/model-deployment-pipeline/data/generated-stream@eh",
            "attributes": {
              "seekTo": "earliest",
              "readBatchSize": 64,
              "pollingIntervalMs": 500
            },
            "maxWorkers": 10,
            "password": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          "metadata.labels.mlrun/class": "remote",
          "spec.serviceType": "NodePort",
          "spec.minReplicas": 1,
          "spec.maxReplicas": 1
        },
        "base_spec": {
          "apiVersion": "nuclio.io/v1",
          "kind": "Function",
          "metadata": {
            "annotations": {
              "nuclio.io/generated_by": "function generated from functions/event-handler.ipynb"
            },
            "labels": {
              "mlrun/class": "remote",
              "nuclio.io/project-name": "model-deployment-pipeline-admin"
            },
            "name": "model-deployment-pipeline-admin-event-handler"
          },
          "spec": {
            "build": {
              "baseImage": "mlrun/mlrun:0.7.0-rc11",
              "commands": [],
              "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG9zCmltcG9ydCBwYW5kYXMgYXMgcGQKaW1wb3J0IGpzb24KaW1wb3J0IGRhdGV0aW1lCmZyb20gZGF0ZXRpbWUgaW1wb3J0IGRhdGV0aW1lCmltcG9ydCB2M2lvLmRhdGFwbGFuZQoKZGVmIGluaXRfY29udGV4dChjb250ZXh0KToKICAgIHNldGF0dHIoY29udGV4dCwgJ3N0cmVhbV9zaW5rX2ZsYWcnLCBvcy5nZXRlbnYoJ1NUUkVBTV9TSU5LX0ZMQUcnKSkKICAgIHNldGF0dHIoY29udGV4dCwgJ3BhcnF1ZXRfc2lua19mbGFnJywgb3MuZ2V0ZW52KCdQQVJRVUVUX1NJTktfRkxBRycpKQoKICAgIGlmIGNvbnRleHQucGFycXVldF9zaW5rX2ZsYWcubG93ZXIoKSA9PSAndHJ1ZSc6CiAgICAgICAgc2V0YXR0cihjb250ZXh0LCAnYmF0Y2gnLCBbXSkKICAgICAgICBzZXRhdHRyKGNvbnRleHQsICdiYXRjaF9zaXplJywgaW50KG9zLmdldGVudignUEFSUVVFVF9CQVRDSF9TSVpFJywgMTAyNCkpKQoKICAgICAgICBzZXRhdHRyKGNvbnRleHQsICd0aW1lc3RhbXBfa2V5Jywgb3MuZ2V0ZW52KCdUU19LRVknKSkKICAgICAgICBzZXRhdHRyKGNvbnRleHQsICd0aW1lc3RhbXBfZm9ybWF0Jywgb3MuZ2V0ZW52KCdUU19GT1JNQVQnLCAnJVktJW0tJWQgJUg6JU06JVMuJWYnKSkKCiAgICAgICAgc2V0YXR0cihjb250ZXh0LCAncHFfcGFydGl0aW9ucycsIFsncHFfeWVhcicsICdwcV9tb250aCcsICdwcV9kYXknLCAncHFfaG91ciddKQoKICAgICAgICBzZXRhdHRyKGNvbnRleHQsICd0YXJnZXRfcGF0aCcsIG9zLmdldGVudignUEFSUVVFVF9UQVJHRVRfUEFUSCcpKQogICAgICAgIG9zLm1ha2VkaXJzKGNvbnRleHQudGFyZ2V0X3BhdGgsIGV4aXN0X29rPVRydWUpCgogICAgICAgIGZlYXR1cmVzID0gb3MuZ2V0ZW52KCdGRUFUVVJFUycpCiAgICAgICAgaWYgZmVhdHVyZXMgaXMgbm90IE5vbmU6CiAgICAgICAgICAgIGZlYXR1cmVzID0gZmVhdHVyZXMuc3BsaXQoJywnKQogICAgICAgIHNldGF0dHIoY29udGV4dCwgJ2ZlYXR1cmVzJywgZmVhdHVyZXMpCgogICAgICAgIHByZWRpY3Rpb25zID0gb3MuZ2V0ZW52KCdQUkVESUNUSU9OUycpCiAgICAgICAgaWYgcHJlZGljdGlvbnMgaXMgbm90IE5vbmU6CiAgICAgICAgICAgIHByZWRpY3Rpb25zID0gcHJlZGljdGlvbnMuc3BsaXQoJywnKQogICAgICAgIHNldGF0dHIoY29udGV4dCwgJ3ByZWRpY3Rpb25zJywgcHJlZGljdGlvbnMpCgogICAgaWYgY29udGV4dC5zdHJlYW1fc2lua19mbGFnLmxvd2VyKCkgPT0gJ3RydWUnOgogICAgICAgIHYzaW9fYWNjZXNzX2tleSA9IG9zLmdldGVudignVjNJT19BQ0NFU1NfS0VZJykKICAgICAgICBjb250YWluZXIgPSBvcy5nZXRlbnYoJ0NPTlRBSU5FUicpCiAgICAgICAgb3V0cHV0X3N0cmVhbV9wYXRoID0gb3MuZ2V0ZW52KCdPVVRQVVRfU1RSRUFNX1BBVEgnKQogICAgICAgIHBhcnRpdGlvbl9hdHRyID0gb3MuZ2V0ZW52KCdQQVJUSVRJT05fQVRUUicpCiAgICAgICAgdjNpb19hcGkgPSBvcy5nZXRlbnYoJ1YzSU9fQVBJJykKICAgICAgICB2M2lvX2NsaWVudCA9IHYzaW8uZGF0YXBsYW5lLkNsaWVudChlbmRwb2ludD12M2lvX2FwaSwgYWNjZXNzX2tleT12M2lvX2FjY2Vzc19rZXkpCgogICAgICAgIHNldGF0dHIoY29udGV4dCwgJ3YzaW9fY2xpZW50JywgdjNpb19jbGllbnQpCiAgICAgICAgc2V0YXR0cihjb250ZXh0LCAncGFydGl0aW9uX2F0dHInLCBwYXJ0aXRpb25fYXR0cikKICAgICAgICBzZXRhdHRyKGNvbnRleHQsICdjb250YWluZXInLCBjb250YWluZXIpCiAgICAgICAgc2V0YXR0cihjb250ZXh0LCAnb3V0cHV0X3N0cmVhbV9wYXRoJywgb3V0cHV0X3N0cmVhbV9wYXRoKQogICAgcGFzcwoKZGVmIGhhbmRsZXIoY29udGV4dCwgZXZlbnQpOgogICAgaWYgdHlwZShldmVudC5ib2R5KSBpcyBkaWN0OgogICAgICAgIGV2ZW50X2RpY3QgPSBldmVudC5ib2R5CiAgICBlbHNlOgogICAgICAgIGV2ZW50X2RpY3QgPSBqc29uLmxvYWRzKGV2ZW50LmJvZHkpCgogICAgY29udGV4dC5sb2dnZXIuaW5mb193aXRoKCdHb3QgaW52b2tlZCcsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJpZ2dlcl9raW5kPWV2ZW50LnRyaWdnZXIua2luZCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBldmVudF9ib2R5PWV2ZW50X2RpY3QpCgogICAgaWYgY29udGV4dC5zdHJlYW1fc2lua19mbGFnLmxvd2VyKCkgPT0gJ3RydWUnOgogICAgICAgIHN0cmVhbV9zaW5rX2hhbmRsZXIoY29udGV4dCwgZXZlbnRfZGljdCkKICAgIGlmIGNvbnRleHQucGFycXVldF9zaW5rX2ZsYWcubG93ZXIoKSA9PSAndHJ1ZSc6CiAgICAgICAgcGFycXVldF9zaW5rX2hhbmRsZXIoY29udGV4dCwgZXZlbnRfZGljdCkKICAgIHBhc3MKCgpkZWYgc3RyZWFtX3NpbmtfaGFuZGxlcihjb250ZXh0LCBldmVudCk6CiAgICBwYXJ0aXRpb25fa2V5ID0gZXZlbnQuZ2V0KGNvbnRleHQucGFydGl0aW9uX2F0dHIpCiAgICByZWNvcmQgPSBldmVudF90b19yZWNvcmQoZXZlbnQsIHBhcnRpdGlvbl9rZXkpCiAgICAKICAgIHJlc3AgPSBjb250ZXh0LnYzaW9fY2xpZW50LnN0cmVhbS5wdXRfcmVjb3Jkcyhjb250YWluZXI9Y29udGV4dC5jb250YWluZXIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RyZWFtX3BhdGg9Y29udGV4dC5vdXRwdXRfc3RyZWFtX3BhdGgsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVjb3Jkcz1bcmVjb3JkXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByYWlzZV9mb3Jfc3RhdHVzPXYzaW8uZGF0YXBsYW5lLlJhaXNlRm9yU3RhdHVzLm5ldmVyKQoKICAgIGNvbnRleHQubG9nZ2VyLmluZm9fd2l0aCgnU2VudCBldmVudCB0byBzdHJlYW0nLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlY29yZD1yZWNvcmQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2Vfc3RhdHVzPXJlc3Auc3RhdHVzX2NvZGUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2VfYm9keT1yZXNwLmJvZHkuZGVjb2RlKCd1dGYtOCcpKQogICAgcGFzcwoKCmRlZiBldmVudF90b19yZWNvcmQoZXZlbnRfZGljdCwgcGFydGl0aW9uX2tleSk6CiAgICBldmVudF9zdHIgPSBqc29uLmR1bXBzKGV2ZW50X2RpY3QpCiAgICByZXR1cm4geydkYXRhJzogZXZlbnRfc3RyLCAncGFydGl0aW9uX2tleSc6IHN0cihwYXJ0aXRpb25fa2V5KX0KCgpkZWYgcGFycXVldF9zaW5rX2hhbmRsZXIoY29udGV4dCwgZXZlbnQpOgogICAgaWYgY29udGV4dC5mZWF0dXJlcyBpcyBub3QgTm9uZSBhbmQgY29udGV4dC5wcmVkaWN0aW9ucyBpcyBub3QgTm9uZToKICAgICAgICBldmVudCA9IGZsYXR0ZW5faW5mZXJlbmNlX2V2ZW50KGNvbnRleHQsIGV2ZW50KQoKICAgIGV2ZW50X3dpdGhfdGltZV9wYXJ0aXRpb25zID0gYWRkX3RpbWVfcGFydGl0aW9uX2F0dHJpYnV0ZXMoY29udGV4dCwgZXZlbnQpCgogICAgY29udGV4dC5iYXRjaC5hcHBlbmQoZXZlbnRfd2l0aF90aW1lX3BhcnRpdGlvbnMpCgogICAgaWYgY29udGV4dC5iYXRjaF9zaXplID09IGxlbihjb250ZXh0LmJhdGNoKToKICAgICAgICB3cml0dGVuX3JlY29yZHMgPSB3cml0ZV9iYXRjaChjb250ZXh0KQogICAgICAgIGNvbnRleHQubG9nZ2VyLmluZm9fd2l0aCgnV3JpdHRlbiBiYXRjaCcsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFdyaXR0ZW50X3JlY29yZHM9d3JpdHRlbl9yZWNvcmRzKQogICAgcGFzcwoKCmRlZiBmbGF0dGVuX2luZmVyZW5jZV9ldmVudChjb250ZXh0LCBldmVudCk6CiAgICBmZWF0dXJlX3ZhbHVlcyA9IGV2ZW50WydyZXF1ZXN0J11bJ2luc3RhbmNlcyddWzBdCiAgICBldmVudC51cGRhdGUoemlwKGNvbnRleHQuZmVhdHVyZXMsIGZlYXR1cmVfdmFsdWVzKSkKCiAgICBwcmVkaWN0aW9uX3ZhbHVlcyA9IGV2ZW50WydyZXNwJ10KICAgIGV2ZW50LnVwZGF0ZSh6aXAoY29udGV4dC5wcmVkaWN0aW9ucywgcHJlZGljdGlvbl92YWx1ZXMpKQoKICAgIHJldHVybiBldmVudAoKCmRlZiBhZGRfdGltZV9wYXJ0aXRpb25fYXR0cmlidXRlcyhjb250ZXh0LCBldmVudCk6CiAgICBpZiBoYXNhdHRyKGNvbnRleHQsICd0aW1lc3RhbXBfa2V5JykgYW5kIGV2ZW50LmdldChjb250ZXh0LnRpbWVzdGFtcF9rZXkpIGlzIG5vdCBOb25lOgogICAgICAgIGR0X29iamVjdCA9IGRhdGV0aW1lLnN0cnB0aW1lKGV2ZW50W2NvbnRleHQudGltZXN0YW1wX2tleV0sIGNvbnRleHQudGltZXN0YW1wX2Zvcm1hdCkKICAgIGVsc2U6CiAgICAgICAgZHRfb2JqZWN0ID0gZGF0ZXRpbWUubm93KCkKCiAgICBldmVudFsncHFfeWVhciddID0gZHRfb2JqZWN0LnN0cmZ0aW1lKCclWScpCiAgICBldmVudFsncHFfbW9udGgnXSA9IGR0X29iamVjdC5zdHJmdGltZSgnJW0nKQogICAgZXZlbnRbJ3BxX2RheSddID0gZHRfb2JqZWN0LnN0cmZ0aW1lKCclZCcpCiAgICBldmVudFsncHFfaG91ciddID0gZHRfb2JqZWN0LnN0cmZ0aW1lKCclSCcpCgogICAgcmV0dXJuIGV2ZW50CgoKZGVmIHdyaXRlX2JhdGNoKGNvbnRleHQpOgogICAgZGYgPSBwZC5EYXRhRnJhbWUuZnJvbV9yZWNvcmRzKGNvbnRleHQuYmF0Y2gpCiAgICBkZi50b19wYXJxdWV0KHBhdGg9Y29udGV4dC50YXJnZXRfcGF0aCwgcGFydGl0aW9uX2NvbHM9Y29udGV4dC5wcV9wYXJ0aXRpb25zKQogICAgY29udGV4dC5iYXRjaCA9IFtdCiAgICByZXR1cm4gbGVuKGRmLmluZGV4KQoK",
              "noBaseImagesPull": true
            },
            "env": [
              {
                "name": "V3IO_API",
                "value": "v3io-webapi.default-tenant.svc:8081"
              },
              {
                "name": "V3IO_ACCESS_KEY",
                "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              },
              {
                "name": "PARQUET_SINK_FLAG",
                "value": "true"
              },
              {
                "name": "STREAM_SINK_FLAG",
                "value": "true"
              },
              {
                "name": "PARQUET_TARGET_PATH",
                "value": "/User/examples/model-deployment-pipeline/data/events-pq"
              },
              {
                "name": "PARQUET_BATCH_SIZE",
                "value": "8192"
              },
              {
                "name": "TS_KEY",
                "value": "event_time"
              },
              {
                "name": "TS_FORMAT",
                "value": "%Y-%m-%d %H:%M:%S.%f"
              },
              {
                "name": "CONTAINER",
                "value": "users"
              },
              {
                "name": "OUTPUT_STREAM_PATH",
                "value": "admin/examples/model-deployment-pipeline/data/incoming-events-stream"
              },
              {
                "name": "PARTITION_ATTR",
                "value": "user_id"
              },
              {
                "name": "V3IO_USERNAME",
                "value": "admin"
              },
              {
                "name": "V3IO_FRAMESD",
                "value": "framesd:8081"
              },
              {
                "name": "MLRUN_DEFAULT_PROJECT",
                "value": "model-deployment-pipeline-admin"
              },
              {
                "name": "MLRUN_DBPATH",
                "value": "http://mlrun-api:8080"
              },
              {
                "name": "MLRUN_NAMESPACE",
                "value": "default-tenant"
              }
            ],
            "handler": "event-handler:handler",
            "readinessTimeoutSeconds": 200,
            "runtime": "python:3.6",
            "volumes": [
              {
                "volume": {
                  "flexVolume": {
                    "driver": "v3io/fuse",
                    "options": {
                      "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
                    }
                  },
                  "name": "v3io"
                },
                "volumeMount": {
                  "mountPath": "/v3io",
                  "name": "v3io",
                  "subPath": ""
                }
              },
              {
                "volume": {
                  "flexVolume": {
                    "driver": "v3io/fuse",
                    "options": {
                      "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
                    }
                  },
                  "name": "v3io"
                },
                "volumeMount": {
                  "mountPath": "/User",
                  "name": "v3io",
                  "subPath": "users/admin"
                }
              }
            ],
            "triggers": {
              "serving_stream": {
                "kind": "v3ioStream",
                "url": "http://v3io-webapi:8081/users/admin/examples/model-deployment-pipeline/data/generated-stream@eh",
                "attributes": {
                  "seekTo": "earliest",
                  "readBatchSize": 64,
                  "pollingIntervalMs": 500
                },
                "maxWorkers": 10,
                "password": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "serviceType": "NodePort",
            "minReplicas": 1,
            "maxReplicas": 1
          }
        },
        "source": "",
        "function_kind": "mlrun",
        "build": {
          "commands": [],
          "code_origin": "functions/event-handler.ipynb",
          "origin_filename": "functions/event-handler.ipynb"
        },
        "default_handler": "handler",
        "mount_applied": true,
        "priority_class_name": "",
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "remote",
      "metadata": {
        "name": "stream-to-features",
        "tag": "latest",
        "project": "model-deployment-pipeline-admin",
        "hash": "bda6345c7bf08a6b8e2dbe647f4e39631595c132",
        "updated": "2021-08-29T20:07:50.494248+00:00"
      },
      "spec": {
        "command": "http://default-tenant.app.vmdev36.lab.iguazeng.com:31071",
        "args": [],
        "image": "",
        "description": "",
        "replicas": 1,
        "min_replicas": 1,
        "max_replicas": 4,
        "volumes": [],
        "volume_mounts": [],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "FEATURE_TABLE_PATH",
            "value": "admin/examples/model-deployment-pipeline/data/feature-table"
          },
          {
            "name": "SERVING_EVENTS",
            "value": "bet,win"
          },
          {
            "name": "FEATURE_LIST",
            "value": "socioeconomic_idx,purchase_sum,purchase_mean,purchase_count,purchase_var,bet_sum,bet_mean,bet_count,bet_var,win_sum,win_mean,win_count,win_var"
          },
          {
            "name": "CONTAINER",
            "value": "users"
          },
          {
            "name": "OUTPUT_STREAM_PATH",
            "value": "admin/examples/model-deployment-pipeline/data/serving-stream"
          },
          {
            "name": "PARTITION_ATTR",
            "value": "user_id"
          },
          {
            "name": "ENRICHMENT_TABLE_PATH",
            "value": "admin/examples/model-deployment-pipeline/data/enrichment-table"
          },
          {
            "name": "ENRICHMENT_KEY",
            "value": "postcode"
          }
        ],
        "config": {
          "spec.triggers.serving_stream": {
            "kind": "v3ioStream",
            "url": "http://v3io-webapi:8081/users/admin/examples/model-deployment-pipeline/data/incoming-events-stream@stf",
            "attributes": {
              "seekTo": "earliest",
              "readBatchSize": 64,
              "pollingIntervalMs": 500
            },
            "maxWorkers": 10,
            "password": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          }
        },
        "base_spec": {
          "apiVersion": "nuclio.io/v1",
          "kind": "Function",
          "metadata": {
            "annotations": {
              "nuclio.io/generated_by": "function generated from functions/stream-to-features.ipynb"
            },
            "labels": {},
            "name": "stream-to-features"
          },
          "spec": {
            "build": {
              "baseImage": "mlrun/mlrun",
              "commands": [],
              "functionSourceCode": "",
              "noBaseImagesPull": true
            },
            "env": [],
            "handler": "stream-to-features:handler",
            "runtime": "python:3.6",
            "volumes": []
          }
        },
        "source": "",
        "build": {
          "commands": [],
          "code_origin": "functions/stream-to-features.ipynb",
          "origin_filename": "functions/stream-to-features.ipynb"
        },
        "readiness_timeout": 200,
        "default_handler": "handler",
        "mount_applied": false,
        "affinity": null
      },
      "status": {
        "state": "ready",
        "nuclio_name": "model-deployment-pipeline-admin-stream-to-features",
        "address": "default-tenant.app.vmdev36.lab.iguazeng.com:31071",
        "internal_invocation_urls": [
          "nuclio-model-deployment-pipeline-admin-stream-to-features.default-tenant.svc.cluster.local:8080"
        ],
        "external_invocation_urls": [
          "default-tenant.app.vmdev36.lab.iguazeng.com:31071"
        ]
      },
      "verbose": false
    },
    {
      "kind": "remote",
      "metadata": {
        "name": "stream-to-features",
        "tag": "",
        "project": "model-deployment-pipeline-admin",
        "categories": [],
        "hash": "5ba272fa0906fa24f067b56b5f97ae68e743efe3",
        "updated": "2021-08-29T20:07:50.343978+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "",
        "description": "",
        "replicas": 1,
        "min_replicas": 1,
        "max_replicas": 4,
        "volumes": [],
        "volume_mounts": [],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "FEATURE_TABLE_PATH",
            "value": "admin/examples/model-deployment-pipeline/data/feature-table"
          },
          {
            "name": "SERVING_EVENTS",
            "value": "bet,win"
          },
          {
            "name": "FEATURE_LIST",
            "value": "socioeconomic_idx,purchase_sum,purchase_mean,purchase_count,purchase_var,bet_sum,bet_mean,bet_count,bet_var,win_sum,win_mean,win_count,win_var"
          },
          {
            "name": "CONTAINER",
            "value": "users"
          },
          {
            "name": "OUTPUT_STREAM_PATH",
            "value": "admin/examples/model-deployment-pipeline/data/serving-stream"
          },
          {
            "name": "PARTITION_ATTR",
            "value": "user_id"
          },
          {
            "name": "ENRICHMENT_TABLE_PATH",
            "value": "admin/examples/model-deployment-pipeline/data/enrichment-table"
          },
          {
            "name": "ENRICHMENT_KEY",
            "value": "postcode"
          }
        ],
        "config": {
          "spec.triggers.serving_stream": {
            "kind": "v3ioStream",
            "url": "http://v3io-webapi:8081/users/admin/examples/model-deployment-pipeline/data/incoming-events-stream@stf",
            "attributes": {
              "seekTo": "earliest",
              "readBatchSize": 64,
              "pollingIntervalMs": 500
            },
            "maxWorkers": 10,
            "password": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          "metadata.labels.mlrun/class": "remote",
          "spec.serviceType": "NodePort",
          "spec.readinessTimeoutSeconds": 200,
          "spec.minReplicas": 1,
          "spec.maxReplicas": 1
        },
        "base_spec": {
          "apiVersion": "nuclio.io/v1",
          "kind": "Function",
          "metadata": {
            "annotations": {
              "nuclio.io/generated_by": "function generated from functions/stream-to-features.ipynb"
            },
            "labels": {
              "mlrun/class": "remote",
              "nuclio.io/project-name": "model-deployment-pipeline-admin"
            },
            "name": "model-deployment-pipeline-admin-stream-to-features"
          },
          "spec": {
            "build": {
              "baseImage": "mlrun/mlrun:0.7.0-rc11",
              "commands": [],
              "functionSourceCode": "",
              "noBaseImagesPull": true
            },
            "env": [
              {
                "name": "V3IO_API",
                "value": "v3io-webapi.default-tenant.svc:8081"
              },
              {
                "name": "V3IO_ACCESS_KEY",
                "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              },
              {
                "name": "FEATURE_TABLE_PATH",
                "value": "admin/examples/model-deployment-pipeline/data/feature-table"
              },
              {
                "name": "SERVING_EVENTS",
                "value": "bet,win"
              },
              {
                "name": "FEATURE_LIST",
                "value": "socioeconomic_idx,purchase_sum,purchase_mean,purchase_count,purchase_var,bet_sum,bet_mean,bet_count,bet_var,win_sum,win_mean,win_count,win_var"
              },
              {
                "name": "CONTAINER",
                "value": "users"
              },
              {
                "name": "OUTPUT_STREAM_PATH",
                "value": "admin/examples/model-deployment-pipeline/data/serving-stream"
              },
              {
                "name": "PARTITION_ATTR",
                "value": "user_id"
              },
              {
                "name": "ENRICHMENT_TABLE_PATH",
                "value": "admin/examples/model-deployment-pipeline/data/enrichment-table"
              },
              {
                "name": "ENRICHMENT_KEY",
                "value": "postcode"
              },
              {
                "name": "MLRUN_DEFAULT_PROJECT",
                "value": "model-deployment-pipeline-admin"
              },
              {
                "name": "MLRUN_DBPATH",
                "value": "http://mlrun-api:8080"
              },
              {
                "name": "MLRUN_NAMESPACE",
                "value": "default-tenant"
              }
            ],
            "handler": "stream-to-features:handler",
            "runtime": "python:3.6",
            "volumes": [],
            "triggers": {
              "serving_stream": {
                "kind": "v3ioStream",
                "url": "http://v3io-webapi:8081/users/admin/examples/model-deployment-pipeline/data/incoming-events-stream@stf",
                "attributes": {
                  "seekTo": "earliest",
                  "readBatchSize": 64,
                  "pollingIntervalMs": 500
                },
                "maxWorkers": 10,
                "password": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "serviceType": "NodePort",
            "readinessTimeoutSeconds": 200,
            "minReplicas": 1,
            "maxReplicas": 1
          }
        },
        "source": "",
        "function_kind": "mlrun",
        "build": {
          "commands": [],
          "code_origin": "functions/stream-to-features.ipynb",
          "origin_filename": "functions/stream-to-features.ipynb"
        },
        "readiness_timeout": 200,
        "default_handler": "handler",
        "mount_applied": false,
        "priority_class_name": "",
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "remote",
      "metadata": {
        "name": "model-server",
        "hash": "355407f5d29fa35a4fbfd04bd428c2c8bb6056c4",
        "project": "model-deployment-pipeline-admin",
        "labels": {
          "author": "yaronh",
          "framework": "sklearn"
        },
        "categories": [
          "serving",
          "ml"
        ],
        "tag": "latest",
        "updated": "2021-08-29T20:08:10.407163+00:00"
      },
      "spec": {
        "command": "http://default-tenant.app.vmdev36.lab.iguazeng.com:30135",
        "args": [],
        "image": "",
        "description": "generic sklearn model server",
        "replicas": 1,
        "min_replicas": 1,
        "max_replicas": 4,
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "MODEL_CLASS",
            "value": "ClassifierModel"
          },
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          },
          {
            "name": "SERVING_MODEL_my_model",
            "value": "/User/demos/model-deployment-pipeline/assets/model.pkl"
          },
          {
            "name": "INFERENCE_STREAM",
            "value": "users/admin/examples/model-deployment-pipeline/data/inference-stream"
          }
        ],
        "config": {
          "spec.triggers.serving_stream": {
            "kind": "v3ioStream",
            "url": "http://v3io-webapi:8081/users/admin/examples/model-deployment-pipeline/data/serving-stream@ms",
            "attributes": {
              "seekTo": "earliest",
              "readBatchSize": 64,
              "pollingIntervalMs": 500
            },
            "maxWorkers": 10,
            "password": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          }
        },
        "base_spec": {
          "apiVersion": "nuclio.io/v1",
          "kind": "serving",
          "metadata": {
            "annotations": {
              "nuclio.io/generated_by": "function generated from /Users/hediingber/iguazio/misc-workspace/mlrun/functions/model_server/model_server.ipynb"
            },
            "labels": {},
            "name": "model-server"
          },
          "spec": {
            "build": {
              "baseImage": "mlrun/mlrun",
              "commands": [],
              "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG1scnVuCgpmcm9tIGNsb3VkcGlja2xlIGltcG9ydCBsb2FkCmZyb20gdHlwaW5nIGltcG9ydCBMaXN0CmZyb20gZGF0ZXRpbWUgaW1wb3J0IGRhdGV0aW1lCmZyb20gc2tsZWFybi5kYXRhc2V0cyBpbXBvcnQgbG9hZF9pcmlzCgppbXBvcnQgd2FybmluZ3MKd2FybmluZ3MuZmlsdGVyd2FybmluZ3MoJ2lnbm9yZScpCgppbXBvcnQgb3MKaW1wb3J0IG51bXB5IGFzIG5wCgpjbGFzcyBDbGFzc2lmaWVyTW9kZWwobWxydW4ucnVudGltZXMuTUxNb2RlbFNlcnZlcik6CiAgICBkZWYgbG9hZChzZWxmKToKICAgICAgICAiIiJMb2FkIG1vZGVsIGZyb20gc3RvcmFnZS4iIiIKICAgICAgICBtb2RlbF9maWxlLCBleHRyYV9kYXRhID0gc2VsZi5nZXRfbW9kZWwoJy5wa2wnKQogICAgICAgIHNlbGYubW9kZWwgPSBsb2FkKG9wZW4obW9kZWxfZmlsZSwgJ3JiJykpCgogICAgZGVmIHByZWRpY3Qoc2VsZiwgYm9keTogZGljdCkgLT4gTGlzdDoKICAgICAgICAiIiJHZW5lcmF0ZSBtb2RlbCBwcmVkaWN0aW9ucyBmcm9tIHNhbXBsZS4KICAgICAgICAKICAgICAgICA6cGFyYW0gYm9keSA6IEEgZGljdCBvZiBvYnNlcnZhdGlvbnMsIGVhY2ggb2Ygd2hpY2ggaXMgYW4gMS1kaW1lbnNpb25hbCBmZWF0dXJlIHZlY3Rvci4KICAgICAgICAgICAgCiAgICAgICAgUmV0dXJucyBtb2RlbCBwcmVkaWN0aW9ucyBhcyBhIGBMaXN0YCwgb25lIGZvciBlYWNoIHJvdyBpbiB0aGUgYGJvZHlgIGlucHV0IGBMaXN0YC4KICAgICAgICAiIiIKICAgICAgICB0cnk6CiAgICAgICAgICAgIGZlYXRzID0gbnAuYXNhcnJheShib2R5WydpbnN0YW5jZXMnXSkKICAgICAgICAgICAgcmVzdWx0OiBucC5uZGFycmF5ID0gc2VsZi5tb2RlbC5wcmVkaWN0KGZlYXRzKQogICAgICAgICAgICByZXNwID0gcmVzdWx0LnRvbGlzdCgpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICByYWlzZSBFeGNlcHRpb24oZiJGYWlsZWQgdG8gcHJlZGljdCB7ZX0iKQogICAgICAgIAogICAgICAgIHJldHVybiByZXNwCgoKZnJvbSBtbHJ1bi5ydW50aW1lcyBpbXBvcnQgbnVjbGlvX2luaXRfaG9vawpkZWYgaW5pdF9jb250ZXh0KGNvbnRleHQpOgogICAgbnVjbGlvX2luaXRfaG9vayhjb250ZXh0LCBnbG9iYWxzKCksICdzZXJ2aW5nJykKCmRlZiBoYW5kbGVyKGNvbnRleHQsIGV2ZW50KToKICAgIHJldHVybiBjb250ZXh0Lm1scnVuX2hhbmRsZXIoY29udGV4dCwgZXZlbnQpCg==",
              "noBaseImagesPull": true
            },
            "env": [
              {
                "name": "MODEL_CLASS",
                "value": "ClassifierModel"
              }
            ],
            "handler": "model_server:handler",
            "runtime": "python:3.6",
            "volumes": []
          }
        },
        "source": "",
        "function_kind": "mlrun",
        "build": {
          "commands": []
        },
        "readiness_timeout": 200,
        "mount_applied": true,
        "affinity": null
      },
      "status": {
        "state": "ready",
        "nuclio_name": "model-deployment-pipeline-admin-model-server",
        "address": "default-tenant.app.vmdev36.lab.iguazeng.com:30135",
        "internal_invocation_urls": [
          "nuclio-model-deployment-pipeline-admin-model-server.default-tenant.svc.cluster.local:8080"
        ],
        "external_invocation_urls": [
          "default-tenant.app.vmdev36.lab.iguazeng.com:30135"
        ]
      },
      "verbose": false
    },
    {
      "kind": "remote",
      "metadata": {
        "name": "model-server",
        "hash": "ca4504d0ea906c14070f2f29945afaceacbd26ba",
        "project": "model-deployment-pipeline-admin",
        "labels": {
          "author": "yaronh",
          "framework": "sklearn"
        },
        "categories": [
          "serving",
          "ml"
        ],
        "tag": "",
        "updated": "2021-08-29T20:08:10.291721+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "",
        "description": "generic sklearn model server",
        "replicas": 1,
        "min_replicas": 1,
        "max_replicas": 4,
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "MODEL_CLASS",
            "value": "ClassifierModel"
          },
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          },
          {
            "name": "SERVING_MODEL_my_model",
            "value": "/User/demos/model-deployment-pipeline/assets/model.pkl"
          },
          {
            "name": "INFERENCE_STREAM",
            "value": "users/admin/examples/model-deployment-pipeline/data/inference-stream"
          }
        ],
        "config": {
          "spec.triggers.serving_stream": {
            "kind": "v3ioStream",
            "url": "http://v3io-webapi:8081/users/admin/examples/model-deployment-pipeline/data/serving-stream@ms",
            "attributes": {
              "seekTo": "earliest",
              "readBatchSize": 64,
              "pollingIntervalMs": 500
            },
            "maxWorkers": 10,
            "password": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          "metadata.labels.mlrun/class": "remote",
          "spec.serviceType": "NodePort",
          "spec.readinessTimeoutSeconds": 200,
          "spec.minReplicas": 1,
          "spec.maxReplicas": 1
        },
        "base_spec": {
          "apiVersion": "nuclio.io/v1",
          "kind": "serving",
          "metadata": {
            "annotations": {
              "nuclio.io/generated_by": "function generated from /Users/hediingber/iguazio/misc-workspace/mlrun/functions/model_server/model_server.ipynb"
            },
            "labels": {
              "mlrun/class": "remote",
              "nuclio.io/project-name": "model-deployment-pipeline-admin"
            },
            "name": "model-deployment-pipeline-admin-model-server"
          },
          "spec": {
            "build": {
              "baseImage": "mlrun/mlrun:0.7.0-rc11",
              "commands": [],
              "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG1scnVuCgpmcm9tIGNsb3VkcGlja2xlIGltcG9ydCBsb2FkCmZyb20gdHlwaW5nIGltcG9ydCBMaXN0CmZyb20gZGF0ZXRpbWUgaW1wb3J0IGRhdGV0aW1lCmZyb20gc2tsZWFybi5kYXRhc2V0cyBpbXBvcnQgbG9hZF9pcmlzCgppbXBvcnQgd2FybmluZ3MKd2FybmluZ3MuZmlsdGVyd2FybmluZ3MoJ2lnbm9yZScpCgppbXBvcnQgb3MKaW1wb3J0IG51bXB5IGFzIG5wCgpjbGFzcyBDbGFzc2lmaWVyTW9kZWwobWxydW4ucnVudGltZXMuTUxNb2RlbFNlcnZlcik6CiAgICBkZWYgbG9hZChzZWxmKToKICAgICAgICAiIiJMb2FkIG1vZGVsIGZyb20gc3RvcmFnZS4iIiIKICAgICAgICBtb2RlbF9maWxlLCBleHRyYV9kYXRhID0gc2VsZi5nZXRfbW9kZWwoJy5wa2wnKQogICAgICAgIHNlbGYubW9kZWwgPSBsb2FkKG9wZW4obW9kZWxfZmlsZSwgJ3JiJykpCgogICAgZGVmIHByZWRpY3Qoc2VsZiwgYm9keTogZGljdCkgLT4gTGlzdDoKICAgICAgICAiIiJHZW5lcmF0ZSBtb2RlbCBwcmVkaWN0aW9ucyBmcm9tIHNhbXBsZS4KICAgICAgICAKICAgICAgICA6cGFyYW0gYm9keSA6IEEgZGljdCBvZiBvYnNlcnZhdGlvbnMsIGVhY2ggb2Ygd2hpY2ggaXMgYW4gMS1kaW1lbnNpb25hbCBmZWF0dXJlIHZlY3Rvci4KICAgICAgICAgICAgCiAgICAgICAgUmV0dXJucyBtb2RlbCBwcmVkaWN0aW9ucyBhcyBhIGBMaXN0YCwgb25lIGZvciBlYWNoIHJvdyBpbiB0aGUgYGJvZHlgIGlucHV0IGBMaXN0YC4KICAgICAgICAiIiIKICAgICAgICB0cnk6CiAgICAgICAgICAgIGZlYXRzID0gbnAuYXNhcnJheShib2R5WydpbnN0YW5jZXMnXSkKICAgICAgICAgICAgcmVzdWx0OiBucC5uZGFycmF5ID0gc2VsZi5tb2RlbC5wcmVkaWN0KGZlYXRzKQogICAgICAgICAgICByZXNwID0gcmVzdWx0LnRvbGlzdCgpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICByYWlzZSBFeGNlcHRpb24oZiJGYWlsZWQgdG8gcHJlZGljdCB7ZX0iKQogICAgICAgIAogICAgICAgIHJldHVybiByZXNwCgoKZnJvbSBtbHJ1bi5ydW50aW1lcyBpbXBvcnQgbnVjbGlvX2luaXRfaG9vawpkZWYgaW5pdF9jb250ZXh0KGNvbnRleHQpOgogICAgbnVjbGlvX2luaXRfaG9vayhjb250ZXh0LCBnbG9iYWxzKCksICdzZXJ2aW5nJykKCmRlZiBoYW5kbGVyKGNvbnRleHQsIGV2ZW50KToKICAgIHJldHVybiBjb250ZXh0Lm1scnVuX2hhbmRsZXIoY29udGV4dCwgZXZlbnQpCg==",
              "noBaseImagesPull": true
            },
            "env": [
              {
                "name": "MODEL_CLASS",
                "value": "ClassifierModel"
              },
              {
                "name": "V3IO_API",
                "value": "v3io-webapi.default-tenant.svc:8081"
              },
              {
                "name": "V3IO_USERNAME",
                "value": "admin"
              },
              {
                "name": "V3IO_ACCESS_KEY",
                "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              },
              {
                "name": "V3IO_FRAMESD",
                "value": "framesd:8081"
              },
              {
                "name": "SERVING_MODEL_my_model",
                "value": "/User/demos/model-deployment-pipeline/assets/model.pkl"
              },
              {
                "name": "INFERENCE_STREAM",
                "value": "users/admin/examples/model-deployment-pipeline/data/inference-stream"
              },
              {
                "name": "MLRUN_DEFAULT_PROJECT",
                "value": "model-deployment-pipeline-admin"
              },
              {
                "name": "MLRUN_DBPATH",
                "value": "http://mlrun-api:8080"
              },
              {
                "name": "MLRUN_NAMESPACE",
                "value": "default-tenant"
              }
            ],
            "handler": "model_server:handler",
            "runtime": "python:3.6",
            "volumes": [
              {
                "volume": {
                  "flexVolume": {
                    "driver": "v3io/fuse",
                    "options": {
                      "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
                    }
                  },
                  "name": "v3io"
                },
                "volumeMount": {
                  "mountPath": "/v3io",
                  "name": "v3io",
                  "subPath": ""
                }
              },
              {
                "volume": {
                  "flexVolume": {
                    "driver": "v3io/fuse",
                    "options": {
                      "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
                    }
                  },
                  "name": "v3io"
                },
                "volumeMount": {
                  "mountPath": "/User",
                  "name": "v3io",
                  "subPath": "users/admin"
                }
              }
            ],
            "triggers": {
              "serving_stream": {
                "kind": "v3ioStream",
                "url": "http://v3io-webapi:8081/users/admin/examples/model-deployment-pipeline/data/serving-stream@ms",
                "attributes": {
                  "seekTo": "earliest",
                  "readBatchSize": 64,
                  "pollingIntervalMs": 500
                },
                "maxWorkers": 10,
                "password": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "serviceType": "NodePort",
            "readinessTimeoutSeconds": 200,
            "minReplicas": 1,
            "maxReplicas": 1
          }
        },
        "source": "",
        "function_kind": "mlrun",
        "build": {
          "commands": []
        },
        "readiness_timeout": 200,
        "mount_applied": true,
        "priority_class_name": "",
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "remote",
      "metadata": {
        "name": "inference-logger",
        "tag": "latest",
        "project": "model-deployment-pipeline-admin",
        "hash": "f977b2acb381d7e33f319b16482a0ec48a4e177d",
        "updated": "2021-08-29T20:08:35.051658+00:00"
      },
      "spec": {
        "command": "http://default-tenant.app.vmdev36.lab.iguazeng.com:30243",
        "args": [],
        "image": "",
        "description": "",
        "replicas": 1,
        "min_replicas": 1,
        "max_replicas": 4,
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "PARQUET_SINK_FLAG",
            "value": "true"
          },
          {
            "name": "STREAM_SINK_FLAG",
            "value": "false"
          },
          {
            "name": "PARQUET_TARGET_PATH",
            "value": "/User/examples/model-deployment-pipeline/data/inference-pq"
          },
          {
            "name": "PARQUET_BATCH_SIZE",
            "value": "8192"
          },
          {
            "name": "TS_KEY",
            "value": "when"
          },
          {
            "name": "TS_FORMAT",
            "value": "%Y-%m-%d %H:%M:%S.%f"
          },
          {
            "name": "FEATURES",
            "value": "socioeconomic_idx,purchase_sum,purchase_mean,purchase_count,purchase_var,bet_sum,bet_mean,bet_count,bet_var,win_sum,win_mean,win_count,win_var"
          },
          {
            "name": "PREDICTIONS",
            "value": "about_to_churn"
          },
          {
            "name": "CONTAINER",
            "value": "users"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "config": {
          "spec.triggers.inference_stream": {
            "kind": "v3ioStream",
            "url": "http://v3io-webapi:8081/users/admin/examples/model-deployment-pipeline/data/inference-stream@il",
            "attributes": {
              "seekTo": "earliest",
              "readBatchSize": 64,
              "pollingIntervalMs": 500
            },
            "maxWorkers": 10,
            "password": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          }
        },
        "base_spec": {
          "apiVersion": "nuclio.io/v1",
          "kind": "Function",
          "metadata": {
            "annotations": {
              "nuclio.io/generated_by": "function generated from functions/event-handler.ipynb"
            },
            "labels": {},
            "name": "inference-logger"
          },
          "spec": {
            "build": {
              "baseImage": "mlrun/mlrun",
              "commands": [],
              "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG9zCmltcG9ydCBwYW5kYXMgYXMgcGQKaW1wb3J0IGpzb24KaW1wb3J0IGRhdGV0aW1lCmZyb20gZGF0ZXRpbWUgaW1wb3J0IGRhdGV0aW1lCmltcG9ydCB2M2lvLmRhdGFwbGFuZQoKZGVmIGluaXRfY29udGV4dChjb250ZXh0KToKICAgIHNldGF0dHIoY29udGV4dCwgJ3N0cmVhbV9zaW5rX2ZsYWcnLCBvcy5nZXRlbnYoJ1NUUkVBTV9TSU5LX0ZMQUcnKSkKICAgIHNldGF0dHIoY29udGV4dCwgJ3BhcnF1ZXRfc2lua19mbGFnJywgb3MuZ2V0ZW52KCdQQVJRVUVUX1NJTktfRkxBRycpKQoKICAgIGlmIGNvbnRleHQucGFycXVldF9zaW5rX2ZsYWcubG93ZXIoKSA9PSAndHJ1ZSc6CiAgICAgICAgc2V0YXR0cihjb250ZXh0LCAnYmF0Y2gnLCBbXSkKICAgICAgICBzZXRhdHRyKGNvbnRleHQsICdiYXRjaF9zaXplJywgaW50KG9zLmdldGVudignUEFSUVVFVF9CQVRDSF9TSVpFJywgMTAyNCkpKQoKICAgICAgICBzZXRhdHRyKGNvbnRleHQsICd0aW1lc3RhbXBfa2V5Jywgb3MuZ2V0ZW52KCdUU19LRVknKSkKICAgICAgICBzZXRhdHRyKGNvbnRleHQsICd0aW1lc3RhbXBfZm9ybWF0Jywgb3MuZ2V0ZW52KCdUU19GT1JNQVQnLCAnJVktJW0tJWQgJUg6JU06JVMuJWYnKSkKCiAgICAgICAgc2V0YXR0cihjb250ZXh0LCAncHFfcGFydGl0aW9ucycsIFsncHFfeWVhcicsICdwcV9tb250aCcsICdwcV9kYXknLCAncHFfaG91ciddKQoKICAgICAgICBzZXRhdHRyKGNvbnRleHQsICd0YXJnZXRfcGF0aCcsIG9zLmdldGVudignUEFSUVVFVF9UQVJHRVRfUEFUSCcpKQogICAgICAgIG9zLm1ha2VkaXJzKGNvbnRleHQudGFyZ2V0X3BhdGgsIGV4aXN0X29rPVRydWUpCgogICAgICAgIGZlYXR1cmVzID0gb3MuZ2V0ZW52KCdGRUFUVVJFUycpCiAgICAgICAgaWYgZmVhdHVyZXMgaXMgbm90IE5vbmU6CiAgICAgICAgICAgIGZlYXR1cmVzID0gZmVhdHVyZXMuc3BsaXQoJywnKQogICAgICAgIHNldGF0dHIoY29udGV4dCwgJ2ZlYXR1cmVzJywgZmVhdHVyZXMpCgogICAgICAgIHByZWRpY3Rpb25zID0gb3MuZ2V0ZW52KCdQUkVESUNUSU9OUycpCiAgICAgICAgaWYgcHJlZGljdGlvbnMgaXMgbm90IE5vbmU6CiAgICAgICAgICAgIHByZWRpY3Rpb25zID0gcHJlZGljdGlvbnMuc3BsaXQoJywnKQogICAgICAgIHNldGF0dHIoY29udGV4dCwgJ3ByZWRpY3Rpb25zJywgcHJlZGljdGlvbnMpCgogICAgaWYgY29udGV4dC5zdHJlYW1fc2lua19mbGFnLmxvd2VyKCkgPT0gJ3RydWUnOgogICAgICAgIHYzaW9fYWNjZXNzX2tleSA9IG9zLmdldGVudignVjNJT19BQ0NFU1NfS0VZJykKICAgICAgICBjb250YWluZXIgPSBvcy5nZXRlbnYoJ0NPTlRBSU5FUicpCiAgICAgICAgb3V0cHV0X3N0cmVhbV9wYXRoID0gb3MuZ2V0ZW52KCdPVVRQVVRfU1RSRUFNX1BBVEgnKQogICAgICAgIHBhcnRpdGlvbl9hdHRyID0gb3MuZ2V0ZW52KCdQQVJUSVRJT05fQVRUUicpCiAgICAgICAgdjNpb19hcGkgPSBvcy5nZXRlbnYoJ1YzSU9fQVBJJykKICAgICAgICB2M2lvX2NsaWVudCA9IHYzaW8uZGF0YXBsYW5lLkNsaWVudChlbmRwb2ludD12M2lvX2FwaSwgYWNjZXNzX2tleT12M2lvX2FjY2Vzc19rZXkpCgogICAgICAgIHNldGF0dHIoY29udGV4dCwgJ3YzaW9fY2xpZW50JywgdjNpb19jbGllbnQpCiAgICAgICAgc2V0YXR0cihjb250ZXh0LCAncGFydGl0aW9uX2F0dHInLCBwYXJ0aXRpb25fYXR0cikKICAgICAgICBzZXRhdHRyKGNvbnRleHQsICdjb250YWluZXInLCBjb250YWluZXIpCiAgICAgICAgc2V0YXR0cihjb250ZXh0LCAnb3V0cHV0X3N0cmVhbV9wYXRoJywgb3V0cHV0X3N0cmVhbV9wYXRoKQogICAgcGFzcwoKZGVmIGhhbmRsZXIoY29udGV4dCwgZXZlbnQpOgogICAgaWYgdHlwZShldmVudC5ib2R5KSBpcyBkaWN0OgogICAgICAgIGV2ZW50X2RpY3QgPSBldmVudC5ib2R5CiAgICBlbHNlOgogICAgICAgIGV2ZW50X2RpY3QgPSBqc29uLmxvYWRzKGV2ZW50LmJvZHkpCgogICAgY29udGV4dC5sb2dnZXIuaW5mb193aXRoKCdHb3QgaW52b2tlZCcsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJpZ2dlcl9raW5kPWV2ZW50LnRyaWdnZXIua2luZCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBldmVudF9ib2R5PWV2ZW50X2RpY3QpCgogICAgaWYgY29udGV4dC5zdHJlYW1fc2lua19mbGFnLmxvd2VyKCkgPT0gJ3RydWUnOgogICAgICAgIHN0cmVhbV9zaW5rX2hhbmRsZXIoY29udGV4dCwgZXZlbnRfZGljdCkKICAgIGlmIGNvbnRleHQucGFycXVldF9zaW5rX2ZsYWcubG93ZXIoKSA9PSAndHJ1ZSc6CiAgICAgICAgcGFycXVldF9zaW5rX2hhbmRsZXIoY29udGV4dCwgZXZlbnRfZGljdCkKICAgIHBhc3MKCgpkZWYgc3RyZWFtX3NpbmtfaGFuZGxlcihjb250ZXh0LCBldmVudCk6CiAgICBwYXJ0aXRpb25fa2V5ID0gZXZlbnQuZ2V0KGNvbnRleHQucGFydGl0aW9uX2F0dHIpCiAgICByZWNvcmQgPSBldmVudF90b19yZWNvcmQoZXZlbnQsIHBhcnRpdGlvbl9rZXkpCiAgICAKICAgIHJlc3AgPSBjb250ZXh0LnYzaW9fY2xpZW50LnN0cmVhbS5wdXRfcmVjb3Jkcyhjb250YWluZXI9Y29udGV4dC5jb250YWluZXIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RyZWFtX3BhdGg9Y29udGV4dC5vdXRwdXRfc3RyZWFtX3BhdGgsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVjb3Jkcz1bcmVjb3JkXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByYWlzZV9mb3Jfc3RhdHVzPXYzaW8uZGF0YXBsYW5lLlJhaXNlRm9yU3RhdHVzLm5ldmVyKQoKICAgIGNvbnRleHQubG9nZ2VyLmluZm9fd2l0aCgnU2VudCBldmVudCB0byBzdHJlYW0nLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlY29yZD1yZWNvcmQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2Vfc3RhdHVzPXJlc3Auc3RhdHVzX2NvZGUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2VfYm9keT1yZXNwLmJvZHkuZGVjb2RlKCd1dGYtOCcpKQogICAgcGFzcwoKCmRlZiBldmVudF90b19yZWNvcmQoZXZlbnRfZGljdCwgcGFydGl0aW9uX2tleSk6CiAgICBldmVudF9zdHIgPSBqc29uLmR1bXBzKGV2ZW50X2RpY3QpCiAgICByZXR1cm4geydkYXRhJzogZXZlbnRfc3RyLCAncGFydGl0aW9uX2tleSc6IHN0cihwYXJ0aXRpb25fa2V5KX0KCgpkZWYgcGFycXVldF9zaW5rX2hhbmRsZXIoY29udGV4dCwgZXZlbnQpOgogICAgaWYgY29udGV4dC5mZWF0dXJlcyBpcyBub3QgTm9uZSBhbmQgY29udGV4dC5wcmVkaWN0aW9ucyBpcyBub3QgTm9uZToKICAgICAgICBldmVudCA9IGZsYXR0ZW5faW5mZXJlbmNlX2V2ZW50KGNvbnRleHQsIGV2ZW50KQoKICAgIGV2ZW50X3dpdGhfdGltZV9wYXJ0aXRpb25zID0gYWRkX3RpbWVfcGFydGl0aW9uX2F0dHJpYnV0ZXMoY29udGV4dCwgZXZlbnQpCgogICAgY29udGV4dC5iYXRjaC5hcHBlbmQoZXZlbnRfd2l0aF90aW1lX3BhcnRpdGlvbnMpCgogICAgaWYgY29udGV4dC5iYXRjaF9zaXplID09IGxlbihjb250ZXh0LmJhdGNoKToKICAgICAgICB3cml0dGVuX3JlY29yZHMgPSB3cml0ZV9iYXRjaChjb250ZXh0KQogICAgICAgIGNvbnRleHQubG9nZ2VyLmluZm9fd2l0aCgnV3JpdHRlbiBiYXRjaCcsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFdyaXR0ZW50X3JlY29yZHM9d3JpdHRlbl9yZWNvcmRzKQogICAgcGFzcwoKCmRlZiBmbGF0dGVuX2luZmVyZW5jZV9ldmVudChjb250ZXh0LCBldmVudCk6CiAgICBmZWF0dXJlX3ZhbHVlcyA9IGV2ZW50WydyZXF1ZXN0J11bJ2luc3RhbmNlcyddWzBdCiAgICBldmVudC51cGRhdGUoemlwKGNvbnRleHQuZmVhdHVyZXMsIGZlYXR1cmVfdmFsdWVzKSkKCiAgICBwcmVkaWN0aW9uX3ZhbHVlcyA9IGV2ZW50WydyZXNwJ10KICAgIGV2ZW50LnVwZGF0ZSh6aXAoY29udGV4dC5wcmVkaWN0aW9ucywgcHJlZGljdGlvbl92YWx1ZXMpKQoKICAgIHJldHVybiBldmVudAoKCmRlZiBhZGRfdGltZV9wYXJ0aXRpb25fYXR0cmlidXRlcyhjb250ZXh0LCBldmVudCk6CiAgICBpZiBoYXNhdHRyKGNvbnRleHQsICd0aW1lc3RhbXBfa2V5JykgYW5kIGV2ZW50LmdldChjb250ZXh0LnRpbWVzdGFtcF9rZXkpIGlzIG5vdCBOb25lOgogICAgICAgIGR0X29iamVjdCA9IGRhdGV0aW1lLnN0cnB0aW1lKGV2ZW50W2NvbnRleHQudGltZXN0YW1wX2tleV0sIGNvbnRleHQudGltZXN0YW1wX2Zvcm1hdCkKICAgIGVsc2U6CiAgICAgICAgZHRfb2JqZWN0ID0gZGF0ZXRpbWUubm93KCkKCiAgICBldmVudFsncHFfeWVhciddID0gZHRfb2JqZWN0LnN0cmZ0aW1lKCclWScpCiAgICBldmVudFsncHFfbW9udGgnXSA9IGR0X29iamVjdC5zdHJmdGltZSgnJW0nKQogICAgZXZlbnRbJ3BxX2RheSddID0gZHRfb2JqZWN0LnN0cmZ0aW1lKCclZCcpCiAgICBldmVudFsncHFfaG91ciddID0gZHRfb2JqZWN0LnN0cmZ0aW1lKCclSCcpCgogICAgcmV0dXJuIGV2ZW50CgoKZGVmIHdyaXRlX2JhdGNoKGNvbnRleHQpOgogICAgZGYgPSBwZC5EYXRhRnJhbWUuZnJvbV9yZWNvcmRzKGNvbnRleHQuYmF0Y2gpCiAgICBkZi50b19wYXJxdWV0KHBhdGg9Y29udGV4dC50YXJnZXRfcGF0aCwgcGFydGl0aW9uX2NvbHM9Y29udGV4dC5wcV9wYXJ0aXRpb25zKQogICAgY29udGV4dC5iYXRjaCA9IFtdCiAgICByZXR1cm4gbGVuKGRmLmluZGV4KQoK",
              "noBaseImagesPull": true
            },
            "env": [],
            "handler": "event-handler:handler",
            "readinessTimeoutSeconds": 200,
            "runtime": "python:3.6",
            "volumes": []
          }
        },
        "source": "",
        "build": {
          "commands": [],
          "code_origin": "functions/event-handler.ipynb",
          "origin_filename": "functions/event-handler.ipynb"
        },
        "default_handler": "handler",
        "mount_applied": true,
        "affinity": null
      },
      "status": {
        "state": "ready",
        "nuclio_name": "model-deployment-pipeline-admin-inference-logger",
        "address": "default-tenant.app.vmdev36.lab.iguazeng.com:30243",
        "internal_invocation_urls": [
          "nuclio-model-deployment-pipeline-admin-inference-logger.default-tenant.svc.cluster.local:8080"
        ],
        "external_invocation_urls": [
          "default-tenant.app.vmdev36.lab.iguazeng.com:30243"
        ]
      },
      "verbose": false
    },
    {
      "kind": "remote",
      "metadata": {
        "name": "inference-logger",
        "tag": "",
        "project": "model-deployment-pipeline-admin",
        "categories": [],
        "hash": "f1a630c34a5f9cc8f6bf02e37af71ff4c8930161",
        "updated": "2021-08-29T20:08:34.916113+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "",
        "description": "",
        "replicas": 1,
        "min_replicas": 1,
        "max_replicas": 4,
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "PARQUET_SINK_FLAG",
            "value": "true"
          },
          {
            "name": "STREAM_SINK_FLAG",
            "value": "false"
          },
          {
            "name": "PARQUET_TARGET_PATH",
            "value": "/User/examples/model-deployment-pipeline/data/inference-pq"
          },
          {
            "name": "PARQUET_BATCH_SIZE",
            "value": "8192"
          },
          {
            "name": "TS_KEY",
            "value": "when"
          },
          {
            "name": "TS_FORMAT",
            "value": "%Y-%m-%d %H:%M:%S.%f"
          },
          {
            "name": "FEATURES",
            "value": "socioeconomic_idx,purchase_sum,purchase_mean,purchase_count,purchase_var,bet_sum,bet_mean,bet_count,bet_var,win_sum,win_mean,win_count,win_var"
          },
          {
            "name": "PREDICTIONS",
            "value": "about_to_churn"
          },
          {
            "name": "CONTAINER",
            "value": "users"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "config": {
          "spec.triggers.inference_stream": {
            "kind": "v3ioStream",
            "url": "http://v3io-webapi:8081/users/admin/examples/model-deployment-pipeline/data/inference-stream@il",
            "attributes": {
              "seekTo": "earliest",
              "readBatchSize": 64,
              "pollingIntervalMs": 500
            },
            "maxWorkers": 10,
            "password": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          "metadata.labels.mlrun/class": "remote",
          "spec.serviceType": "NodePort",
          "spec.minReplicas": 1,
          "spec.maxReplicas": 1
        },
        "base_spec": {
          "apiVersion": "nuclio.io/v1",
          "kind": "Function",
          "metadata": {
            "annotations": {
              "nuclio.io/generated_by": "function generated from functions/event-handler.ipynb"
            },
            "labels": {
              "mlrun/class": "remote",
              "nuclio.io/project-name": "model-deployment-pipeline-admin"
            },
            "name": "model-deployment-pipeline-admin-inference-logger"
          },
          "spec": {
            "build": {
              "baseImage": "mlrun/mlrun:0.7.0-rc11",
              "commands": [],
              "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG9zCmltcG9ydCBwYW5kYXMgYXMgcGQKaW1wb3J0IGpzb24KaW1wb3J0IGRhdGV0aW1lCmZyb20gZGF0ZXRpbWUgaW1wb3J0IGRhdGV0aW1lCmltcG9ydCB2M2lvLmRhdGFwbGFuZQoKZGVmIGluaXRfY29udGV4dChjb250ZXh0KToKICAgIHNldGF0dHIoY29udGV4dCwgJ3N0cmVhbV9zaW5rX2ZsYWcnLCBvcy5nZXRlbnYoJ1NUUkVBTV9TSU5LX0ZMQUcnKSkKICAgIHNldGF0dHIoY29udGV4dCwgJ3BhcnF1ZXRfc2lua19mbGFnJywgb3MuZ2V0ZW52KCdQQVJRVUVUX1NJTktfRkxBRycpKQoKICAgIGlmIGNvbnRleHQucGFycXVldF9zaW5rX2ZsYWcubG93ZXIoKSA9PSAndHJ1ZSc6CiAgICAgICAgc2V0YXR0cihjb250ZXh0LCAnYmF0Y2gnLCBbXSkKICAgICAgICBzZXRhdHRyKGNvbnRleHQsICdiYXRjaF9zaXplJywgaW50KG9zLmdldGVudignUEFSUVVFVF9CQVRDSF9TSVpFJywgMTAyNCkpKQoKICAgICAgICBzZXRhdHRyKGNvbnRleHQsICd0aW1lc3RhbXBfa2V5Jywgb3MuZ2V0ZW52KCdUU19LRVknKSkKICAgICAgICBzZXRhdHRyKGNvbnRleHQsICd0aW1lc3RhbXBfZm9ybWF0Jywgb3MuZ2V0ZW52KCdUU19GT1JNQVQnLCAnJVktJW0tJWQgJUg6JU06JVMuJWYnKSkKCiAgICAgICAgc2V0YXR0cihjb250ZXh0LCAncHFfcGFydGl0aW9ucycsIFsncHFfeWVhcicsICdwcV9tb250aCcsICdwcV9kYXknLCAncHFfaG91ciddKQoKICAgICAgICBzZXRhdHRyKGNvbnRleHQsICd0YXJnZXRfcGF0aCcsIG9zLmdldGVudignUEFSUVVFVF9UQVJHRVRfUEFUSCcpKQogICAgICAgIG9zLm1ha2VkaXJzKGNvbnRleHQudGFyZ2V0X3BhdGgsIGV4aXN0X29rPVRydWUpCgogICAgICAgIGZlYXR1cmVzID0gb3MuZ2V0ZW52KCdGRUFUVVJFUycpCiAgICAgICAgaWYgZmVhdHVyZXMgaXMgbm90IE5vbmU6CiAgICAgICAgICAgIGZlYXR1cmVzID0gZmVhdHVyZXMuc3BsaXQoJywnKQogICAgICAgIHNldGF0dHIoY29udGV4dCwgJ2ZlYXR1cmVzJywgZmVhdHVyZXMpCgogICAgICAgIHByZWRpY3Rpb25zID0gb3MuZ2V0ZW52KCdQUkVESUNUSU9OUycpCiAgICAgICAgaWYgcHJlZGljdGlvbnMgaXMgbm90IE5vbmU6CiAgICAgICAgICAgIHByZWRpY3Rpb25zID0gcHJlZGljdGlvbnMuc3BsaXQoJywnKQogICAgICAgIHNldGF0dHIoY29udGV4dCwgJ3ByZWRpY3Rpb25zJywgcHJlZGljdGlvbnMpCgogICAgaWYgY29udGV4dC5zdHJlYW1fc2lua19mbGFnLmxvd2VyKCkgPT0gJ3RydWUnOgogICAgICAgIHYzaW9fYWNjZXNzX2tleSA9IG9zLmdldGVudignVjNJT19BQ0NFU1NfS0VZJykKICAgICAgICBjb250YWluZXIgPSBvcy5nZXRlbnYoJ0NPTlRBSU5FUicpCiAgICAgICAgb3V0cHV0X3N0cmVhbV9wYXRoID0gb3MuZ2V0ZW52KCdPVVRQVVRfU1RSRUFNX1BBVEgnKQogICAgICAgIHBhcnRpdGlvbl9hdHRyID0gb3MuZ2V0ZW52KCdQQVJUSVRJT05fQVRUUicpCiAgICAgICAgdjNpb19hcGkgPSBvcy5nZXRlbnYoJ1YzSU9fQVBJJykKICAgICAgICB2M2lvX2NsaWVudCA9IHYzaW8uZGF0YXBsYW5lLkNsaWVudChlbmRwb2ludD12M2lvX2FwaSwgYWNjZXNzX2tleT12M2lvX2FjY2Vzc19rZXkpCgogICAgICAgIHNldGF0dHIoY29udGV4dCwgJ3YzaW9fY2xpZW50JywgdjNpb19jbGllbnQpCiAgICAgICAgc2V0YXR0cihjb250ZXh0LCAncGFydGl0aW9uX2F0dHInLCBwYXJ0aXRpb25fYXR0cikKICAgICAgICBzZXRhdHRyKGNvbnRleHQsICdjb250YWluZXInLCBjb250YWluZXIpCiAgICAgICAgc2V0YXR0cihjb250ZXh0LCAnb3V0cHV0X3N0cmVhbV9wYXRoJywgb3V0cHV0X3N0cmVhbV9wYXRoKQogICAgcGFzcwoKZGVmIGhhbmRsZXIoY29udGV4dCwgZXZlbnQpOgogICAgaWYgdHlwZShldmVudC5ib2R5KSBpcyBkaWN0OgogICAgICAgIGV2ZW50X2RpY3QgPSBldmVudC5ib2R5CiAgICBlbHNlOgogICAgICAgIGV2ZW50X2RpY3QgPSBqc29uLmxvYWRzKGV2ZW50LmJvZHkpCgogICAgY29udGV4dC5sb2dnZXIuaW5mb193aXRoKCdHb3QgaW52b2tlZCcsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJpZ2dlcl9raW5kPWV2ZW50LnRyaWdnZXIua2luZCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBldmVudF9ib2R5PWV2ZW50X2RpY3QpCgogICAgaWYgY29udGV4dC5zdHJlYW1fc2lua19mbGFnLmxvd2VyKCkgPT0gJ3RydWUnOgogICAgICAgIHN0cmVhbV9zaW5rX2hhbmRsZXIoY29udGV4dCwgZXZlbnRfZGljdCkKICAgIGlmIGNvbnRleHQucGFycXVldF9zaW5rX2ZsYWcubG93ZXIoKSA9PSAndHJ1ZSc6CiAgICAgICAgcGFycXVldF9zaW5rX2hhbmRsZXIoY29udGV4dCwgZXZlbnRfZGljdCkKICAgIHBhc3MKCgpkZWYgc3RyZWFtX3NpbmtfaGFuZGxlcihjb250ZXh0LCBldmVudCk6CiAgICBwYXJ0aXRpb25fa2V5ID0gZXZlbnQuZ2V0KGNvbnRleHQucGFydGl0aW9uX2F0dHIpCiAgICByZWNvcmQgPSBldmVudF90b19yZWNvcmQoZXZlbnQsIHBhcnRpdGlvbl9rZXkpCiAgICAKICAgIHJlc3AgPSBjb250ZXh0LnYzaW9fY2xpZW50LnN0cmVhbS5wdXRfcmVjb3Jkcyhjb250YWluZXI9Y29udGV4dC5jb250YWluZXIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RyZWFtX3BhdGg9Y29udGV4dC5vdXRwdXRfc3RyZWFtX3BhdGgsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVjb3Jkcz1bcmVjb3JkXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByYWlzZV9mb3Jfc3RhdHVzPXYzaW8uZGF0YXBsYW5lLlJhaXNlRm9yU3RhdHVzLm5ldmVyKQoKICAgIGNvbnRleHQubG9nZ2VyLmluZm9fd2l0aCgnU2VudCBldmVudCB0byBzdHJlYW0nLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlY29yZD1yZWNvcmQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2Vfc3RhdHVzPXJlc3Auc3RhdHVzX2NvZGUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2VfYm9keT1yZXNwLmJvZHkuZGVjb2RlKCd1dGYtOCcpKQogICAgcGFzcwoKCmRlZiBldmVudF90b19yZWNvcmQoZXZlbnRfZGljdCwgcGFydGl0aW9uX2tleSk6CiAgICBldmVudF9zdHIgPSBqc29uLmR1bXBzKGV2ZW50X2RpY3QpCiAgICByZXR1cm4geydkYXRhJzogZXZlbnRfc3RyLCAncGFydGl0aW9uX2tleSc6IHN0cihwYXJ0aXRpb25fa2V5KX0KCgpkZWYgcGFycXVldF9zaW5rX2hhbmRsZXIoY29udGV4dCwgZXZlbnQpOgogICAgaWYgY29udGV4dC5mZWF0dXJlcyBpcyBub3QgTm9uZSBhbmQgY29udGV4dC5wcmVkaWN0aW9ucyBpcyBub3QgTm9uZToKICAgICAgICBldmVudCA9IGZsYXR0ZW5faW5mZXJlbmNlX2V2ZW50KGNvbnRleHQsIGV2ZW50KQoKICAgIGV2ZW50X3dpdGhfdGltZV9wYXJ0aXRpb25zID0gYWRkX3RpbWVfcGFydGl0aW9uX2F0dHJpYnV0ZXMoY29udGV4dCwgZXZlbnQpCgogICAgY29udGV4dC5iYXRjaC5hcHBlbmQoZXZlbnRfd2l0aF90aW1lX3BhcnRpdGlvbnMpCgogICAgaWYgY29udGV4dC5iYXRjaF9zaXplID09IGxlbihjb250ZXh0LmJhdGNoKToKICAgICAgICB3cml0dGVuX3JlY29yZHMgPSB3cml0ZV9iYXRjaChjb250ZXh0KQogICAgICAgIGNvbnRleHQubG9nZ2VyLmluZm9fd2l0aCgnV3JpdHRlbiBiYXRjaCcsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFdyaXR0ZW50X3JlY29yZHM9d3JpdHRlbl9yZWNvcmRzKQogICAgcGFzcwoKCmRlZiBmbGF0dGVuX2luZmVyZW5jZV9ldmVudChjb250ZXh0LCBldmVudCk6CiAgICBmZWF0dXJlX3ZhbHVlcyA9IGV2ZW50WydyZXF1ZXN0J11bJ2luc3RhbmNlcyddWzBdCiAgICBldmVudC51cGRhdGUoemlwKGNvbnRleHQuZmVhdHVyZXMsIGZlYXR1cmVfdmFsdWVzKSkKCiAgICBwcmVkaWN0aW9uX3ZhbHVlcyA9IGV2ZW50WydyZXNwJ10KICAgIGV2ZW50LnVwZGF0ZSh6aXAoY29udGV4dC5wcmVkaWN0aW9ucywgcHJlZGljdGlvbl92YWx1ZXMpKQoKICAgIHJldHVybiBldmVudAoKCmRlZiBhZGRfdGltZV9wYXJ0aXRpb25fYXR0cmlidXRlcyhjb250ZXh0LCBldmVudCk6CiAgICBpZiBoYXNhdHRyKGNvbnRleHQsICd0aW1lc3RhbXBfa2V5JykgYW5kIGV2ZW50LmdldChjb250ZXh0LnRpbWVzdGFtcF9rZXkpIGlzIG5vdCBOb25lOgogICAgICAgIGR0X29iamVjdCA9IGRhdGV0aW1lLnN0cnB0aW1lKGV2ZW50W2NvbnRleHQudGltZXN0YW1wX2tleV0sIGNvbnRleHQudGltZXN0YW1wX2Zvcm1hdCkKICAgIGVsc2U6CiAgICAgICAgZHRfb2JqZWN0ID0gZGF0ZXRpbWUubm93KCkKCiAgICBldmVudFsncHFfeWVhciddID0gZHRfb2JqZWN0LnN0cmZ0aW1lKCclWScpCiAgICBldmVudFsncHFfbW9udGgnXSA9IGR0X29iamVjdC5zdHJmdGltZSgnJW0nKQogICAgZXZlbnRbJ3BxX2RheSddID0gZHRfb2JqZWN0LnN0cmZ0aW1lKCclZCcpCiAgICBldmVudFsncHFfaG91ciddID0gZHRfb2JqZWN0LnN0cmZ0aW1lKCclSCcpCgogICAgcmV0dXJuIGV2ZW50CgoKZGVmIHdyaXRlX2JhdGNoKGNvbnRleHQpOgogICAgZGYgPSBwZC5EYXRhRnJhbWUuZnJvbV9yZWNvcmRzKGNvbnRleHQuYmF0Y2gpCiAgICBkZi50b19wYXJxdWV0KHBhdGg9Y29udGV4dC50YXJnZXRfcGF0aCwgcGFydGl0aW9uX2NvbHM9Y29udGV4dC5wcV9wYXJ0aXRpb25zKQogICAgY29udGV4dC5iYXRjaCA9IFtdCiAgICByZXR1cm4gbGVuKGRmLmluZGV4KQoK",
              "noBaseImagesPull": true
            },
            "env": [
              {
                "name": "V3IO_API",
                "value": "v3io-webapi.default-tenant.svc:8081"
              },
              {
                "name": "V3IO_ACCESS_KEY",
                "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              },
              {
                "name": "PARQUET_SINK_FLAG",
                "value": "true"
              },
              {
                "name": "STREAM_SINK_FLAG",
                "value": "false"
              },
              {
                "name": "PARQUET_TARGET_PATH",
                "value": "/User/examples/model-deployment-pipeline/data/inference-pq"
              },
              {
                "name": "PARQUET_BATCH_SIZE",
                "value": "8192"
              },
              {
                "name": "TS_KEY",
                "value": "when"
              },
              {
                "name": "TS_FORMAT",
                "value": "%Y-%m-%d %H:%M:%S.%f"
              },
              {
                "name": "FEATURES",
                "value": "socioeconomic_idx,purchase_sum,purchase_mean,purchase_count,purchase_var,bet_sum,bet_mean,bet_count,bet_var,win_sum,win_mean,win_count,win_var"
              },
              {
                "name": "PREDICTIONS",
                "value": "about_to_churn"
              },
              {
                "name": "CONTAINER",
                "value": "users"
              },
              {
                "name": "V3IO_USERNAME",
                "value": "admin"
              },
              {
                "name": "V3IO_FRAMESD",
                "value": "framesd:8081"
              },
              {
                "name": "MLRUN_DEFAULT_PROJECT",
                "value": "model-deployment-pipeline-admin"
              },
              {
                "name": "MLRUN_DBPATH",
                "value": "http://mlrun-api:8080"
              },
              {
                "name": "MLRUN_NAMESPACE",
                "value": "default-tenant"
              }
            ],
            "handler": "event-handler:handler",
            "readinessTimeoutSeconds": 200,
            "runtime": "python:3.6",
            "volumes": [
              {
                "volume": {
                  "flexVolume": {
                    "driver": "v3io/fuse",
                    "options": {
                      "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
                    }
                  },
                  "name": "v3io"
                },
                "volumeMount": {
                  "mountPath": "/v3io",
                  "name": "v3io",
                  "subPath": ""
                }
              },
              {
                "volume": {
                  "flexVolume": {
                    "driver": "v3io/fuse",
                    "options": {
                      "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
                    }
                  },
                  "name": "v3io"
                },
                "volumeMount": {
                  "mountPath": "/User",
                  "name": "v3io",
                  "subPath": "users/admin"
                }
              }
            ],
            "triggers": {
              "inference_stream": {
                "kind": "v3ioStream",
                "url": "http://v3io-webapi:8081/users/admin/examples/model-deployment-pipeline/data/inference-stream@il",
                "attributes": {
                  "seekTo": "earliest",
                  "readBatchSize": 64,
                  "pollingIntervalMs": 500
                },
                "maxWorkers": 10,
                "password": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "serviceType": "NodePort",
            "minReplicas": 1,
            "maxReplicas": 1
          }
        },
        "source": "",
        "function_kind": "mlrun",
        "build": {
          "commands": [],
          "code_origin": "functions/event-handler.ipynb",
          "origin_filename": "functions/event-handler.ipynb"
        },
        "default_handler": "handler",
        "mount_applied": true,
        "priority_class_name": "",
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "name": "aggregate",
        "tag": "latest",
        "hash": "200341b01a015d043370951f89f2ccba395f68ac",
        "project": "moreofthesame",
        "labels": {
          "author": "avia"
        },
        "categories": [
          "data-preparation"
        ],
        "updated": "2021-09-03T11:09:10.666444+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [],
        "volume_mounts": [],
        "env": [
          {
            "name": "fgdhfdghfgdh",
            "value": "fdhfdghfdhfgd"
          }
        ],
        "resources": {
          "limits": {
            "cpu": "4",
            "memory": "2",
            "nvidia.com/gpu": "5"
          },
          "requests": {
            "cpu": "3",
            "memory": "1"
          }
        },
        "default_handler": "aggregate",
        "entry_points": {
          "aggregate": {
            "name": "aggregate",
            "doc": "Time-series aggregation function\n\nWill perform a rolling aggregation on {df_artifact}, over {window} by the selected {keys}\napplying {metric_aggs} on {metrics} and {label_aggs} on {labels}. adding {suffix} to the \nfeature names.\n\nif not {inplace}, will return the original {df_artifact}, joined by the aggregated result.",
            "parameters": [
              {
                "name": "context",
                "default": ""
              },
              {
                "name": "df_artifact",
                "type": "Union[DataItem, DataFrame]",
                "doc": "MLRun input pointing to pandas dataframe (csv/parquet file path) or a  directory containing parquet files. * When given a directory the latest {files_to_select} will be selected",
                "default": ""
              },
              {
                "name": "save_to",
                "type": "str",
                "doc": "Where to save the result dataframe. * If relative will add to the {artifact_path}",
                "default": "aggregated-df.pq"
              },
              {
                "name": "keys",
                "type": "list",
                "doc": "Subset of indexes from the source dataframe to aggregate by (default=all)",
                "default": null
              },
              {
                "name": "metrics",
                "type": "list",
                "doc": "Array containing a list of metrics to run the aggregations on. (default=None) ",
                "default": null
              },
              {
                "name": "labels",
                "type": "list",
                "doc": "Array containing a list of labels to run the aggregations on. (default=None) ",
                "default": null
              },
              {
                "name": "metric_aggs",
                "type": "list",
                "doc": "Array containing a list of aggregation function names to run on {metrics}. (Ex: 'mean', 'std') (default='mean')",
                "default": [
                  "mean"
                ]
              },
              {
                "name": "label_aggs",
                "type": "list",
                "doc": "Array containing a list of aggregation function names to run on {metrics}. (Ex: 'max', 'min') (default='max') ",
                "default": [
                  "max"
                ]
              },
              {
                "name": "suffix",
                "type": "str",
                "doc": "Suffix to add to the feature name, E.g: <Feature_Name>_<Agg_Function>_<Suffix> (Ex: 'last_60_mintes') (default='')",
                "default": ""
              },
              {
                "name": "window",
                "type": "int",
                "doc": "Window size to perform the rolling aggregate on. (default=3)",
                "default": 3
              },
              {
                "name": "center",
                "type": "bool",
                "doc": "If True, Sets the value for the central sample in the window, If False, will set the value to the last sample. (default=False)",
                "default": false
              },
              {
                "name": "inplace",
                "type": "bool",
                "doc": "If True, will return only the aggregated results. If False, will join the aggregated results with the original dataframe",
                "default": false
              },
              {
                "name": "drop_na",
                "type": "bool",
                "doc": "Will drop na lines due to the Rolling.",
                "default": true
              },
              {
                "name": "files_to_select",
                "type": "int",
                "doc": "Specifies the number of *latest* files to select (and concat) for aggregation.",
                "default": 1
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 9
          }
        },
        "description": "Rolling aggregation over Metrics and Lables according to specifications",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG9zCmltcG9ydCBwYW5kYXMgYXMgcGQKZnJvbSBtbHJ1bi5kYXRhc3RvcmUgaW1wb3J0IERhdGFJdGVtCgpmcm9tIHR5cGluZyBpbXBvcnQgVW5pb24KCmRlZiBhZ2dyZWdhdGUoY29udGV4dCwKICAgICAgICAgICAgICBkZl9hcnRpZmFjdDogVW5pb25bRGF0YUl0ZW0sIHBkLmNvcmUuZnJhbWUuRGF0YUZyYW1lXSwKICAgICAgICAgICAgICBzYXZlX3RvOiBzdHIgPSAnYWdncmVnYXRlZC1kZi5wcScsIAogICAgICAgICAgICAgIGtleXM6IGxpc3QgPSBOb25lLCAKICAgICAgICAgICAgICBtZXRyaWNzOiBsaXN0ID0gTm9uZSwgCiAgICAgICAgICAgICAgbGFiZWxzOiBsaXN0ID0gTm9uZSwgCiAgICAgICAgICAgICAgbWV0cmljX2FnZ3M6IGxpc3QgPSBbJ21lYW4nXSwgCiAgICAgICAgICAgICAgbGFiZWxfYWdnczogbGlzdCA9IFsnbWF4J10sIAogICAgICAgICAgICAgIHN1ZmZpeDogc3RyID0gJycsIAogICAgICAgICAgICAgIHdpbmRvdzogaW50ID0gMywgCiAgICAgICAgICAgICAgY2VudGVyOiBib29sID0gRmFsc2UsIAogICAgICAgICAgICAgIGlucGxhY2U6IGJvb2wgPSBGYWxzZSwKICAgICAgICAgICAgICBkcm9wX25hOiBib29sID0gVHJ1ZSwKICAgICAgICAgICAgICBmaWxlc190b19zZWxlY3Q6IGludCA9IDEpOgogICAgIiIiVGltZS1zZXJpZXMgYWdncmVnYXRpb24gZnVuY3Rpb24KICAgIAogICAgV2lsbCBwZXJmb3JtIGEgcm9sbGluZyBhZ2dyZWdhdGlvbiBvbiB7ZGZfYXJ0aWZhY3R9LCBvdmVyIHt3aW5kb3d9IGJ5IHRoZSBzZWxlY3RlZCB7a2V5c30KICAgIGFwcGx5aW5nIHttZXRyaWNfYWdnc30gb24ge21ldHJpY3N9IGFuZCB7bGFiZWxfYWdnc30gb24ge2xhYmVsc30uIGFkZGluZyB7c3VmZml4fSB0byB0aGUgCiAgICBmZWF0dXJlIG5hbWVzLgogICAgCiAgICBpZiBub3Qge2lucGxhY2V9LCB3aWxsIHJldHVybiB0aGUgb3JpZ2luYWwge2RmX2FydGlmYWN0fSwgam9pbmVkIGJ5IHRoZSBhZ2dyZWdhdGVkIHJlc3VsdC4KICAgIAogICAgOnBhcmFtIGRmX2FydGlmYWN0OiBNTFJ1biBpbnB1dCBwb2ludGluZyB0byBwYW5kYXMgZGF0YWZyYW1lIChjc3YvcGFycXVldCBmaWxlIHBhdGgpIG9yIGEgCiAgICAgICAgICAgICAgICAgICAgICAgIGRpcmVjdG9yeSBjb250YWluaW5nIHBhcnF1ZXQgZmlsZXMuCiAgICAgICAgICAgICAgICAgICAgICAgICogV2hlbiBnaXZlbiBhIGRpcmVjdG9yeSB0aGUgbGF0ZXN0IHtmaWxlc190b19zZWxlY3R9IHdpbGwgYmUgc2VsZWN0ZWQKICAgIDpwYXJhbSBzYXZlX3RvOiAgICAgV2hlcmUgdG8gc2F2ZSB0aGUgcmVzdWx0IGRhdGFmcmFtZS4KICAgICAgICAgICAgICAgICAgICAgICAgKiBJZiByZWxhdGl2ZSB3aWxsIGFkZCB0byB0aGUge2FydGlmYWN0X3BhdGh9CiAgICA6cGFyYW0ga2V5czogICAgICAgIFN1YnNldCBvZiBpbmRleGVzIGZyb20gdGhlIHNvdXJjZSBkYXRhZnJhbWUgdG8gYWdncmVnYXRlIGJ5IChkZWZhdWx0PWFsbCkKICAgIDpwYXJhbSBtZXRyaWNzOiAgICAgQXJyYXkgY29udGFpbmluZyBhIGxpc3Qgb2YgbWV0cmljcyB0byBydW4gdGhlIGFnZ3JlZ2F0aW9ucyBvbi4gKGRlZmF1bHQ9Tm9uZSkgCiAgICA6cGFyYW0gbGFiZWxzOiAgICAgIEFycmF5IGNvbnRhaW5pbmcgYSBsaXN0IG9mIGxhYmVscyB0byBydW4gdGhlIGFnZ3JlZ2F0aW9ucyBvbi4gKGRlZmF1bHQ9Tm9uZSkgCiAgICA6cGFyYW0gbWV0cmljX2FnZ3M6IEFycmF5IGNvbnRhaW5pbmcgYSBsaXN0IG9mIGFnZ3JlZ2F0aW9uIGZ1bmN0aW9uIG5hbWVzIHRvIHJ1biBvbiB7bWV0cmljc30uCiAgICAgICAgICAgICAgICAgICAgICAgIChFeDogJ21lYW4nLCAnc3RkJykgKGRlZmF1bHQ9J21lYW4nKQogICAgOnBhcmFtIGxhYmVsX2FnZ3M6ICBBcnJheSBjb250YWluaW5nIGEgbGlzdCBvZiBhZ2dyZWdhdGlvbiBmdW5jdGlvbiBuYW1lcyB0byBydW4gb24ge21ldHJpY3N9LgogICAgICAgICAgICAgICAgICAgICAgICAoRXg6ICdtYXgnLCAnbWluJykgKGRlZmF1bHQ9J21heCcpIAogICAgOnBhcmFtIHN1ZmZpeDogICAgICBTdWZmaXggdG8gYWRkIHRvIHRoZSBmZWF0dXJlIG5hbWUsIEUuZzogPEZlYXR1cmVfTmFtZT5fPEFnZ19GdW5jdGlvbj5fPFN1ZmZpeD4KICAgICAgICAgICAgICAgICAgICAgICAgKEV4OiAnbGFzdF82MF9taW50ZXMnKSAoZGVmYXVsdD0nJykKICAgIDpwYXJhbSB3aW5kb3c6ICAgICAgV2luZG93IHNpemUgdG8gcGVyZm9ybSB0aGUgcm9sbGluZyBhZ2dyZWdhdGUgb24uIChkZWZhdWx0PTMpCiAgICA6cGFyYW0gY2VudGVyOiAgICAgIElmIFRydWUsIFNldHMgdGhlIHZhbHVlIGZvciB0aGUgY2VudHJhbCBzYW1wbGUgaW4gdGhlIHdpbmRvdywKICAgICAgICAgICAgICAgICAgICAgICAgSWYgRmFsc2UsIHdpbGwgc2V0IHRoZSB2YWx1ZSB0byB0aGUgbGFzdCBzYW1wbGUuIChkZWZhdWx0PUZhbHNlKQogICAgOnBhcmFtIGlucGxhY2U6ICAgICBJZiBUcnVlLCB3aWxsIHJldHVybiBvbmx5IHRoZSBhZ2dyZWdhdGVkIHJlc3VsdHMuCiAgICAgICAgICAgICAgICAgICAgICAgIElmIEZhbHNlLCB3aWxsIGpvaW4gdGhlIGFnZ3JlZ2F0ZWQgcmVzdWx0cyB3aXRoIHRoZSBvcmlnaW5hbCBkYXRhZnJhbWUKICAgIDpwYXJhbSBkcm9wX25hOiAgICAgV2lsbCBkcm9wIG5hIGxpbmVzIGR1ZSB0byB0aGUgUm9sbGluZy4KICAgIDpwYXJhbSBmaWxlc190b19zZWxlY3Q6IFNwZWNpZmllcyB0aGUgbnVtYmVyIG9mICpsYXRlc3QqIGZpbGVzIHRvIHNlbGVjdCAoYW5kIGNvbmNhdCkgZm9yIGFnZ3JlZ2F0aW9uLgogICAgIiIiCiAgICAKICAgIGZyb21fbW9kZWwgPSB0eXBlKGRmX2FydGlmYWN0KSA9PSBwZC5EYXRhRnJhbWUKICAgIGlmIGZyb21fbW9kZWw6CiAgICAgICAgY29udGV4dC5sb2dnZXIuaW5mbygnQWdncmVnYXRpbmcgZnJvbSBCdWZmZXInKQogICAgICAgIGlucHV0X2RmID0gZGZfYXJ0aWZhY3QKICAgIGVsc2U6CiAgICAgICAgaWYgZGZfYXJ0aWZhY3QudXJsLmVuZHN3aXRoKCcvJyk6ICAgIyBpcyBhIGRpcmVjdG9yeT8KICAgICAgICAgICAgbXBhdGggPSBbb3MucGF0aC5qb2luKGRmX2FydGlmYWN0LnVybCwgZmlsZSkgZm9yIGZpbGUgaW4gZGZfYXJ0aWZhY3QubGlzdGRpcigpIGlmIGZpbGUuZW5kc3dpdGgoKCdwYXJxdWV0JywgJ3BxJykpXQogICAgICAgICAgICBmaWxlc19ieV91cGRhdGVkID0gc29ydGVkKG1wYXRoLCBrZXk9b3MucGF0aC5nZXRtdGltZSwgcmV2ZXJzZT1UcnVlKQogICAgICAgICAgICBjb250ZXh0LmxvZ2dlci5pbmZvKGZpbGVzX2J5X3VwZGF0ZWQpCiAgICAgICAgICAgIGxhdGVzdCA9IGZpbGVzX2J5X3VwZGF0ZWRbOmZpbGVzX3RvX3NlbGVjdF0KICAgICAgICAgICAgY29udGV4dC5sb2dnZXIuaW5mbyhmJ0FnZ3JlZ2F0aW5nIHtsYXRlc3R9JykKICAgICAgICAgICAgaW5wdXRfZGYgPSBwZC5jb25jYXQoW2NvbnRleHQuZ2V0X2RhdGFpdGVtKGRmKS5hc19kZigpIGZvciBkZiBpbiBsYXRlc3RdKQogICAgICAgIGVsc2U6ICAjIEEgcmVndWxhciBhcnRpZmFjdAogICAgICAgICAgICBjb250ZXh0LmxvZ2dlci5pbmZvKGYnQWdncmVnYXRpbmcge2RmX2FydGlmYWN0LnVybH0nKQogICAgICAgICAgICBpbnB1dF9kZiA9IGRmX2FydGlmYWN0LmFzX2RmKCkKICAgIAogICAgaWYgbm90IChtZXRyaWNzIG9yIGxhYmVscyk6CiAgICAgICAgcmFpc2UgVmFsdWVFcnJvcigncGxlYXNlIHNwZWNpZnkgbWV0cmljcyBvciBsYWJlbHMgcGFyYW0nKQogICAgCiAgICBpZiBrZXlzOgogICAgICAgIGN1cnJlbnRfaW5kZXggPSBpbnB1dF9kZi5pbmRleC5uYW1lcwogICAgICAgIGluZGV4ZXNfdG9fZHJvcCA9IFtjb2wgZm9yIGNvbCBpbiBpbnB1dF9kZi5pbmRleC5uYW1lcyBpZiBjb2wgbm90IGluIGtleXNdCiAgICAgICAgZGYgPSBpbnB1dF9kZi5yZXNldF9pbmRleChsZXZlbD1pbmRleGVzX3RvX2Ryb3ApCiAgICBlbHNlOgogICAgICAgIGRmID0gaW5wdXRfZGYKICAgICAgICAKICAgIGlmIG1ldHJpY3M6CiAgICAgICAgbWV0cmljc19kZiA9IGRmLmxvY1s6LCBtZXRyaWNzXS5yb2xsaW5nKHdpbmRvdz13aW5kb3csIGNlbnRlcj1jZW50ZXIpLmFnZ3JlZ2F0ZShtZXRyaWNfYWdncykKICAgICAgICAKICAgICAgICBtZXRyaWNzX2RmLmNvbHVtbnMgPSBbJ18nLmpvaW4oY29sKS5zdHJpcCgpIGZvciBjb2wgaW4gbWV0cmljc19kZi5jb2x1bW5zLnZhbHVlc10KICAgICAgICAKICAgICAgICBpZiBzdWZmaXg6CiAgICAgICAgICAgIG1ldHJpY3NfZGYuY29sdW1ucyA9IFtmJ3ttZXRyaWN9X3tzdWZmaXh9JyBmb3IgbWV0cmljIGluIG1ldHJpY3NfZGYuY29sdW1uc10KICAgICAgICAgICAgCiAgICAgICAgaWYgbm90IGlucGxhY2U6CiAgICAgICAgICAgIGZpbmFsX2RmID0gcGQubWVyZ2UoaW5wdXRfZGYsIG1ldHJpY3NfZGYsIHN1ZmZpeGVzPSgnJywgc3VmZml4KSwgbGVmdF9pbmRleD1UcnVlLCByaWdodF9pbmRleD1UcnVlKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIGZpbmFsX2RmID0gbWV0cmljc19kZgoKICAgIGlmIGxhYmVsczoKICAgICAgICBsYWJlbHNfZGYgPSBkZi5sb2NbOiwgbGFiZWxzXS5yb2xsaW5nKHdpbmRvdz13aW5kb3csCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjZW50ZXI9Y2VudGVyKS5hZ2dyZWdhdGUobGFiZWxfYWdncykKICAgICAgICBsYWJlbHNfZGYuY29sdW1ucyA9IFsnXycuam9pbihjb2wpLnN0cmlwKCkgZm9yIGNvbCBpbiBsYWJlbHNfZGYuY29sdW1ucy52YWx1ZXNdCiAgICAgICAgCiAgICAgICAgaWYgc3VmZml4OgogICAgICAgICAgICBsYWJlbHNfZGYuY29sdW1ucyA9IFtmJ3tsYWJlbH1fe3N1ZmZpeH0nIGZvciBsYWJlbCBpbiBsYWJlbHNfZGYuY29sdW1uc10KICAgICAgICAgICAgCiAgICAgICAgaWYgbWV0cmljczoKICAgICAgICAgICAgZmluYWxfZGYgPSBwZC5tZXJnZShmaW5hbF9kZiwgbGFiZWxzX2RmLCBzdWZmaXhlcz0oJycsIHN1ZmZpeCksIGxlZnRfaW5kZXg9VHJ1ZSwgcmlnaHRfaW5kZXg9VHJ1ZSkgICAKICAgICAgICBlbHNlOgogICAgICAgICAgICBpZiBub3QgaW5wbGFjZToKICAgICAgICAgICAgICAgIGZpbmFsX2RmID0gcGQubWVyZ2UoaW5wdXRfZGYsIGxhYmVsc19kZiwgc3VmZml4ZXM9KCcnLCBzdWZmaXgpLCBsZWZ0X2luZGV4PVRydWUsIHJpZ2h0X2luZGV4PVRydWUpICAgICAgCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBmaW5hbF9kZiA9IGxhYmVsc19kZgogICAgICAgICAgICAgICAgCiAgICBpZiBkcm9wX25hOgogICAgICAgIGZpbmFsX2RmID0gZmluYWxfZGYuZHJvcG5hKCkKICAgICAgICAKICAgIGNvbnRleHQubG9nZ2VyLmluZm8oJ0xvZ2dpbmcgYXJ0aWZhY3QnKQogICAgaWYgbm90IGZyb21fbW9kZWw6CiAgICAgICAgY29udGV4dC5sb2dfZGF0YXNldChrZXk9J2FnZ3JlZ2F0ZScsIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGY9ZmluYWxfZGYsIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9ybWF0PSdwYXJxdWV0JywKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvY2FsX3BhdGg9c2F2ZV90bykKICAgIGVsc2U6CiAgICAgICAgcmV0dXJuIGZpbmFsX2RmCgo=",
          "commands": [],
          "code_origin": "https://github.com/daniels290813/functions.git#55a79c32be5d233cc11efcf40cd3edbe309bfdef:/home/kali/functions/aggregate/aggregate.py"
        },
        "node_selector": {
          "gdsfghd": "fghfdghfdg"
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": {}
    },
    {
      "kind": "job",
      "metadata": {
        "labels": {
          "key1": "value1"
        },
        "name": "demo-func00",
        "tag": "",
        "project": "moreofthesame",
        "hash": "b14cdce33d63f18f48435f38b86a2b3f5ed95f78",
        "updated": "2021-09-03T13:41:48.147451+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "",
          "commands": "",
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ""
        },
        "default_handler": "handler",
        "description": "",
        "env": [],
        "image": "mlrun/mlrun",
        "volume_mounts": [],
        "volumes": [],
        "resources": {
          "limits": {
            "memory": "2Mi",
            "cpu": "4",
            "nvidia.com/gpu": "5"
          },
          "requests": {
            "memory": "1Mi",
            "cpu": "2"
          }
        },
        "secret_sources": []
      },
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "demo-func00",
        "tag": "",
        "project": "moreofthesame",
        "labels": {
          "key1": "value1"
        },
        "categories": [],
        "hash": "98921c8d79c7fd75c5e8df9a95d6759801106233",
        "updated": "2021-09-03T13:41:48.708748+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [],
        "volume_mounts": [],
        "env": [],
        "resources": {
          "limits": {
            "memory": "2Mi",
            "cpu": "4",
            "nvidia.com/gpu": "5"
          },
          "requests": {
            "memory": "1Mi",
            "cpu": "2"
          }
        },
        "default_handler": "handler",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ".mlrun/func-moreofthesame-demo-func00:latest",
          "base_image": "",
          "commands": ""
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "name": "demo-func00",
        "tag": "latest",
        "project": "moreofthesame",
        "labels": {
          "key1": "value1"
        },
        "categories": [],
        "hash": "918172b70bb7a222777fc750755d01733949c2ae",
        "updated": "2021-09-03T13:48:04.674156+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": ".mlrun/func-moreofthesame-demo-func00:latest",
        "volumes": [],
        "volume_mounts": [],
        "env": [],
        "resources": {
          "limits": {
            "memory": "2Mi",
            "cpu": "4",
            "nvidia.com/gpu": "5"
          },
          "requests": {
            "memory": "1Mi",
            "cpu": "2"
          }
        },
        "default_handler": "handler",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ".mlrun/func-moreofthesame-demo-func00:latest",
          "base_image": "",
          "commands": ""
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "status": {
        "state": "ready",
        "build_pod": "mlrun-build-demo-func00-tb429"
      },
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "name": "coxph-trainer",
        "tag": "latest",
        "hash": "05807fd817a080829733d606fc8836ce8f3b48ee",
        "project": "moreofthesame",
        "labels": {
          "author": "yjb",
          "framework": "survival"
        },
        "categories": [
          "model-training",
          "machine-learning"
        ],
        "updated": "2021-09-06T13:47:37.657072+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/ml-models",
        "volumes": [],
        "volume_mounts": [],
        "env": [],
        "default_handler": "train_model",
        "entry_points": {
          "train_model": {
            "name": "train_model",
            "doc": "train models to predict the timing of events\n\nAlthough identical in structure to other training functions, this one\nrequires generating a 'Y' that represents the age/duration/tenure of\nthe obervation, designated 'tenure' here, and a binary labels columns that\nrepresents the event of interest, churned/not-churned.\n\nIn addition, there is a strata_cols parameter, representing a list of\nstratification (aka grouping) variables.",
            "parameters": [
              {
                "name": "context",
                "type": "MLClientCtx",
                "doc": "the function context",
                "default": ""
              },
              {
                "name": "dataset",
                "type": "DataItem",
                "doc": "(\"data\") name of raw data file",
                "default": ""
              },
              {
                "name": "event_column",
                "type": "str",
                "doc": "ground-truth (y) labels (considered as events in this model)",
                "default": "labels"
              },
              {
                "name": "time_column",
                "type": "str",
                "doc": "age or tenure column",
                "default": "tenure"
              },
              {
                "name": "encode_cols",
                "type": "dict",
                "doc": "dictionary of names and prefixes for columns that are to hot be encoded.",
                "default": {}
              },
              {
                "name": "strata_cols",
                "type": "list",
                "doc": "columns used to stratify predictors",
                "default": []
              },
              {
                "name": "plot_cov_groups",
                "type": "bool",
                "default": false
              },
              {
                "name": "p_value",
                "type": "float",
                "doc": "(0.005) max p value for coeffcients selected",
                "default": 0.005
              },
              {
                "name": "sample",
                "type": "int",
                "doc": "Selects the first n rows, or select a sample starting from the first. If negative <-1, select a random sample",
                "default": "<_ast.USub object at 0x7f3b619b97b8>"
              },
              {
                "name": "test_size",
                "type": "float",
                "doc": "(0.25) test set size",
                "default": 0.25
              },
              {
                "name": "valid_size",
                "type": "float",
                "doc": "(0.75) Once the test set has been removed the training set gets this proportion.",
                "default": 0.75
              },
              {
                "name": "random_state",
                "type": "int",
                "doc": "(1) sklearn rng seed",
                "default": 1
              },
              {
                "name": "models_dest",
                "type": "str",
                "doc": "destination subfolder for model artifacts",
                "default": ""
              },
              {
                "name": "plots_dest",
                "type": "str",
                "doc": "destination subfolder for plot artifacts",
                "default": ""
              },
              {
                "name": "file_ext",
                "type": "str",
                "doc": "format for test_set_key hold out data",
                "default": "csv"
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 97
          }
        },
        "description": "cox proportional hazards, kaplan meier plots",
        "build": {
          "functionSourceCode": "",
          "commands": [],
          "code_origin": "https://github.com/daniels290813/functions.git#55a79c32be5d233cc11efcf40cd3edbe309bfdef:/home/kali/functions/coxph_trainer/coxph_trainer.py"
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": {}
    },
    {
      "kind": "job",
      "metadata": {
        "name": "open-archive",
        "tag": "latest",
        "hash": "81fc7dbf992491cdd272ff1be59c035f4480ad3f",
        "project": "moreofthesame",
        "labels": {
          "author": "yaronh"
        },
        "categories": [
          "data-preparation"
        ],
        "updated": "2021-09-06T15:18:17.241488+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [],
        "volume_mounts": [],
        "env": [],
        "default_handler": "open_archive",
        "entry_points": {
          "open_archive": {
            "name": "open_archive",
            "doc": "Open a file/object archive into a target directory\n\nCurrently supports zip and tar.gz",
            "parameters": [
              {
                "name": "context",
                "type": "MLClientCtx",
                "doc": "function execution context",
                "default": ""
              },
              {
                "name": "archive_url",
                "type": "DataItem",
                "doc": "url of archive file",
                "default": ""
              },
              {
                "name": "subdir",
                "type": "str",
                "doc": "path within artifact store where extracted files are stored",
                "default": "content"
              },
              {
                "name": "key",
                "type": "str",
                "doc": "key of archive contents in artifact store",
                "default": "content"
              },
              {
                "name": "target_path",
                "type": "str",
                "doc": "file system path to store extracted files (use either this or subdir)",
                "default": null
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 15
          }
        },
        "description": "Open a file/object archive into a target directory",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG9zCmltcG9ydCB6aXBmaWxlCmltcG9ydCB1cmxsaWIucmVxdWVzdAppbXBvcnQgdGFyZmlsZQppbXBvcnQganNvbgoKZnJvbSBtbHJ1bi5leGVjdXRpb24gaW1wb3J0IE1MQ2xpZW50Q3R4CmZyb20gbWxydW4uZGF0YXN0b3JlIGltcG9ydCBEYXRhSXRlbQoKZnJvbSB0eXBpbmcgaW1wb3J0IFVuaW9uCgoKZGVmIG9wZW5fYXJjaGl2ZSgKICAgIGNvbnRleHQ6IE1MQ2xpZW50Q3R4LAogICAgYXJjaGl2ZV91cmw6IERhdGFJdGVtLAogICAgc3ViZGlyOiBzdHIgPSAiY29udGVudCIsCiAgICBrZXk6IHN0ciA9ICJjb250ZW50IiwKICAgIHRhcmdldF9wYXRoOiBzdHIgPSBOb25lLAopOgogICAgIiIiT3BlbiBhIGZpbGUvb2JqZWN0IGFyY2hpdmUgaW50byBhIHRhcmdldCBkaXJlY3RvcnkKCiAgICBDdXJyZW50bHkgc3VwcG9ydHMgemlwIGFuZCB0YXIuZ3oKCiAgICA6cGFyYW0gY29udGV4dDogICAgICBmdW5jdGlvbiBleGVjdXRpb24gY29udGV4dAogICAgOnBhcmFtIGFyY2hpdmVfdXJsOiAgdXJsIG9mIGFyY2hpdmUgZmlsZQogICAgOnBhcmFtIHN1YmRpcjogICAgICAgcGF0aCB3aXRoaW4gYXJ0aWZhY3Qgc3RvcmUgd2hlcmUgZXh0cmFjdGVkIGZpbGVzCiAgICAgICAgICAgICAgICAgICAgICAgICBhcmUgc3RvcmVkCiAgICA6cGFyYW0ga2V5OiAgICAgICAgICBrZXkgb2YgYXJjaGl2ZSBjb250ZW50cyBpbiBhcnRpZmFjdCBzdG9yZQogICAgOnBhcmFtIHRhcmdldF9wYXRoOiAgZmlsZSBzeXN0ZW0gcGF0aCB0byBzdG9yZSBleHRyYWN0ZWQgZmlsZXMgKHVzZSBlaXRoZXIgdGhpcyBvciBzdWJkaXIpCiAgICAiIiIKICAgIG9zLm1ha2VkaXJzKHRhcmdldF9wYXRoIG9yIHN1YmRpciwgZXhpc3Rfb2s9VHJ1ZSkKCiAgICBhcmNoaXZlX3VybCA9IGFyY2hpdmVfdXJsLmxvY2FsKCkKICAgIGlmIGFyY2hpdmVfdXJsLmVuZHN3aXRoKCJneiIpOgogICAgICAgIHdpdGggdGFyZmlsZS5vcGVuKGFyY2hpdmVfdXJsLCBtb2RlPSJyfGd6IikgYXMgcmVmOgogICAgICAgICAgICByZWYuZXh0cmFjdGFsbCh0YXJnZXRfcGF0aCBvciBzdWJkaXIpCiAgICBlbGlmIGFyY2hpdmVfdXJsLmVuZHN3aXRoKCJ6aXAiKToKICAgICAgICB3aXRoIHppcGZpbGUuWmlwRmlsZShhcmNoaXZlX3VybCwgInIiKSBhcyByZWY6CiAgICAgICAgICAgIHJlZi5leHRyYWN0YWxsKHRhcmdldF9wYXRoIG9yIHN1YmRpcikKICAgIGVsc2U6CiAgICAgICAgcmFpc2UgVmFsdWVFcnJvcihmInVuc3VwcG9ydGVkIGFyY2hpdmUgdHlwZSBpbiB7YXJjaGl2ZV91cmx9IikKCiAgICBrd2FyZ3MgPSB7fQogICAgaWYgdGFyZ2V0X3BhdGg6CiAgICAgICAga3dhcmdzID0geyJ0YXJnZXRfcGF0aCI6IHRhcmdldF9wYXRofQogICAgZWxzZToKICAgICAgICBrd2FyZ3MgPSB7ImxvY2FsX3BhdGgiOiBzdWJkaXJ9CiAgICBjb250ZXh0LmxvZ19hcnRpZmFjdChrZXksICoqa3dhcmdzKQo=",
          "commands": [],
          "code_origin": "https://github.com/daniels290813/functions.git#55a79c32be5d233cc11efcf40cd3edbe309bfdef:/home/kali/functions/open_archive/open_archive.py"
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": {}
    },
    {
      "kind": "job",
      "metadata": {
        "labels": {},
        "name": "test",
        "tag": "",
        "project": "moreofthesame",
        "hash": "0abdda1407d826d9c6e81c413a8595e78c32ef0a",
        "updated": "2021-09-08T12:33:54.463490+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "",
          "commands": [],
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ""
        },
        "default_handler": "handler",
        "description": "",
        "env": [],
        "image": "mlrun/mlrun",
        "volume_mounts": [
          {
            "name": "test",
            "mountPath": "test"
          },
          {
            "name": "test1",
            "mountPath": "test1"
          }
        ],
        "volumes": [
          {
            "name": "test",
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "test",
                "container": "test",
                "subPath": "test"
              }
            }
          },
          {
            "name": "test1",
            "configMap": {
              "name": "teste1"
            }
          }
        ],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "secret_sources": []
      },
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "test",
        "tag": "",
        "project": "moreofthesame",
        "categories": [],
        "hash": "fed98e2d2336c216251f3b0b22313a7c9a515ff8",
        "updated": "2021-09-08T12:33:55.141883+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [
          {
            "name": "test",
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "test",
                "container": "test",
                "subPath": "test"
              }
            }
          },
          {
            "name": "test1",
            "configMap": {
              "name": "teste1"
            }
          }
        ],
        "volume_mounts": [
          {
            "name": "test",
            "mountPath": "test"
          },
          {
            "name": "test1",
            "mountPath": "test1"
          }
        ],
        "env": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "handler",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ".mlrun/func-moreofthesame-test:latest",
          "base_image": "",
          "commands": []
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "name": "test",
        "tag": "",
        "hash": "e978a56fb83a0667e5191925d7c7ce5062408687",
        "project": "moreofthesame",
        "categories": [],
        "updated": "2021-09-08T12:58:23.125254+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": ".mlrun/func-moreofthesame-test:latest",
        "volumes": [
          {
            "name": "test",
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "test",
                "container": "test",
                "subPath": "test"
              }
            }
          },
          {
            "name": "test1",
            "configMap": {
              "name": "teste1"
            }
          }
        ],
        "volume_mounts": [
          {
            "name": "test",
            "mountPath": "test"
          },
          {
            "name": "test1",
            "mountPath": "test1"
          }
        ],
        "env": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "handler",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ".mlrun/func-moreofthesame-test:latest",
          "base_image": "",
          "commands": []
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "labels": {},
        "name": "test",
        "project": "moreofthesame",
        "tag": "",
        "hash": "f9b39b751aa7d87fd13fd1352ee9c6db54813d33",
        "updated": "2021-09-08T13:00:20.528871+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "",
          "commands": "",
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ""
        },
        "default_handler": "handler",
        "description": "",
        "env": [],
        "image": "mlrun/mlrun",
        "volume_mounts": [
          {
            "name": "test",
            "mountPath": "test"
          },
          {
            "name": "test1",
            "mountPath": "test22"
          }
        ],
        "volumes": [
          {
            "name": "test",
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "test",
                "container": "test",
                "subPath": "test"
              }
            }
          },
          {
            "name": "test1",
            "configMap": {
              "name": "test22"
            }
          }
        ],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "secret_sources": []
      },
      "with_mlrun": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "test",
        "tag": "",
        "project": "moreofthesame",
        "categories": [],
        "hash": "24fa2f2040b6b10fa4bd1a84a08144c87715887b",
        "updated": "2021-09-08T13:00:21.207270+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [
          {
            "name": "test",
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "test",
                "container": "test",
                "subPath": "test"
              }
            }
          },
          {
            "name": "test1",
            "configMap": {
              "name": "test22"
            }
          }
        ],
        "volume_mounts": [
          {
            "name": "test",
            "mountPath": "test"
          },
          {
            "name": "test1",
            "mountPath": "test22"
          }
        ],
        "env": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "handler",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ".mlrun/func-moreofthesame-test:latest",
          "base_image": "",
          "commands": ""
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "name": "test",
        "tag": "latest",
        "project": "moreofthesame",
        "categories": [],
        "hash": "cb63eed31914f55224c475654145cda6c2fa9e00",
        "updated": "2021-09-08T13:02:01.580878+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": ".mlrun/func-moreofthesame-test:latest",
        "volumes": [
          {
            "name": "test",
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "test",
                "container": "test",
                "subPath": "test"
              }
            }
          },
          {
            "name": "test1",
            "configMap": {
              "name": "test22"
            }
          }
        ],
        "volume_mounts": [
          {
            "name": "test",
            "mountPath": "test"
          },
          {
            "name": "test1",
            "mountPath": "test22"
          }
        ],
        "env": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "handler",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ".mlrun/func-moreofthesame-test:latest",
          "base_image": "",
          "commands": ""
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "status": {
        "state": "ready",
        "build_pod": "mlrun-build-test-cjgnt"
      },
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "labels": {},
        "name": "test-m",
        "tag": "",
        "project": "moreofthesame",
        "hash": "67d0b4b7b30d2f004f16f665b97db40e986cf17c",
        "updated": "2021-09-10T11:38:37.586720+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "",
          "commands": [],
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ""
        },
        "default_handler": "handler",
        "description": "",
        "env": [],
        "image": "mlrun/mlrun",
        "volume_mounts": [
          {
            "name": "1",
            "mountPath": "1"
          }
        ],
        "volumes": [
          {
            "name": "1",
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "1",
                "container": "",
                "subPath": ""
              }
            }
          }
        ],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "secret_sources": []
      },
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "test-m",
        "tag": "",
        "hash": "b5af180cf77bc353aab94075306c2f176fb8968e",
        "project": "moreofthesame",
        "categories": [],
        "updated": "2021-09-10T11:40:10.633359+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [
          {
            "name": "1",
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "1",
                "container": "",
                "subPath": ""
              }
            }
          }
        ],
        "volume_mounts": [
          {
            "name": "1",
            "mountPath": "1"
          }
        ],
        "env": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "handler",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": "",
          "base_image": "",
          "commands": []
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "labels": {},
        "name": "test-m",
        "project": "moreofthesame",
        "tag": "",
        "hash": "9b087e9619ba1681e04ed9887399ff80ed95c20a",
        "updated": "2021-09-10T11:40:57.856611+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "",
          "commands": [],
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ""
        },
        "default_handler": "handler",
        "description": "",
        "env": [],
        "image": "mlrun/mlrun",
        "volume_mounts": [],
        "volumes": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "secret_sources": []
      },
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "test-m",
        "tag": "latest",
        "project": "moreofthesame",
        "categories": [],
        "hash": "d70ed728d330d7267fce27fe87eb0522bb77843e",
        "updated": "2021-09-10T11:40:58.304490+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [],
        "volume_mounts": [],
        "env": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "handler",
        "description": "",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": "",
          "base_image": "",
          "commands": []
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "status": {
        "state": "ready"
      },
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "name": "describe",
        "tag": "",
        "hash": "c45e040ea625aea1954a366a4e356e8970836b63",
        "project": "network-operations-admin",
        "labels": {
          "author": "Iguazio"
        },
        "categories": [
          "data-analysis"
        ],
        "updated": "2021-08-29T20:07:44.811400+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "summarize",
        "entry_points": {
          "summarize": {
            "name": "summarize",
            "doc": "Summarize a table",
            "parameters": [
              {
                "name": "context",
                "type": "MLClientCtx",
                "doc": "the function context",
                "default": ""
              },
              {
                "name": "table",
                "type": "DataItem",
                "doc": "MLRun input pointing to pandas dataframe (csv/parquet file path)",
                "default": ""
              },
              {
                "name": "label_column",
                "type": "str",
                "doc": "ground truth column label",
                "default": null
              },
              {
                "name": "class_labels",
                "type": "List[str]",
                "doc": "label for each class in tables and plots",
                "default": []
              },
              {
                "name": "plot_hist",
                "type": "bool",
                "doc": "(True) set this to False for large tables",
                "default": true
              },
              {
                "name": "plots_dest",
                "type": "str",
                "doc": "destination folder of summary plots (relative to artifact_path)",
                "default": "plots"
              },
              {
                "name": "update_dataset",
                "doc": "when the table is a registered dataset update the charts in-place",
                "default": false
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 23
          }
        },
        "description": "describe and visualizes dataset stats",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHdhcm5pbmdzCgp3YXJuaW5ncy5zaW1wbGVmaWx0ZXIoYWN0aW9uPSJpZ25vcmUiLCBjYXRlZ29yeT1GdXR1cmVXYXJuaW5nKQoKaW1wb3J0IG9zCmltcG9ydCBudW1weSBhcyBucAppbXBvcnQgcGFuZGFzIGFzIHBkCmltcG9ydCBtYXRwbG90bGliLnB5cGxvdCBhcyBwbHQKaW1wb3J0IHNlYWJvcm4gYXMgc25zCgpmcm9tIG1scnVuLmV4ZWN1dGlvbiBpbXBvcnQgTUxDbGllbnRDdHgKZnJvbSBtbHJ1bi5kYXRhc3RvcmUgaW1wb3J0IERhdGFJdGVtCmZyb20gbWxydW4uYXJ0aWZhY3RzIGltcG9ydCBQbG90QXJ0aWZhY3QsIFRhYmxlQXJ0aWZhY3QKZnJvbSBtbHJ1bi5tbHV0aWxzLnBsb3RzIGltcG9ydCBnY2ZfY2xlYXIKCmZyb20gdHlwaW5nIGltcG9ydCBMaXN0CgpwZC5zZXRfb3B0aW9uKCJkaXNwbGF5LmZsb2F0X2Zvcm1hdCIsIGxhbWJkYSB4OiAiJS4yZiIgJSB4KQoKCmRlZiBzdW1tYXJpemUoCiAgICBjb250ZXh0OiBNTENsaWVudEN0eCwKICAgIHRhYmxlOiBEYXRhSXRlbSwKICAgIGxhYmVsX2NvbHVtbjogc3RyID0gTm9uZSwKICAgIGNsYXNzX2xhYmVsczogTGlzdFtzdHJdID0gW10sCiAgICBwbG90X2hpc3Q6IGJvb2wgPSBUcnVlLAogICAgcGxvdHNfZGVzdDogc3RyID0gInBsb3RzIiwKICAgIHVwZGF0ZV9kYXRhc2V0PUZhbHNlLAopIC0+IE5vbmU6CiAgICAiIiJTdW1tYXJpemUgYSB0YWJsZQoKICAgIDpwYXJhbSBjb250ZXh0OiAgICAgICAgIHRoZSBmdW5jdGlvbiBjb250ZXh0CiAgICA6cGFyYW0gdGFibGU6ICAgICAgICAgICBNTFJ1biBpbnB1dCBwb2ludGluZyB0byBwYW5kYXMgZGF0YWZyYW1lIChjc3YvcGFycXVldCBmaWxlIHBhdGgpCiAgICA6cGFyYW0gbGFiZWxfY29sdW1uOiAgICBncm91bmQgdHJ1dGggY29sdW1uIGxhYmVsCiAgICA6cGFyYW0gY2xhc3NfbGFiZWxzOiAgICBsYWJlbCBmb3IgZWFjaCBjbGFzcyBpbiB0YWJsZXMgYW5kIHBsb3RzCiAgICA6cGFyYW0gcGxvdF9oaXN0OiAgICAgICAoVHJ1ZSkgc2V0IHRoaXMgdG8gRmFsc2UgZm9yIGxhcmdlIHRhYmxlcwogICAgOnBhcmFtIHBsb3RzX2Rlc3Q6ICAgICAgZGVzdGluYXRpb24gZm9sZGVyIG9mIHN1bW1hcnkgcGxvdHMgKHJlbGF0aXZlIHRvIGFydGlmYWN0X3BhdGgpCiAgICA6cGFyYW0gdXBkYXRlX2RhdGFzZXQ6ICB3aGVuIHRoZSB0YWJsZSBpcyBhIHJlZ2lzdGVyZWQgZGF0YXNldCB1cGRhdGUgdGhlIGNoYXJ0cyBpbi1wbGFjZQogICAgIiIiCiAgICBkZiA9IHRhYmxlLmFzX2RmKCkKICAgIGhlYWRlciA9IGRmLmNvbHVtbnMudmFsdWVzCiAgICBleHRyYV9kYXRhID0ge30KCiAgICB0cnk6CiAgICAgICAgZ2NmX2NsZWFyKHBsdCkKICAgICAgICBzbnNwbHQgPSBzbnMucGFpcnBsb3QoZGYsIGh1ZT1sYWJlbF9jb2x1bW4pICAjICwgZGlhZ19rd3M9eyJidyI6IDEuNX0pCiAgICAgICAgZXh0cmFfZGF0YVsiaGlzdG9ncmFtcyJdID0gY29udGV4dC5sb2dfYXJ0aWZhY3QoCiAgICAgICAgICAgIFBsb3RBcnRpZmFjdCgiaGlzdG9ncmFtcyIsIGJvZHk9cGx0LmdjZigpKSwKICAgICAgICAgICAgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS9oaXN0Lmh0bWwiLAogICAgICAgICAgICBkYl9rZXk9RmFsc2UsCiAgICAgICAgKQogICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgIGNvbnRleHQubG9nZ2VyLmVycm9yKGYiRmFpbGVkIHRvIGNyZWF0ZSBwYWlycGxvdCBoaXN0b2dyYW1zIGR1ZSB0bzoge2V9IikKCiAgICB0cnk6CiAgICAgICAgZ2NmX2NsZWFyKHBsdCkKICAgICAgICBwbG90X2NvbHMgPSAzCiAgICAgICAgcGxvdF9yb3dzID0gaW50KChsZW4oaGVhZGVyKSAtIDEpIC8gcGxvdF9jb2xzKSArIDEKICAgICAgICBmaWcsIGF4ID0gcGx0LnN1YnBsb3RzKHBsb3Rfcm93cywgcGxvdF9jb2xzLCBmaWdzaXplPSgxNSwgNCkpCiAgICAgICAgZmlnLnRpZ2h0X2xheW91dChwYWQ9Mi4wKQogICAgICAgIGZvciBpIGluIHJhbmdlKHBsb3Rfcm93cyAqIHBsb3RfY29scyk6CiAgICAgICAgICAgIGlmIGkgPCBsZW4oaGVhZGVyKToKICAgICAgICAgICAgICAgIHNucy52aW9saW5wbG90KAogICAgICAgICAgICAgICAgICAgIHg9ZGZbaGVhZGVyW2ldXSwKICAgICAgICAgICAgICAgICAgICBheD1heFtpbnQoaSAvIHBsb3RfY29scyldW2kgJSBwbG90X2NvbHNdLAogICAgICAgICAgICAgICAgICAgIG9yaWVudD0iaCIsCiAgICAgICAgICAgICAgICAgICAgd2lkdGg9MC43LAogICAgICAgICAgICAgICAgICAgIGlubmVyPSJxdWFydGlsZSIsCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBmaWcuZGVsYXhlcyhheFtpbnQoaSAvIHBsb3RfY29scyldW2kgJSBwbG90X2NvbHNdKQogICAgICAgICAgICBpICs9IDEKICAgICAgICBleHRyYV9kYXRhWyJ2aW9saW4iXSA9IGNvbnRleHQubG9nX2FydGlmYWN0KAogICAgICAgICAgICBQbG90QXJ0aWZhY3QoInZpb2xpbiIsIGJvZHk9cGx0LmdjZigpLCB0aXRsZT0iVmlvbGluIFBsb3QiKSwKICAgICAgICAgICAgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS92aW9saW4uaHRtbCIsCiAgICAgICAgICAgIGRiX2tleT1GYWxzZSwKICAgICAgICApCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgY29udGV4dC5sb2dnZXIud2FybihmIkZhaWxlZCB0byBjcmVhdGUgdmlvbGluIGRpc3RyaWJ1dGlvbiBwbG90cyBkdWUgdG86IHtlfSIpCgogICAgaWYgbGFiZWxfY29sdW1uOgogICAgICAgIGxhYmVscyA9IGRmLnBvcChsYWJlbF9jb2x1bW4pCiAgICAgICAgaW1idGFibGUgPSBsYWJlbHMudmFsdWVfY291bnRzKG5vcm1hbGl6ZT1UcnVlKS5zb3J0X2luZGV4KCkKICAgICAgICB0cnk6CiAgICAgICAgICAgIGdjZl9jbGVhcihwbHQpCiAgICAgICAgICAgIGJhbGFuY2ViYXIgPSBpbWJ0YWJsZS5wbG90KGtpbmQ9ImJhciIsIHRpdGxlPSJjbGFzcyBpbWJhbGFuY2UgLSBsYWJlbHMiKQogICAgICAgICAgICBiYWxhbmNlYmFyLnNldF94bGFiZWwoImNsYXNzIikKICAgICAgICAgICAgYmFsYW5jZWJhci5zZXRfeWxhYmVsKCJwcm9wb3J0aW9uIG9mIHRvdGFsIikKICAgICAgICAgICAgZXh0cmFfZGF0YVsiaW1iYWxhbmNlIl0gPSBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICAgICAgICAgIFBsb3RBcnRpZmFjdCgiaW1iYWxhbmNlIiwgYm9keT1wbHQuZ2NmKCkpLAogICAgICAgICAgICAgICAgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS9pbWJhbGFuY2UuaHRtbCIsCiAgICAgICAgICAgICkKICAgICAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgICAgIGNvbnRleHQubG9nZ2VyLndhcm4oZiJGYWlsZWQgdG8gY3JlYXRlIGNsYXNzIGltYmFsYW5jZSBwbG90IGR1ZSB0bzoge2V9IikKICAgICAgICBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICAgICAgVGFibGVBcnRpZmFjdCgKICAgICAgICAgICAgICAgICJpbWJhbGFuY2Utd2VpZ2h0cy12ZWMiLCBkZj1wZC5EYXRhRnJhbWUoeyJ3ZWlnaHRzIjogaW1idGFibGV9KQogICAgICAgICAgICApLAogICAgICAgICAgICBsb2NhbF9wYXRoPWYie3Bsb3RzX2Rlc3R9L2ltYmFsYW5jZS13ZWlnaHRzLXZlYy5jc3YiLAogICAgICAgICAgICBkYl9rZXk9RmFsc2UsCiAgICAgICAgKQoKICAgIHRibGNvcnIgPSBkZi5jb3JyKCkKICAgIG1hc2sgPSBucC56ZXJvc19saWtlKHRibGNvcnIsIGR0eXBlPW5wLmJvb2wpCiAgICBtYXNrW25wLnRyaXVfaW5kaWNlc19mcm9tKG1hc2spXSA9IFRydWUKCiAgICBkZmNvcnIgPSBwZC5EYXRhRnJhbWUoZGF0YT10Ymxjb3JyLCBjb2x1bW5zPWhlYWRlciwgaW5kZXg9aGVhZGVyKQogICAgZGZjb3JyID0gZGZjb3JyW25wLmFyYW5nZShkZmNvcnIuc2hhcGVbMF0pWzosIE5vbmVdID4gbnAuYXJhbmdlKGRmY29yci5zaGFwZVsxXSldCiAgICBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICBUYWJsZUFydGlmYWN0KCJjb3JyZWxhdGlvbi1tYXRyaXgiLCBkZj10Ymxjb3JyLCB2aXNpYmxlPVRydWUpLAogICAgICAgIGxvY2FsX3BhdGg9ZiJ7cGxvdHNfZGVzdH0vY29ycmVsYXRpb24tbWF0cml4LmNzdiIsCiAgICAgICAgZGJfa2V5PUZhbHNlLAogICAgKQoKICAgIHRyeToKICAgICAgICBnY2ZfY2xlYXIocGx0KQogICAgICAgIGF4ID0gcGx0LmF4ZXMoKQogICAgICAgIHNucy5oZWF0bWFwKHRibGNvcnIsIGF4PWF4LCBtYXNrPW1hc2ssIGFubm90PUZhbHNlLCBjbWFwPXBsdC5jbS5SZWRzKQogICAgICAgIGF4LnNldF90aXRsZSgiZmVhdHVyZXMgY29ycmVsYXRpb24iKQogICAgICAgIGV4dHJhX2RhdGFbImNvcnJlbGF0aW9uIl0gPSBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICAgICAgUGxvdEFydGlmYWN0KCJjb3JyZWxhdGlvbiIsIGJvZHk9cGx0LmdjZigpLCB0aXRsZT0iQ29ycmVsYXRpb24gTWF0cml4IiksCiAgICAgICAgICAgIGxvY2FsX3BhdGg9ZiJ7cGxvdHNfZGVzdH0vY29yci5odG1sIiwKICAgICAgICAgICAgZGJfa2V5PUZhbHNlLAogICAgICAgICkKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICBjb250ZXh0LmxvZ2dlci53YXJuKGYiRmFpbGVkIHRvIGNyZWF0ZSBmZWF0dXJlcyBjb3JyZWxhdGlvbiBwbG90IGR1ZSB0bzoge2V9IikKCiAgICBnY2ZfY2xlYXIocGx0KQogICAgaWYgdXBkYXRlX2RhdGFzZXQgYW5kIHRhYmxlLm1ldGEgYW5kIHRhYmxlLm1ldGEua2luZCA9PSAiZGF0YXNldCI6CiAgICAgICAgZnJvbSBtbHJ1bi5hcnRpZmFjdHMgaW1wb3J0IHVwZGF0ZV9kYXRhc2V0X21ldGEKCiAgICAgICAgdXBkYXRlX2RhdGFzZXRfbWV0YSh0YWJsZS5tZXRhLCBleHRyYV9kYXRhPWV4dHJhX2RhdGEpCg==",
          "commands": [],
          "code_origin": "https://github.com/daniels290813/functions.git#55a79c32be5d233cc11efcf40cd3edbe309bfdef:/home/kali/functions/describe/describe.py"
        },
        "mount_applied": true,
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "describe",
        "tag": "",
        "hash": "434fd7fc58255473dcb682fa21ee233ab2eb9e9a",
        "project": "network-operations-admin",
        "labels": {
          "author": "Iguazio"
        },
        "categories": [
          "data-analysis"
        ],
        "updated": "2021-08-29T20:07:44.987814+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "summarize",
        "entry_points": {
          "summarize": {
            "name": "summarize",
            "doc": "Summarize a table",
            "parameters": [
              {
                "name": "context",
                "type": "MLClientCtx",
                "doc": "the function context",
                "default": ""
              },
              {
                "name": "table",
                "type": "DataItem",
                "doc": "MLRun input pointing to pandas dataframe (csv/parquet file path)",
                "default": ""
              },
              {
                "name": "label_column",
                "type": "str",
                "doc": "ground truth column label",
                "default": null
              },
              {
                "name": "class_labels",
                "type": "List[str]",
                "doc": "label for each class in tables and plots",
                "default": []
              },
              {
                "name": "plot_hist",
                "type": "bool",
                "doc": "(True) set this to False for large tables",
                "default": true
              },
              {
                "name": "plots_dest",
                "type": "str",
                "doc": "destination folder of summary plots (relative to artifact_path)",
                "default": "plots"
              },
              {
                "name": "update_dataset",
                "doc": "when the table is a registered dataset update the charts in-place",
                "default": false
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 23
          }
        },
        "description": "describe and visualizes dataset stats",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHdhcm5pbmdzCgp3YXJuaW5ncy5zaW1wbGVmaWx0ZXIoYWN0aW9uPSJpZ25vcmUiLCBjYXRlZ29yeT1GdXR1cmVXYXJuaW5nKQoKaW1wb3J0IG9zCmltcG9ydCBudW1weSBhcyBucAppbXBvcnQgcGFuZGFzIGFzIHBkCmltcG9ydCBtYXRwbG90bGliLnB5cGxvdCBhcyBwbHQKaW1wb3J0IHNlYWJvcm4gYXMgc25zCgpmcm9tIG1scnVuLmV4ZWN1dGlvbiBpbXBvcnQgTUxDbGllbnRDdHgKZnJvbSBtbHJ1bi5kYXRhc3RvcmUgaW1wb3J0IERhdGFJdGVtCmZyb20gbWxydW4uYXJ0aWZhY3RzIGltcG9ydCBQbG90QXJ0aWZhY3QsIFRhYmxlQXJ0aWZhY3QKZnJvbSBtbHJ1bi5tbHV0aWxzLnBsb3RzIGltcG9ydCBnY2ZfY2xlYXIKCmZyb20gdHlwaW5nIGltcG9ydCBMaXN0CgpwZC5zZXRfb3B0aW9uKCJkaXNwbGF5LmZsb2F0X2Zvcm1hdCIsIGxhbWJkYSB4OiAiJS4yZiIgJSB4KQoKCmRlZiBzdW1tYXJpemUoCiAgICBjb250ZXh0OiBNTENsaWVudEN0eCwKICAgIHRhYmxlOiBEYXRhSXRlbSwKICAgIGxhYmVsX2NvbHVtbjogc3RyID0gTm9uZSwKICAgIGNsYXNzX2xhYmVsczogTGlzdFtzdHJdID0gW10sCiAgICBwbG90X2hpc3Q6IGJvb2wgPSBUcnVlLAogICAgcGxvdHNfZGVzdDogc3RyID0gInBsb3RzIiwKICAgIHVwZGF0ZV9kYXRhc2V0PUZhbHNlLAopIC0+IE5vbmU6CiAgICAiIiJTdW1tYXJpemUgYSB0YWJsZQoKICAgIDpwYXJhbSBjb250ZXh0OiAgICAgICAgIHRoZSBmdW5jdGlvbiBjb250ZXh0CiAgICA6cGFyYW0gdGFibGU6ICAgICAgICAgICBNTFJ1biBpbnB1dCBwb2ludGluZyB0byBwYW5kYXMgZGF0YWZyYW1lIChjc3YvcGFycXVldCBmaWxlIHBhdGgpCiAgICA6cGFyYW0gbGFiZWxfY29sdW1uOiAgICBncm91bmQgdHJ1dGggY29sdW1uIGxhYmVsCiAgICA6cGFyYW0gY2xhc3NfbGFiZWxzOiAgICBsYWJlbCBmb3IgZWFjaCBjbGFzcyBpbiB0YWJsZXMgYW5kIHBsb3RzCiAgICA6cGFyYW0gcGxvdF9oaXN0OiAgICAgICAoVHJ1ZSkgc2V0IHRoaXMgdG8gRmFsc2UgZm9yIGxhcmdlIHRhYmxlcwogICAgOnBhcmFtIHBsb3RzX2Rlc3Q6ICAgICAgZGVzdGluYXRpb24gZm9sZGVyIG9mIHN1bW1hcnkgcGxvdHMgKHJlbGF0aXZlIHRvIGFydGlmYWN0X3BhdGgpCiAgICA6cGFyYW0gdXBkYXRlX2RhdGFzZXQ6ICB3aGVuIHRoZSB0YWJsZSBpcyBhIHJlZ2lzdGVyZWQgZGF0YXNldCB1cGRhdGUgdGhlIGNoYXJ0cyBpbi1wbGFjZQogICAgIiIiCiAgICBkZiA9IHRhYmxlLmFzX2RmKCkKICAgIGhlYWRlciA9IGRmLmNvbHVtbnMudmFsdWVzCiAgICBleHRyYV9kYXRhID0ge30KCiAgICB0cnk6CiAgICAgICAgZ2NmX2NsZWFyKHBsdCkKICAgICAgICBzbnNwbHQgPSBzbnMucGFpcnBsb3QoZGYsIGh1ZT1sYWJlbF9jb2x1bW4pICAjICwgZGlhZ19rd3M9eyJidyI6IDEuNX0pCiAgICAgICAgZXh0cmFfZGF0YVsiaGlzdG9ncmFtcyJdID0gY29udGV4dC5sb2dfYXJ0aWZhY3QoCiAgICAgICAgICAgIFBsb3RBcnRpZmFjdCgiaGlzdG9ncmFtcyIsIGJvZHk9cGx0LmdjZigpKSwKICAgICAgICAgICAgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS9oaXN0Lmh0bWwiLAogICAgICAgICAgICBkYl9rZXk9RmFsc2UsCiAgICAgICAgKQogICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgIGNvbnRleHQubG9nZ2VyLmVycm9yKGYiRmFpbGVkIHRvIGNyZWF0ZSBwYWlycGxvdCBoaXN0b2dyYW1zIGR1ZSB0bzoge2V9IikKCiAgICB0cnk6CiAgICAgICAgZ2NmX2NsZWFyKHBsdCkKICAgICAgICBwbG90X2NvbHMgPSAzCiAgICAgICAgcGxvdF9yb3dzID0gaW50KChsZW4oaGVhZGVyKSAtIDEpIC8gcGxvdF9jb2xzKSArIDEKICAgICAgICBmaWcsIGF4ID0gcGx0LnN1YnBsb3RzKHBsb3Rfcm93cywgcGxvdF9jb2xzLCBmaWdzaXplPSgxNSwgNCkpCiAgICAgICAgZmlnLnRpZ2h0X2xheW91dChwYWQ9Mi4wKQogICAgICAgIGZvciBpIGluIHJhbmdlKHBsb3Rfcm93cyAqIHBsb3RfY29scyk6CiAgICAgICAgICAgIGlmIGkgPCBsZW4oaGVhZGVyKToKICAgICAgICAgICAgICAgIHNucy52aW9saW5wbG90KAogICAgICAgICAgICAgICAgICAgIHg9ZGZbaGVhZGVyW2ldXSwKICAgICAgICAgICAgICAgICAgICBheD1heFtpbnQoaSAvIHBsb3RfY29scyldW2kgJSBwbG90X2NvbHNdLAogICAgICAgICAgICAgICAgICAgIG9yaWVudD0iaCIsCiAgICAgICAgICAgICAgICAgICAgd2lkdGg9MC43LAogICAgICAgICAgICAgICAgICAgIGlubmVyPSJxdWFydGlsZSIsCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBmaWcuZGVsYXhlcyhheFtpbnQoaSAvIHBsb3RfY29scyldW2kgJSBwbG90X2NvbHNdKQogICAgICAgICAgICBpICs9IDEKICAgICAgICBleHRyYV9kYXRhWyJ2aW9saW4iXSA9IGNvbnRleHQubG9nX2FydGlmYWN0KAogICAgICAgICAgICBQbG90QXJ0aWZhY3QoInZpb2xpbiIsIGJvZHk9cGx0LmdjZigpLCB0aXRsZT0iVmlvbGluIFBsb3QiKSwKICAgICAgICAgICAgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS92aW9saW4uaHRtbCIsCiAgICAgICAgICAgIGRiX2tleT1GYWxzZSwKICAgICAgICApCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgY29udGV4dC5sb2dnZXIud2FybihmIkZhaWxlZCB0byBjcmVhdGUgdmlvbGluIGRpc3RyaWJ1dGlvbiBwbG90cyBkdWUgdG86IHtlfSIpCgogICAgaWYgbGFiZWxfY29sdW1uOgogICAgICAgIGxhYmVscyA9IGRmLnBvcChsYWJlbF9jb2x1bW4pCiAgICAgICAgaW1idGFibGUgPSBsYWJlbHMudmFsdWVfY291bnRzKG5vcm1hbGl6ZT1UcnVlKS5zb3J0X2luZGV4KCkKICAgICAgICB0cnk6CiAgICAgICAgICAgIGdjZl9jbGVhcihwbHQpCiAgICAgICAgICAgIGJhbGFuY2ViYXIgPSBpbWJ0YWJsZS5wbG90KGtpbmQ9ImJhciIsIHRpdGxlPSJjbGFzcyBpbWJhbGFuY2UgLSBsYWJlbHMiKQogICAgICAgICAgICBiYWxhbmNlYmFyLnNldF94bGFiZWwoImNsYXNzIikKICAgICAgICAgICAgYmFsYW5jZWJhci5zZXRfeWxhYmVsKCJwcm9wb3J0aW9uIG9mIHRvdGFsIikKICAgICAgICAgICAgZXh0cmFfZGF0YVsiaW1iYWxhbmNlIl0gPSBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICAgICAgICAgIFBsb3RBcnRpZmFjdCgiaW1iYWxhbmNlIiwgYm9keT1wbHQuZ2NmKCkpLAogICAgICAgICAgICAgICAgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS9pbWJhbGFuY2UuaHRtbCIsCiAgICAgICAgICAgICkKICAgICAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgICAgIGNvbnRleHQubG9nZ2VyLndhcm4oZiJGYWlsZWQgdG8gY3JlYXRlIGNsYXNzIGltYmFsYW5jZSBwbG90IGR1ZSB0bzoge2V9IikKICAgICAgICBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICAgICAgVGFibGVBcnRpZmFjdCgKICAgICAgICAgICAgICAgICJpbWJhbGFuY2Utd2VpZ2h0cy12ZWMiLCBkZj1wZC5EYXRhRnJhbWUoeyJ3ZWlnaHRzIjogaW1idGFibGV9KQogICAgICAgICAgICApLAogICAgICAgICAgICBsb2NhbF9wYXRoPWYie3Bsb3RzX2Rlc3R9L2ltYmFsYW5jZS13ZWlnaHRzLXZlYy5jc3YiLAogICAgICAgICAgICBkYl9rZXk9RmFsc2UsCiAgICAgICAgKQoKICAgIHRibGNvcnIgPSBkZi5jb3JyKCkKICAgIG1hc2sgPSBucC56ZXJvc19saWtlKHRibGNvcnIsIGR0eXBlPW5wLmJvb2wpCiAgICBtYXNrW25wLnRyaXVfaW5kaWNlc19mcm9tKG1hc2spXSA9IFRydWUKCiAgICBkZmNvcnIgPSBwZC5EYXRhRnJhbWUoZGF0YT10Ymxjb3JyLCBjb2x1bW5zPWhlYWRlciwgaW5kZXg9aGVhZGVyKQogICAgZGZjb3JyID0gZGZjb3JyW25wLmFyYW5nZShkZmNvcnIuc2hhcGVbMF0pWzosIE5vbmVdID4gbnAuYXJhbmdlKGRmY29yci5zaGFwZVsxXSldCiAgICBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICBUYWJsZUFydGlmYWN0KCJjb3JyZWxhdGlvbi1tYXRyaXgiLCBkZj10Ymxjb3JyLCB2aXNpYmxlPVRydWUpLAogICAgICAgIGxvY2FsX3BhdGg9ZiJ7cGxvdHNfZGVzdH0vY29ycmVsYXRpb24tbWF0cml4LmNzdiIsCiAgICAgICAgZGJfa2V5PUZhbHNlLAogICAgKQoKICAgIHRyeToKICAgICAgICBnY2ZfY2xlYXIocGx0KQogICAgICAgIGF4ID0gcGx0LmF4ZXMoKQogICAgICAgIHNucy5oZWF0bWFwKHRibGNvcnIsIGF4PWF4LCBtYXNrPW1hc2ssIGFubm90PUZhbHNlLCBjbWFwPXBsdC5jbS5SZWRzKQogICAgICAgIGF4LnNldF90aXRsZSgiZmVhdHVyZXMgY29ycmVsYXRpb24iKQogICAgICAgIGV4dHJhX2RhdGFbImNvcnJlbGF0aW9uIl0gPSBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICAgICAgUGxvdEFydGlmYWN0KCJjb3JyZWxhdGlvbiIsIGJvZHk9cGx0LmdjZigpLCB0aXRsZT0iQ29ycmVsYXRpb24gTWF0cml4IiksCiAgICAgICAgICAgIGxvY2FsX3BhdGg9ZiJ7cGxvdHNfZGVzdH0vY29yci5odG1sIiwKICAgICAgICAgICAgZGJfa2V5PUZhbHNlLAogICAgICAgICkKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICBjb250ZXh0LmxvZ2dlci53YXJuKGYiRmFpbGVkIHRvIGNyZWF0ZSBmZWF0dXJlcyBjb3JyZWxhdGlvbiBwbG90IGR1ZSB0bzoge2V9IikKCiAgICBnY2ZfY2xlYXIocGx0KQogICAgaWYgdXBkYXRlX2RhdGFzZXQgYW5kIHRhYmxlLm1ldGEgYW5kIHRhYmxlLm1ldGEua2luZCA9PSAiZGF0YXNldCI6CiAgICAgICAgZnJvbSBtbHJ1bi5hcnRpZmFjdHMgaW1wb3J0IHVwZGF0ZV9kYXRhc2V0X21ldGEKCiAgICAgICAgdXBkYXRlX2RhdGFzZXRfbWV0YSh0YWJsZS5tZXRhLCBleHRyYV9kYXRhPWV4dHJhX2RhdGEpCg==",
          "commands": [],
          "code_origin": "https://github.com/daniels290813/functions.git#55a79c32be5d233cc11efcf40cd3edbe309bfdef:/home/kali/functions/describe/describe.py"
        },
        "mount_applied": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "aggregate",
        "tag": "",
        "hash": "5e1b1c8b078b4f3e0a66adec8c51f8eabf51cc69",
        "project": "network-operations-admin",
        "labels": {
          "author": "avia"
        },
        "categories": [
          "data-preparation"
        ],
        "updated": "2021-08-29T20:07:35.135083+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "aggregate",
        "entry_points": {
          "aggregate": {
            "name": "aggregate",
            "doc": "Time-series aggregation function\n\nWill perform a rolling aggregation on {df_artifact}, over {window} by the selected {keys}\napplying {metric_aggs} on {metrics} and {label_aggs} on {labels}. adding {suffix} to the \nfeature names.\n\nif not {inplace}, will return the original {df_artifact}, joined by the aggregated result.",
            "parameters": [
              {
                "name": "context",
                "default": ""
              },
              {
                "name": "df_artifact",
                "type": "Union[DataItem, DataFrame]",
                "doc": "MLRun input pointing to pandas dataframe (csv/parquet file path) or a  directory containing parquet files. * When given a directory the latest {files_to_select} will be selected",
                "default": ""
              },
              {
                "name": "save_to",
                "type": "str",
                "doc": "Where to save the result dataframe. * If relative will add to the {artifact_path}",
                "default": "aggregated-df.pq"
              },
              {
                "name": "keys",
                "type": "list",
                "doc": "Subset of indexes from the source dataframe to aggregate by (default=all)",
                "default": null
              },
              {
                "name": "metrics",
                "type": "list",
                "doc": "Array containing a list of metrics to run the aggregations on. (default=None) ",
                "default": null
              },
              {
                "name": "labels",
                "type": "list",
                "doc": "Array containing a list of labels to run the aggregations on. (default=None) ",
                "default": null
              },
              {
                "name": "metric_aggs",
                "type": "list",
                "doc": "Array containing a list of aggregation function names to run on {metrics}. (Ex: 'mean', 'std') (default='mean')",
                "default": [
                  "mean"
                ]
              },
              {
                "name": "label_aggs",
                "type": "list",
                "doc": "Array containing a list of aggregation function names to run on {metrics}. (Ex: 'max', 'min') (default='max') ",
                "default": [
                  "max"
                ]
              },
              {
                "name": "suffix",
                "type": "str",
                "doc": "Suffix to add to the feature name, E.g: <Feature_Name>_<Agg_Function>_<Suffix> (Ex: 'last_60_mintes') (default='')",
                "default": ""
              },
              {
                "name": "window",
                "type": "int",
                "doc": "Window size to perform the rolling aggregate on. (default=3)",
                "default": 3
              },
              {
                "name": "center",
                "type": "bool",
                "doc": "If True, Sets the value for the central sample in the window, If False, will set the value to the last sample. (default=False)",
                "default": false
              },
              {
                "name": "inplace",
                "type": "bool",
                "doc": "If True, will return only the aggregated results. If False, will join the aggregated results with the original dataframe",
                "default": false
              },
              {
                "name": "drop_na",
                "type": "bool",
                "doc": "Will drop na lines due to the Rolling.",
                "default": true
              },
              {
                "name": "files_to_select",
                "type": "int",
                "doc": "Specifies the number of *latest* files to select (and concat) for aggregation.",
                "default": 1
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 9
          }
        },
        "description": "Rolling aggregation over Metrics and Lables according to specifications",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG9zCmltcG9ydCBwYW5kYXMgYXMgcGQKZnJvbSBtbHJ1bi5kYXRhc3RvcmUgaW1wb3J0IERhdGFJdGVtCgpmcm9tIHR5cGluZyBpbXBvcnQgVW5pb24KCmRlZiBhZ2dyZWdhdGUoY29udGV4dCwKICAgICAgICAgICAgICBkZl9hcnRpZmFjdDogVW5pb25bRGF0YUl0ZW0sIHBkLmNvcmUuZnJhbWUuRGF0YUZyYW1lXSwKICAgICAgICAgICAgICBzYXZlX3RvOiBzdHIgPSAnYWdncmVnYXRlZC1kZi5wcScsIAogICAgICAgICAgICAgIGtleXM6IGxpc3QgPSBOb25lLCAKICAgICAgICAgICAgICBtZXRyaWNzOiBsaXN0ID0gTm9uZSwgCiAgICAgICAgICAgICAgbGFiZWxzOiBsaXN0ID0gTm9uZSwgCiAgICAgICAgICAgICAgbWV0cmljX2FnZ3M6IGxpc3QgPSBbJ21lYW4nXSwgCiAgICAgICAgICAgICAgbGFiZWxfYWdnczogbGlzdCA9IFsnbWF4J10sIAogICAgICAgICAgICAgIHN1ZmZpeDogc3RyID0gJycsIAogICAgICAgICAgICAgIHdpbmRvdzogaW50ID0gMywgCiAgICAgICAgICAgICAgY2VudGVyOiBib29sID0gRmFsc2UsIAogICAgICAgICAgICAgIGlucGxhY2U6IGJvb2wgPSBGYWxzZSwKICAgICAgICAgICAgICBkcm9wX25hOiBib29sID0gVHJ1ZSwKICAgICAgICAgICAgICBmaWxlc190b19zZWxlY3Q6IGludCA9IDEpOgogICAgIiIiVGltZS1zZXJpZXMgYWdncmVnYXRpb24gZnVuY3Rpb24KICAgIAogICAgV2lsbCBwZXJmb3JtIGEgcm9sbGluZyBhZ2dyZWdhdGlvbiBvbiB7ZGZfYXJ0aWZhY3R9LCBvdmVyIHt3aW5kb3d9IGJ5IHRoZSBzZWxlY3RlZCB7a2V5c30KICAgIGFwcGx5aW5nIHttZXRyaWNfYWdnc30gb24ge21ldHJpY3N9IGFuZCB7bGFiZWxfYWdnc30gb24ge2xhYmVsc30uIGFkZGluZyB7c3VmZml4fSB0byB0aGUgCiAgICBmZWF0dXJlIG5hbWVzLgogICAgCiAgICBpZiBub3Qge2lucGxhY2V9LCB3aWxsIHJldHVybiB0aGUgb3JpZ2luYWwge2RmX2FydGlmYWN0fSwgam9pbmVkIGJ5IHRoZSBhZ2dyZWdhdGVkIHJlc3VsdC4KICAgIAogICAgOnBhcmFtIGRmX2FydGlmYWN0OiBNTFJ1biBpbnB1dCBwb2ludGluZyB0byBwYW5kYXMgZGF0YWZyYW1lIChjc3YvcGFycXVldCBmaWxlIHBhdGgpIG9yIGEgCiAgICAgICAgICAgICAgICAgICAgICAgIGRpcmVjdG9yeSBjb250YWluaW5nIHBhcnF1ZXQgZmlsZXMuCiAgICAgICAgICAgICAgICAgICAgICAgICogV2hlbiBnaXZlbiBhIGRpcmVjdG9yeSB0aGUgbGF0ZXN0IHtmaWxlc190b19zZWxlY3R9IHdpbGwgYmUgc2VsZWN0ZWQKICAgIDpwYXJhbSBzYXZlX3RvOiAgICAgV2hlcmUgdG8gc2F2ZSB0aGUgcmVzdWx0IGRhdGFmcmFtZS4KICAgICAgICAgICAgICAgICAgICAgICAgKiBJZiByZWxhdGl2ZSB3aWxsIGFkZCB0byB0aGUge2FydGlmYWN0X3BhdGh9CiAgICA6cGFyYW0ga2V5czogICAgICAgIFN1YnNldCBvZiBpbmRleGVzIGZyb20gdGhlIHNvdXJjZSBkYXRhZnJhbWUgdG8gYWdncmVnYXRlIGJ5IChkZWZhdWx0PWFsbCkKICAgIDpwYXJhbSBtZXRyaWNzOiAgICAgQXJyYXkgY29udGFpbmluZyBhIGxpc3Qgb2YgbWV0cmljcyB0byBydW4gdGhlIGFnZ3JlZ2F0aW9ucyBvbi4gKGRlZmF1bHQ9Tm9uZSkgCiAgICA6cGFyYW0gbGFiZWxzOiAgICAgIEFycmF5IGNvbnRhaW5pbmcgYSBsaXN0IG9mIGxhYmVscyB0byBydW4gdGhlIGFnZ3JlZ2F0aW9ucyBvbi4gKGRlZmF1bHQ9Tm9uZSkgCiAgICA6cGFyYW0gbWV0cmljX2FnZ3M6IEFycmF5IGNvbnRhaW5pbmcgYSBsaXN0IG9mIGFnZ3JlZ2F0aW9uIGZ1bmN0aW9uIG5hbWVzIHRvIHJ1biBvbiB7bWV0cmljc30uCiAgICAgICAgICAgICAgICAgICAgICAgIChFeDogJ21lYW4nLCAnc3RkJykgKGRlZmF1bHQ9J21lYW4nKQogICAgOnBhcmFtIGxhYmVsX2FnZ3M6ICBBcnJheSBjb250YWluaW5nIGEgbGlzdCBvZiBhZ2dyZWdhdGlvbiBmdW5jdGlvbiBuYW1lcyB0byBydW4gb24ge21ldHJpY3N9LgogICAgICAgICAgICAgICAgICAgICAgICAoRXg6ICdtYXgnLCAnbWluJykgKGRlZmF1bHQ9J21heCcpIAogICAgOnBhcmFtIHN1ZmZpeDogICAgICBTdWZmaXggdG8gYWRkIHRvIHRoZSBmZWF0dXJlIG5hbWUsIEUuZzogPEZlYXR1cmVfTmFtZT5fPEFnZ19GdW5jdGlvbj5fPFN1ZmZpeD4KICAgICAgICAgICAgICAgICAgICAgICAgKEV4OiAnbGFzdF82MF9taW50ZXMnKSAoZGVmYXVsdD0nJykKICAgIDpwYXJhbSB3aW5kb3c6ICAgICAgV2luZG93IHNpemUgdG8gcGVyZm9ybSB0aGUgcm9sbGluZyBhZ2dyZWdhdGUgb24uIChkZWZhdWx0PTMpCiAgICA6cGFyYW0gY2VudGVyOiAgICAgIElmIFRydWUsIFNldHMgdGhlIHZhbHVlIGZvciB0aGUgY2VudHJhbCBzYW1wbGUgaW4gdGhlIHdpbmRvdywKICAgICAgICAgICAgICAgICAgICAgICAgSWYgRmFsc2UsIHdpbGwgc2V0IHRoZSB2YWx1ZSB0byB0aGUgbGFzdCBzYW1wbGUuIChkZWZhdWx0PUZhbHNlKQogICAgOnBhcmFtIGlucGxhY2U6ICAgICBJZiBUcnVlLCB3aWxsIHJldHVybiBvbmx5IHRoZSBhZ2dyZWdhdGVkIHJlc3VsdHMuCiAgICAgICAgICAgICAgICAgICAgICAgIElmIEZhbHNlLCB3aWxsIGpvaW4gdGhlIGFnZ3JlZ2F0ZWQgcmVzdWx0cyB3aXRoIHRoZSBvcmlnaW5hbCBkYXRhZnJhbWUKICAgIDpwYXJhbSBkcm9wX25hOiAgICAgV2lsbCBkcm9wIG5hIGxpbmVzIGR1ZSB0byB0aGUgUm9sbGluZy4KICAgIDpwYXJhbSBmaWxlc190b19zZWxlY3Q6IFNwZWNpZmllcyB0aGUgbnVtYmVyIG9mICpsYXRlc3QqIGZpbGVzIHRvIHNlbGVjdCAoYW5kIGNvbmNhdCkgZm9yIGFnZ3JlZ2F0aW9uLgogICAgIiIiCiAgICAKICAgIGZyb21fbW9kZWwgPSB0eXBlKGRmX2FydGlmYWN0KSA9PSBwZC5EYXRhRnJhbWUKICAgIGlmIGZyb21fbW9kZWw6CiAgICAgICAgY29udGV4dC5sb2dnZXIuaW5mbygnQWdncmVnYXRpbmcgZnJvbSBCdWZmZXInKQogICAgICAgIGlucHV0X2RmID0gZGZfYXJ0aWZhY3QKICAgIGVsc2U6CiAgICAgICAgaWYgZGZfYXJ0aWZhY3QudXJsLmVuZHN3aXRoKCcvJyk6ICAgIyBpcyBhIGRpcmVjdG9yeT8KICAgICAgICAgICAgbXBhdGggPSBbb3MucGF0aC5qb2luKGRmX2FydGlmYWN0LnVybCwgZmlsZSkgZm9yIGZpbGUgaW4gZGZfYXJ0aWZhY3QubGlzdGRpcigpIGlmIGZpbGUuZW5kc3dpdGgoKCdwYXJxdWV0JywgJ3BxJykpXQogICAgICAgICAgICBmaWxlc19ieV91cGRhdGVkID0gc29ydGVkKG1wYXRoLCBrZXk9b3MucGF0aC5nZXRtdGltZSwgcmV2ZXJzZT1UcnVlKQogICAgICAgICAgICBjb250ZXh0LmxvZ2dlci5pbmZvKGZpbGVzX2J5X3VwZGF0ZWQpCiAgICAgICAgICAgIGxhdGVzdCA9IGZpbGVzX2J5X3VwZGF0ZWRbOmZpbGVzX3RvX3NlbGVjdF0KICAgICAgICAgICAgY29udGV4dC5sb2dnZXIuaW5mbyhmJ0FnZ3JlZ2F0aW5nIHtsYXRlc3R9JykKICAgICAgICAgICAgaW5wdXRfZGYgPSBwZC5jb25jYXQoW2NvbnRleHQuZ2V0X2RhdGFpdGVtKGRmKS5hc19kZigpIGZvciBkZiBpbiBsYXRlc3RdKQogICAgICAgIGVsc2U6ICAjIEEgcmVndWxhciBhcnRpZmFjdAogICAgICAgICAgICBjb250ZXh0LmxvZ2dlci5pbmZvKGYnQWdncmVnYXRpbmcge2RmX2FydGlmYWN0LnVybH0nKQogICAgICAgICAgICBpbnB1dF9kZiA9IGRmX2FydGlmYWN0LmFzX2RmKCkKICAgIAogICAgaWYgbm90IChtZXRyaWNzIG9yIGxhYmVscyk6CiAgICAgICAgcmFpc2UgVmFsdWVFcnJvcigncGxlYXNlIHNwZWNpZnkgbWV0cmljcyBvciBsYWJlbHMgcGFyYW0nKQogICAgCiAgICBpZiBrZXlzOgogICAgICAgIGN1cnJlbnRfaW5kZXggPSBpbnB1dF9kZi5pbmRleC5uYW1lcwogICAgICAgIGluZGV4ZXNfdG9fZHJvcCA9IFtjb2wgZm9yIGNvbCBpbiBpbnB1dF9kZi5pbmRleC5uYW1lcyBpZiBjb2wgbm90IGluIGtleXNdCiAgICAgICAgZGYgPSBpbnB1dF9kZi5yZXNldF9pbmRleChsZXZlbD1pbmRleGVzX3RvX2Ryb3ApCiAgICBlbHNlOgogICAgICAgIGRmID0gaW5wdXRfZGYKICAgICAgICAKICAgIGlmIG1ldHJpY3M6CiAgICAgICAgbWV0cmljc19kZiA9IGRmLmxvY1s6LCBtZXRyaWNzXS5yb2xsaW5nKHdpbmRvdz13aW5kb3csIGNlbnRlcj1jZW50ZXIpLmFnZ3JlZ2F0ZShtZXRyaWNfYWdncykKICAgICAgICAKICAgICAgICBtZXRyaWNzX2RmLmNvbHVtbnMgPSBbJ18nLmpvaW4oY29sKS5zdHJpcCgpIGZvciBjb2wgaW4gbWV0cmljc19kZi5jb2x1bW5zLnZhbHVlc10KICAgICAgICAKICAgICAgICBpZiBzdWZmaXg6CiAgICAgICAgICAgIG1ldHJpY3NfZGYuY29sdW1ucyA9IFtmJ3ttZXRyaWN9X3tzdWZmaXh9JyBmb3IgbWV0cmljIGluIG1ldHJpY3NfZGYuY29sdW1uc10KICAgICAgICAgICAgCiAgICAgICAgaWYgbm90IGlucGxhY2U6CiAgICAgICAgICAgIGZpbmFsX2RmID0gcGQubWVyZ2UoaW5wdXRfZGYsIG1ldHJpY3NfZGYsIHN1ZmZpeGVzPSgnJywgc3VmZml4KSwgbGVmdF9pbmRleD1UcnVlLCByaWdodF9pbmRleD1UcnVlKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIGZpbmFsX2RmID0gbWV0cmljc19kZgoKICAgIGlmIGxhYmVsczoKICAgICAgICBsYWJlbHNfZGYgPSBkZi5sb2NbOiwgbGFiZWxzXS5yb2xsaW5nKHdpbmRvdz13aW5kb3csCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjZW50ZXI9Y2VudGVyKS5hZ2dyZWdhdGUobGFiZWxfYWdncykKICAgICAgICBsYWJlbHNfZGYuY29sdW1ucyA9IFsnXycuam9pbihjb2wpLnN0cmlwKCkgZm9yIGNvbCBpbiBsYWJlbHNfZGYuY29sdW1ucy52YWx1ZXNdCiAgICAgICAgCiAgICAgICAgaWYgc3VmZml4OgogICAgICAgICAgICBsYWJlbHNfZGYuY29sdW1ucyA9IFtmJ3tsYWJlbH1fe3N1ZmZpeH0nIGZvciBsYWJlbCBpbiBsYWJlbHNfZGYuY29sdW1uc10KICAgICAgICAgICAgCiAgICAgICAgaWYgbWV0cmljczoKICAgICAgICAgICAgZmluYWxfZGYgPSBwZC5tZXJnZShmaW5hbF9kZiwgbGFiZWxzX2RmLCBzdWZmaXhlcz0oJycsIHN1ZmZpeCksIGxlZnRfaW5kZXg9VHJ1ZSwgcmlnaHRfaW5kZXg9VHJ1ZSkgICAKICAgICAgICBlbHNlOgogICAgICAgICAgICBpZiBub3QgaW5wbGFjZToKICAgICAgICAgICAgICAgIGZpbmFsX2RmID0gcGQubWVyZ2UoaW5wdXRfZGYsIGxhYmVsc19kZiwgc3VmZml4ZXM9KCcnLCBzdWZmaXgpLCBsZWZ0X2luZGV4PVRydWUsIHJpZ2h0X2luZGV4PVRydWUpICAgICAgCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBmaW5hbF9kZiA9IGxhYmVsc19kZgogICAgICAgICAgICAgICAgCiAgICBpZiBkcm9wX25hOgogICAgICAgIGZpbmFsX2RmID0gZmluYWxfZGYuZHJvcG5hKCkKICAgICAgICAKICAgIGNvbnRleHQubG9nZ2VyLmluZm8oJ0xvZ2dpbmcgYXJ0aWZhY3QnKQogICAgaWYgbm90IGZyb21fbW9kZWw6CiAgICAgICAgY29udGV4dC5sb2dfZGF0YXNldChrZXk9J2FnZ3JlZ2F0ZScsIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGY9ZmluYWxfZGYsIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9ybWF0PSdwYXJxdWV0JywKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvY2FsX3BhdGg9c2F2ZV90bykKICAgIGVsc2U6CiAgICAgICAgcmV0dXJuIGZpbmFsX2RmCgo=",
          "commands": [],
          "code_origin": "https://github.com/daniels290813/functions.git#55a79c32be5d233cc11efcf40cd3edbe309bfdef:/home/kali/functions/aggregate/aggregate.py"
        },
        "mount_applied": true,
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "aggregate",
        "tag": "",
        "hash": "906d53c30ee004b73ca4bdbe9d94b351207fe023",
        "project": "network-operations-admin",
        "labels": {
          "author": "avia"
        },
        "categories": [
          "data-preparation"
        ],
        "updated": "2021-08-29T20:07:35.241761+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "aggregate",
        "entry_points": {
          "aggregate": {
            "name": "aggregate",
            "doc": "Time-series aggregation function\n\nWill perform a rolling aggregation on {df_artifact}, over {window} by the selected {keys}\napplying {metric_aggs} on {metrics} and {label_aggs} on {labels}. adding {suffix} to the \nfeature names.\n\nif not {inplace}, will return the original {df_artifact}, joined by the aggregated result.",
            "parameters": [
              {
                "name": "context",
                "default": ""
              },
              {
                "name": "df_artifact",
                "type": "Union[DataItem, DataFrame]",
                "doc": "MLRun input pointing to pandas dataframe (csv/parquet file path) or a  directory containing parquet files. * When given a directory the latest {files_to_select} will be selected",
                "default": ""
              },
              {
                "name": "save_to",
                "type": "str",
                "doc": "Where to save the result dataframe. * If relative will add to the {artifact_path}",
                "default": "aggregated-df.pq"
              },
              {
                "name": "keys",
                "type": "list",
                "doc": "Subset of indexes from the source dataframe to aggregate by (default=all)",
                "default": null
              },
              {
                "name": "metrics",
                "type": "list",
                "doc": "Array containing a list of metrics to run the aggregations on. (default=None) ",
                "default": null
              },
              {
                "name": "labels",
                "type": "list",
                "doc": "Array containing a list of labels to run the aggregations on. (default=None) ",
                "default": null
              },
              {
                "name": "metric_aggs",
                "type": "list",
                "doc": "Array containing a list of aggregation function names to run on {metrics}. (Ex: 'mean', 'std') (default='mean')",
                "default": [
                  "mean"
                ]
              },
              {
                "name": "label_aggs",
                "type": "list",
                "doc": "Array containing a list of aggregation function names to run on {metrics}. (Ex: 'max', 'min') (default='max') ",
                "default": [
                  "max"
                ]
              },
              {
                "name": "suffix",
                "type": "str",
                "doc": "Suffix to add to the feature name, E.g: <Feature_Name>_<Agg_Function>_<Suffix> (Ex: 'last_60_mintes') (default='')",
                "default": ""
              },
              {
                "name": "window",
                "type": "int",
                "doc": "Window size to perform the rolling aggregate on. (default=3)",
                "default": 3
              },
              {
                "name": "center",
                "type": "bool",
                "doc": "If True, Sets the value for the central sample in the window, If False, will set the value to the last sample. (default=False)",
                "default": false
              },
              {
                "name": "inplace",
                "type": "bool",
                "doc": "If True, will return only the aggregated results. If False, will join the aggregated results with the original dataframe",
                "default": false
              },
              {
                "name": "drop_na",
                "type": "bool",
                "doc": "Will drop na lines due to the Rolling.",
                "default": true
              },
              {
                "name": "files_to_select",
                "type": "int",
                "doc": "Specifies the number of *latest* files to select (and concat) for aggregation.",
                "default": 1
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 9
          }
        },
        "description": "Rolling aggregation over Metrics and Lables according to specifications",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG9zCmltcG9ydCBwYW5kYXMgYXMgcGQKZnJvbSBtbHJ1bi5kYXRhc3RvcmUgaW1wb3J0IERhdGFJdGVtCgpmcm9tIHR5cGluZyBpbXBvcnQgVW5pb24KCmRlZiBhZ2dyZWdhdGUoY29udGV4dCwKICAgICAgICAgICAgICBkZl9hcnRpZmFjdDogVW5pb25bRGF0YUl0ZW0sIHBkLmNvcmUuZnJhbWUuRGF0YUZyYW1lXSwKICAgICAgICAgICAgICBzYXZlX3RvOiBzdHIgPSAnYWdncmVnYXRlZC1kZi5wcScsIAogICAgICAgICAgICAgIGtleXM6IGxpc3QgPSBOb25lLCAKICAgICAgICAgICAgICBtZXRyaWNzOiBsaXN0ID0gTm9uZSwgCiAgICAgICAgICAgICAgbGFiZWxzOiBsaXN0ID0gTm9uZSwgCiAgICAgICAgICAgICAgbWV0cmljX2FnZ3M6IGxpc3QgPSBbJ21lYW4nXSwgCiAgICAgICAgICAgICAgbGFiZWxfYWdnczogbGlzdCA9IFsnbWF4J10sIAogICAgICAgICAgICAgIHN1ZmZpeDogc3RyID0gJycsIAogICAgICAgICAgICAgIHdpbmRvdzogaW50ID0gMywgCiAgICAgICAgICAgICAgY2VudGVyOiBib29sID0gRmFsc2UsIAogICAgICAgICAgICAgIGlucGxhY2U6IGJvb2wgPSBGYWxzZSwKICAgICAgICAgICAgICBkcm9wX25hOiBib29sID0gVHJ1ZSwKICAgICAgICAgICAgICBmaWxlc190b19zZWxlY3Q6IGludCA9IDEpOgogICAgIiIiVGltZS1zZXJpZXMgYWdncmVnYXRpb24gZnVuY3Rpb24KICAgIAogICAgV2lsbCBwZXJmb3JtIGEgcm9sbGluZyBhZ2dyZWdhdGlvbiBvbiB7ZGZfYXJ0aWZhY3R9LCBvdmVyIHt3aW5kb3d9IGJ5IHRoZSBzZWxlY3RlZCB7a2V5c30KICAgIGFwcGx5aW5nIHttZXRyaWNfYWdnc30gb24ge21ldHJpY3N9IGFuZCB7bGFiZWxfYWdnc30gb24ge2xhYmVsc30uIGFkZGluZyB7c3VmZml4fSB0byB0aGUgCiAgICBmZWF0dXJlIG5hbWVzLgogICAgCiAgICBpZiBub3Qge2lucGxhY2V9LCB3aWxsIHJldHVybiB0aGUgb3JpZ2luYWwge2RmX2FydGlmYWN0fSwgam9pbmVkIGJ5IHRoZSBhZ2dyZWdhdGVkIHJlc3VsdC4KICAgIAogICAgOnBhcmFtIGRmX2FydGlmYWN0OiBNTFJ1biBpbnB1dCBwb2ludGluZyB0byBwYW5kYXMgZGF0YWZyYW1lIChjc3YvcGFycXVldCBmaWxlIHBhdGgpIG9yIGEgCiAgICAgICAgICAgICAgICAgICAgICAgIGRpcmVjdG9yeSBjb250YWluaW5nIHBhcnF1ZXQgZmlsZXMuCiAgICAgICAgICAgICAgICAgICAgICAgICogV2hlbiBnaXZlbiBhIGRpcmVjdG9yeSB0aGUgbGF0ZXN0IHtmaWxlc190b19zZWxlY3R9IHdpbGwgYmUgc2VsZWN0ZWQKICAgIDpwYXJhbSBzYXZlX3RvOiAgICAgV2hlcmUgdG8gc2F2ZSB0aGUgcmVzdWx0IGRhdGFmcmFtZS4KICAgICAgICAgICAgICAgICAgICAgICAgKiBJZiByZWxhdGl2ZSB3aWxsIGFkZCB0byB0aGUge2FydGlmYWN0X3BhdGh9CiAgICA6cGFyYW0ga2V5czogICAgICAgIFN1YnNldCBvZiBpbmRleGVzIGZyb20gdGhlIHNvdXJjZSBkYXRhZnJhbWUgdG8gYWdncmVnYXRlIGJ5IChkZWZhdWx0PWFsbCkKICAgIDpwYXJhbSBtZXRyaWNzOiAgICAgQXJyYXkgY29udGFpbmluZyBhIGxpc3Qgb2YgbWV0cmljcyB0byBydW4gdGhlIGFnZ3JlZ2F0aW9ucyBvbi4gKGRlZmF1bHQ9Tm9uZSkgCiAgICA6cGFyYW0gbGFiZWxzOiAgICAgIEFycmF5IGNvbnRhaW5pbmcgYSBsaXN0IG9mIGxhYmVscyB0byBydW4gdGhlIGFnZ3JlZ2F0aW9ucyBvbi4gKGRlZmF1bHQ9Tm9uZSkgCiAgICA6cGFyYW0gbWV0cmljX2FnZ3M6IEFycmF5IGNvbnRhaW5pbmcgYSBsaXN0IG9mIGFnZ3JlZ2F0aW9uIGZ1bmN0aW9uIG5hbWVzIHRvIHJ1biBvbiB7bWV0cmljc30uCiAgICAgICAgICAgICAgICAgICAgICAgIChFeDogJ21lYW4nLCAnc3RkJykgKGRlZmF1bHQ9J21lYW4nKQogICAgOnBhcmFtIGxhYmVsX2FnZ3M6ICBBcnJheSBjb250YWluaW5nIGEgbGlzdCBvZiBhZ2dyZWdhdGlvbiBmdW5jdGlvbiBuYW1lcyB0byBydW4gb24ge21ldHJpY3N9LgogICAgICAgICAgICAgICAgICAgICAgICAoRXg6ICdtYXgnLCAnbWluJykgKGRlZmF1bHQ9J21heCcpIAogICAgOnBhcmFtIHN1ZmZpeDogICAgICBTdWZmaXggdG8gYWRkIHRvIHRoZSBmZWF0dXJlIG5hbWUsIEUuZzogPEZlYXR1cmVfTmFtZT5fPEFnZ19GdW5jdGlvbj5fPFN1ZmZpeD4KICAgICAgICAgICAgICAgICAgICAgICAgKEV4OiAnbGFzdF82MF9taW50ZXMnKSAoZGVmYXVsdD0nJykKICAgIDpwYXJhbSB3aW5kb3c6ICAgICAgV2luZG93IHNpemUgdG8gcGVyZm9ybSB0aGUgcm9sbGluZyBhZ2dyZWdhdGUgb24uIChkZWZhdWx0PTMpCiAgICA6cGFyYW0gY2VudGVyOiAgICAgIElmIFRydWUsIFNldHMgdGhlIHZhbHVlIGZvciB0aGUgY2VudHJhbCBzYW1wbGUgaW4gdGhlIHdpbmRvdywKICAgICAgICAgICAgICAgICAgICAgICAgSWYgRmFsc2UsIHdpbGwgc2V0IHRoZSB2YWx1ZSB0byB0aGUgbGFzdCBzYW1wbGUuIChkZWZhdWx0PUZhbHNlKQogICAgOnBhcmFtIGlucGxhY2U6ICAgICBJZiBUcnVlLCB3aWxsIHJldHVybiBvbmx5IHRoZSBhZ2dyZWdhdGVkIHJlc3VsdHMuCiAgICAgICAgICAgICAgICAgICAgICAgIElmIEZhbHNlLCB3aWxsIGpvaW4gdGhlIGFnZ3JlZ2F0ZWQgcmVzdWx0cyB3aXRoIHRoZSBvcmlnaW5hbCBkYXRhZnJhbWUKICAgIDpwYXJhbSBkcm9wX25hOiAgICAgV2lsbCBkcm9wIG5hIGxpbmVzIGR1ZSB0byB0aGUgUm9sbGluZy4KICAgIDpwYXJhbSBmaWxlc190b19zZWxlY3Q6IFNwZWNpZmllcyB0aGUgbnVtYmVyIG9mICpsYXRlc3QqIGZpbGVzIHRvIHNlbGVjdCAoYW5kIGNvbmNhdCkgZm9yIGFnZ3JlZ2F0aW9uLgogICAgIiIiCiAgICAKICAgIGZyb21fbW9kZWwgPSB0eXBlKGRmX2FydGlmYWN0KSA9PSBwZC5EYXRhRnJhbWUKICAgIGlmIGZyb21fbW9kZWw6CiAgICAgICAgY29udGV4dC5sb2dnZXIuaW5mbygnQWdncmVnYXRpbmcgZnJvbSBCdWZmZXInKQogICAgICAgIGlucHV0X2RmID0gZGZfYXJ0aWZhY3QKICAgIGVsc2U6CiAgICAgICAgaWYgZGZfYXJ0aWZhY3QudXJsLmVuZHN3aXRoKCcvJyk6ICAgIyBpcyBhIGRpcmVjdG9yeT8KICAgICAgICAgICAgbXBhdGggPSBbb3MucGF0aC5qb2luKGRmX2FydGlmYWN0LnVybCwgZmlsZSkgZm9yIGZpbGUgaW4gZGZfYXJ0aWZhY3QubGlzdGRpcigpIGlmIGZpbGUuZW5kc3dpdGgoKCdwYXJxdWV0JywgJ3BxJykpXQogICAgICAgICAgICBmaWxlc19ieV91cGRhdGVkID0gc29ydGVkKG1wYXRoLCBrZXk9b3MucGF0aC5nZXRtdGltZSwgcmV2ZXJzZT1UcnVlKQogICAgICAgICAgICBjb250ZXh0LmxvZ2dlci5pbmZvKGZpbGVzX2J5X3VwZGF0ZWQpCiAgICAgICAgICAgIGxhdGVzdCA9IGZpbGVzX2J5X3VwZGF0ZWRbOmZpbGVzX3RvX3NlbGVjdF0KICAgICAgICAgICAgY29udGV4dC5sb2dnZXIuaW5mbyhmJ0FnZ3JlZ2F0aW5nIHtsYXRlc3R9JykKICAgICAgICAgICAgaW5wdXRfZGYgPSBwZC5jb25jYXQoW2NvbnRleHQuZ2V0X2RhdGFpdGVtKGRmKS5hc19kZigpIGZvciBkZiBpbiBsYXRlc3RdKQogICAgICAgIGVsc2U6ICAjIEEgcmVndWxhciBhcnRpZmFjdAogICAgICAgICAgICBjb250ZXh0LmxvZ2dlci5pbmZvKGYnQWdncmVnYXRpbmcge2RmX2FydGlmYWN0LnVybH0nKQogICAgICAgICAgICBpbnB1dF9kZiA9IGRmX2FydGlmYWN0LmFzX2RmKCkKICAgIAogICAgaWYgbm90IChtZXRyaWNzIG9yIGxhYmVscyk6CiAgICAgICAgcmFpc2UgVmFsdWVFcnJvcigncGxlYXNlIHNwZWNpZnkgbWV0cmljcyBvciBsYWJlbHMgcGFyYW0nKQogICAgCiAgICBpZiBrZXlzOgogICAgICAgIGN1cnJlbnRfaW5kZXggPSBpbnB1dF9kZi5pbmRleC5uYW1lcwogICAgICAgIGluZGV4ZXNfdG9fZHJvcCA9IFtjb2wgZm9yIGNvbCBpbiBpbnB1dF9kZi5pbmRleC5uYW1lcyBpZiBjb2wgbm90IGluIGtleXNdCiAgICAgICAgZGYgPSBpbnB1dF9kZi5yZXNldF9pbmRleChsZXZlbD1pbmRleGVzX3RvX2Ryb3ApCiAgICBlbHNlOgogICAgICAgIGRmID0gaW5wdXRfZGYKICAgICAgICAKICAgIGlmIG1ldHJpY3M6CiAgICAgICAgbWV0cmljc19kZiA9IGRmLmxvY1s6LCBtZXRyaWNzXS5yb2xsaW5nKHdpbmRvdz13aW5kb3csIGNlbnRlcj1jZW50ZXIpLmFnZ3JlZ2F0ZShtZXRyaWNfYWdncykKICAgICAgICAKICAgICAgICBtZXRyaWNzX2RmLmNvbHVtbnMgPSBbJ18nLmpvaW4oY29sKS5zdHJpcCgpIGZvciBjb2wgaW4gbWV0cmljc19kZi5jb2x1bW5zLnZhbHVlc10KICAgICAgICAKICAgICAgICBpZiBzdWZmaXg6CiAgICAgICAgICAgIG1ldHJpY3NfZGYuY29sdW1ucyA9IFtmJ3ttZXRyaWN9X3tzdWZmaXh9JyBmb3IgbWV0cmljIGluIG1ldHJpY3NfZGYuY29sdW1uc10KICAgICAgICAgICAgCiAgICAgICAgaWYgbm90IGlucGxhY2U6CiAgICAgICAgICAgIGZpbmFsX2RmID0gcGQubWVyZ2UoaW5wdXRfZGYsIG1ldHJpY3NfZGYsIHN1ZmZpeGVzPSgnJywgc3VmZml4KSwgbGVmdF9pbmRleD1UcnVlLCByaWdodF9pbmRleD1UcnVlKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIGZpbmFsX2RmID0gbWV0cmljc19kZgoKICAgIGlmIGxhYmVsczoKICAgICAgICBsYWJlbHNfZGYgPSBkZi5sb2NbOiwgbGFiZWxzXS5yb2xsaW5nKHdpbmRvdz13aW5kb3csCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjZW50ZXI9Y2VudGVyKS5hZ2dyZWdhdGUobGFiZWxfYWdncykKICAgICAgICBsYWJlbHNfZGYuY29sdW1ucyA9IFsnXycuam9pbihjb2wpLnN0cmlwKCkgZm9yIGNvbCBpbiBsYWJlbHNfZGYuY29sdW1ucy52YWx1ZXNdCiAgICAgICAgCiAgICAgICAgaWYgc3VmZml4OgogICAgICAgICAgICBsYWJlbHNfZGYuY29sdW1ucyA9IFtmJ3tsYWJlbH1fe3N1ZmZpeH0nIGZvciBsYWJlbCBpbiBsYWJlbHNfZGYuY29sdW1uc10KICAgICAgICAgICAgCiAgICAgICAgaWYgbWV0cmljczoKICAgICAgICAgICAgZmluYWxfZGYgPSBwZC5tZXJnZShmaW5hbF9kZiwgbGFiZWxzX2RmLCBzdWZmaXhlcz0oJycsIHN1ZmZpeCksIGxlZnRfaW5kZXg9VHJ1ZSwgcmlnaHRfaW5kZXg9VHJ1ZSkgICAKICAgICAgICBlbHNlOgogICAgICAgICAgICBpZiBub3QgaW5wbGFjZToKICAgICAgICAgICAgICAgIGZpbmFsX2RmID0gcGQubWVyZ2UoaW5wdXRfZGYsIGxhYmVsc19kZiwgc3VmZml4ZXM9KCcnLCBzdWZmaXgpLCBsZWZ0X2luZGV4PVRydWUsIHJpZ2h0X2luZGV4PVRydWUpICAgICAgCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBmaW5hbF9kZiA9IGxhYmVsc19kZgogICAgICAgICAgICAgICAgCiAgICBpZiBkcm9wX25hOgogICAgICAgIGZpbmFsX2RmID0gZmluYWxfZGYuZHJvcG5hKCkKICAgICAgICAKICAgIGNvbnRleHQubG9nZ2VyLmluZm8oJ0xvZ2dpbmcgYXJ0aWZhY3QnKQogICAgaWYgbm90IGZyb21fbW9kZWw6CiAgICAgICAgY29udGV4dC5sb2dfZGF0YXNldChrZXk9J2FnZ3JlZ2F0ZScsIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGY9ZmluYWxfZGYsIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9ybWF0PSdwYXJxdWV0JywKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvY2FsX3BhdGg9c2F2ZV90bykKICAgIGVsc2U6CiAgICAgICAgcmV0dXJuIGZpbmFsX2RmCgo=",
          "commands": [],
          "code_origin": "https://github.com/daniels290813/functions.git#55a79c32be5d233cc11efcf40cd3edbe309bfdef:/home/kali/functions/aggregate/aggregate.py"
        },
        "mount_applied": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "remote",
      "metadata": {
        "name": "serving",
        "tag": "latest",
        "project": "network-operations-admin",
        "hash": "70951091f661dc2a116f88a26f5fd9876e4ddccc",
        "updated": "2021-08-29T20:25:26.091864+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "",
        "description": "",
        "min_replicas": 1,
        "max_replicas": 4,
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "config": {
          "spec.triggers.cron": {
            "kind": "cron",
            "attributes": {
              "interval": "1m"
            }
          }
        },
        "base_spec": {
          "apiVersion": "nuclio.io/v1",
          "kind": "Function",
          "metadata": {
            "annotations": {
              "nuclio.io/generated_by": "function generated from /User/demos/network-operations/notebooks/server.ipynb"
            },
            "labels": {},
            "name": "serving"
          },
          "spec": {
            "build": {
              "baseImage": "mlrun/ml-models",
              "commands": [],
              "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG9zCmltcG9ydCBwYW5kYXMgYXMgcGQKaW1wb3J0IGNsb3VkcGlja2xlCmltcG9ydCBudW1weSBhcyBucAppbXBvcnQganNvbgpmcm9tIG1scnVuIGltcG9ydCBnZXRfb3JfY3JlYXRlX2N0eAppbXBvcnQgc29ja2V0CgpkZWYgZ2V0X2RhdGFfcGFycXVldChjb250ZXh0KToKICAgIG1wYXRoID0gW29zLnBhdGguam9pbihjb250ZXh0LmZlYXR1cmVzX3RhYmxlLCBmaWxlKSBmb3IgZmlsZSBpbiBvcy5saXN0ZGlyKGNvbnRleHQuZmVhdHVyZXNfdGFibGUpIGlmIGZpbGUuZW5kc3dpdGgoKCdwYXJxdWV0JywgJ3BxJykpXQogICAgZmlsZXNfYnlfdXBkYXRlZCA9IHNvcnRlZChtcGF0aCwga2V5PW9zLnBhdGguZ2V0bXRpbWUsIHJldmVyc2U9VHJ1ZSkKICAgIHJldHVybiBwZC5yZWFkX3BhcnF1ZXQoZmlsZXNfYnlfdXBkYXRlZFs6MV1bMF0pCgpkZWYgc2F2ZV90b19wYXJxdWV0KGNvbnRleHQsIGRmOiBwZC5EYXRhRnJhbWUpOgogICAgcHJpbnQoJ1NhdmluZyBmZWF0dXJlcyB0byBQYXJxdWV0JykKICAgIAogICAga2V5cyA9IGxpc3QoW25hbWUgaWYgbmFtZSAhPSBjb250ZXh0Lm9yaWdfdGltZXN0YW1wX2NvbCBlbHNlIGNvbnRleHQudGltZXN0YW1wX2NvbCBmb3IgbmFtZSBpbiBkZi5pbmRleC5uYW1lc10pICsgW2NvbnRleHQubW9kZWxfY29sLCBjb250ZXh0Lm1vZGVsX2NsYXNzX2NvbCwgY29udGV4dC53b3JrZXJfY29sLCBjb250ZXh0Lmhvc3RuYW1lX2NvbF0KICAgIGRmID0gZGYucmVzZXRfaW5kZXgoKQogICAgZGZbY29udGV4dC50aW1lc3RhbXBfY29sXSA9IGRmLnBvcChjb250ZXh0Lm9yaWdfdGltZXN0YW1wX2NvbCkuYXN0eXBlKCdkYXRldGltZTY0W21zXScpCiAgICAKICAgIGRmID0gZGYuc2V0X2luZGV4KGtleXMpCiAgICAKICAgIGZpcnN0X3RpbWVzdGFtcCA9IGRmLmluZGV4WzBdWzBdLnN0cmZ0aW1lKCclWSVtJWRUJUglTSVTJykKICAgIGxhc3RfdGltZXN0YW1wID0gZGYuaW5kZXhbLTFdWzBdLnN0cmZ0aW1lKCclWSVtJWRUJUglTSVTJykKICAgIGZpbGVuYW1lID0gZmlyc3RfdGltZXN0YW1wICsgJy0nICsgbGFzdF90aW1lc3RhbXAgKyAnLnBhcnF1ZXQnCiAgICBmaWxlcGF0aCA9IG9zLnBhdGguam9pbihjb250ZXh0LnByZWRpY3Rpb25zX3RhYmxlLCBmaWxlbmFtZSkKICAgIHdpdGggb3BlbihmaWxlcGF0aCwgJ3diKycpIGFzIGY6CiAgICAgICAgZGYudG9fcGFycXVldChmKQoKZGVmIGluaXRfY29udGV4dChjb250ZXh0KToKICAgIAogICAgYmF0Y2hlc190b19nZW5lcmF0ZSA9IGludChvcy5nZXRlbnYoJ0JBVENIRVNfVE9fR0VORVJBVEUnLCAyMCkpCiAgICBzZXRhdHRyKGNvbnRleHQsICdiYXRjaGVzX3RvX2dlbmVyYXRlJywgYmF0Y2hlc190b19nZW5lcmF0ZSkKICAgIHNldGF0dHIoY29udGV4dCwgJ2JhdGNoZXNfZ2VuZXJhdGVkJywgMCkKICAgIAogICAgc2V0YXR0cihjb250ZXh0LCAnbW9kZWxfbmFtZScsIG9zLmdldGVudignbW9kZWxfbmFtZScsICduZXRvcHNfbW9kZWwnKSkKICAgIHNldGF0dHIoY29udGV4dCwgJ21vZGVsX2NvbCcsIG9zLmdldGVudignbW9kZWxfY29sJywgJ21vZGVsJykpCiAgICBzZXRhdHRyKGNvbnRleHQsICdtb2RlbF9jbGFzc19jb2wnLCBvcy5nZXRlbnYoJ21vZGVsX2NsYXNzX2NvbCcsICdjbGFzcycpKQogICAgc2V0YXR0cihjb250ZXh0LCAnd29ya2VyX2NvbCcsIG9zLmdldGVudignd29ya2VyX2NvbCcsICd3b3JrZXInKSkKICAgIHNldGF0dHIoY29udGV4dCwgJ2hvc3RuYW1lX2NvbCcsIG9zLmdldGVudignaG9zdG5hbWVfY29sJywgJ2hvc3RuYW1lJykpCiAgICBzZXRhdHRyKGNvbnRleHQsICd0aW1lc3RhbXBfY29sJywgb3MuZ2V0ZW52KCd0aW1lc3RhbXBfY29sJywgJ3doZW4nKSkKICAgIHNldGF0dHIoY29udGV4dCwgJ29yaWdfdGltZXN0YW1wX2NvbCcsIG9zLmdldGVudignb3JpZ190aW1lc3RhbXBfY29sJywgJ3RpbWVzdGFtcCcpKQogICAgc2V0YXR0cihjb250ZXh0LCAnZmVhdHVyZXNfdGFibGUnLCBvcy5nZXRlbnYoJ0ZFQVRVUkVTX1RBQkxFJywgJ25ldG9wc19mZWF0dXJlcycpKQogICAgc2V0YXR0cihjb250ZXh0LCAncHJlZGljdGlvbnNfdGFibGUnLCBvcy5nZXRlbnYoJ1BSRURJQ1RJT05TX1RBQkxFJywgJ25ldG9wc19wcmVkaWN0aW9ucycpKQogICAgc2V0YXR0cihjb250ZXh0LCAncHJlZGljdGlvbl9jb2wnLCBvcy5nZXRlbnYoJ3ByZWRpY3Rpb25fY29sJywgJ3ByZWRpY3Rpb24nKSkKICAgIAogICAgbW9kZWxfcGF0aCA9IG9zLmVudmlyb25bJ21vZGVsX3BhdGgnXQogICAgaWYgbW9kZWxfcGF0aC5zdGFydHN3aXRoKCdzdG9yZTovLycpOgogICAgICAgIG1sY3R4ID0gZ2V0X29yX2NyZWF0ZV9jdHgoJ2luZmVyZW5jZScpCiAgICAgICAgbW9kZWwgPSBtbGN0eC5nZXRfZGF0YWl0ZW0obW9kZWxfcGF0aCkKICAgICAgICBtb2RlbF9wYXRoID0gb3MucGF0aC5qb2luKG1vZGVsLnVybCwgJ21vZGVsLnBrbCcpCiAgICB3aXRoIG9wZW4obW9kZWxfcGF0aCwgJ3JiJykgYXMgZjoKICAgICAgICBtb2RlbCA9IGNsb3VkcGlja2xlLmxvYWQoZikKICAgIHNldGF0dHIoY29udGV4dCwgJ21vZGVsJywgbW9kZWwpCiAgICBzZXRhdHRyKGNvbnRleHQsICdtb2RlbF9jbGFzcycsIHR5cGUobW9kZWwpLl9fbmFtZV9fKQogICAgCiAgICBmaWxlcGF0aCA9IG9zLnBhdGguam9pbihjb250ZXh0LnByZWRpY3Rpb25zX3RhYmxlKQogICAgaWYgbm90IG9zLnBhdGguZXhpc3RzKGZpbGVwYXRoKToKICAgICAgICBvcy5tYWtlZGlycyhmaWxlcGF0aCkKCmRlZiBoYW5kbGVyKGNvbnRleHQsIGV2ZW50KToKICAgIAogICAgaWYgKGNvbnRleHQuYmF0Y2hlc190b19nZW5lcmF0ZSA9PSAtMSkgb3IgKGNvbnRleHQuYmF0Y2hlc19nZW5lcmF0ZWQgPD0gY29udGV4dC5iYXRjaGVzX3RvX2dlbmVyYXRlKToKICAgIAogICAgICAgIGlmIGdldGF0dHIoZXZlbnQudHJpZ2dlciwgJ2tpbmQnLCAnY3JvbicpID09ICdjcm9uJzoKICAgICAgICAgICAgZGYgPSBnZXRfZGF0YV9wYXJxdWV0KGNvbnRleHQpCgogICAgICAgICAgICBkZltjb250ZXh0LnByZWRpY3Rpb25fY29sXSA9IGNvbnRleHQubW9kZWwucHJlZGljdChkZi52YWx1ZXMpCgogICAgICAgICAgICBkZltjb250ZXh0Lm1vZGVsX2NvbF0gPSBjb250ZXh0Lm1vZGVsX25hbWUKICAgICAgICAgICAgZGZbY29udGV4dC5tb2RlbF9jbGFzc19jb2xdID0gY29udGV4dC5tb2RlbF9jbGFzcwogICAgICAgICAgICBkZltjb250ZXh0Lndvcmtlcl9jb2xdID0gY29udGV4dC53b3JrZXJfaWQKICAgICAgICAgICAgZGZbY29udGV4dC5ob3N0bmFtZV9jb2xdID0gc29ja2V0LmdldGhvc3RuYW1lKCkKCiAgICAgICAgICAgIHNhdmVfdG9fcGFycXVldChjb250ZXh0LCBkZikKICAgICAgICBlbHNlOgogICAgICAgICAgICBib2R5ID0ganNvbi5sb2FkcyhldmVudC5ib2R5KQogICAgICAgICAgICBmZWF0cyA9IG5wLmFzYXJyYXkoYm9keVsnaW5zdGFuY2VzJ10pCiAgICAgICAgICAgIHJlc3VsdDogbnAubmRhcnJheSA9IGNvbnRleHQubW9kZWwucHJlZGljdChmZWF0cykKICAgICAgICAgICAgcmV0dXJuIHJlc3VsdC50b2xpc3QoKQogICAgICAgIAogICAgICAgIGNvbnRleHQuYmF0Y2hlc19nZW5lcmF0ZWQgKz0gMQoK",
              "noBaseImagesPull": true
            },
            "env": [
              {
                "name": "METRICS_TABLE",
                "value": "${data_path}"
              },
              {
                "name": "FEATURES_TABLE",
                "value": "${streaming_path}/features"
              },
              {
                "name": "PREDICTIONS_TABLE",
                "value": "${streaming_path}/predictions"
              },
              {
                "name": "BATCHES_TO_GENERATE",
                "value": "20"
              },
              {
                "name": "model_path",
                "value": "${base_path}/artifacts/model/1/model.pkl"
              },
              {
                "name": "model_name",
                "value": "netops_predictor_v1"
              },
              {
                "name": "model_class",
                "value": "MLRunModel"
              },
              {
                "name": "model_col",
                "value": "model"
              },
              {
                "name": "model_class_col",
                "value": "class"
              },
              {
                "name": "prediction_col",
                "value": "predictions"
              },
              {
                "name": "worker_col",
                "value": "worker"
              },
              {
                "name": "hostname_col",
                "value": "hostname"
              },
              {
                "name": "timestamp_col",
                "value": "when"
              },
              {
                "name": "orig_timestamp_col",
                "value": "timestamp"
              }
            ],
            "handler": "server:handler",
            "runtime": "python:3.6",
            "volumes": []
          }
        },
        "source": "",
        "image_pull_policy": "Always",
        "build": {
          "commands": [],
          "origin_filename": "/User/demos/network-operations/notebooks/server.ipynb"
        },
        "mount_applied": true,
        "affinity": null
      },
      "status": {
        "internal_invocation_urls": [],
        "external_invocation_urls": []
      },
      "verbose": false
    },
    {
      "kind": "remote",
      "metadata": {
        "name": "create-feature-vector",
        "tag": "",
        "project": "network-operations-admin",
        "hash": "5d67cfb08150b3800c713099d50a89ce4f5897e6",
        "updated": "2021-08-29T20:25:26.405862+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "",
        "description": "",
        "min_replicas": 1,
        "max_replicas": 4,
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "config": {
          "spec.triggers.cron": {
            "kind": "cron",
            "attributes": {
              "interval": "1m"
            }
          }
        },
        "base_spec": {
          "apiVersion": "nuclio.io/v1",
          "kind": "Function",
          "metadata": {
            "annotations": {
              "nuclio.io/generated_by": "function generated from /User/demos/network-operations/notebooks/preprocessor.ipynb"
            },
            "labels": {},
            "name": "create-feature-vector"
          },
          "spec": {
            "build": {
              "baseImage": "mlrun/ml-models",
              "commands": [],
              "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG9zCmltcG9ydCBwYW5kYXMgYXMgcGQKZnJvbSBtbHJ1bi5kYXRhc3RvcmUgaW1wb3J0IERhdGFJdGVtCmltcG9ydCBhc3QKCmZyb20gdHlwaW5nIGltcG9ydCBVbmlvbgpmcm9tIG1scnVuIGltcG9ydCBtbGNvbmYsIGltcG9ydF9mdW5jdGlvbiwgbW91bnRfdjNpbywgTmV3VGFzaywgZnVuY3Rpb25fdG9fbW9kdWxlLCBnZXRfb3JfY3JlYXRlX2N0eApmcm9tIG1scnVuLnJ1biBpbXBvcnQgZ2V0X2RhdGFpdGVtCgpkZWYgZ2V0X2RhdGFfdHNkYihjb250ZXh0KToKICAgIGRmID0gY29udGV4dC52M2YucmVhZChiYWNrZW5kPSd0c2RiJywgcXVlcnk9ZidzZWxlY3QgY3B1X3V0aWxpemF0aW9uLCBsYXRlbmN5LCBwYWNrZXRfbG9zcywgdGhyb3VnaHB1dCwgaXNfZXJyb3IgZnJvbSB7Y29udGV4dC5tZXRyaWNzX3RhYmxlfScsCiAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnQ9Zidub3ctMmgnLCBlbmQ9J25vdycsIG11bHRpX2luZGV4PVRydWUpCiAgICBkZiA9IGZvcm1hdF9kZl9mcm9tX3RzZGIoY29udGV4dCwgZGYpCiAgICByZXR1cm4gZGYKCmRlZiBnZXRfZGF0YV9wYXJxdWV0KGNvbnRleHQpOgogICAgbXBhdGggPSBbb3MucGF0aC5qb2luKGNvbnRleHQubWV0cmljc190YWJsZSwgZmlsZSkgZm9yIGZpbGUgaW4gb3MubGlzdGRpcihjb250ZXh0Lm1ldHJpY3NfdGFibGUpIGlmIGZpbGUuZW5kc3dpdGgoKCdwYXJxdWV0JywgJ3BxJykpXQogICAgZmlsZXNfYnlfdXBkYXRlZCA9IHNvcnRlZChtcGF0aCwga2V5PW9zLnBhdGguZ2V0bXRpbWUsIHJldmVyc2U9VHJ1ZSkKICAgIGNvbnRleHQubG9nZ2VyLmluZm8oZmlsZXNfYnlfdXBkYXRlZCkKICAgIGxhdGVzdCA9IGZpbGVzX2J5X3VwZGF0ZWRbOmNvbnRleHQuZmlsZXNfdG9fc2VsZWN0XQogICAgY29udGV4dC5sb2dnZXIuaW5mbyhmJ0FnZ3JlZ2F0aW5nIHtsYXRlc3R9JykKICAgIGlucHV0X2RmID0gcGQuY29uY2F0KFtwZC5yZWFkX3BhcnF1ZXQoZGYpIGZvciBkZiBpbiBsYXRlc3RdKQogICAgcmV0dXJuIGlucHV0X2RmCgpkZWYgc2F2ZV90b190c2RiKGNvbnRleHQsIGZlYXR1cmVzOiBwZC5EYXRhRnJhbWUpOiAgIAogICAgY29udGV4dC52M2Yud3JpdGUoJ3RzZGInLCBjb250ZXh0LmZlYXR1cmVzX3RhYmxlLCBmZWF0dXJlcykKCmRlZiBzYXZlX3RvX3BhcnF1ZXQoY29udGV4dCwgZGY6IHBkLkRhdGFGcmFtZSk6CiAgICBwcmludCgnU2F2aW5nIGZlYXR1cmVzIHRvIFBhcnF1ZXQnKQogICAgCiAgICBkZiA9IGRmLnJlc2V0X2luZGV4KCkKICAgIGRmWyd0aW1lc3RhbXAnXSA9IGRmLmxvY1s6LCAndGltZXN0YW1wJ10uYXN0eXBlKCdkYXRldGltZTY0W21zXScpCiAgICAKICAgIGRmID0gZGYuc2V0X2luZGV4KGNvbnRleHQua2V5cykKICAgIAogICAgZmlyc3RfdGltZXN0YW1wID0gZGYuaW5kZXhbMF1bMF0uc3RyZnRpbWUoJyVZJW0lZFQlSCVNJVMnKQogICAgbGFzdF90aW1lc3RhbXAgPSBkZi5pbmRleFstMV1bMF0uc3RyZnRpbWUoJyVZJW0lZFQlSCVNJVMnKQogICAgZmlsZW5hbWUgPSBmaXJzdF90aW1lc3RhbXAgKyAnLScgKyBsYXN0X3RpbWVzdGFtcCArICcucGFycXVldCcKICAgIGZpbGVwYXRoID0gb3MucGF0aC5qb2luKGNvbnRleHQuZmVhdHVyZXNfdGFibGUsIGZpbGVuYW1lKQogICAgd2l0aCBvcGVuKGZpbGVwYXRoLCAnd2IrJykgYXMgZjoKICAgICAgICBkZi50b19wYXJxdWV0KGYpCgpkZWYgaW5pdF9jb250ZXh0KGNvbnRleHQpOgogICAgCiAgICBtbGNvbmYuZGJwYXRoID0gJ2h0dHA6Ly9tbHJ1bi1hcGk6ODA4MCcKICAgIAogICAgYWdncmVnYXRlX2ZuID0gaW1wb3J0X2Z1bmN0aW9uKG9zLmdldGVudignYWdncmVnYXRlX2ZuX3VybCcsICdodWI6Ly9hZ2dyZWdhdGUnKSkKICAgIG1vZCA9IGZ1bmN0aW9uX3RvX21vZHVsZShhZ2dyZWdhdGVfZm4pCiAgICBzZXRhdHRyKGNvbnRleHQsICdhZ2dyZWdhdGUnLCBtb2QuYWdncmVnYXRlKQogICAgCiAgICBhZ19jb250ZXh0ID0gZ2V0X29yX2NyZWF0ZV9jdHgoJ2FnZ3JlZ2F0ZScpCiAgICBzZXRhdHRyKGNvbnRleHQsICdtbHJ1bl9jdHgnLCBhZ19jb250ZXh0KQogICAgCiAgICBiYXRjaGVzX3RvX2dlbmVyYXRlID0gaW50KG9zLmdldGVudignQkFUQ0hFU19UT19HRU5FUkFURScsIDIwKSkKICAgIHNldGF0dHIoY29udGV4dCwgJ2JhdGNoZXNfdG9fZ2VuZXJhdGUnLCBiYXRjaGVzX3RvX2dlbmVyYXRlKQogICAgc2V0YXR0cihjb250ZXh0LCAnYmF0Y2hlc19nZW5lcmF0ZWQnLCAwKQogICAgCiAgICBzZXRhdHRyKGNvbnRleHQsICdtZXRyaWNzX3RhYmxlJywgb3MuZ2V0ZW52KCdNRVRSSUNTX1RBQkxFJywgJ25ldG9wc19tZXRyaWNzJykpCiAgICBzZXRhdHRyKGNvbnRleHQsICdmZWF0dXJlc190YWJsZScsIG9zLmdldGVudignRkVBVFVSRVNfVEFCTEUnLCAnbmV0b3BzX2ZlYXR1cmVzJykpCiAgICBzZXRhdHRyKGNvbnRleHQsICdrZXlzJywgb3MuZ2V0ZW52KCdrZXlzJywgJycpLnNwbGl0KCcsJykpCiAgICBzZXRhdHRyKGNvbnRleHQsICdtZXRyaWNzJywgYXN0LmxpdGVyYWxfZXZhbChvcy5nZXRlbnYoJ21ldHJpY3MnLCAnJykpKQogICAgc2V0YXR0cihjb250ZXh0LCAnbWV0cmljX2FnZ3MnLCBhc3QubGl0ZXJhbF9ldmFsKG9zLmdldGVudignbWV0cmljX2FnZ3MnLCAnJykpKQogICAgc2V0YXR0cihjb250ZXh0LCAnc3VmZml4Jywgb3MuZ2V0ZW52KCdzdWZmaXgnLCAnX2FnZycpKQogICAgc2V0YXR0cihjb250ZXh0LCAnd2luZG93JywgaW50KG9zLmdldGVudignd2luZG93JywgJzMnKSkpCiAgICBzZXRhdHRyKGNvbnRleHQsICdjZW50ZXInLCBib29sKGludChvcy5nZXRlbnYoJ2NlbnRlcicsICcwJykpKSkKICAgIHNldGF0dHIoY29udGV4dCwgJ2lucGxhY2UnLCBib29sKGludChvcy5nZXRlbnYoJ2lucGxhY2UnLCAnMCcpKSkpCiAgICBzZXRhdHRyKGNvbnRleHQsICdkcm9wX25hJywgYm9vbChpbnQob3MuZ2V0ZW52KCdkcm9wX25hJywgJzEnKSkpKQogICAgc2V0YXR0cihjb250ZXh0LCAnZmlsZXNfdG9fc2VsZWN0JywgaW50KG9zLmdldGVudignZmlsZXNfdG9fc2VsZWN0JywgMSkpKQogICAgCiAgICBzYW1wbGVfZGF0YXNldCA9IGdldF9kYXRhaXRlbShvcy5lbnZpcm9uWydiYXNlX2RhdGFzZXQnXSkuYXNfZGYoKQogICAgc2VsZWN0ZWRfZmVhdHVyZXMgPSBbY29sIGZvciBjb2wgaW4gbGlzdChzYW1wbGVfZGF0YXNldC5jb2x1bW5zKSBpZiBjb2wgIT0gb3MuZ2V0ZW52KCdsYWJlbF9jb2wnLCAnJyldCiAgICBhZ2dyZWdhdGVkX2ZlYXR1cmVzID0gW2ZlYXR1cmUuc3BsaXQoJ18nKVs6LTFdIGZvciBmZWF0dXJlIGluIHNlbGVjdGVkX2ZlYXR1cmVzIGlmIGZlYXR1cmUuZW5kc3dpdGgoY29udGV4dC5zdWZmaXgpXQogICAgYmFzZV9mZWF0dXJlcyA9IHNldChbZlswXSBmb3IgZiBpbiBhZ2dyZWdhdGVkX2ZlYXR1cmVzXSkKICAgIGFnZ3JlZ2F0aW9ucyA9IHNldChbZlsxXSBmb3IgZiBpbiBhZ2dyZWdhdGVkX2ZlYXR1cmVzXSkKICAgIHNldGF0dHIoY29udGV4dCwgJ2ZlYXR1cmVzJywgc2VsZWN0ZWRfZmVhdHVyZXMpCiAgICBzZXRhdHRyKGNvbnRleHQsICdiYXNlX2ZlYXR1cmVzJywgYmFzZV9mZWF0dXJlcykKICAgIHNldGF0dHIoY29udGV4dCwgJ2FnZ3JlZ2F0aW9ucycsIGFnZ3JlZ2F0aW9ucykKICAgIAogICAgCiAgICAKICAgIGlzX3NhdmVfdG9fdHNkYiA9IGJvb2woaW50KG9zLmdldGVudignc2F2ZV90b190c2RiJywgJzAnKSkpCiAgICBpZiBpc19zYXZlX3RvX3RzZGI6CiAgICAgICAgdjNpb19jbGllbnQgPSB2M2YuQ2xpZW50KGFkZHJlc3M9J2ZyYW1lc2Q6ODA4MScsIGNvbnRhaW5lcj0nYmlnZGF0YScpCiAgICAgICAgc2V0YXR0cihjb250ZXh0LCAndjNmJywgdjNpb19jbGllbnQpCiAgICAgICAgCiAgICAgICAgY29udGV4dC52M2YuY3JlYXRlKCd0c2RiJywgY29udGV4dC5mZWF0dXJlc190YWJsZSwgYXR0cnM9eydyYXRlJzogJzEvcyd9LCBpZl9leGlzdHM9MSkKICAgICAgICAKICAgICAgICBzZXRhdHRyKGNvbnRleHQsICdyZWFkJywgZ2V0X2RhdGFfdHNkYikKICAgICAgICAKICAgICAgICBzZXRhdHRyKGNvbnRleHQsICd3cml0ZScsIHNhdmVfdG9fdHNkYikKICAgICAgICAKICAgIGVsc2U6CiAgICAgICAgZmlsZXBhdGggPSBvcy5wYXRoLmpvaW4oY29udGV4dC5mZWF0dXJlc190YWJsZSkKICAgICAgICBpZiBub3Qgb3MucGF0aC5leGlzdHMoZmlsZXBhdGgpOgogICAgICAgICAgICBvcy5tYWtlZGlycyhmaWxlcGF0aCkKICAgICAgICAgICAgCiAgICAgICAgc2V0YXR0cihjb250ZXh0LCAncmVhZCcsIGdldF9kYXRhX3BhcnF1ZXQpCiAgICAgICAgCiAgICAgICAgc2V0YXR0cihjb250ZXh0LCAnd3JpdGUnLCBzYXZlX3RvX3BhcnF1ZXQpCgpkZWYgaGFuZGxlcihjb250ZXh0LCBldmVudCk6CiAgICAKICAgIGlmIChjb250ZXh0LmJhdGNoZXNfdG9fZ2VuZXJhdGUgPT0gLTEpIG9yIChjb250ZXh0LmJhdGNoZXNfZ2VuZXJhdGVkIDw9IGNvbnRleHQuYmF0Y2hlc190b19nZW5lcmF0ZSk6CiAgICAKICAgICAgICBkZiA9IGNvbnRleHQucmVhZChjb250ZXh0KQoKICAgICAgICByZXMgPSBjb250ZXh0LmFnZ3JlZ2F0ZShjb250ZXh0PWNvbnRleHQubWxydW5fY3R4LAogICAgICAgICAgICAgICAgICBkZl9hcnRpZmFjdD1kZiwKICAgICAgICAgICAgICAgICAgc2F2ZV90bz1jb250ZXh0LmZlYXR1cmVzX3RhYmxlLCAKICAgICAgICAgICAgICAgICAga2V5cz1jb250ZXh0LmtleXMsIAogICAgICAgICAgICAgICAgICBtZXRyaWNzPWNvbnRleHQubWV0cmljcywgCiAgICAgICAgICAgICAgICAgIG1ldHJpY19hZ2dzPWNvbnRleHQubWV0cmljX2FnZ3MsIAogICAgICAgICAgICAgICAgICBzdWZmaXg9Y29udGV4dC5zdWZmaXgsIAogICAgICAgICAgICAgICAgICB3aW5kb3c9Y29udGV4dC53aW5kb3csIAogICAgICAgICAgICAgICAgICBjZW50ZXI9Y29udGV4dC5jZW50ZXIsIAogICAgICAgICAgICAgICAgICBpbnBsYWNlPWNvbnRleHQuaW5wbGFjZSwKICAgICAgICAgICAgICAgICAgZHJvcF9uYT1jb250ZXh0LmRyb3BfbmEpCgogICAgICAgIGNvbnRleHQubG9nZ2VyLmluZm8oZidyZXMuY29sdW1uczoge3Jlcy5jb2x1bW5zfScpCiAgICAgICAgY29udGV4dC5sb2dnZXIuaW5mbyhmJ2NvbnRleHQuY29sdW1uczoge2NvbnRleHQuZmVhdHVyZXN9JykKICAgICAgICByZXMgPSByZXNbY29udGV4dC5mZWF0dXJlc10KCiAgICAgICAgY29udGV4dC53cml0ZShjb250ZXh0LCByZXMpCiAgICAgICAgCiAgICAgICAgY29udGV4dC5iYXRjaGVzX2dlbmVyYXRlZCArPSAxCgo=",
              "noBaseImagesPull": true
            },
            "env": [
              {
                "name": "METRICS_TABLE",
                "value": "{data_path}"
              },
              {
                "name": "FEATURES_TABLE",
                "value": "{features_path}"
              },
              {
                "name": "base_dataset",
                "value": "{artifacts_path}/selected_features.parquet"
              },
              {
                "name": "BATCHES_TO_GENERATE",
                "value": "20"
              },
              {
                "name": "keys",
                "value": "timestamp,company,data_center,device"
              },
              {
                "name": "metrics",
                "value": "[\"cpu_utilization\", \"throughput\", \"packet_loss\", \"latency\"]"
              },
              {
                "name": "metric_aggs",
                "value": "[\"mean\", \"sum\", \"std\", \"var\", \"min\", \"max\", \"median\"]"
              },
              {
                "name": "suffix",
                "value": "daily"
              },
              {
                "name": "window",
                "value": "3"
              },
              {
                "name": "center",
                "value": "0"
              },
              {
                "name": "inplace",
                "value": "0"
              },
              {
                "name": "drop_na",
                "value": "1"
              },
              {
                "name": "files_to_select",
                "value": "1"
              },
              {
                "name": "label_col",
                "value": "is_error"
              },
              {
                "name": "is_save_to_tsdb",
                "value": "0"
              }
            ],
            "handler": "preprocessor:handler",
            "runtime": "python:3.6",
            "volumes": []
          }
        },
        "source": "",
        "image_pull_policy": "Always",
        "build": {
          "commands": [],
          "origin_filename": "/User/demos/network-operations/notebooks/preprocessor.ipynb"
        },
        "mount_applied": true,
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "remote",
      "metadata": {
        "name": "labeled-stream",
        "tag": "",
        "project": "network-operations-admin",
        "hash": "283aedb860ef2ddffd4c9df1e1d0cacefa85bf2c",
        "updated": "2021-08-29T20:25:26.542948+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "",
        "description": "",
        "min_replicas": 1,
        "max_replicas": 4,
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "config": {
          "spec.triggers.cron": {
            "kind": "cron",
            "attributes": {
              "interval": "1m"
            }
          }
        },
        "base_spec": {
          "apiVersion": "nuclio.io/v1",
          "kind": "Function",
          "metadata": {
            "annotations": {
              "nuclio.io/generated_by": "function generated from /User/demos/network-operations/notebooks/labeled_stream_creator.ipynb"
            },
            "labels": {},
            "name": "labeled-stream"
          },
          "spec": {
            "build": {
              "baseImage": "mlrun/ml-models",
              "commands": [
                "python -m pip install v3io --upgrade"
              ],
              "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG9zCmltcG9ydCBwYW5kYXMgYXMgcGQKaW1wb3J0IGpzb24KaW1wb3J0IHYzaW8KaW1wb3J0IHYzaW8uZGF0YXBsYW5lCmltcG9ydCBzb2NrZXQKCmRlZiBzcGxpdF9wYXRoKG1udHBhdGg9JycpOgogICAgaWYgbW50cGF0aFswXSA9PSAnLyc6CiAgICAgICAgbW50cGF0aCA9IG1udHBhdGhbMTpdCiAgICBwYXRocyA9IG1udHBhdGguc3BsaXQoJy8nKQogICAgY29udGFpbmVyID0gcGF0aHNbMF0KICAgIHN1YnBhdGggPSAnJwogICAgaWYgbGVuKHBhdGhzKSA+IDE6CiAgICAgICAgc3VicGF0aCA9IG1udHBhdGhbbGVuKGNvbnRhaW5lcik6XQogICAgcmV0dXJuIGNvbnRhaW5lciwgc3VicGF0aAoKZGVmIGNyZWF0ZV9zdHJlYW0oY29udGV4dCwgcGF0aCwgc2hhcmRzPTEpOgogICAgY29udGFpbmVyLCBzdHJlYW1fcGF0aCA9IHNwbGl0X3BhdGgocGF0aCkKICAgIGNvbnRleHQubG9nZ2VyLmluZm8oZidDcmVhdGluZyBzdHJlYW0gaW4gQ29udGFpbmVyOiB7Y29udGFpbmVyfSAmIFBhdGgge3N0cmVhbV9wYXRofScpCiAgICByZXNwb25zZSA9IGNvbnRleHQudjNpb19jbGllbnQuc3RyZWFtLmNyZWF0ZShjb250YWluZXI9Y29udGFpbmVyLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RyZWFtX3BhdGg9c3RyZWFtX3BhdGgsIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hhcmRfY291bnQ9c2hhcmRzLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmFpc2VfZm9yX3N0YXR1cz12M2lvLmRhdGFwbGFuZS5SYWlzZUZvclN0YXR1cy5uZXZlcikKICAgIHJlc3BvbnNlLnJhaXNlX2Zvcl9zdGF0dXMoWzQwOSwgMjA0XSkKCmRlZiBwdXNoX3RvX3N0cmVhbShjb250ZXh0LCBzdHJlYW1fcGF0aCwgZGF0YSk6CiAgICBkZWYgcmVzdHJ1Y3R1cmVfc3RyZWFtX2V2ZW50KGNvbnRleHQsIGV2ZW50KToKICAgICAgICBpbnN0YW5jZXMgPSBbZGljdCgpXQogICAgICAgIGZvciBrZXkgaW4gZGF0YS5rZXlzKCk6CiAgICAgICAgICAgIGlmIGtleSBub3QgaW4gWyd3aGVuJywgJ2NsYXNzJywgJ21vZGVsJywgJ3dvcmtlcicsICdob3N0bmFtZScsIGNvbnRleHQucHJlZGljdGlvbl9jb2xdOgogICAgICAgICAgICAgICAgaW5zdGFuY2VzWzBdLnVwZGF0ZSh7a2V5OiBldmVudC5wb3Aoa2V5KX0pCiAgICAgICAgZXZlbnRbJ3JlcXVlc3QnXSA9IHsnaW5zdGFuY2VzJzogaW5zdGFuY2VzfQogICAgICAgIGV2ZW50WydyZXNwJ10gPSBbaW50KGV2ZW50LnBvcChjb250ZXh0LnByZWRpY3Rpb25fY29sKSldCiAgICAgICAgcmV0dXJuIGV2ZW50CiAgICAKICAgIHJlY29yZHMgPSBqc29uLmxvYWRzKGRhdGEudG9fanNvbihvcmllbnQ9J3JlY29yZHMnKSkKICAgIHJlY29yZHMgPSBbeydkYXRhJzoganNvbi5kdW1wcyhyZXN0cnVjdHVyZV9zdHJlYW1fZXZlbnQoY29udGV4dCwgcmVjb3JkKSl9IGZvciByZWNvcmQgaW4gcmVjb3Jkc10KICAgIGNvbnRleHQubG9nZ2VyLmluZm8oZidMb2dnaW5nIHtsZW4ocmVjb3Jkcyl9IHJlY29yZHMsIFJlY29yZCBleGFtcGxlOiB7cmVjb3Jkc1swXX0nKQogICAgY29udGFpbmVyLCBzdHJlYW1fcGF0aCA9IHNwbGl0X3BhdGgoc3RyZWFtX3BhdGgpCiAgICBzdGVwID0gMTAKICAgIGZvciBpZHggaW4gcmFuZ2UoMCwgbGVuKHJlY29yZHMpLCBzdGVwKToKICAgICAgICByZXNwb25zZSA9IGNvbnRleHQudjNpb19jbGllbnQucHV0X3JlY29yZHMoY29udGFpbmVyPWNvbnRhaW5lciwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGF0aD1zdHJlYW1fcGF0aCwgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlY29yZHM9cmVjb3Jkc1tpZHg6aWR4K3N0ZXBdKQoKZGVmIGdldF9kYXRhX3BhcnF1ZXQoY29udGV4dCwgdGFibGUsIGZpbGVzX3RvX3NlbGVjdD0xKToKICAgIG1wYXRoID0gW29zLnBhdGguam9pbih0YWJsZSwgZmlsZSkgZm9yIGZpbGUgaW4gb3MubGlzdGRpcih0YWJsZSkgaWYgZmlsZS5lbmRzd2l0aCgoJ3BhcnF1ZXQnLCAncHEnKSldCiAgICBmaWxlc19ieV91cGRhdGVkID0gc29ydGVkKG1wYXRoLCBrZXk9b3MucGF0aC5nZXRtdGltZSwgcmV2ZXJzZT1GYWxzZSkKICAgIGNvbnRleHQubG9nZ2VyLmRlYnVnX3dpdGgoJ0lucHV0JywgaW5wdXRfZmlsZXM9ZmlsZXNfYnlfdXBkYXRlZFs6ZmlsZXNfdG9fc2VsZWN0XSkKICAgIGRmcyA9IHBkLmNvbmNhdChbcGQucmVhZF9wYXJxdWV0KGZpbGUpIGZvciBmaWxlIGluIGZpbGVzX2J5X3VwZGF0ZWRbOmZpbGVzX3RvX3NlbGVjdF1dKQogICAgcmV0dXJuIGRmcwoKZGVmIGluaXRfY29udGV4dChjb250ZXh0KToKICAgIAogICAgYmF0Y2hlc190b19nZW5lcmF0ZSA9IGludChvcy5nZXRlbnYoJ0JBVENIRVNfVE9fR0VORVJBVEUnLCAyMCkpCiAgICBzZXRhdHRyKGNvbnRleHQsICdiYXRjaGVzX3RvX2dlbmVyYXRlJywgYmF0Y2hlc190b19nZW5lcmF0ZSkKICAgIHNldGF0dHIoY29udGV4dCwgJ2JhdGNoZXNfZ2VuZXJhdGVkJywgMCkKICAgIAogICAgc2V0YXR0cihjb250ZXh0LCAnbWV0cmljc190YWJsZScsIG9zLmVudmlyb25bJ01FVFJJQ1NfVEFCTEUnXSkKICAgIHNldGF0dHIoY29udGV4dCwgJ3ByZWRpY3Rpb25zX3RhYmxlJywgb3MuZW52aXJvblsnUFJFRElDVElPTlNfVEFCTEUnXSkKICAgIHNldGF0dHIoY29udGV4dCwgJ291dHB1dF9zdHJlYW0nLCBvcy5lbnZpcm9uWydPVVRQVVRfU1RSRUFNJ10pCiAgICBzZXRhdHRyKGNvbnRleHQsICd0aW1lc3RhbXBfY29sJywgb3MuZ2V0ZW52KCd0aW1lc3RhbXBfY29sJywgJ3doZW4nKSkKICAgIHNldGF0dHIoY29udGV4dCwgJ29yaWdfdGltZXN0YW1wX2NvbCcsIG9zLmdldGVudignb3JpZ190aW1lc3RhbXBfY29sJywgJ3RpbWVzdGFtcCcpKQogICAgCiAgICB2M2lvX2NsaWVudCA9IHYzaW8uZGF0YXBsYW5lLkNsaWVudChsb2dnZXJfdmVyYm9zaXR5PSdERUJVRycsIHRyYW5zcG9ydF92ZXJib3NpdHk9J0RFQlVHJykKICAgIHNldGF0dHIoY29udGV4dCwgJ3YzaW9fY2xpZW50JywgdjNpb19jbGllbnQpCiAgICBjcmVhdGVfc3RyZWFtKGNvbnRleHQsIGNvbnRleHQub3V0cHV0X3N0cmVhbSkKICAgIAogICAgc2V0YXR0cihjb250ZXh0LCAnbGFiZWxfY29sJywgb3MuZW52aXJvblsnbGFiZWxfY29sJ10pCiAgICBzZXRhdHRyKGNvbnRleHQsICdwcmVkaWN0aW9uX2NvbCcsIG9zLmVudmlyb25bJ3ByZWRpY3Rpb25fY29sJ10pCgpkZWYgaGFuZGxlcihjb250ZXh0LCBldmVudCk6CiAgICAKICAgIGlmIChjb250ZXh0LmJhdGNoZXNfdG9fZ2VuZXJhdGUgPT0gLTEpIG9yIChjb250ZXh0LmJhdGNoZXNfZ2VuZXJhdGVkIDw9IGNvbnRleHQuYmF0Y2hlc190b19nZW5lcmF0ZSk6CiAgICAgICAgCiAgICAgICAgbWV0cmljcyA9IGdldF9kYXRhX3BhcnF1ZXQoY29udGV4dCwgY29udGV4dC5tZXRyaWNzX3RhYmxlLCAyKS5sb2NbOiwgY29udGV4dC5sYWJlbF9jb2xdLmFzdHlwZSgnaW50JykKICAgICAgICBtZXRyaWNzLmluZGV4Lm5hbWVzID0gbGlzdChbbmFtZSBpZiBuYW1lICE9IGNvbnRleHQub3JpZ190aW1lc3RhbXBfY29sIGVsc2UgY29udGV4dC50aW1lc3RhbXBfY29sIGZvciBuYW1lIGluIG1ldHJpY3MuaW5kZXgubmFtZXNdKQogICAgICAgIHByZWRpY3Rpb25zID0gZ2V0X2RhdGFfcGFycXVldChjb250ZXh0LCBjb250ZXh0LnByZWRpY3Rpb25zX3RhYmxlLCAyKQogICAgICAgIGNvbnRleHQubG9nZ2VyLmRlYnVnKGYnTGFiZWxpbmcgbWV0cmljcyAoe21ldHJpY3Muc2hhcGV9KSBhbmQgcHJlZGljdGlvbnMgKHtwcmVkaWN0aW9ucy5zaGFwZX0pJykKICAgICAgICBjb250ZXh0LmxvZ2dlci5kZWJ1Z193aXRoKCdJbmRleGVzJywgbWV0cmljc19pbmRleD1tZXRyaWNzLmluZGV4Lm5hbWVzLCBwcmVkaWN0aW9uc19pbmRleD1wcmVkaWN0aW9ucy5pbmRleC5uYW1lcykKCiAgICAgICAgcHJpbnQoJ21ldHJpY3MnKQogICAgICAgIHByaW50KG1ldHJpY3MuaGVhZCgpKQogICAgICAgIHByaW50KHR5cGUobWV0cmljcykpCiAgICAgICAgbWV0cmljcyA9IHBkLkRhdGFGcmFtZShtZXRyaWNzKQogICAgICAgIHByaW50KCdjaGFuZ2UnKQogICAgICAgIHByaW50KHR5cGUobWV0cmljcykpCiAgICAgICAgcHJpbnQobWV0cmljcy5oZWFkKCkpCiAgICAgICAgcHJpbnQobWV0cmljcy5pbmRleC5uYW1lcykKCiAgICAgICAgZnVsbF9kZiA9IHBkLm1lcmdlKGxlZnQ9cHJlZGljdGlvbnMsIHJpZ2h0PW1ldHJpY3MsIGxlZnRfb249bWV0cmljcy5pbmRleC5uYW1lcywgaG93PSdsZWZ0JywgbGVmdF9pbmRleD1UcnVlLCByaWdodF9pbmRleD1UcnVlKQogICAgICAgIGZ1bGxfZGYgPSBmdWxsX2RmLnJlc2V0X2luZGV4KCkKICAgICAgICBjb250ZXh0LmxvZ2dlci5pbmZvKGYnRnVsbHkgbGFiZWxlZCBiYXRjaCBzaXplIGlzIHtmdWxsX2RmLnNoYXBlfScpCiAgICAgICAgY29udGV4dC5sb2dnZXIuaW5mbyhmJ0luZGV4ZXM6IHtsaXN0KGZ1bGxfZGYuaW5kZXgubmFtZXMpfScpCiAgICAgICAgY29udGV4dC5sb2dnZXIuaW5mbyhmJ0NvbHVtbnM6IHtmdWxsX2RmLmNvbHVtbnN9JykKICAgICAgICBjb250ZXh0LmxvZ2dlci5pbmZvX3dpdGgoJ3NhbXBsZScsIGZ1bGxfZGY9ZnVsbF9kZi5oZWFkKDEpKSAgICAKICAgICAgICBwdXNoX3RvX3N0cmVhbShjb250ZXh0LCBjb250ZXh0Lm91dHB1dF9zdHJlYW0sIGZ1bGxfZGYpCiAgICAgICAgCiAgICAgICAgY29udGV4dC5iYXRjaGVzX2dlbmVyYXRlZCArPSAxCgo=",
              "noBaseImagesPull": true
            },
            "env": [
              {
                "name": "METRICS_TABLE",
                "value": "${fs_streaming_path}/metrics"
              },
              {
                "name": "PREDICTIONS_TABLE",
                "value": "${fs_streaming_path}/predictions"
              },
              {
                "name": "OUTPUT_STREAM",
                "value": "${streaming_path}/labeled_stream"
              },
              {
                "name": "prediction_col",
                "value": "predictions"
              },
              {
                "name": "label_col",
                "value": "is_error"
              },
              {
                "name": "output_stream_shards",
                "value": "1"
              },
              {
                "name": "BATCHES_TO_GENERATE",
                "value": "20"
              }
            ],
            "handler": "labeled_stream_creator:handler",
            "runtime": "python:3.6",
            "volumes": []
          }
        },
        "source": "",
        "image_pull_policy": "Always",
        "build": {
          "commands": [],
          "origin_filename": "/User/demos/network-operations/notebooks/labeled_stream_creator.ipynb"
        },
        "mount_applied": true,
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "remote",
      "metadata": {
        "name": "generator",
        "tag": "",
        "project": "network-operations-admin",
        "hash": "5248aa4aabe2c61f2f98349ac935b781ae57e41d",
        "updated": "2021-08-29T20:25:26.739035+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "",
        "description": "",
        "min_replicas": 1,
        "max_replicas": 4,
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "config": {
          "spec.triggers.cron": {
            "kind": "cron",
            "attributes": {
              "interval": "1m"
            }
          }
        },
        "base_spec": {
          "apiVersion": "nuclio.io/v1",
          "kind": "Function",
          "metadata": {
            "annotations": {
              "nuclio.io/generated_by": "function generated from /User/demos/network-operations/notebooks/generator.ipynb"
            },
            "labels": {},
            "name": "generator"
          },
          "spec": {
            "build": {
              "commands": [
                "python -m pip install pyyaml",
                "python -m pip install pyarrow",
                "python -m pip install pandas",
                "python -m pip install pytimeparse",
                "python -m pip install v3io_frames --upgrade",
                "python -m pip install -i https://test.pypi.org/simple/ v3io-generator",
                "python -m pip install faker"
              ],
              "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG9zCmltcG9ydCB0aW1lCmltcG9ydCB5YW1sCmltcG9ydCBwYW5kYXMgYXMgcGQKaW1wb3J0IGl0ZXJ0b29scwppbXBvcnQgZGF0ZXRpbWUKCmltcG9ydCB2M2lvX2ZyYW1lcyBhcyB2M2YKCmZyb20gdjNpb19nZW5lcmF0b3IgaW1wb3J0IG1ldHJpY3NfZ2VuZXJhdG9yLCBkZXBsb3ltZW50X2dlbmVyYXRvcgoKZGVmIF9jcmVhdGVfZGVwbG95bWVudCgpOgogICAgcHJpbnQoJ2NyZWF0aW5nIGRlcGxveW1lbnQnKQogICAgZGVwX2dlbiA9IGRlcGxveW1lbnRfZ2VuZXJhdG9yLmRlcGxveW1lbnRfZ2VuZXJhdG9yKCkKICAgIGZha2VyPWRlcF9nZW4uZ2V0X2Zha2VyKCkKCiAgICBkZXBfZ2VuLmFkZF9sZXZlbChuYW1lPSdjb21wYW55JyxudW1iZXI9MixsZXZlbF90eXBlPWZha2VyLmNvbXBhbnkpCiAgICBkZXBfZ2VuLmFkZF9sZXZlbCgnZGF0YV9jZW50ZXInLG51bWJlcj0yLGxldmVsX3R5cGU9ZmFrZXIuc3RyZWV0X25hbWUpCiAgICBkZXBfZ2VuLmFkZF9sZXZlbCgnZGV2aWNlJyxudW1iZXI9MixsZXZlbF90eXBlPWZha2VyLm1zaXNkbikKCiAgICBkZXBsb3ltZW50X2RmID0gZGVwX2dlbi5nZW5lcmF0ZV9kZXBsb3ltZW50KCkKICAgIHJldHVybiBkZXBsb3ltZW50X2RmCgpkZWYgX2lzX2RlcGxveW1lbnRfZXhpc3QocGF0aCk6CiAgICByZXR1cm4gb3MucGF0aC5leGlzdHMoZicvdjNpby9iaWdkYXRhL3twYXRofScpCgpkZWYgX2dldF9kZXBsb3ltZW50X2Zyb21fa3YoY2xpZW50LCBwYXRoKToKICAgIHByaW50KGYnUmV0cmlldmluZyBkZXBsb3ltZW50IGZyb20ge3BhdGh9JykKICAgIGNvbnRleHQubG9nZ2VyLmRlYnVnKGYnUmV0cmlldmluZyBkZXBsb3ltZW50IGZyb20ge3BhdGh9JykKICAgIGRlcGxveW1lbnRfZGYgPSBjbGllbnQucmVhZChiYWNrZW5kPSdrdicsIHRhYmxlPXBhdGgpCiAgICAKICAgIGRlcGxveW1lbnRfZGYuaW5kZXgubmFtZSA9ICdkZXZpY2UnCiAgICBkZXBsb3ltZW50X2RmID0gZGVwbG95bWVudF9kZi5yZXNldF9pbmRleCgpCiAgICByZXR1cm4gZGVwbG95bWVudF9kZgoKZGVmIF9zYXZlX2RlcGxveW1lbnRfdG9fa3YocGF0aCwgZGYsIGNsaWVudD1Ob25lKToKICAgIGNsaWVudC53cml0ZShiYWNrZW5kPSdrdicsIHRhYmxlPSduZXRvcHNfZGV2aWNlcycsZGZzPWRmLCBpbmRleF9jb2xzPVsnZGV2aWNlJ10pCgpkZWYgZ2V0X29yX2NyZWF0ZV9kZXBsb3ltZW50KHBhdGgsIHNhdmVfdG9fY2xvdWQ9RmFsc2UsIGNsaWVudD1Ob25lKToKICAgIGlmIGNsaWVudCBhbmQgX2lzX2RlcGxveW1lbnRfZXhpc3QocGF0aCk6CiAgICAgICAgZGVwbG95bWVudF9kZiA9IF9nZXRfZGVwbG95bWVudF9mcm9tX2t2KGNsaWVudCwgcGF0aCkKICAgIGVsc2U6CiAgICAgICAgZGVwbG95bWVudF9kZiA9IF9jcmVhdGVfZGVwbG95bWVudCgpCiAgICAgICAgCiAgICAgICAgaWYgY2xpZW50IGFuZCBzYXZlX3RvX2Nsb3VkOgogICAgICAgICAgICBfc2F2ZV9kZXBsb3ltZW50X3RvX2t2KHBhdGgsIGRlcGxveW1lbnRfZGYsIGNsaWVudCkKCiAgICByZXR1cm4gZGVwbG95bWVudF9kZgoKZGVmIHNldF9pbmRleGVzKGRmKToKICAgIGRmID0gZGYuc2V0X2luZGV4KFsndGltZXN0YW1wJywgJ2NvbXBhbnknLCAnZGF0YV9jZW50ZXInLCAnZGV2aWNlJ10pCiAgICByZXR1cm4gZGYKCmRlZiBzYXZlX21ldHJpY3NfdG9fdHNkYihjb250ZXh0LCBtZXRyaWNzOiBwZC5EYXRhRnJhbWUpOgogICAgcHJpbnQoJ1NhdmluZyBtZXRyaWNzIHRvIFRTREInKQogICAgCiAgICBjb250ZXh0LnYzZi53cml0ZSgndHNkYicsIGNvbnRleHQubWV0cmljc190YWJsZSwgbWV0cmljcykKCmRlZiBzYXZlX21ldHJpY3NfdG9fcGFycXVldChjb250ZXh0LCBtZXRyaWNzKToKICAgIHByaW50KCdTYXZpbmcgbWV0cmljcyB0byBQYXJxdWV0JykKICAgIGRmID0gcGQuY29uY2F0KGl0ZXJ0b29scy5jaGFpbihtZXRyaWNzKSkKICAgIAogICAgZGYgPSBkZi5yZXNldF9pbmRleCgpCiAgICBkZlsndGltZXN0YW1wJ10gPSBkZi5sb2NbOiwgJ3RpbWVzdGFtcCddLmFzdHlwZSgnZGF0ZXRpbWU2NFttc10nKQogICAgCiAgICBkZiA9IHNldF9pbmRleGVzKGRmKQogICAgCiAgICBmaXJzdF90aW1lc3RhbXAgPSBkZi5pbmRleFswXVswXS5zdHJmdGltZSgnJVklbSVkVCVIJU0lUycpCiAgICBsYXN0X3RpbWVzdGFtcCA9IGRmLmluZGV4Wy0xXVswXS5zdHJmdGltZSgnJVklbSVkVCVIJU0lUycpCiAgICBmaWxlbmFtZSA9IGZpcnN0X3RpbWVzdGFtcCArICctJyArIGxhc3RfdGltZXN0YW1wICsgJy5wYXJxdWV0JwogICAgcHJpbnQoZmlsZW5hbWUpCiAgICBmaWxlcGF0aCA9IG9zLnBhdGguam9pbihjb250ZXh0Lm1ldHJpY3NfdGFibGUsIGZpbGVuYW1lKQogICAgcHJpbnQoZmlsZXBhdGgpCiAgICB3aXRoIG9wZW4oZmlsZXBhdGgsICd3YisnKSBhcyBmOgogICAgICAgIGRmLnRvX3BhcnF1ZXQoZikKCmRlZiBpc19kZXBsb3ltZW50X2luaXRpYWxpemVkKGNvbnRleHQpOgogICAgcmV0dXJuIGhhc2F0dHIoY29udGV4dCwgJ21ldHJpY19nZW5lcmF0b3InKQoKZGVmIGluaXRfY29udGV4dChjb250ZXh0KToKICAgIAogICAgYmF0Y2hlc190b19nZW5lcmF0ZSA9IGludChvcy5nZXRlbnYoJ0JBVENIRVNfVE9fR0VORVJBVEUnLCAyMCkpCiAgICBzZXRhdHRyKGNvbnRleHQsICdiYXRjaGVzX3RvX2dlbmVyYXRlJywgYmF0Y2hlc190b19nZW5lcmF0ZSkKICAgIHNldGF0dHIoY29udGV4dCwgJ2JhdGNoZXNfZ2VuZXJhdGVkJywgMCkKICAgIAogICAgc2F2ZV90b190c2RiID0gKGludChvcy5nZXRlbnYoJ1NBVkVfVE9fVFNEQicsIDEpKSA9PSAxKQogICAgCiAgICBtZXRyaWNzX3RhYmxlID0gb3MuZ2V0ZW52KCdTQVZFX1RPJywgJ25ldG9wc19tZXRyaWNzJykKICAgIHNldGF0dHIoY29udGV4dCwgJ21ldHJpY3NfdGFibGUnLCBtZXRyaWNzX3RhYmxlKSAKCiAgICBpZiBzYXZlX3RvX3RzZGI6CiAgICAgICAgY29udGV4dC5sb2dnZXIuZGVidWcoJ1NhdmluZyB0byBUU0RCJykKICAgICAgICBjbGllbnQgPSB2M2YuQ2xpZW50KGFkZHJlc3M9J2ZyYW1lc2Q6ODA4MScsIGNvbnRhaW5lcj0nYmlnZGF0YScpCiAgICAgICAgCiAgICAgICAgY2xpZW50LmNyZWF0ZSgndHNkYicsIG1ldHJpY3NfdGFibGUsIHJhdGU9JzEvcycsIGlmX2V4aXN0cz0xKQogICAgICAgIAogICAgICAgIHNldGF0dHIoY29udGV4dCwgJ3dyaXRlJywgc2F2ZV9tZXRyaWNzX3RvX3RzZGIpCiAgICAKICAgIGVsc2U6CiAgICAgICAgY29udGV4dC5sb2dnZXIuZGVidWcoJ1NhdmluZyB0byBQYXJxdWV0JykKICAgICAgICBjbGllbnQgPSBOb25lCiAgICAgICAgICAKICAgICAgICBmaWxlcGF0aCA9IG9zLnBhdGguam9pbihtZXRyaWNzX3RhYmxlKQogICAgICAgIGlmIG5vdCBvcy5wYXRoLmV4aXN0cyhmaWxlcGF0aCk6CiAgICAgICAgICAgIG9zLm1ha2VkaXJzKGZpbGVwYXRoKQogICAgICAgIAogICAgICAgIHNldGF0dHIoY29udGV4dCwgJ3dyaXRlJywgc2F2ZV9tZXRyaWNzX3RvX3BhcnF1ZXQpCiAgICAKICAgICAgICAgIAogICAgc2Vjc190b19nZW5lcmF0ZSA9IG9zLmdldGVudignU0VDU19UT19HRU5FUkFURScsIDEwKQogICAgc2V0YXR0cihjb250ZXh0LCAnc2Vjc190b19nZW5lcmF0ZScsIHNlY3NfdG9fZ2VuZXJhdGUpCiAgICAKICAgICAKICAgIAogICAgZGVwbG95bWVudF9kZiA9IGdldF9vcl9jcmVhdGVfZGVwbG95bWVudChvcy5lbnZpcm9uWydERVBMT1lNRU5UX1RBQkxFJ10sIG9zLmVudmlyb25bJ1NBVkVfREVQTE9ZTUVOVCddLCBjbGllbnQpCiAgICAKICAgIGRlcGxveW1lbnRfZGZbJ2NwdV91dGlsaXphdGlvbiddID0gNzAKICAgIGRlcGxveW1lbnRfZGZbJ2xhdGVuY3knXSA9IDAKICAgIGRlcGxveW1lbnRfZGZbJ3BhY2tldF9sb3NzJ10gPSAwCiAgICBkZXBsb3ltZW50X2RmWyd0aHJvdWdocHV0J10gPSAyOTAKICAgIGRlcGxveW1lbnRfZGYuaGVhZCgpCiAgICAKICAgIHdpdGggb3Blbihvcy5nZXRlbnYoJ01FVFJJQ1NfQ09ORklHVVJBVElPTl9GSUxFUEFUSCcsICcvc3JjL21ldHJpY3NfY29uZmlndXJhdGlvbi55YW1sJyksICdyJykgYXMgZjoKICAgICAgICBtZXRyaWNzX2NvbmZpZ3VyYXRpb24gPSB5YW1sLmxvYWQoZikKICAgICAgICAKICAgIGluaXRpYWxfdGltZXN0YW1wID0gaW50KG9zLmdldGVudignaW5pdGlhbF90aW1lc3RhbXAnLCAoZGF0ZXRpbWUuZGF0ZXRpbWUubm93KCktZGF0ZXRpbWUudGltZWRlbHRhKGRheXM9MSkpLnRpbWVzdGFtcCgpKSkKICAgIG1ldF9nZW4gPSBtZXRyaWNzX2dlbmVyYXRvci5HZW5lcmF0b3JfZGYobWV0cmljc19jb25maWd1cmF0aW9uLCAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlcl9oaWVyYXJjaHk9ZGVwbG95bWVudF9kZiwgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluaXRpYWxfdGltZXN0YW1wPWluaXRpYWxfdGltZXN0YW1wKQogICAgc2V0YXR0cihjb250ZXh0LCAnbWV0cmljX2dlbmVyYXRvcicsIG1ldF9nZW4pCiAgICAKICAgIHNldGF0dHIoY29udGV4dCwgJ3YzZicsIGNsaWVudCkKCmRlZiBoYW5kbGVyKGNvbnRleHQsIGV2ZW50KToKICAgIAogICAgaWYgKGNvbnRleHQuYmF0Y2hlc190b19nZW5lcmF0ZSA9PSAtMSkgb3IgKGNvbnRleHQuYmF0Y2hlc19nZW5lcmF0ZWQgPD0gY29udGV4dC5iYXRjaGVzX3RvX2dlbmVyYXRlKToKICAgICAgICAKICAgICAgICBtZXRyaWNzID0gY29udGV4dC5tZXRyaWNfZ2VuZXJhdG9yLmdlbmVyYXRlX3JhbmdlKHN0YXJ0X3RpbWU9ZGF0ZXRpbWUuZGF0ZXRpbWUubm93KCksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZW5kX3RpbWU9ZGF0ZXRpbWUuZGF0ZXRpbWUubm93KCkrZGF0ZXRpbWUudGltZWRlbHRhKHNlY29uZHM9aW50KGNvbnRleHQuc2Vjc190b19nZW5lcmF0ZSkpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFzX2RmPVRydWUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXNfaXRlcmF0b3I9VHJ1ZSkKCiAgICAgICAgY29udGV4dC53cml0ZShjb250ZXh0LCBtZXRyaWNzKQogICAgICAgIAogICAgICAgIGNvbnRleHQuYmF0Y2hlc19nZW5lcmF0ZWQgKz0gMQoK",
              "noBaseImagesPull": true
            },
            "env": [
              {
                "name": "BATCHES_TO_GENERATE",
                "value": "20"
              },
              {
                "name": "SAVE_DEPLOYMENT",
                "value": "1"
              },
              {
                "name": "DEPLOYMENT_TABLE",
                "value": "devices"
              },
              {
                "name": "METRICS_CONFIGURATION_FILEPATH",
                "value": "{src_path}/metric_configurations.yaml"
              },
              {
                "name": "SAVE_TO",
                "value": "{data_path}"
              },
              {
                "name": "SECS_TO_GENERATE",
                "value": "3600"
              },
              {
                "name": "SAVE_TO_TSDB",
                "value": "0"
              }
            ],
            "handler": "generator:handler",
            "runtime": "python:3.6",
            "volumes": []
          }
        },
        "source": "",
        "image_pull_policy": "Always",
        "build": {
          "commands": [],
          "origin_filename": "/User/demos/network-operations/notebooks/generator.ipynb"
        },
        "mount_applied": true,
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "remote",
      "metadata": {
        "name": "stream-to-parquet",
        "tag": "",
        "hash": "5bc08b98421a96dc37e93dcc3db4ecdc877b5c06",
        "project": "network-operations-admin",
        "labels": {
          "author": "orz"
        },
        "categories": [
          "machine-learning",
          "data-preparation"
        ],
        "updated": "2021-08-29T20:25:27.069612+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/ml-models",
        "description": "Saves a stream to Parquet and can lunch drift detection task on it",
        "min_replicas": 1,
        "max_replicas": 1,
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "config": {
          "spec.triggers.labeled_stream": {
            "kind": "v3ioStream",
            "url": "http://v3io-webapi:8081",
            "attributes": {
              "containerName": "users",
              "streamPath": "/admin/demos/network-operations/streaming/labeled_stream",
              "consumerGroup": "s2p",
              "sequenceNumberCommitInterval": "1s",
              "workerAllocationMode": "pool",
              "sessionTimeout": "10s",
              "heartbeatInterval": "3s",
              "seekTo": "earliest",
              "readBatchSize": 64,
              "partitions": [
                0
              ],
              "pollingIntervalMs": 500
            },
            "name": "labeled_stream",
            "maxWorkers": 1,
            "password": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          }
        },
        "base_spec": {
          "apiVersion": "nuclio.io/v1",
          "kind": "Function",
          "metadata": {
            "name": "stream-to-parquet",
            "labels": {},
            "annotations": {
              "nuclio.io/generated_by": "function generated from /home/kali/functions/stream_to_parquet/stream_to_parquet.py"
            }
          },
          "spec": {
            "runtime": "python:3.6",
            "handler": "stream_to_parquet:handler",
            "env": [],
            "volumes": [],
            "build": {
              "commands": [],
              "noBaseImagesPull": true,
              "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG9zCmltcG9ydCBwYW5kYXMgYXMgcGQKaW1wb3J0IG51bXB5IGFzIG5wCmltcG9ydCBqc29uCmltcG9ydCBkYXRldGltZQppbXBvcnQgbWxydW4KCgpkZWYgcmVjb3JkX3RvX2ZlYXR1cmVzKHJlY29yZCk6CiAgICBmZWF0dXJlcyA9IHJlY29yZFsicmVxdWVzdCJdWyJpbnN0YW5jZXMiXVswXQogICAgdGltZXN0YW1wID0gcmVjb3JkWyJ3aGVuIl0KICAgIHByZWRpY3Rpb24gPSByZWNvcmRbInJlc3AiXQoKICAgIHJlY29yZCA9IHsidGltZXN0YW1wIjogdGltZXN0YW1wLCAqKmZlYXR1cmVzLCAicHJlZGljdGlvbnMiOiBwcmVkaWN0aW9ufQoKICAgIHJldHVybiByZWNvcmQKCgpkZWYgaW5pdF9jb250ZXh0KGNvbnRleHQpOgogICAgc2V0YXR0cihjb250ZXh0LCAiYmF0Y2giLCBbXSkKICAgIHNldGF0dHIoY29udGV4dCwgIndpbmRvdyIsIGludChvcy5nZXRlbnYoIndpbmRvdyIsIDEwKSkpCiAgICBzZXRhdHRyKGNvbnRleHQsICJzYXZlX3RvIiwgb3MuZ2V0ZW52KCJzYXZlX3RvIiwgIi9iaWdkYXRhL2luZmVyZW5jZV9wcS8iKSkKICAgIG9zLm1ha2VkaXJzKGNvbnRleHQuc2F2ZV90bywgZXhpc3Rfb2s9VHJ1ZSkKCiAgICBtbHJ1bi5tbGNvbmYuZGJwYXRoID0gbWxydW4ubWxjb25mLmRicGF0aCBvciAiaHR0cDovL21scnVuLWFwaTo4MDgwIgogICAgYXJ0aWZhY3RfcGF0aCA9IG9zLmdldGVudigiYXJ0aWZhY3RfcGF0aCIsIE5vbmUpCiAgICBpZiBhcnRpZmFjdF9wYXRoOgogICAgICAgIG1scnVuLm1sY29uZi5hcnRpZmFjdF9wYXRoID0gYXJ0aWZhY3RfcGF0aAogICAgaWYgImh1Yl91cmwiIGluIG9zLmVudmlyb246CiAgICAgICAgbWxydW4ubWxjb25mLmh1Yl91cmwgPSBvcy5lbnZpcm9uWyJodWJfdXJsIl0KICAgIHZpcnR1YWxfZHJpZnRfZm4gPSBtbHJ1bi5pbXBvcnRfZnVuY3Rpb24oImh1YjovL3ZpcnR1YWxfZHJpZnQiKQogICAgdmlydHVhbF9kcmlmdF9mbi5hcHBseSgKICAgICAgICBtbHJ1bi5tb3VudF92M2lvKAogICAgICAgICAgICBtb3VudF9wYXRoPW9zLmdldGVudigibW91bnRfcGF0aCIsICJ+LyIpLAogICAgICAgICAgICByZW1vdGU9b3MuZ2V0ZW52KCJtb3VudF9yZW1vdGUiLCAiL1VzZXIiKSwKICAgICAgICApCiAgICApCiAgICBzZXRhdHRyKGNvbnRleHQsICJ2aXJ0dWFsX2RyaWZ0X2ZuIiwgdmlydHVhbF9kcmlmdF9mbikKCiAgICBwcmVkaWN0aW9uc19jb2wgPSBvcy5nZXRlbnYoInByZWRpY3Rpb25zIiwgTm9uZSkKICAgIGxhYmVsX2NvbCA9IG9zLmdldGVudigibGFiZWxfY29sIiwgTm9uZSkKICAgIHNldGF0dHIoY29udGV4dCwgImJhc2VfZGF0YXNldCIsIG9zLmdldGVudigiYmFzZV9kYXRhc2V0IiwgIiIpKQogICAgc2V0YXR0cihjb250ZXh0LCAiaW5kZXhlcyIsIGpzb24ubG9hZHMob3MuZW52aXJvbi5nZXQoImluZGV4ZXMiLCAiW10iKSkpCiAgICBzZXRhdHRyKGNvbnRleHQsICJwcmVkaWN0aW9uc19jb2wiLCBwcmVkaWN0aW9uc19jb2wpCiAgICBzZXRhdHRyKGNvbnRleHQsICJsYWJlbF9jb2wiLCBsYWJlbF9jb2wpCiAgICBzZXRhdHRyKAogICAgICAgIGNvbnRleHQsICJyZXN1bHRzX3RzZGJfY29udGFpbmVyIiwgb3MuZ2V0ZW52KCJyZXN1bHRzX3RzZGJfY29udGFpbmVyIiwgTm9uZSkKICAgICkKICAgIHNldGF0dHIoY29udGV4dCwgInJlc3VsdHNfdHNkYl90YWJsZSIsIG9zLmdldGVudigicmVzdWx0c190c2RiX3RhYmxlIiwgTm9uZSkpCgoKZGVmIGhhbmRsZXIoY29udGV4dCwgZXZlbnQpOgoKICAgIGNvbnRleHQubG9nZ2VyLmluZm8oZiJBZGRpbmcge2V2ZW50LmJvZHl9IikKICAgIGNvbnRleHQuYmF0Y2guYXBwZW5kKHJlY29yZF90b19mZWF0dXJlcyhqc29uLmxvYWRzKGV2ZW50LmJvZHkpKSkKCiAgICBpZiBsZW4oY29udGV4dC5iYXRjaCkgPiBjb250ZXh0LndpbmRvdzoKICAgICAgICBjb250ZXh0LmxvZ2dlci5pbmZvKGNvbnRleHQuYmF0Y2hbOjFdKQogICAgICAgIGNvbnRleHQubG9nZ2VyLmluZm8oY29udGV4dC5pbmRleGVzKQogICAgICAgIGRmID0gcGQuRGF0YUZyYW1lKGNvbnRleHQuYmF0Y2gpCiAgICAgICAgY29udGV4dC5sb2dnZXIuaW5mbyhmImRmIGV4YW1wbGU6IHtkZi5oZWFkKDEpfSIpCiAgICAgICAgaWYgY29udGV4dC5pbmRleGVzOgogICAgICAgICAgICBkZiA9IGRmLnNldF9pbmRleChjb250ZXh0LmluZGV4ZXMpCiAgICAgICAgZGZfcGF0aCA9IG9zLnBhdGguam9pbigKICAgICAgICAgICAgY29udGV4dC5zYXZlX3RvLAogICAgICAgICAgICBmIntkYXRldGltZS5kYXRldGltZS5ub3coKS5zdHJmdGltZSgnJVktJW0tJWRUJUg6JU06JVMnKX0ucHEiLAogICAgICAgICkKICAgICAgICBkZi50b19wYXJxdWV0KGRmX3BhdGgpCgogICAgICAgIHRhc2sgPSBtbHJ1bi5OZXdUYXNrKAogICAgICAgICAgICBuYW1lPSJkcmlmdF9tYWduaXR1ZGUiLAogICAgICAgICAgICBoYW5kbGVyPSJkcmlmdF9tYWduaXR1ZGUiLAogICAgICAgICAgICBwYXJhbXM9ewogICAgICAgICAgICAgICAgImxhYmVsX2NvbCI6IGNvbnRleHQubGFiZWxfY29sLAogICAgICAgICAgICAgICAgInByZWRpY3Rpb25fY29sIjogY29udGV4dC5wcmVkaWN0aW9uc19jb2wsCiAgICAgICAgICAgICAgICAicmVzdWx0c190c2RiX2NvbnRhaW5lciI6IGNvbnRleHQucmVzdWx0c190c2RiX2NvbnRhaW5lciwKICAgICAgICAgICAgICAgICJyZXN1bHRzX3RzZGJfdGFibGUiOiBjb250ZXh0LnJlc3VsdHNfdHNkYl90YWJsZSwKICAgICAgICAgICAgfSwKICAgICAgICAgICAgaW5wdXRzPXsidCI6IGNvbnRleHQuYmFzZV9kYXRhc2V0LCAidSI6IGRmX3BhdGh9LAogICAgICAgICAgICBhcnRpZmFjdF9wYXRoPW1scnVuLm1sY29uZi5hcnRpZmFjdF9wYXRoLAogICAgICAgICkKCiAgICAgICAgY29udGV4dC52aXJ0dWFsX2RyaWZ0X2ZuLnJ1bih0YXNrLCB3YXRjaD1GYWxzZSkKCiAgICAgICAgY29udGV4dC5iYXRjaCA9IFtdCg=="
            }
          }
        },
        "source": "",
        "image_pull_policy": "Always",
        "function_kind": "mlrun",
        "build": {
          "commands": []
        },
        "default_handler": "handler",
        "mount_applied": true,
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "name": "aggregate",
        "tag": "",
        "hash": "a78df072c06071e67f50d39a6484f81689a5e80c",
        "project": "network-operations-admin",
        "labels": {
          "author": "avia"
        },
        "categories": [
          "data-preparation"
        ],
        "updated": "2021-08-29T20:25:34.216602+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/ml-models",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "aggregate",
        "entry_points": {
          "aggregate": {
            "name": "aggregate",
            "doc": "Time-series aggregation function\n\nWill perform a rolling aggregation on {df_artifact}, over {window} by the selected {keys}\napplying {metric_aggs} on {metrics} and {label_aggs} on {labels}. adding {suffix} to the \nfeature names.\n\nif not {inplace}, will return the original {df_artifact}, joined by the aggregated result.",
            "parameters": [
              {
                "name": "context",
                "default": ""
              },
              {
                "name": "df_artifact",
                "type": "Union[DataItem, DataFrame]",
                "doc": "MLRun input pointing to pandas dataframe (csv/parquet file path) or a  directory containing parquet files. * When given a directory the latest {files_to_select} will be selected",
                "default": ""
              },
              {
                "name": "save_to",
                "type": "str",
                "doc": "Where to save the result dataframe. * If relative will add to the {artifact_path}",
                "default": "aggregated-df.pq"
              },
              {
                "name": "keys",
                "type": "list",
                "doc": "Subset of indexes from the source dataframe to aggregate by (default=all)",
                "default": null
              },
              {
                "name": "metrics",
                "type": "list",
                "doc": "Array containing a list of metrics to run the aggregations on. (default=None) ",
                "default": null
              },
              {
                "name": "labels",
                "type": "list",
                "doc": "Array containing a list of labels to run the aggregations on. (default=None) ",
                "default": null
              },
              {
                "name": "metric_aggs",
                "type": "list",
                "doc": "Array containing a list of aggregation function names to run on {metrics}. (Ex: 'mean', 'std') (default='mean')",
                "default": [
                  "mean"
                ]
              },
              {
                "name": "label_aggs",
                "type": "list",
                "doc": "Array containing a list of aggregation function names to run on {metrics}. (Ex: 'max', 'min') (default='max') ",
                "default": [
                  "max"
                ]
              },
              {
                "name": "suffix",
                "type": "str",
                "doc": "Suffix to add to the feature name, E.g: <Feature_Name>_<Agg_Function>_<Suffix> (Ex: 'last_60_mintes') (default='')",
                "default": ""
              },
              {
                "name": "window",
                "type": "int",
                "doc": "Window size to perform the rolling aggregate on. (default=3)",
                "default": 3
              },
              {
                "name": "center",
                "type": "bool",
                "doc": "If True, Sets the value for the central sample in the window, If False, will set the value to the last sample. (default=False)",
                "default": false
              },
              {
                "name": "inplace",
                "type": "bool",
                "doc": "If True, will return only the aggregated results. If False, will join the aggregated results with the original dataframe",
                "default": false
              },
              {
                "name": "drop_na",
                "type": "bool",
                "doc": "Will drop na lines due to the Rolling.",
                "default": true
              },
              {
                "name": "files_to_select",
                "type": "int",
                "doc": "Specifies the number of *latest* files to select (and concat) for aggregation.",
                "default": 1
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 9
          }
        },
        "description": "Rolling aggregation over Metrics and Lables according to specifications",
        "image_pull_policy": "Always",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG9zCmltcG9ydCBwYW5kYXMgYXMgcGQKZnJvbSBtbHJ1bi5kYXRhc3RvcmUgaW1wb3J0IERhdGFJdGVtCgpmcm9tIHR5cGluZyBpbXBvcnQgVW5pb24KCmRlZiBhZ2dyZWdhdGUoY29udGV4dCwKICAgICAgICAgICAgICBkZl9hcnRpZmFjdDogVW5pb25bRGF0YUl0ZW0sIHBkLmNvcmUuZnJhbWUuRGF0YUZyYW1lXSwKICAgICAgICAgICAgICBzYXZlX3RvOiBzdHIgPSAnYWdncmVnYXRlZC1kZi5wcScsIAogICAgICAgICAgICAgIGtleXM6IGxpc3QgPSBOb25lLCAKICAgICAgICAgICAgICBtZXRyaWNzOiBsaXN0ID0gTm9uZSwgCiAgICAgICAgICAgICAgbGFiZWxzOiBsaXN0ID0gTm9uZSwgCiAgICAgICAgICAgICAgbWV0cmljX2FnZ3M6IGxpc3QgPSBbJ21lYW4nXSwgCiAgICAgICAgICAgICAgbGFiZWxfYWdnczogbGlzdCA9IFsnbWF4J10sIAogICAgICAgICAgICAgIHN1ZmZpeDogc3RyID0gJycsIAogICAgICAgICAgICAgIHdpbmRvdzogaW50ID0gMywgCiAgICAgICAgICAgICAgY2VudGVyOiBib29sID0gRmFsc2UsIAogICAgICAgICAgICAgIGlucGxhY2U6IGJvb2wgPSBGYWxzZSwKICAgICAgICAgICAgICBkcm9wX25hOiBib29sID0gVHJ1ZSwKICAgICAgICAgICAgICBmaWxlc190b19zZWxlY3Q6IGludCA9IDEpOgogICAgIiIiVGltZS1zZXJpZXMgYWdncmVnYXRpb24gZnVuY3Rpb24KICAgIAogICAgV2lsbCBwZXJmb3JtIGEgcm9sbGluZyBhZ2dyZWdhdGlvbiBvbiB7ZGZfYXJ0aWZhY3R9LCBvdmVyIHt3aW5kb3d9IGJ5IHRoZSBzZWxlY3RlZCB7a2V5c30KICAgIGFwcGx5aW5nIHttZXRyaWNfYWdnc30gb24ge21ldHJpY3N9IGFuZCB7bGFiZWxfYWdnc30gb24ge2xhYmVsc30uIGFkZGluZyB7c3VmZml4fSB0byB0aGUgCiAgICBmZWF0dXJlIG5hbWVzLgogICAgCiAgICBpZiBub3Qge2lucGxhY2V9LCB3aWxsIHJldHVybiB0aGUgb3JpZ2luYWwge2RmX2FydGlmYWN0fSwgam9pbmVkIGJ5IHRoZSBhZ2dyZWdhdGVkIHJlc3VsdC4KICAgIAogICAgOnBhcmFtIGRmX2FydGlmYWN0OiBNTFJ1biBpbnB1dCBwb2ludGluZyB0byBwYW5kYXMgZGF0YWZyYW1lIChjc3YvcGFycXVldCBmaWxlIHBhdGgpIG9yIGEgCiAgICAgICAgICAgICAgICAgICAgICAgIGRpcmVjdG9yeSBjb250YWluaW5nIHBhcnF1ZXQgZmlsZXMuCiAgICAgICAgICAgICAgICAgICAgICAgICogV2hlbiBnaXZlbiBhIGRpcmVjdG9yeSB0aGUgbGF0ZXN0IHtmaWxlc190b19zZWxlY3R9IHdpbGwgYmUgc2VsZWN0ZWQKICAgIDpwYXJhbSBzYXZlX3RvOiAgICAgV2hlcmUgdG8gc2F2ZSB0aGUgcmVzdWx0IGRhdGFmcmFtZS4KICAgICAgICAgICAgICAgICAgICAgICAgKiBJZiByZWxhdGl2ZSB3aWxsIGFkZCB0byB0aGUge2FydGlmYWN0X3BhdGh9CiAgICA6cGFyYW0ga2V5czogICAgICAgIFN1YnNldCBvZiBpbmRleGVzIGZyb20gdGhlIHNvdXJjZSBkYXRhZnJhbWUgdG8gYWdncmVnYXRlIGJ5IChkZWZhdWx0PWFsbCkKICAgIDpwYXJhbSBtZXRyaWNzOiAgICAgQXJyYXkgY29udGFpbmluZyBhIGxpc3Qgb2YgbWV0cmljcyB0byBydW4gdGhlIGFnZ3JlZ2F0aW9ucyBvbi4gKGRlZmF1bHQ9Tm9uZSkgCiAgICA6cGFyYW0gbGFiZWxzOiAgICAgIEFycmF5IGNvbnRhaW5pbmcgYSBsaXN0IG9mIGxhYmVscyB0byBydW4gdGhlIGFnZ3JlZ2F0aW9ucyBvbi4gKGRlZmF1bHQ9Tm9uZSkgCiAgICA6cGFyYW0gbWV0cmljX2FnZ3M6IEFycmF5IGNvbnRhaW5pbmcgYSBsaXN0IG9mIGFnZ3JlZ2F0aW9uIGZ1bmN0aW9uIG5hbWVzIHRvIHJ1biBvbiB7bWV0cmljc30uCiAgICAgICAgICAgICAgICAgICAgICAgIChFeDogJ21lYW4nLCAnc3RkJykgKGRlZmF1bHQ9J21lYW4nKQogICAgOnBhcmFtIGxhYmVsX2FnZ3M6ICBBcnJheSBjb250YWluaW5nIGEgbGlzdCBvZiBhZ2dyZWdhdGlvbiBmdW5jdGlvbiBuYW1lcyB0byBydW4gb24ge21ldHJpY3N9LgogICAgICAgICAgICAgICAgICAgICAgICAoRXg6ICdtYXgnLCAnbWluJykgKGRlZmF1bHQ9J21heCcpIAogICAgOnBhcmFtIHN1ZmZpeDogICAgICBTdWZmaXggdG8gYWRkIHRvIHRoZSBmZWF0dXJlIG5hbWUsIEUuZzogPEZlYXR1cmVfTmFtZT5fPEFnZ19GdW5jdGlvbj5fPFN1ZmZpeD4KICAgICAgICAgICAgICAgICAgICAgICAgKEV4OiAnbGFzdF82MF9taW50ZXMnKSAoZGVmYXVsdD0nJykKICAgIDpwYXJhbSB3aW5kb3c6ICAgICAgV2luZG93IHNpemUgdG8gcGVyZm9ybSB0aGUgcm9sbGluZyBhZ2dyZWdhdGUgb24uIChkZWZhdWx0PTMpCiAgICA6cGFyYW0gY2VudGVyOiAgICAgIElmIFRydWUsIFNldHMgdGhlIHZhbHVlIGZvciB0aGUgY2VudHJhbCBzYW1wbGUgaW4gdGhlIHdpbmRvdywKICAgICAgICAgICAgICAgICAgICAgICAgSWYgRmFsc2UsIHdpbGwgc2V0IHRoZSB2YWx1ZSB0byB0aGUgbGFzdCBzYW1wbGUuIChkZWZhdWx0PUZhbHNlKQogICAgOnBhcmFtIGlucGxhY2U6ICAgICBJZiBUcnVlLCB3aWxsIHJldHVybiBvbmx5IHRoZSBhZ2dyZWdhdGVkIHJlc3VsdHMuCiAgICAgICAgICAgICAgICAgICAgICAgIElmIEZhbHNlLCB3aWxsIGpvaW4gdGhlIGFnZ3JlZ2F0ZWQgcmVzdWx0cyB3aXRoIHRoZSBvcmlnaW5hbCBkYXRhZnJhbWUKICAgIDpwYXJhbSBkcm9wX25hOiAgICAgV2lsbCBkcm9wIG5hIGxpbmVzIGR1ZSB0byB0aGUgUm9sbGluZy4KICAgIDpwYXJhbSBmaWxlc190b19zZWxlY3Q6IFNwZWNpZmllcyB0aGUgbnVtYmVyIG9mICpsYXRlc3QqIGZpbGVzIHRvIHNlbGVjdCAoYW5kIGNvbmNhdCkgZm9yIGFnZ3JlZ2F0aW9uLgogICAgIiIiCiAgICAKICAgIGZyb21fbW9kZWwgPSB0eXBlKGRmX2FydGlmYWN0KSA9PSBwZC5EYXRhRnJhbWUKICAgIGlmIGZyb21fbW9kZWw6CiAgICAgICAgY29udGV4dC5sb2dnZXIuaW5mbygnQWdncmVnYXRpbmcgZnJvbSBCdWZmZXInKQogICAgICAgIGlucHV0X2RmID0gZGZfYXJ0aWZhY3QKICAgIGVsc2U6CiAgICAgICAgaWYgZGZfYXJ0aWZhY3QudXJsLmVuZHN3aXRoKCcvJyk6ICAgIyBpcyBhIGRpcmVjdG9yeT8KICAgICAgICAgICAgbXBhdGggPSBbb3MucGF0aC5qb2luKGRmX2FydGlmYWN0LnVybCwgZmlsZSkgZm9yIGZpbGUgaW4gZGZfYXJ0aWZhY3QubGlzdGRpcigpIGlmIGZpbGUuZW5kc3dpdGgoKCdwYXJxdWV0JywgJ3BxJykpXQogICAgICAgICAgICBmaWxlc19ieV91cGRhdGVkID0gc29ydGVkKG1wYXRoLCBrZXk9b3MucGF0aC5nZXRtdGltZSwgcmV2ZXJzZT1UcnVlKQogICAgICAgICAgICBjb250ZXh0LmxvZ2dlci5pbmZvKGZpbGVzX2J5X3VwZGF0ZWQpCiAgICAgICAgICAgIGxhdGVzdCA9IGZpbGVzX2J5X3VwZGF0ZWRbOmZpbGVzX3RvX3NlbGVjdF0KICAgICAgICAgICAgY29udGV4dC5sb2dnZXIuaW5mbyhmJ0FnZ3JlZ2F0aW5nIHtsYXRlc3R9JykKICAgICAgICAgICAgaW5wdXRfZGYgPSBwZC5jb25jYXQoW2NvbnRleHQuZ2V0X2RhdGFpdGVtKGRmKS5hc19kZigpIGZvciBkZiBpbiBsYXRlc3RdKQogICAgICAgIGVsc2U6ICAjIEEgcmVndWxhciBhcnRpZmFjdAogICAgICAgICAgICBjb250ZXh0LmxvZ2dlci5pbmZvKGYnQWdncmVnYXRpbmcge2RmX2FydGlmYWN0LnVybH0nKQogICAgICAgICAgICBpbnB1dF9kZiA9IGRmX2FydGlmYWN0LmFzX2RmKCkKICAgIAogICAgaWYgbm90IChtZXRyaWNzIG9yIGxhYmVscyk6CiAgICAgICAgcmFpc2UgVmFsdWVFcnJvcigncGxlYXNlIHNwZWNpZnkgbWV0cmljcyBvciBsYWJlbHMgcGFyYW0nKQogICAgCiAgICBpZiBrZXlzOgogICAgICAgIGN1cnJlbnRfaW5kZXggPSBpbnB1dF9kZi5pbmRleC5uYW1lcwogICAgICAgIGluZGV4ZXNfdG9fZHJvcCA9IFtjb2wgZm9yIGNvbCBpbiBpbnB1dF9kZi5pbmRleC5uYW1lcyBpZiBjb2wgbm90IGluIGtleXNdCiAgICAgICAgZGYgPSBpbnB1dF9kZi5yZXNldF9pbmRleChsZXZlbD1pbmRleGVzX3RvX2Ryb3ApCiAgICBlbHNlOgogICAgICAgIGRmID0gaW5wdXRfZGYKICAgICAgICAKICAgIGlmIG1ldHJpY3M6CiAgICAgICAgbWV0cmljc19kZiA9IGRmLmxvY1s6LCBtZXRyaWNzXS5yb2xsaW5nKHdpbmRvdz13aW5kb3csIGNlbnRlcj1jZW50ZXIpLmFnZ3JlZ2F0ZShtZXRyaWNfYWdncykKICAgICAgICAKICAgICAgICBtZXRyaWNzX2RmLmNvbHVtbnMgPSBbJ18nLmpvaW4oY29sKS5zdHJpcCgpIGZvciBjb2wgaW4gbWV0cmljc19kZi5jb2x1bW5zLnZhbHVlc10KICAgICAgICAKICAgICAgICBpZiBzdWZmaXg6CiAgICAgICAgICAgIG1ldHJpY3NfZGYuY29sdW1ucyA9IFtmJ3ttZXRyaWN9X3tzdWZmaXh9JyBmb3IgbWV0cmljIGluIG1ldHJpY3NfZGYuY29sdW1uc10KICAgICAgICAgICAgCiAgICAgICAgaWYgbm90IGlucGxhY2U6CiAgICAgICAgICAgIGZpbmFsX2RmID0gcGQubWVyZ2UoaW5wdXRfZGYsIG1ldHJpY3NfZGYsIHN1ZmZpeGVzPSgnJywgc3VmZml4KSwgbGVmdF9pbmRleD1UcnVlLCByaWdodF9pbmRleD1UcnVlKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIGZpbmFsX2RmID0gbWV0cmljc19kZgoKICAgIGlmIGxhYmVsczoKICAgICAgICBsYWJlbHNfZGYgPSBkZi5sb2NbOiwgbGFiZWxzXS5yb2xsaW5nKHdpbmRvdz13aW5kb3csCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjZW50ZXI9Y2VudGVyKS5hZ2dyZWdhdGUobGFiZWxfYWdncykKICAgICAgICBsYWJlbHNfZGYuY29sdW1ucyA9IFsnXycuam9pbihjb2wpLnN0cmlwKCkgZm9yIGNvbCBpbiBsYWJlbHNfZGYuY29sdW1ucy52YWx1ZXNdCiAgICAgICAgCiAgICAgICAgaWYgc3VmZml4OgogICAgICAgICAgICBsYWJlbHNfZGYuY29sdW1ucyA9IFtmJ3tsYWJlbH1fe3N1ZmZpeH0nIGZvciBsYWJlbCBpbiBsYWJlbHNfZGYuY29sdW1uc10KICAgICAgICAgICAgCiAgICAgICAgaWYgbWV0cmljczoKICAgICAgICAgICAgZmluYWxfZGYgPSBwZC5tZXJnZShmaW5hbF9kZiwgbGFiZWxzX2RmLCBzdWZmaXhlcz0oJycsIHN1ZmZpeCksIGxlZnRfaW5kZXg9VHJ1ZSwgcmlnaHRfaW5kZXg9VHJ1ZSkgICAKICAgICAgICBlbHNlOgogICAgICAgICAgICBpZiBub3QgaW5wbGFjZToKICAgICAgICAgICAgICAgIGZpbmFsX2RmID0gcGQubWVyZ2UoaW5wdXRfZGYsIGxhYmVsc19kZiwgc3VmZml4ZXM9KCcnLCBzdWZmaXgpLCBsZWZ0X2luZGV4PVRydWUsIHJpZ2h0X2luZGV4PVRydWUpICAgICAgCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBmaW5hbF9kZiA9IGxhYmVsc19kZgogICAgICAgICAgICAgICAgCiAgICBpZiBkcm9wX25hOgogICAgICAgIGZpbmFsX2RmID0gZmluYWxfZGYuZHJvcG5hKCkKICAgICAgICAKICAgIGNvbnRleHQubG9nZ2VyLmluZm8oJ0xvZ2dpbmcgYXJ0aWZhY3QnKQogICAgaWYgbm90IGZyb21fbW9kZWw6CiAgICAgICAgY29udGV4dC5sb2dfZGF0YXNldChrZXk9J2FnZ3JlZ2F0ZScsIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGY9ZmluYWxfZGYsIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9ybWF0PSdwYXJxdWV0JywKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvY2FsX3BhdGg9c2F2ZV90bykKICAgIGVsc2U6CiAgICAgICAgcmV0dXJuIGZpbmFsX2RmCgo=",
          "commands": []
        },
        "mount_applied": true,
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "aggregate",
        "tag": "latest",
        "hash": "428dd449aafa6a7cd2cbb49ece9b61290d13feaf",
        "project": "network-operations-admin",
        "labels": {
          "author": "avia"
        },
        "categories": [
          "data-preparation"
        ],
        "updated": "2021-08-29T20:25:34.358997+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/ml-models",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "aggregate",
        "entry_points": {
          "aggregate": {
            "name": "aggregate",
            "doc": "Time-series aggregation function\n\nWill perform a rolling aggregation on {df_artifact}, over {window} by the selected {keys}\napplying {metric_aggs} on {metrics} and {label_aggs} on {labels}. adding {suffix} to the \nfeature names.\n\nif not {inplace}, will return the original {df_artifact}, joined by the aggregated result.",
            "parameters": [
              {
                "name": "context",
                "default": ""
              },
              {
                "name": "df_artifact",
                "type": "Union[DataItem, DataFrame]",
                "doc": "MLRun input pointing to pandas dataframe (csv/parquet file path) or a  directory containing parquet files. * When given a directory the latest {files_to_select} will be selected",
                "default": ""
              },
              {
                "name": "save_to",
                "type": "str",
                "doc": "Where to save the result dataframe. * If relative will add to the {artifact_path}",
                "default": "aggregated-df.pq"
              },
              {
                "name": "keys",
                "type": "list",
                "doc": "Subset of indexes from the source dataframe to aggregate by (default=all)",
                "default": null
              },
              {
                "name": "metrics",
                "type": "list",
                "doc": "Array containing a list of metrics to run the aggregations on. (default=None) ",
                "default": null
              },
              {
                "name": "labels",
                "type": "list",
                "doc": "Array containing a list of labels to run the aggregations on. (default=None) ",
                "default": null
              },
              {
                "name": "metric_aggs",
                "type": "list",
                "doc": "Array containing a list of aggregation function names to run on {metrics}. (Ex: 'mean', 'std') (default='mean')",
                "default": [
                  "mean"
                ]
              },
              {
                "name": "label_aggs",
                "type": "list",
                "doc": "Array containing a list of aggregation function names to run on {metrics}. (Ex: 'max', 'min') (default='max') ",
                "default": [
                  "max"
                ]
              },
              {
                "name": "suffix",
                "type": "str",
                "doc": "Suffix to add to the feature name, E.g: <Feature_Name>_<Agg_Function>_<Suffix> (Ex: 'last_60_mintes') (default='')",
                "default": ""
              },
              {
                "name": "window",
                "type": "int",
                "doc": "Window size to perform the rolling aggregate on. (default=3)",
                "default": 3
              },
              {
                "name": "center",
                "type": "bool",
                "doc": "If True, Sets the value for the central sample in the window, If False, will set the value to the last sample. (default=False)",
                "default": false
              },
              {
                "name": "inplace",
                "type": "bool",
                "doc": "If True, will return only the aggregated results. If False, will join the aggregated results with the original dataframe",
                "default": false
              },
              {
                "name": "drop_na",
                "type": "bool",
                "doc": "Will drop na lines due to the Rolling.",
                "default": true
              },
              {
                "name": "files_to_select",
                "type": "int",
                "doc": "Specifies the number of *latest* files to select (and concat) for aggregation.",
                "default": 1
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 9
          }
        },
        "description": "Rolling aggregation over Metrics and Lables according to specifications",
        "image_pull_policy": "Always",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG9zCmltcG9ydCBwYW5kYXMgYXMgcGQKZnJvbSBtbHJ1bi5kYXRhc3RvcmUgaW1wb3J0IERhdGFJdGVtCgpmcm9tIHR5cGluZyBpbXBvcnQgVW5pb24KCmRlZiBhZ2dyZWdhdGUoY29udGV4dCwKICAgICAgICAgICAgICBkZl9hcnRpZmFjdDogVW5pb25bRGF0YUl0ZW0sIHBkLmNvcmUuZnJhbWUuRGF0YUZyYW1lXSwKICAgICAgICAgICAgICBzYXZlX3RvOiBzdHIgPSAnYWdncmVnYXRlZC1kZi5wcScsIAogICAgICAgICAgICAgIGtleXM6IGxpc3QgPSBOb25lLCAKICAgICAgICAgICAgICBtZXRyaWNzOiBsaXN0ID0gTm9uZSwgCiAgICAgICAgICAgICAgbGFiZWxzOiBsaXN0ID0gTm9uZSwgCiAgICAgICAgICAgICAgbWV0cmljX2FnZ3M6IGxpc3QgPSBbJ21lYW4nXSwgCiAgICAgICAgICAgICAgbGFiZWxfYWdnczogbGlzdCA9IFsnbWF4J10sIAogICAgICAgICAgICAgIHN1ZmZpeDogc3RyID0gJycsIAogICAgICAgICAgICAgIHdpbmRvdzogaW50ID0gMywgCiAgICAgICAgICAgICAgY2VudGVyOiBib29sID0gRmFsc2UsIAogICAgICAgICAgICAgIGlucGxhY2U6IGJvb2wgPSBGYWxzZSwKICAgICAgICAgICAgICBkcm9wX25hOiBib29sID0gVHJ1ZSwKICAgICAgICAgICAgICBmaWxlc190b19zZWxlY3Q6IGludCA9IDEpOgogICAgIiIiVGltZS1zZXJpZXMgYWdncmVnYXRpb24gZnVuY3Rpb24KICAgIAogICAgV2lsbCBwZXJmb3JtIGEgcm9sbGluZyBhZ2dyZWdhdGlvbiBvbiB7ZGZfYXJ0aWZhY3R9LCBvdmVyIHt3aW5kb3d9IGJ5IHRoZSBzZWxlY3RlZCB7a2V5c30KICAgIGFwcGx5aW5nIHttZXRyaWNfYWdnc30gb24ge21ldHJpY3N9IGFuZCB7bGFiZWxfYWdnc30gb24ge2xhYmVsc30uIGFkZGluZyB7c3VmZml4fSB0byB0aGUgCiAgICBmZWF0dXJlIG5hbWVzLgogICAgCiAgICBpZiBub3Qge2lucGxhY2V9LCB3aWxsIHJldHVybiB0aGUgb3JpZ2luYWwge2RmX2FydGlmYWN0fSwgam9pbmVkIGJ5IHRoZSBhZ2dyZWdhdGVkIHJlc3VsdC4KICAgIAogICAgOnBhcmFtIGRmX2FydGlmYWN0OiBNTFJ1biBpbnB1dCBwb2ludGluZyB0byBwYW5kYXMgZGF0YWZyYW1lIChjc3YvcGFycXVldCBmaWxlIHBhdGgpIG9yIGEgCiAgICAgICAgICAgICAgICAgICAgICAgIGRpcmVjdG9yeSBjb250YWluaW5nIHBhcnF1ZXQgZmlsZXMuCiAgICAgICAgICAgICAgICAgICAgICAgICogV2hlbiBnaXZlbiBhIGRpcmVjdG9yeSB0aGUgbGF0ZXN0IHtmaWxlc190b19zZWxlY3R9IHdpbGwgYmUgc2VsZWN0ZWQKICAgIDpwYXJhbSBzYXZlX3RvOiAgICAgV2hlcmUgdG8gc2F2ZSB0aGUgcmVzdWx0IGRhdGFmcmFtZS4KICAgICAgICAgICAgICAgICAgICAgICAgKiBJZiByZWxhdGl2ZSB3aWxsIGFkZCB0byB0aGUge2FydGlmYWN0X3BhdGh9CiAgICA6cGFyYW0ga2V5czogICAgICAgIFN1YnNldCBvZiBpbmRleGVzIGZyb20gdGhlIHNvdXJjZSBkYXRhZnJhbWUgdG8gYWdncmVnYXRlIGJ5IChkZWZhdWx0PWFsbCkKICAgIDpwYXJhbSBtZXRyaWNzOiAgICAgQXJyYXkgY29udGFpbmluZyBhIGxpc3Qgb2YgbWV0cmljcyB0byBydW4gdGhlIGFnZ3JlZ2F0aW9ucyBvbi4gKGRlZmF1bHQ9Tm9uZSkgCiAgICA6cGFyYW0gbGFiZWxzOiAgICAgIEFycmF5IGNvbnRhaW5pbmcgYSBsaXN0IG9mIGxhYmVscyB0byBydW4gdGhlIGFnZ3JlZ2F0aW9ucyBvbi4gKGRlZmF1bHQ9Tm9uZSkgCiAgICA6cGFyYW0gbWV0cmljX2FnZ3M6IEFycmF5IGNvbnRhaW5pbmcgYSBsaXN0IG9mIGFnZ3JlZ2F0aW9uIGZ1bmN0aW9uIG5hbWVzIHRvIHJ1biBvbiB7bWV0cmljc30uCiAgICAgICAgICAgICAgICAgICAgICAgIChFeDogJ21lYW4nLCAnc3RkJykgKGRlZmF1bHQ9J21lYW4nKQogICAgOnBhcmFtIGxhYmVsX2FnZ3M6ICBBcnJheSBjb250YWluaW5nIGEgbGlzdCBvZiBhZ2dyZWdhdGlvbiBmdW5jdGlvbiBuYW1lcyB0byBydW4gb24ge21ldHJpY3N9LgogICAgICAgICAgICAgICAgICAgICAgICAoRXg6ICdtYXgnLCAnbWluJykgKGRlZmF1bHQ9J21heCcpIAogICAgOnBhcmFtIHN1ZmZpeDogICAgICBTdWZmaXggdG8gYWRkIHRvIHRoZSBmZWF0dXJlIG5hbWUsIEUuZzogPEZlYXR1cmVfTmFtZT5fPEFnZ19GdW5jdGlvbj5fPFN1ZmZpeD4KICAgICAgICAgICAgICAgICAgICAgICAgKEV4OiAnbGFzdF82MF9taW50ZXMnKSAoZGVmYXVsdD0nJykKICAgIDpwYXJhbSB3aW5kb3c6ICAgICAgV2luZG93IHNpemUgdG8gcGVyZm9ybSB0aGUgcm9sbGluZyBhZ2dyZWdhdGUgb24uIChkZWZhdWx0PTMpCiAgICA6cGFyYW0gY2VudGVyOiAgICAgIElmIFRydWUsIFNldHMgdGhlIHZhbHVlIGZvciB0aGUgY2VudHJhbCBzYW1wbGUgaW4gdGhlIHdpbmRvdywKICAgICAgICAgICAgICAgICAgICAgICAgSWYgRmFsc2UsIHdpbGwgc2V0IHRoZSB2YWx1ZSB0byB0aGUgbGFzdCBzYW1wbGUuIChkZWZhdWx0PUZhbHNlKQogICAgOnBhcmFtIGlucGxhY2U6ICAgICBJZiBUcnVlLCB3aWxsIHJldHVybiBvbmx5IHRoZSBhZ2dyZWdhdGVkIHJlc3VsdHMuCiAgICAgICAgICAgICAgICAgICAgICAgIElmIEZhbHNlLCB3aWxsIGpvaW4gdGhlIGFnZ3JlZ2F0ZWQgcmVzdWx0cyB3aXRoIHRoZSBvcmlnaW5hbCBkYXRhZnJhbWUKICAgIDpwYXJhbSBkcm9wX25hOiAgICAgV2lsbCBkcm9wIG5hIGxpbmVzIGR1ZSB0byB0aGUgUm9sbGluZy4KICAgIDpwYXJhbSBmaWxlc190b19zZWxlY3Q6IFNwZWNpZmllcyB0aGUgbnVtYmVyIG9mICpsYXRlc3QqIGZpbGVzIHRvIHNlbGVjdCAoYW5kIGNvbmNhdCkgZm9yIGFnZ3JlZ2F0aW9uLgogICAgIiIiCiAgICAKICAgIGZyb21fbW9kZWwgPSB0eXBlKGRmX2FydGlmYWN0KSA9PSBwZC5EYXRhRnJhbWUKICAgIGlmIGZyb21fbW9kZWw6CiAgICAgICAgY29udGV4dC5sb2dnZXIuaW5mbygnQWdncmVnYXRpbmcgZnJvbSBCdWZmZXInKQogICAgICAgIGlucHV0X2RmID0gZGZfYXJ0aWZhY3QKICAgIGVsc2U6CiAgICAgICAgaWYgZGZfYXJ0aWZhY3QudXJsLmVuZHN3aXRoKCcvJyk6ICAgIyBpcyBhIGRpcmVjdG9yeT8KICAgICAgICAgICAgbXBhdGggPSBbb3MucGF0aC5qb2luKGRmX2FydGlmYWN0LnVybCwgZmlsZSkgZm9yIGZpbGUgaW4gZGZfYXJ0aWZhY3QubGlzdGRpcigpIGlmIGZpbGUuZW5kc3dpdGgoKCdwYXJxdWV0JywgJ3BxJykpXQogICAgICAgICAgICBmaWxlc19ieV91cGRhdGVkID0gc29ydGVkKG1wYXRoLCBrZXk9b3MucGF0aC5nZXRtdGltZSwgcmV2ZXJzZT1UcnVlKQogICAgICAgICAgICBjb250ZXh0LmxvZ2dlci5pbmZvKGZpbGVzX2J5X3VwZGF0ZWQpCiAgICAgICAgICAgIGxhdGVzdCA9IGZpbGVzX2J5X3VwZGF0ZWRbOmZpbGVzX3RvX3NlbGVjdF0KICAgICAgICAgICAgY29udGV4dC5sb2dnZXIuaW5mbyhmJ0FnZ3JlZ2F0aW5nIHtsYXRlc3R9JykKICAgICAgICAgICAgaW5wdXRfZGYgPSBwZC5jb25jYXQoW2NvbnRleHQuZ2V0X2RhdGFpdGVtKGRmKS5hc19kZigpIGZvciBkZiBpbiBsYXRlc3RdKQogICAgICAgIGVsc2U6ICAjIEEgcmVndWxhciBhcnRpZmFjdAogICAgICAgICAgICBjb250ZXh0LmxvZ2dlci5pbmZvKGYnQWdncmVnYXRpbmcge2RmX2FydGlmYWN0LnVybH0nKQogICAgICAgICAgICBpbnB1dF9kZiA9IGRmX2FydGlmYWN0LmFzX2RmKCkKICAgIAogICAgaWYgbm90IChtZXRyaWNzIG9yIGxhYmVscyk6CiAgICAgICAgcmFpc2UgVmFsdWVFcnJvcigncGxlYXNlIHNwZWNpZnkgbWV0cmljcyBvciBsYWJlbHMgcGFyYW0nKQogICAgCiAgICBpZiBrZXlzOgogICAgICAgIGN1cnJlbnRfaW5kZXggPSBpbnB1dF9kZi5pbmRleC5uYW1lcwogICAgICAgIGluZGV4ZXNfdG9fZHJvcCA9IFtjb2wgZm9yIGNvbCBpbiBpbnB1dF9kZi5pbmRleC5uYW1lcyBpZiBjb2wgbm90IGluIGtleXNdCiAgICAgICAgZGYgPSBpbnB1dF9kZi5yZXNldF9pbmRleChsZXZlbD1pbmRleGVzX3RvX2Ryb3ApCiAgICBlbHNlOgogICAgICAgIGRmID0gaW5wdXRfZGYKICAgICAgICAKICAgIGlmIG1ldHJpY3M6CiAgICAgICAgbWV0cmljc19kZiA9IGRmLmxvY1s6LCBtZXRyaWNzXS5yb2xsaW5nKHdpbmRvdz13aW5kb3csIGNlbnRlcj1jZW50ZXIpLmFnZ3JlZ2F0ZShtZXRyaWNfYWdncykKICAgICAgICAKICAgICAgICBtZXRyaWNzX2RmLmNvbHVtbnMgPSBbJ18nLmpvaW4oY29sKS5zdHJpcCgpIGZvciBjb2wgaW4gbWV0cmljc19kZi5jb2x1bW5zLnZhbHVlc10KICAgICAgICAKICAgICAgICBpZiBzdWZmaXg6CiAgICAgICAgICAgIG1ldHJpY3NfZGYuY29sdW1ucyA9IFtmJ3ttZXRyaWN9X3tzdWZmaXh9JyBmb3IgbWV0cmljIGluIG1ldHJpY3NfZGYuY29sdW1uc10KICAgICAgICAgICAgCiAgICAgICAgaWYgbm90IGlucGxhY2U6CiAgICAgICAgICAgIGZpbmFsX2RmID0gcGQubWVyZ2UoaW5wdXRfZGYsIG1ldHJpY3NfZGYsIHN1ZmZpeGVzPSgnJywgc3VmZml4KSwgbGVmdF9pbmRleD1UcnVlLCByaWdodF9pbmRleD1UcnVlKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIGZpbmFsX2RmID0gbWV0cmljc19kZgoKICAgIGlmIGxhYmVsczoKICAgICAgICBsYWJlbHNfZGYgPSBkZi5sb2NbOiwgbGFiZWxzXS5yb2xsaW5nKHdpbmRvdz13aW5kb3csCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjZW50ZXI9Y2VudGVyKS5hZ2dyZWdhdGUobGFiZWxfYWdncykKICAgICAgICBsYWJlbHNfZGYuY29sdW1ucyA9IFsnXycuam9pbihjb2wpLnN0cmlwKCkgZm9yIGNvbCBpbiBsYWJlbHNfZGYuY29sdW1ucy52YWx1ZXNdCiAgICAgICAgCiAgICAgICAgaWYgc3VmZml4OgogICAgICAgICAgICBsYWJlbHNfZGYuY29sdW1ucyA9IFtmJ3tsYWJlbH1fe3N1ZmZpeH0nIGZvciBsYWJlbCBpbiBsYWJlbHNfZGYuY29sdW1uc10KICAgICAgICAgICAgCiAgICAgICAgaWYgbWV0cmljczoKICAgICAgICAgICAgZmluYWxfZGYgPSBwZC5tZXJnZShmaW5hbF9kZiwgbGFiZWxzX2RmLCBzdWZmaXhlcz0oJycsIHN1ZmZpeCksIGxlZnRfaW5kZXg9VHJ1ZSwgcmlnaHRfaW5kZXg9VHJ1ZSkgICAKICAgICAgICBlbHNlOgogICAgICAgICAgICBpZiBub3QgaW5wbGFjZToKICAgICAgICAgICAgICAgIGZpbmFsX2RmID0gcGQubWVyZ2UoaW5wdXRfZGYsIGxhYmVsc19kZiwgc3VmZml4ZXM9KCcnLCBzdWZmaXgpLCBsZWZ0X2luZGV4PVRydWUsIHJpZ2h0X2luZGV4PVRydWUpICAgICAgCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBmaW5hbF9kZiA9IGxhYmVsc19kZgogICAgICAgICAgICAgICAgCiAgICBpZiBkcm9wX25hOgogICAgICAgIGZpbmFsX2RmID0gZmluYWxfZGYuZHJvcG5hKCkKICAgICAgICAKICAgIGNvbnRleHQubG9nZ2VyLmluZm8oJ0xvZ2dpbmcgYXJ0aWZhY3QnKQogICAgaWYgbm90IGZyb21fbW9kZWw6CiAgICAgICAgY29udGV4dC5sb2dfZGF0YXNldChrZXk9J2FnZ3JlZ2F0ZScsIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGY9ZmluYWxfZGYsIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9ybWF0PSdwYXJxdWV0JywKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvY2FsX3BhdGg9c2F2ZV90bykKICAgIGVsc2U6CiAgICAgICAgcmV0dXJuIGZpbmFsX2RmCgo=",
          "commands": []
        },
        "mount_applied": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": {}
    },
    {
      "kind": "job",
      "metadata": {
        "name": "describe",
        "tag": "",
        "hash": "7b147b33e32e3c2cab350963994769af11528c3c",
        "project": "network-operations-admin",
        "labels": {
          "author": "Iguazio"
        },
        "categories": [
          "data-analysis"
        ],
        "updated": "2021-08-29T20:26:05.482411+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "summarize",
        "entry_points": {
          "summarize": {
            "name": "summarize",
            "doc": "Summarize a table",
            "parameters": [
              {
                "name": "context",
                "type": "MLClientCtx",
                "doc": "the function context",
                "default": ""
              },
              {
                "name": "table",
                "type": "DataItem",
                "doc": "MLRun input pointing to pandas dataframe (csv/parquet file path)",
                "default": ""
              },
              {
                "name": "label_column",
                "type": "str",
                "doc": "ground truth column label",
                "default": null
              },
              {
                "name": "class_labels",
                "type": "List[str]",
                "doc": "label for each class in tables and plots",
                "default": []
              },
              {
                "name": "plot_hist",
                "type": "bool",
                "doc": "(True) set this to False for large tables",
                "default": true
              },
              {
                "name": "plots_dest",
                "type": "str",
                "doc": "destination folder of summary plots (relative to artifact_path)",
                "default": "plots"
              },
              {
                "name": "update_dataset",
                "doc": "when the table is a registered dataset update the charts in-place",
                "default": false
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 23
          }
        },
        "description": "describe and visualizes dataset stats",
        "image_pull_policy": "Always",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHdhcm5pbmdzCgp3YXJuaW5ncy5zaW1wbGVmaWx0ZXIoYWN0aW9uPSJpZ25vcmUiLCBjYXRlZ29yeT1GdXR1cmVXYXJuaW5nKQoKaW1wb3J0IG9zCmltcG9ydCBudW1weSBhcyBucAppbXBvcnQgcGFuZGFzIGFzIHBkCmltcG9ydCBtYXRwbG90bGliLnB5cGxvdCBhcyBwbHQKaW1wb3J0IHNlYWJvcm4gYXMgc25zCgpmcm9tIG1scnVuLmV4ZWN1dGlvbiBpbXBvcnQgTUxDbGllbnRDdHgKZnJvbSBtbHJ1bi5kYXRhc3RvcmUgaW1wb3J0IERhdGFJdGVtCmZyb20gbWxydW4uYXJ0aWZhY3RzIGltcG9ydCBQbG90QXJ0aWZhY3QsIFRhYmxlQXJ0aWZhY3QKZnJvbSBtbHJ1bi5tbHV0aWxzLnBsb3RzIGltcG9ydCBnY2ZfY2xlYXIKCmZyb20gdHlwaW5nIGltcG9ydCBMaXN0CgpwZC5zZXRfb3B0aW9uKCJkaXNwbGF5LmZsb2F0X2Zvcm1hdCIsIGxhbWJkYSB4OiAiJS4yZiIgJSB4KQoKCmRlZiBzdW1tYXJpemUoCiAgICBjb250ZXh0OiBNTENsaWVudEN0eCwKICAgIHRhYmxlOiBEYXRhSXRlbSwKICAgIGxhYmVsX2NvbHVtbjogc3RyID0gTm9uZSwKICAgIGNsYXNzX2xhYmVsczogTGlzdFtzdHJdID0gW10sCiAgICBwbG90X2hpc3Q6IGJvb2wgPSBUcnVlLAogICAgcGxvdHNfZGVzdDogc3RyID0gInBsb3RzIiwKICAgIHVwZGF0ZV9kYXRhc2V0PUZhbHNlLAopIC0+IE5vbmU6CiAgICAiIiJTdW1tYXJpemUgYSB0YWJsZQoKICAgIDpwYXJhbSBjb250ZXh0OiAgICAgICAgIHRoZSBmdW5jdGlvbiBjb250ZXh0CiAgICA6cGFyYW0gdGFibGU6ICAgICAgICAgICBNTFJ1biBpbnB1dCBwb2ludGluZyB0byBwYW5kYXMgZGF0YWZyYW1lIChjc3YvcGFycXVldCBmaWxlIHBhdGgpCiAgICA6cGFyYW0gbGFiZWxfY29sdW1uOiAgICBncm91bmQgdHJ1dGggY29sdW1uIGxhYmVsCiAgICA6cGFyYW0gY2xhc3NfbGFiZWxzOiAgICBsYWJlbCBmb3IgZWFjaCBjbGFzcyBpbiB0YWJsZXMgYW5kIHBsb3RzCiAgICA6cGFyYW0gcGxvdF9oaXN0OiAgICAgICAoVHJ1ZSkgc2V0IHRoaXMgdG8gRmFsc2UgZm9yIGxhcmdlIHRhYmxlcwogICAgOnBhcmFtIHBsb3RzX2Rlc3Q6ICAgICAgZGVzdGluYXRpb24gZm9sZGVyIG9mIHN1bW1hcnkgcGxvdHMgKHJlbGF0aXZlIHRvIGFydGlmYWN0X3BhdGgpCiAgICA6cGFyYW0gdXBkYXRlX2RhdGFzZXQ6ICB3aGVuIHRoZSB0YWJsZSBpcyBhIHJlZ2lzdGVyZWQgZGF0YXNldCB1cGRhdGUgdGhlIGNoYXJ0cyBpbi1wbGFjZQogICAgIiIiCiAgICBkZiA9IHRhYmxlLmFzX2RmKCkKICAgIGhlYWRlciA9IGRmLmNvbHVtbnMudmFsdWVzCiAgICBleHRyYV9kYXRhID0ge30KCiAgICB0cnk6CiAgICAgICAgZ2NmX2NsZWFyKHBsdCkKICAgICAgICBzbnNwbHQgPSBzbnMucGFpcnBsb3QoZGYsIGh1ZT1sYWJlbF9jb2x1bW4pICAjICwgZGlhZ19rd3M9eyJidyI6IDEuNX0pCiAgICAgICAgZXh0cmFfZGF0YVsiaGlzdG9ncmFtcyJdID0gY29udGV4dC5sb2dfYXJ0aWZhY3QoCiAgICAgICAgICAgIFBsb3RBcnRpZmFjdCgiaGlzdG9ncmFtcyIsIGJvZHk9cGx0LmdjZigpKSwKICAgICAgICAgICAgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS9oaXN0Lmh0bWwiLAogICAgICAgICAgICBkYl9rZXk9RmFsc2UsCiAgICAgICAgKQogICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgIGNvbnRleHQubG9nZ2VyLmVycm9yKGYiRmFpbGVkIHRvIGNyZWF0ZSBwYWlycGxvdCBoaXN0b2dyYW1zIGR1ZSB0bzoge2V9IikKCiAgICB0cnk6CiAgICAgICAgZ2NmX2NsZWFyKHBsdCkKICAgICAgICBwbG90X2NvbHMgPSAzCiAgICAgICAgcGxvdF9yb3dzID0gaW50KChsZW4oaGVhZGVyKSAtIDEpIC8gcGxvdF9jb2xzKSArIDEKICAgICAgICBmaWcsIGF4ID0gcGx0LnN1YnBsb3RzKHBsb3Rfcm93cywgcGxvdF9jb2xzLCBmaWdzaXplPSgxNSwgNCkpCiAgICAgICAgZmlnLnRpZ2h0X2xheW91dChwYWQ9Mi4wKQogICAgICAgIGZvciBpIGluIHJhbmdlKHBsb3Rfcm93cyAqIHBsb3RfY29scyk6CiAgICAgICAgICAgIGlmIGkgPCBsZW4oaGVhZGVyKToKICAgICAgICAgICAgICAgIHNucy52aW9saW5wbG90KAogICAgICAgICAgICAgICAgICAgIHg9ZGZbaGVhZGVyW2ldXSwKICAgICAgICAgICAgICAgICAgICBheD1heFtpbnQoaSAvIHBsb3RfY29scyldW2kgJSBwbG90X2NvbHNdLAogICAgICAgICAgICAgICAgICAgIG9yaWVudD0iaCIsCiAgICAgICAgICAgICAgICAgICAgd2lkdGg9MC43LAogICAgICAgICAgICAgICAgICAgIGlubmVyPSJxdWFydGlsZSIsCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBmaWcuZGVsYXhlcyhheFtpbnQoaSAvIHBsb3RfY29scyldW2kgJSBwbG90X2NvbHNdKQogICAgICAgICAgICBpICs9IDEKICAgICAgICBleHRyYV9kYXRhWyJ2aW9saW4iXSA9IGNvbnRleHQubG9nX2FydGlmYWN0KAogICAgICAgICAgICBQbG90QXJ0aWZhY3QoInZpb2xpbiIsIGJvZHk9cGx0LmdjZigpLCB0aXRsZT0iVmlvbGluIFBsb3QiKSwKICAgICAgICAgICAgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS92aW9saW4uaHRtbCIsCiAgICAgICAgICAgIGRiX2tleT1GYWxzZSwKICAgICAgICApCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgY29udGV4dC5sb2dnZXIud2FybihmIkZhaWxlZCB0byBjcmVhdGUgdmlvbGluIGRpc3RyaWJ1dGlvbiBwbG90cyBkdWUgdG86IHtlfSIpCgogICAgaWYgbGFiZWxfY29sdW1uOgogICAgICAgIGxhYmVscyA9IGRmLnBvcChsYWJlbF9jb2x1bW4pCiAgICAgICAgaW1idGFibGUgPSBsYWJlbHMudmFsdWVfY291bnRzKG5vcm1hbGl6ZT1UcnVlKS5zb3J0X2luZGV4KCkKICAgICAgICB0cnk6CiAgICAgICAgICAgIGdjZl9jbGVhcihwbHQpCiAgICAgICAgICAgIGJhbGFuY2ViYXIgPSBpbWJ0YWJsZS5wbG90KGtpbmQ9ImJhciIsIHRpdGxlPSJjbGFzcyBpbWJhbGFuY2UgLSBsYWJlbHMiKQogICAgICAgICAgICBiYWxhbmNlYmFyLnNldF94bGFiZWwoImNsYXNzIikKICAgICAgICAgICAgYmFsYW5jZWJhci5zZXRfeWxhYmVsKCJwcm9wb3J0aW9uIG9mIHRvdGFsIikKICAgICAgICAgICAgZXh0cmFfZGF0YVsiaW1iYWxhbmNlIl0gPSBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICAgICAgICAgIFBsb3RBcnRpZmFjdCgiaW1iYWxhbmNlIiwgYm9keT1wbHQuZ2NmKCkpLAogICAgICAgICAgICAgICAgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS9pbWJhbGFuY2UuaHRtbCIsCiAgICAgICAgICAgICkKICAgICAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgICAgIGNvbnRleHQubG9nZ2VyLndhcm4oZiJGYWlsZWQgdG8gY3JlYXRlIGNsYXNzIGltYmFsYW5jZSBwbG90IGR1ZSB0bzoge2V9IikKICAgICAgICBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICAgICAgVGFibGVBcnRpZmFjdCgKICAgICAgICAgICAgICAgICJpbWJhbGFuY2Utd2VpZ2h0cy12ZWMiLCBkZj1wZC5EYXRhRnJhbWUoeyJ3ZWlnaHRzIjogaW1idGFibGV9KQogICAgICAgICAgICApLAogICAgICAgICAgICBsb2NhbF9wYXRoPWYie3Bsb3RzX2Rlc3R9L2ltYmFsYW5jZS13ZWlnaHRzLXZlYy5jc3YiLAogICAgICAgICAgICBkYl9rZXk9RmFsc2UsCiAgICAgICAgKQoKICAgIHRibGNvcnIgPSBkZi5jb3JyKCkKICAgIG1hc2sgPSBucC56ZXJvc19saWtlKHRibGNvcnIsIGR0eXBlPW5wLmJvb2wpCiAgICBtYXNrW25wLnRyaXVfaW5kaWNlc19mcm9tKG1hc2spXSA9IFRydWUKCiAgICBkZmNvcnIgPSBwZC5EYXRhRnJhbWUoZGF0YT10Ymxjb3JyLCBjb2x1bW5zPWhlYWRlciwgaW5kZXg9aGVhZGVyKQogICAgZGZjb3JyID0gZGZjb3JyW25wLmFyYW5nZShkZmNvcnIuc2hhcGVbMF0pWzosIE5vbmVdID4gbnAuYXJhbmdlKGRmY29yci5zaGFwZVsxXSldCiAgICBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICBUYWJsZUFydGlmYWN0KCJjb3JyZWxhdGlvbi1tYXRyaXgiLCBkZj10Ymxjb3JyLCB2aXNpYmxlPVRydWUpLAogICAgICAgIGxvY2FsX3BhdGg9ZiJ7cGxvdHNfZGVzdH0vY29ycmVsYXRpb24tbWF0cml4LmNzdiIsCiAgICAgICAgZGJfa2V5PUZhbHNlLAogICAgKQoKICAgIHRyeToKICAgICAgICBnY2ZfY2xlYXIocGx0KQogICAgICAgIGF4ID0gcGx0LmF4ZXMoKQogICAgICAgIHNucy5oZWF0bWFwKHRibGNvcnIsIGF4PWF4LCBtYXNrPW1hc2ssIGFubm90PUZhbHNlLCBjbWFwPXBsdC5jbS5SZWRzKQogICAgICAgIGF4LnNldF90aXRsZSgiZmVhdHVyZXMgY29ycmVsYXRpb24iKQogICAgICAgIGV4dHJhX2RhdGFbImNvcnJlbGF0aW9uIl0gPSBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICAgICAgUGxvdEFydGlmYWN0KCJjb3JyZWxhdGlvbiIsIGJvZHk9cGx0LmdjZigpLCB0aXRsZT0iQ29ycmVsYXRpb24gTWF0cml4IiksCiAgICAgICAgICAgIGxvY2FsX3BhdGg9ZiJ7cGxvdHNfZGVzdH0vY29yci5odG1sIiwKICAgICAgICAgICAgZGJfa2V5PUZhbHNlLAogICAgICAgICkKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICBjb250ZXh0LmxvZ2dlci53YXJuKGYiRmFpbGVkIHRvIGNyZWF0ZSBmZWF0dXJlcyBjb3JyZWxhdGlvbiBwbG90IGR1ZSB0bzoge2V9IikKCiAgICBnY2ZfY2xlYXIocGx0KQogICAgaWYgdXBkYXRlX2RhdGFzZXQgYW5kIHRhYmxlLm1ldGEgYW5kIHRhYmxlLm1ldGEua2luZCA9PSAiZGF0YXNldCI6CiAgICAgICAgZnJvbSBtbHJ1bi5hcnRpZmFjdHMgaW1wb3J0IHVwZGF0ZV9kYXRhc2V0X21ldGEKCiAgICAgICAgdXBkYXRlX2RhdGFzZXRfbWV0YSh0YWJsZS5tZXRhLCBleHRyYV9kYXRhPWV4dHJhX2RhdGEpCg==",
          "commands": []
        },
        "mount_applied": true,
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "describe",
        "tag": "latest",
        "hash": "aef3d57a14cfbfc9799f773024e6fd9e69bb482b",
        "project": "network-operations-admin",
        "labels": {
          "author": "Iguazio"
        },
        "categories": [
          "data-analysis"
        ],
        "updated": "2021-08-29T20:26:45.116926+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "summarize",
        "entry_points": {
          "summarize": {
            "name": "summarize",
            "doc": "Summarize a table",
            "parameters": [
              {
                "name": "context",
                "type": "MLClientCtx",
                "doc": "the function context",
                "default": ""
              },
              {
                "name": "table",
                "type": "DataItem",
                "doc": "MLRun input pointing to pandas dataframe (csv/parquet file path)",
                "default": ""
              },
              {
                "name": "label_column",
                "type": "str",
                "doc": "ground truth column label",
                "default": null
              },
              {
                "name": "class_labels",
                "type": "List[str]",
                "doc": "label for each class in tables and plots",
                "default": []
              },
              {
                "name": "plot_hist",
                "type": "bool",
                "doc": "(True) set this to False for large tables",
                "default": true
              },
              {
                "name": "plots_dest",
                "type": "str",
                "doc": "destination folder of summary plots (relative to artifact_path)",
                "default": "plots"
              },
              {
                "name": "update_dataset",
                "doc": "when the table is a registered dataset update the charts in-place",
                "default": false
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 23
          }
        },
        "description": "describe and visualizes dataset stats",
        "image_pull_policy": "Always",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHdhcm5pbmdzCgp3YXJuaW5ncy5zaW1wbGVmaWx0ZXIoYWN0aW9uPSJpZ25vcmUiLCBjYXRlZ29yeT1GdXR1cmVXYXJuaW5nKQoKaW1wb3J0IG9zCmltcG9ydCBudW1weSBhcyBucAppbXBvcnQgcGFuZGFzIGFzIHBkCmltcG9ydCBtYXRwbG90bGliLnB5cGxvdCBhcyBwbHQKaW1wb3J0IHNlYWJvcm4gYXMgc25zCgpmcm9tIG1scnVuLmV4ZWN1dGlvbiBpbXBvcnQgTUxDbGllbnRDdHgKZnJvbSBtbHJ1bi5kYXRhc3RvcmUgaW1wb3J0IERhdGFJdGVtCmZyb20gbWxydW4uYXJ0aWZhY3RzIGltcG9ydCBQbG90QXJ0aWZhY3QsIFRhYmxlQXJ0aWZhY3QKZnJvbSBtbHJ1bi5tbHV0aWxzLnBsb3RzIGltcG9ydCBnY2ZfY2xlYXIKCmZyb20gdHlwaW5nIGltcG9ydCBMaXN0CgpwZC5zZXRfb3B0aW9uKCJkaXNwbGF5LmZsb2F0X2Zvcm1hdCIsIGxhbWJkYSB4OiAiJS4yZiIgJSB4KQoKCmRlZiBzdW1tYXJpemUoCiAgICBjb250ZXh0OiBNTENsaWVudEN0eCwKICAgIHRhYmxlOiBEYXRhSXRlbSwKICAgIGxhYmVsX2NvbHVtbjogc3RyID0gTm9uZSwKICAgIGNsYXNzX2xhYmVsczogTGlzdFtzdHJdID0gW10sCiAgICBwbG90X2hpc3Q6IGJvb2wgPSBUcnVlLAogICAgcGxvdHNfZGVzdDogc3RyID0gInBsb3RzIiwKICAgIHVwZGF0ZV9kYXRhc2V0PUZhbHNlLAopIC0+IE5vbmU6CiAgICAiIiJTdW1tYXJpemUgYSB0YWJsZQoKICAgIDpwYXJhbSBjb250ZXh0OiAgICAgICAgIHRoZSBmdW5jdGlvbiBjb250ZXh0CiAgICA6cGFyYW0gdGFibGU6ICAgICAgICAgICBNTFJ1biBpbnB1dCBwb2ludGluZyB0byBwYW5kYXMgZGF0YWZyYW1lIChjc3YvcGFycXVldCBmaWxlIHBhdGgpCiAgICA6cGFyYW0gbGFiZWxfY29sdW1uOiAgICBncm91bmQgdHJ1dGggY29sdW1uIGxhYmVsCiAgICA6cGFyYW0gY2xhc3NfbGFiZWxzOiAgICBsYWJlbCBmb3IgZWFjaCBjbGFzcyBpbiB0YWJsZXMgYW5kIHBsb3RzCiAgICA6cGFyYW0gcGxvdF9oaXN0OiAgICAgICAoVHJ1ZSkgc2V0IHRoaXMgdG8gRmFsc2UgZm9yIGxhcmdlIHRhYmxlcwogICAgOnBhcmFtIHBsb3RzX2Rlc3Q6ICAgICAgZGVzdGluYXRpb24gZm9sZGVyIG9mIHN1bW1hcnkgcGxvdHMgKHJlbGF0aXZlIHRvIGFydGlmYWN0X3BhdGgpCiAgICA6cGFyYW0gdXBkYXRlX2RhdGFzZXQ6ICB3aGVuIHRoZSB0YWJsZSBpcyBhIHJlZ2lzdGVyZWQgZGF0YXNldCB1cGRhdGUgdGhlIGNoYXJ0cyBpbi1wbGFjZQogICAgIiIiCiAgICBkZiA9IHRhYmxlLmFzX2RmKCkKICAgIGhlYWRlciA9IGRmLmNvbHVtbnMudmFsdWVzCiAgICBleHRyYV9kYXRhID0ge30KCiAgICB0cnk6CiAgICAgICAgZ2NmX2NsZWFyKHBsdCkKICAgICAgICBzbnNwbHQgPSBzbnMucGFpcnBsb3QoZGYsIGh1ZT1sYWJlbF9jb2x1bW4pICAjICwgZGlhZ19rd3M9eyJidyI6IDEuNX0pCiAgICAgICAgZXh0cmFfZGF0YVsiaGlzdG9ncmFtcyJdID0gY29udGV4dC5sb2dfYXJ0aWZhY3QoCiAgICAgICAgICAgIFBsb3RBcnRpZmFjdCgiaGlzdG9ncmFtcyIsIGJvZHk9cGx0LmdjZigpKSwKICAgICAgICAgICAgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS9oaXN0Lmh0bWwiLAogICAgICAgICAgICBkYl9rZXk9RmFsc2UsCiAgICAgICAgKQogICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgIGNvbnRleHQubG9nZ2VyLmVycm9yKGYiRmFpbGVkIHRvIGNyZWF0ZSBwYWlycGxvdCBoaXN0b2dyYW1zIGR1ZSB0bzoge2V9IikKCiAgICB0cnk6CiAgICAgICAgZ2NmX2NsZWFyKHBsdCkKICAgICAgICBwbG90X2NvbHMgPSAzCiAgICAgICAgcGxvdF9yb3dzID0gaW50KChsZW4oaGVhZGVyKSAtIDEpIC8gcGxvdF9jb2xzKSArIDEKICAgICAgICBmaWcsIGF4ID0gcGx0LnN1YnBsb3RzKHBsb3Rfcm93cywgcGxvdF9jb2xzLCBmaWdzaXplPSgxNSwgNCkpCiAgICAgICAgZmlnLnRpZ2h0X2xheW91dChwYWQ9Mi4wKQogICAgICAgIGZvciBpIGluIHJhbmdlKHBsb3Rfcm93cyAqIHBsb3RfY29scyk6CiAgICAgICAgICAgIGlmIGkgPCBsZW4oaGVhZGVyKToKICAgICAgICAgICAgICAgIHNucy52aW9saW5wbG90KAogICAgICAgICAgICAgICAgICAgIHg9ZGZbaGVhZGVyW2ldXSwKICAgICAgICAgICAgICAgICAgICBheD1heFtpbnQoaSAvIHBsb3RfY29scyldW2kgJSBwbG90X2NvbHNdLAogICAgICAgICAgICAgICAgICAgIG9yaWVudD0iaCIsCiAgICAgICAgICAgICAgICAgICAgd2lkdGg9MC43LAogICAgICAgICAgICAgICAgICAgIGlubmVyPSJxdWFydGlsZSIsCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBmaWcuZGVsYXhlcyhheFtpbnQoaSAvIHBsb3RfY29scyldW2kgJSBwbG90X2NvbHNdKQogICAgICAgICAgICBpICs9IDEKICAgICAgICBleHRyYV9kYXRhWyJ2aW9saW4iXSA9IGNvbnRleHQubG9nX2FydGlmYWN0KAogICAgICAgICAgICBQbG90QXJ0aWZhY3QoInZpb2xpbiIsIGJvZHk9cGx0LmdjZigpLCB0aXRsZT0iVmlvbGluIFBsb3QiKSwKICAgICAgICAgICAgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS92aW9saW4uaHRtbCIsCiAgICAgICAgICAgIGRiX2tleT1GYWxzZSwKICAgICAgICApCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgY29udGV4dC5sb2dnZXIud2FybihmIkZhaWxlZCB0byBjcmVhdGUgdmlvbGluIGRpc3RyaWJ1dGlvbiBwbG90cyBkdWUgdG86IHtlfSIpCgogICAgaWYgbGFiZWxfY29sdW1uOgogICAgICAgIGxhYmVscyA9IGRmLnBvcChsYWJlbF9jb2x1bW4pCiAgICAgICAgaW1idGFibGUgPSBsYWJlbHMudmFsdWVfY291bnRzKG5vcm1hbGl6ZT1UcnVlKS5zb3J0X2luZGV4KCkKICAgICAgICB0cnk6CiAgICAgICAgICAgIGdjZl9jbGVhcihwbHQpCiAgICAgICAgICAgIGJhbGFuY2ViYXIgPSBpbWJ0YWJsZS5wbG90KGtpbmQ9ImJhciIsIHRpdGxlPSJjbGFzcyBpbWJhbGFuY2UgLSBsYWJlbHMiKQogICAgICAgICAgICBiYWxhbmNlYmFyLnNldF94bGFiZWwoImNsYXNzIikKICAgICAgICAgICAgYmFsYW5jZWJhci5zZXRfeWxhYmVsKCJwcm9wb3J0aW9uIG9mIHRvdGFsIikKICAgICAgICAgICAgZXh0cmFfZGF0YVsiaW1iYWxhbmNlIl0gPSBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICAgICAgICAgIFBsb3RBcnRpZmFjdCgiaW1iYWxhbmNlIiwgYm9keT1wbHQuZ2NmKCkpLAogICAgICAgICAgICAgICAgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS9pbWJhbGFuY2UuaHRtbCIsCiAgICAgICAgICAgICkKICAgICAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgICAgIGNvbnRleHQubG9nZ2VyLndhcm4oZiJGYWlsZWQgdG8gY3JlYXRlIGNsYXNzIGltYmFsYW5jZSBwbG90IGR1ZSB0bzoge2V9IikKICAgICAgICBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICAgICAgVGFibGVBcnRpZmFjdCgKICAgICAgICAgICAgICAgICJpbWJhbGFuY2Utd2VpZ2h0cy12ZWMiLCBkZj1wZC5EYXRhRnJhbWUoeyJ3ZWlnaHRzIjogaW1idGFibGV9KQogICAgICAgICAgICApLAogICAgICAgICAgICBsb2NhbF9wYXRoPWYie3Bsb3RzX2Rlc3R9L2ltYmFsYW5jZS13ZWlnaHRzLXZlYy5jc3YiLAogICAgICAgICAgICBkYl9rZXk9RmFsc2UsCiAgICAgICAgKQoKICAgIHRibGNvcnIgPSBkZi5jb3JyKCkKICAgIG1hc2sgPSBucC56ZXJvc19saWtlKHRibGNvcnIsIGR0eXBlPW5wLmJvb2wpCiAgICBtYXNrW25wLnRyaXVfaW5kaWNlc19mcm9tKG1hc2spXSA9IFRydWUKCiAgICBkZmNvcnIgPSBwZC5EYXRhRnJhbWUoZGF0YT10Ymxjb3JyLCBjb2x1bW5zPWhlYWRlciwgaW5kZXg9aGVhZGVyKQogICAgZGZjb3JyID0gZGZjb3JyW25wLmFyYW5nZShkZmNvcnIuc2hhcGVbMF0pWzosIE5vbmVdID4gbnAuYXJhbmdlKGRmY29yci5zaGFwZVsxXSldCiAgICBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICBUYWJsZUFydGlmYWN0KCJjb3JyZWxhdGlvbi1tYXRyaXgiLCBkZj10Ymxjb3JyLCB2aXNpYmxlPVRydWUpLAogICAgICAgIGxvY2FsX3BhdGg9ZiJ7cGxvdHNfZGVzdH0vY29ycmVsYXRpb24tbWF0cml4LmNzdiIsCiAgICAgICAgZGJfa2V5PUZhbHNlLAogICAgKQoKICAgIHRyeToKICAgICAgICBnY2ZfY2xlYXIocGx0KQogICAgICAgIGF4ID0gcGx0LmF4ZXMoKQogICAgICAgIHNucy5oZWF0bWFwKHRibGNvcnIsIGF4PWF4LCBtYXNrPW1hc2ssIGFubm90PUZhbHNlLCBjbWFwPXBsdC5jbS5SZWRzKQogICAgICAgIGF4LnNldF90aXRsZSgiZmVhdHVyZXMgY29ycmVsYXRpb24iKQogICAgICAgIGV4dHJhX2RhdGFbImNvcnJlbGF0aW9uIl0gPSBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICAgICAgUGxvdEFydGlmYWN0KCJjb3JyZWxhdGlvbiIsIGJvZHk9cGx0LmdjZigpLCB0aXRsZT0iQ29ycmVsYXRpb24gTWF0cml4IiksCiAgICAgICAgICAgIGxvY2FsX3BhdGg9ZiJ7cGxvdHNfZGVzdH0vY29yci5odG1sIiwKICAgICAgICAgICAgZGJfa2V5PUZhbHNlLAogICAgICAgICkKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICBjb250ZXh0LmxvZ2dlci53YXJuKGYiRmFpbGVkIHRvIGNyZWF0ZSBmZWF0dXJlcyBjb3JyZWxhdGlvbiBwbG90IGR1ZSB0bzoge2V9IikKCiAgICBnY2ZfY2xlYXIocGx0KQogICAgaWYgdXBkYXRlX2RhdGFzZXQgYW5kIHRhYmxlLm1ldGEgYW5kIHRhYmxlLm1ldGEua2luZCA9PSAiZGF0YXNldCI6CiAgICAgICAgZnJvbSBtbHJ1bi5hcnRpZmFjdHMgaW1wb3J0IHVwZGF0ZV9kYXRhc2V0X21ldGEKCiAgICAgICAgdXBkYXRlX2RhdGFzZXRfbWV0YSh0YWJsZS5tZXRhLCBleHRyYV9kYXRhPWV4dHJhX2RhdGEpCg==",
          "commands": []
        },
        "mount_applied": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": {}
    },
    {
      "kind": "job",
      "metadata": {
        "name": "feature-selection",
        "tag": "",
        "hash": "e5dbddc62c3a985f6ebbb30e3dab38d2c3526dfb",
        "project": "network-operations-admin",
        "categories": [],
        "updated": "2021-08-29T20:26:05.842196+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/ml-models",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "feature_selection",
        "entry_points": {
          "show_values_on_bars": {
            "name": "show_values_on_bars",
            "doc": "",
            "parameters": [
              {
                "name": "axs",
                "default": ""
              },
              {
                "name": "h_v",
                "default": "v"
              },
              {
                "name": "space",
                "default": 0.4
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 28
          },
          "plot_stat": {
            "name": "plot_stat",
            "doc": "",
            "parameters": [
              {
                "name": "context",
                "default": ""
              },
              {
                "name": "stat_name",
                "default": ""
              },
              {
                "name": "stat_df",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 50
          },
          "feature_selection": {
            "name": "feature_selection",
            "doc": "Applies selected feature selection statistical functions\nor models on our 'df_artifact'.\n\nEach statistical function or model will vote for it's best K selected features.\nIf a feature has >= 'min_votes' votes, it will be selected.",
            "parameters": [
              {
                "name": "context",
                "doc": "the function context.",
                "default": ""
              },
              {
                "name": "df_artifact",
                "default": ""
              },
              {
                "name": "k",
                "type": "int",
                "doc": "number of top features to select from each statistical function or model. ",
                "default": 5
              },
              {
                "name": "min_votes",
                "type": "float",
                "doc": "minimal number of votes (from a model or by statistical function) needed for a feature to be selected. Can be specified by percentage of votes or absolute number of votes. ",
                "default": 0.5
              },
              {
                "name": "label_column",
                "type": "str",
                "doc": "ground-truth (y) labels.",
                "default": null
              },
              {
                "name": "stat_filters",
                "type": "list",
                "doc": "statistical functions to apply to the features (from sklearn.feature_selection). ",
                "default": [
                  "f_classif",
                  "mutual_info_classif",
                  "chi2",
                  "f_regression"
                ]
              },
              {
                "name": "model_filters",
                "type": "dict",
                "doc": "models to use for feature evaluation, can be specified by model name (ex. LinearSVC), formalized json (contains 'CLASS', 'FIT', 'META') or a path to such json file. ",
                "default": {
                  "LinearSVC": "LinearSVC",
                  "LogisticRegression": "LogisticRegression",
                  "ExtraTreesClassifier": "ExtraTreesClassifier"
                }
              },
              {
                "name": "max_scaled_scores",
                "type": "bool",
                "doc": "produce feature scores table scaled with max_scaler.",
                "default": true
              },
              {
                "name": "sample_ratio",
                "type": "float",
                "doc": "percentage of the dataset the user whishes to compute the feature selection process on.",
                "default": null
              },
              {
                "name": "output_vector_name",
                "type": "float",
                "doc": "creates a new feature vector containing only the identifies features.",
                "default": null
              },
              {
                "name": "ignore_type_errors",
                "type": "bool",
                "doc": "skips datatypes that are neither float or int within the feature vector.",
                "default": false
              },
              {
                "name": "is_feature_vector",
                "type": "bool",
                "doc": "bool stating if the data is passed as a feature vector.",
                "default": false
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 74
          }
        },
        "description": "",
        "image_pull_policy": "Always",
        "build": {
          "functionSourceCode": "aW1wb3J0IHBhbmRhcyBhcyBwZAppbXBvcnQgbWF0cGxvdGxpYi5weXBsb3QgYXMgcGx0CmltcG9ydCBtbHJ1bi5mZWF0dXJlX3N0b3JlIGFzIGZzCmltcG9ydCBzZWFib3JuIGFzIHNucwppbXBvcnQgbnVtcHkgYXMgbnAKaW1wb3J0IG9zCmltcG9ydCBqc29uCmltcG9ydCBtbHJ1bgoKIyBGZWF0dXJlIHNlbGVjdGlvbiBzdHJhdGVnaWVzCmZyb20gc2tsZWFybi5mZWF0dXJlX3NlbGVjdGlvbiBpbXBvcnQgU2VsZWN0S0Jlc3QKZnJvbSBza2xlYXJuLmZlYXR1cmVfc2VsZWN0aW9uIGltcG9ydCBTZWxlY3RGcm9tTW9kZWwKZnJvbSBza2xlYXJuLmxpbmVhcl9tb2RlbCBpbXBvcnQgTG9naXN0aWNSZWdyZXNzaW9uCgojIFNjYWxlIGZlYXR1cmUgc2NvcmVzCmZyb20gc2tsZWFybi5wcmVwcm9jZXNzaW5nIGltcG9ydCBNaW5NYXhTY2FsZXIKCiMgU0tMZWFybiBlc3RpbWF0b3JzIGxpc3QKZnJvbSBza2xlYXJuLnV0aWxzIGltcG9ydCBhbGxfZXN0aW1hdG9ycwoKIyBNTFJ1biB1dGlscwpmcm9tIG1scnVuLm1sdXRpbHMucGxvdHMgaW1wb3J0IGdjZl9jbGVhcgpmcm9tIG1scnVuLnV0aWxzLmhlbHBlcnMgaW1wb3J0IGNyZWF0ZV9jbGFzcwpmcm9tIG1scnVuLmFydGlmYWN0cyBpbXBvcnQgUGxvdEFydGlmYWN0CmZyb20gbWxydW4uZGF0YXN0b3JlLnRhcmdldHMgaW1wb3J0IFBhcnF1ZXRUYXJnZXQKCgpkZWYgc2hvd192YWx1ZXNfb25fYmFycyhheHMsIGhfdj0idiIsIHNwYWNlPTAuNCk6CiAgICBkZWYgX3Nob3dfb25fc2luZ2xlX3Bsb3QoYXgpOgogICAgICAgIGlmIGhfdiA9PSAidiI6CiAgICAgICAgICAgIGZvciBwIGluIGF4LnBhdGNoZXM6CiAgICAgICAgICAgICAgICBfeCA9IHAuZ2V0X3goKSArIHAuZ2V0X3dpZHRoKCkgLyAyCiAgICAgICAgICAgICAgICBfeSA9IHAuZ2V0X3koKSArIHAuZ2V0X2hlaWdodCgpCiAgICAgICAgICAgICAgICB2YWx1ZSA9IGludChwLmdldF9oZWlnaHQoKSkKICAgICAgICAgICAgICAgIGF4LnRleHQoX3gsIF95LCB2YWx1ZSwgaGE9ImNlbnRlciIpCiAgICAgICAgZWxpZiBoX3YgPT0gImgiOgogICAgICAgICAgICBmb3IgcCBpbiBheC5wYXRjaGVzOgogICAgICAgICAgICAgICAgX3ggPSBwLmdldF94KCkgKyBwLmdldF93aWR0aCgpICsgZmxvYXQoc3BhY2UpCiAgICAgICAgICAgICAgICBfeSA9IHAuZ2V0X3koKSArIHAuZ2V0X2hlaWdodCgpCiAgICAgICAgICAgICAgICB2YWx1ZSA9IGludChwLmdldF93aWR0aCgpKQogICAgICAgICAgICAgICAgYXgudGV4dChfeCwgX3ksIHZhbHVlLCBoYT0ibGVmdCIpCgogICAgaWYgaXNpbnN0YW5jZShheHMsIG5wLm5kYXJyYXkpOgogICAgICAgIGZvciBpZHgsIGF4IGluIG5wLm5kZW51bWVyYXRlKGF4cyk6CiAgICAgICAgICAgIF9zaG93X29uX3NpbmdsZV9wbG90KGF4KQogICAgZWxzZToKICAgICAgICBfc2hvd19vbl9zaW5nbGVfcGxvdChheHMpCgoKZGVmIHBsb3Rfc3RhdChjb250ZXh0LAogICAgICAgICAgICAgIHN0YXRfbmFtZSwKICAgICAgICAgICAgICBzdGF0X2RmKToKICAgIGdjZl9jbGVhcihwbHQpCgogICAgIyBBZGQgY2hhcnQKICAgIGF4ID0gcGx0LmF4ZXMoKQogICAgc3RhdF9jaGFydCA9IHNucy5iYXJwbG90KHg9c3RhdF9uYW1lLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHk9J2luZGV4JywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhPXN0YXRfZGYuc29ydF92YWx1ZXMoc3RhdF9uYW1lLCBhc2NlbmRpbmc9RmFsc2UpLnJlc2V0X2luZGV4KCksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXg9YXgpCiAgICBwbHQudGlnaHRfbGF5b3V0KCkKCiAgICBmb3IgcCBpbiBzdGF0X2NoYXJ0LnBhdGNoZXM6CiAgICAgICAgd2lkdGggPSBwLmdldF93aWR0aCgpCiAgICAgICAgcGx0LnRleHQoNSArIHAuZ2V0X3dpZHRoKCksIHAuZ2V0X3koKSArIDAuNTUgKiBwLmdldF9oZWlnaHQoKSwKICAgICAgICAgICAgICAgICAnezoxLjJmfScuZm9ybWF0KHdpZHRoKSwKICAgICAgICAgICAgICAgICBoYT0nY2VudGVyJywgdmE9J2NlbnRlcicpCgogICAgY29udGV4dC5sb2dfYXJ0aWZhY3QoUGxvdEFydGlmYWN0KGYne3N0YXRfbmFtZX0nLCBib2R5PXBsdC5nY2YoKSksCiAgICAgICAgICAgICAgICAgICAgICAgICBsb2NhbF9wYXRoPW9zLnBhdGguam9pbigncGxvdHMnLCAnZmVhdHVyZV9zZWxlY3Rpb24nLCBmJ3tzdGF0X25hbWV9Lmh0bWwnKSkKICAgIGdjZl9jbGVhcihwbHQpCgoKZGVmIGZlYXR1cmVfc2VsZWN0aW9uKGNvbnRleHQsCiAgICAgICAgICAgICAgICAgICAgICBkZl9hcnRpZmFjdCwKICAgICAgICAgICAgICAgICAgICAgIGs6IGludD01LAogICAgICAgICAgICAgICAgICAgICAgbWluX3ZvdGVzOiBmbG9hdD0wLjUsCiAgICAgICAgICAgICAgICAgICAgICBsYWJlbF9jb2x1bW46IHN0cj1Ob25lLAogICAgICAgICAgICAgICAgICAgICAgc3RhdF9maWx0ZXJzOiBsaXN0PVsnZl9jbGFzc2lmJywgJ211dHVhbF9pbmZvX2NsYXNzaWYnLCAnY2hpMicsICdmX3JlZ3Jlc3Npb24nXSwKICAgICAgICAgICAgICAgICAgICAgIG1vZGVsX2ZpbHRlcnM6IGRpY3Q9eydMaW5lYXJTVkMnOiAnTGluZWFyU1ZDJywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdMb2dpc3RpY1JlZ3Jlc3Npb24nOiAnTG9naXN0aWNSZWdyZXNzaW9uJywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdFeHRyYVRyZWVzQ2xhc3NpZmllcic6ICdFeHRyYVRyZWVzQ2xhc3NpZmllcid9LAogICAgICAgICAgICAgICAgICAgICAgbWF4X3NjYWxlZF9zY29yZXM6IGJvb2w9VHJ1ZSwKICAgICAgICAgICAgICAgICAgICAgIHNhbXBsZV9yYXRpbzogZmxvYXQ9Tm9uZSwKICAgICAgICAgICAgICAgICAgICAgIG91dHB1dF92ZWN0b3JfbmFtZTogZmxvYXQ9Tm9uZSwKICAgICAgICAgICAgICAgICAgICAgIGlnbm9yZV90eXBlX2Vycm9yczogYm9vbD1GYWxzZSwKICAgICAgICAgICAgICAgICAgICAgIGlzX2ZlYXR1cmVfdmVjdG9yOiBib29sPUZhbHNlKToKICAgIAogICAgIiIiQXBwbGllcyBzZWxlY3RlZCBmZWF0dXJlIHNlbGVjdGlvbiBzdGF0aXN0aWNhbCBmdW5jdGlvbnMKICAgIG9yIG1vZGVscyBvbiBvdXIgJ2RmX2FydGlmYWN0Jy4KCiAgICBFYWNoIHN0YXRpc3RpY2FsIGZ1bmN0aW9uIG9yIG1vZGVsIHdpbGwgdm90ZSBmb3IgaXQncyBiZXN0IEsgc2VsZWN0ZWQgZmVhdHVyZXMuCiAgICBJZiBhIGZlYXR1cmUgaGFzID49ICdtaW5fdm90ZXMnIHZvdGVzLCBpdCB3aWxsIGJlIHNlbGVjdGVkLgoKICAgIDpwYXJhbSBjb250ZXh0OiAgICAgICAgICAgdGhlIGZ1bmN0aW9uIGNvbnRleHQuCiAgICAKICAgIDpwYXJhbSBrOiAgICAgICAgICAgICAgICAgbnVtYmVyIG9mIHRvcCBmZWF0dXJlcyB0byBzZWxlY3QgZnJvbSBlYWNoIHN0YXRpc3RpY2FsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uIG9yIG1vZGVsLgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgIDpwYXJhbSBtaW5fdm90ZXM6ICAgICAgICAgbWluaW1hbCBudW1iZXIgb2Ygdm90ZXMgKGZyb20gYSBtb2RlbCBvciBieSBzdGF0aXN0aWNhbAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbikgbmVlZGVkIGZvciBhIGZlYXR1cmUgdG8gYmUgc2VsZWN0ZWQuCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIENhbiBiZSBzcGVjaWZpZWQgYnkgcGVyY2VudGFnZSBvZiB2b3RlcyBvciBhYnNvbHV0ZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBudW1iZXIgb2Ygdm90ZXMuCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgOnBhcmFtIGxhYmVsX2NvbHVtbjogICAgICBncm91bmQtdHJ1dGggKHkpIGxhYmVscy4KICAgIAogICAgOnBhcmFtIHN0YXRfZmlsdGVyczogICAgICBzdGF0aXN0aWNhbCBmdW5jdGlvbnMgdG8gYXBwbHkgdG8gdGhlIGZlYXR1cmVzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChmcm9tIHNrbGVhcm4uZmVhdHVyZV9zZWxlY3Rpb24pLgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgIDpwYXJhbSBtb2RlbF9maWx0ZXJzOiAgICAgbW9kZWxzIHRvIHVzZSBmb3IgZmVhdHVyZSBldmFsdWF0aW9uLCBjYW4gYmUgc3BlY2lmaWVkIGJ5CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vZGVsIG5hbWUgKGV4LiBMaW5lYXJTVkMpLCBmb3JtYWxpemVkIGpzb24gKGNvbnRhaW5zICdDTEFTUycsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdGSVQnLCAnTUVUQScpIG9yIGEgcGF0aCB0byBzdWNoIGpzb24gZmlsZS4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICA6cGFyYW0gbWF4X3NjYWxlZF9zY29yZXM6IHByb2R1Y2UgZmVhdHVyZSBzY29yZXMgdGFibGUgc2NhbGVkIHdpdGggbWF4X3NjYWxlci4KCiAgICA6cGFyYW0gc2FtcGxlX3JhdGlvOiBwZXJjZW50YWdlIG9mIHRoZSBkYXRhc2V0IHRoZSB1c2VyIHdoaXNoZXMgdG8gY29tcHV0ZSB0aGUgZmVhdHVyZSBzZWxlY3Rpb24gcHJvY2VzcyBvbi4KICAgIAogICAgOnBhcmFtIG91dHB1dF92ZWN0b3JfbmFtZTogY3JlYXRlcyBhIG5ldyBmZWF0dXJlIHZlY3RvciBjb250YWluaW5nIG9ubHkgdGhlIGlkZW50aWZpZXMgZmVhdHVyZXMuCiAgICAKICAgIDpwYXJhbSBpZ25vcmVfdHlwZV9lcnJvcnM6IHNraXBzIGRhdGF0eXBlcyB0aGF0IGFyZSBuZWl0aGVyIGZsb2F0IG9yIGludCB3aXRoaW4gdGhlIGZlYXR1cmUgdmVjdG9yLgogICAgCiAgICA6cGFyYW0gaXNfZmVhdHVyZV92ZWN0b3I6IGJvb2wgc3RhdGluZyBpZiB0aGUgZGF0YSBpcyBwYXNzZWQgYXMgYSBmZWF0dXJlIHZlY3Rvci4KICAgICIiIgogICAgICAgIAogICAgIyBDaGVjayBpZiBkZi5tZXRhIGlzIHZhbGlkLCBpZiBpdCBpcywgbG9vayBmb3IgYSBmZWF0dXJlIHZlY3RvcgogICAgaWYgZGZfYXJ0aWZhY3QubWV0YToKICAgICAgICBpZiBkZl9hcnRpZmFjdC5tZXRhLmtpbmQgPT0gbWxydW4uYXBpLnNjaGVtYXMuT2JqZWN0S2luZC5mZWF0dXJlX3ZlY3RvcjoKICAgICAgICAgICAgaXNfZmVhdHVyZV92ZWN0b3IgPSBUcnVlCiAgICAKICAgICMgTG9vayBpbnNpZGUgbWV0YS5zcGVjLmxhYmVsX2ZlYXR1cmUgdG8gaWRlbnRpZnkgdGhlIGxhYmVsX2NvbHVtbiBpZiB0aGUgdXNlciBkaWQgbm90IHNwZWNpZnkgaXQKICAgIGlmIGxhYmVsX2NvbHVtbiBpcyBOb25lOgogICAgICAgIGlmIGlzX2ZlYXR1cmVfdmVjdG9yOgogICAgICAgICAgICBsYWJlbF9jb2x1bW4gPSBkZl9hcnRpZmFjdC5tZXRhLnNwZWMubGFiZWxfZmVhdHVyZS5zcGxpdCgnLicpWzFdCiAgICAgICAgZWxzZToKICAgICAgICAgICAgcmFpc2UgVmFsdWVFcnJvcignTm8gbGFiZWxfY29sdW1uIHdhcyBnaXZlbiwgcGxlYXNlIGFkZCBhIGxhYmVsX2NvbHVtbi4nKQogICAgCiAgICAjIFVzZSB0aGUgZmVhdHVyZSB2ZWN0b3IgYXMgZGF0YWZyYW1lCiAgICBkZiA9IGRmX2FydGlmYWN0LmFzX2RmKCkKICAgIAogICAgIyBFbnN1cmUgayBpcyBub3QgYmlnZ2VyIHRoYW4gdGhlIHRoZSB0b3RhbCBudW1iZXIgb2YgZmVhdHVyZXMKICAgIGlmIGsgPiBkZi5zaGFwZVsxXToKICAgICAgICByYWlzZSBWYWx1ZUVycm9yKGYnSyBjYW5ub3QgYmUgYmlnZ2VyIHRoYW4gdGhlIHRvdGFsIG51bWJlciBvZiBmZWF0dXJlcyAoe2RmLnNoYXBlWzFdfSkuIFBsZWFzZSBjaG9vc2UgYSBzbWFsbGVyIEsuJykKICAgIGVsaWYgayA8IDE6CiAgICAgICAgcmFpc2UgVmFsdWVFcnJvcihmJ0sgY2Fubm90IGJlIHNtYWxsZXIgdGhhbiAxLiBQbGVhc2UgY2hvb3NlIGEgYmlnZ2VyIEsuJykKICAgICAgICAKICAgICMgQ3JlYXRlIGEgc2FtcGxlIGRhdGFmcmFtZSBvZiB0aGUgb3JpZ2luYWwgZmVhdHVyZSB2ZWN0b3IKICAgIGlmIHNhbXBsZV9yYXRpbzoKICAgICAgICBkZiA9IGRmLmdyb3VwYnkobGFiZWxfY29sdW1uKS5hcHBseShsYW1iZGEgeDogeC5zYW1wbGUoZnJhYz1zYW1wbGVfcmF0aW8pKS5yZXNldF9pbmRleChkcm9wPVRydWUpCiAgICAgICAgZGYgPSBkZi5kcm9wbmEoKQogICAgICAgIAogICAgIyBTZXQgZmVhdHVyZSB2ZWN0b3IgYW5kIGxhYmVscwogICAgeSA9IGRmLnBvcChsYWJlbF9jb2x1bW4pCiAgICBYID0gZGYKICAgIAogICAgaWYgbnAub2JqZWN0IGluIGxpc3QoWC5kdHlwZXMpIGFuZCBpZ25vcmVfdHlwZV9lcnJvcnMgaXMgRmFsc2U6CiAgICAgICAgcmFpc2UgVmFsdWVFcnJvcihmImZlYXR1cmUgY29sdW1uKHMpIHtkZi5zZWxlY3RfZHR5cGVzKGluY2x1ZGU9WydvYmplY3QnXSkuY29sdW1ucy50b2xpc3QoKX0gbmVpdGhlciBmbG9hdCBvciBpbnQuIEZlYXR1cmUgc2VsZWN0aW9uIG5vdCBhcHBsaWNhYmxlLiAiKQogICAgICAgIAogICAgIyBDcmVhdGUgc2VsZWN0ZWQgc3RhdGlzdGljYWwgZXN0aW1hdG9ycwogICAgc3RhdF9mdW5jdGlvbnNfbGlzdCA9IHtzdGF0X25hbWU6IFNlbGVjdEtCZXN0KGNyZWF0ZV9jbGFzcyhmJ3NrbGVhcm4uZmVhdHVyZV9zZWxlY3Rpb24ue3N0YXRfbmFtZX0nKSwgaykKICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yIHN0YXRfbmFtZSBpbiBzdGF0X2ZpbHRlcnN9CiAgICByZXF1aXJlc19hYnMgPSBbJ2NoaTInXQoKICAgICMgUnVuIHN0YXRpc3RpYyBmaWx0ZXJzCiAgICBzZWxlY3RlZF9mZWF0dXJlc19hZ2cgPSB7fQogICAgc3RhdHNfZGYgPSBwZC5EYXRhRnJhbWUoaW5kZXg9WC5jb2x1bW5zKS5kcm9wbmEoKQogICAgICAgICAgICAgICAgCiAgICBmb3Igc3RhdF9uYW1lLCBzdGF0X2Z1bmMgaW4gc3RhdF9mdW5jdGlvbnNfbGlzdC5pdGVtcygpOgogICAgICAgIHRyeToKICAgICAgICAgICAgcGFyYW1zID0gKFgsIHkpIGlmIHN0YXRfbmFtZSBpbiByZXF1aXJlc19hYnMgZWxzZSAoYWJzKFgpLCB5KQogICAgICAgICAgICBzdGF0ID0gc3RhdF9mdW5jLmZpdCgqcGFyYW1zKQoKICAgICAgICAgICAgIyBDb2xsZWN0IHN0YXQgZnVuY3Rpb24gcmVzdWx0cwogICAgICAgICAgICBzdGF0X2RmID0gcGQuRGF0YUZyYW1lKGluZGV4PVguY29sdW1ucywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2x1bW5zPVtzdGF0X25hbWVdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE9c3RhdC5zY29yZXNfKQogICAgICAgICAgICBwbG90X3N0YXQoY29udGV4dCwgc3RhdF9uYW1lLCBzdGF0X2RmKQogICAgICAgICAgICBzdGF0c19kZiA9IHN0YXRzX2RmLmpvaW4oc3RhdF9kZikKCiAgICAgICAgICAgICMgU2VsZWN0IEsgQmVzdCBmZWF0dXJlcwogICAgICAgICAgICBzZWxlY3RlZF9mZWF0dXJlcyA9IFguY29sdW1uc1tzdGF0X2Z1bmMuZ2V0X3N1cHBvcnQoKV0KICAgICAgICAgICAgc2VsZWN0ZWRfZmVhdHVyZXNfYWdnW3N0YXRfbmFtZV0gPSBzZWxlY3RlZF9mZWF0dXJlcwogICAgICAgICAgICAKICAgICAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgICAgIGNvbnRleHQubG9nZ2VyLmluZm8oZiJDb3VsZG4ndCBjYWxjdWxhdGUge3N0YXRfbmFtZX0gYmVjYXVzZSBvZjoge2V9IikKCiAgICAjIENyZWF0ZSBtb2RlbHMgZnJvbSBjbGFzcyBuYW1lIC8ganNvbiBmaWxlIC8ganNvbiBwYXJhbXMKICAgIGFsbF9za2xlYXJuX2VzdGltYXRvcnMgPSBkaWN0KGFsbF9lc3RpbWF0b3JzKCkpIGlmIGxlbihtb2RlbF9maWx0ZXJzKSA+IDAgZWxzZSB7fQogICAgc2VsZWN0ZWRfbW9kZWxzID0ge30KICAgIGZvciBtb2RlbF9uYW1lLCBtb2RlbCBpbiBtb2RlbF9maWx0ZXJzLml0ZW1zKCk6CiAgICAgICAgaWYgJy5qc29uJyBpbiBtb2RlbDoKICAgICAgICAgICAgY3VycmVudF9tb2RlbCA9IGpzb24ubG9hZChvcGVuKG1vZGVsLCAncicpKQogICAgICAgICAgICBDbGFzc2lmaWVyQ2xhc3MgPSBjcmVhdGVfY2xhc3MoY3VycmVudF9tb2RlbFsiTUVUQSJdWyJjbGFzcyJdKQogICAgICAgICAgICBzZWxlY3RlZF9tb2RlbHNbbW9kZWxfbmFtZV0gPSBDbGFzc2lmaWVyQ2xhc3MoKipjdXJyZW50X21vZGVsWyJDTEFTUyJdKQogICAgICAgIGVsaWYgbW9kZWwgaW4gYWxsX3NrbGVhcm5fZXN0aW1hdG9yczoKICAgICAgICAgICAgc2VsZWN0ZWRfbW9kZWxzW21vZGVsX25hbWVdID0gYWxsX3NrbGVhcm5fZXN0aW1hdG9yc1ttb2RlbF9uYW1lXSgpCiAgICAgICAgICAgIAogICAgICAgIGVsc2U6CiAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgIGN1cnJlbnRfbW9kZWwgPSBqc29uLmxvYWRzKG1vZGVsKSBpZiBpc2luc3RhbmNlKG1vZGVsLCBzdHIpIGVsc2UgY3VycmVudF9tb2RlbAogICAgICAgICAgICAgICAgQ2xhc3NpZmllckNsYXNzID0gY3JlYXRlX2NsYXNzKGN1cnJlbnRfbW9kZWxbIk1FVEEiXVsiY2xhc3MiXSkKICAgICAgICAgICAgICAgIHNlbGVjdGVkX21vZGVsc1ttb2RlbF9uYW1lXSA9IENsYXNzaWZpZXJDbGFzcygqKmN1cnJlbnRfbW9kZWxbIkNMQVNTIl0pCiAgICAgICAgICAgIGV4Y2VwdDoKICAgICAgICAgICAgICAgIGNvbnRleHQubG9nZ2VyLmluZm8oZid1bmFibGUgdG8gbG9hZCB7bW9kZWx9JykKCiAgICAjIFJ1biBtb2RlbCBmaWx0ZXJzCiAgICBtb2RlbHNfZGYgPSBwZC5EYXRhRnJhbWUoaW5kZXg9WC5jb2x1bW5zKQogICAgZm9yIG1vZGVsX25hbWUsIG1vZGVsIGluIHNlbGVjdGVkX21vZGVscy5pdGVtcygpOgogICAgICAgIAoKICAgICAgICBpZiBtb2RlbF9uYW1lID09ICdMb2dpc3RpY1JlZ3Jlc3Npb24nOgogICAgICAgICAgICBtb2RlbC5zZXRfcGFyYW1zKHNvbHZlcj0nbGlibGluZWFyJykKICAgICAgICAgICAgCiAgICAgICAgIyBUcmFpbiBtb2RlbCBhbmQgZ2V0IGZlYXR1cmUgaW1wb3J0YW5jZQogICAgICAgIHNlbGVjdF9mcm9tX21vZGVsID0gU2VsZWN0RnJvbU1vZGVsKG1vZGVsKS5maXQoWCwgeSkKICAgICAgICBmZWF0dXJlX2lkeCA9IHNlbGVjdF9mcm9tX21vZGVsLmdldF9zdXBwb3J0KCkKICAgICAgICBmZWF0dXJlX25hbWVzID0gWC5jb2x1bW5zW2ZlYXR1cmVfaWR4XQogICAgICAgIHNlbGVjdGVkX2ZlYXR1cmVzX2FnZ1ttb2RlbF9uYW1lXSA9IGZlYXR1cmVfbmFtZXMudG9saXN0KCkKCiAgICAgICAgIyBDb2xsZWN0IG1vZGVsIGZlYXR1cmUgaW1wb3J0YW5jZQogICAgICAgIGlmIGhhc2F0dHIoc2VsZWN0X2Zyb21fbW9kZWwuZXN0aW1hdG9yXywgJ2NvZWZfJyk6CiAgICAgICAgICAgIHN0YXRfZGYgPSBzZWxlY3RfZnJvbV9tb2RlbC5lc3RpbWF0b3JfLmNvZWZfCiAgICAgICAgZWxpZiBoYXNhdHRyKHNlbGVjdF9mcm9tX21vZGVsLmVzdGltYXRvcl8sICdmZWF0dXJlX2ltcG9ydGFuY2VzXycpOgogICAgICAgICAgICBzdGF0X2RmID0gc2VsZWN0X2Zyb21fbW9kZWwuZXN0aW1hdG9yXy5mZWF0dXJlX2ltcG9ydGFuY2VzXwoKICAgICAgICBzdGF0X2RmID0gcGQuRGF0YUZyYW1lKGluZGV4PVguY29sdW1ucywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbHVtbnM9W21vZGVsX25hbWVdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YT1zdGF0X2RmWzBdKQogICAgICAgIG1vZGVsc19kZiA9IG1vZGVsc19kZi5qb2luKHN0YXRfZGYpCgogICAgICAgIHBsb3Rfc3RhdChjb250ZXh0LCBtb2RlbF9uYW1lLCBzdGF0X2RmKQoKICAgICMgQ3JlYXRlIGZlYXR1cmVfc2NvcmVzIERGIHdpdGggc3RhdCAmIG1vZGVsIGZpbHRlcnMgc2NvcmVzCiAgICByZXN1bHRfbWF0cml4X2RmID0gcGQuY29uY2F0KFtzdGF0c19kZiwgbW9kZWxzX2RmXSwgYXhpcz0xLCBzb3J0PUZhbHNlKQogICAgY29udGV4dC5sb2dfZGF0YXNldChrZXk9J2ZlYXR1cmVfc2NvcmVzJywKICAgICAgICAgICAgICAgICAgICAgICAgZGY9cmVzdWx0X21hdHJpeF9kZiwKICAgICAgICAgICAgICAgICAgICAgICAgbG9jYWxfcGF0aD0nZmVhdHVyZV9zY29yZXMucGFycXVldCcsCiAgICAgICAgICAgICAgICAgICAgICAgIGZvcm1hdD0ncGFycXVldCcpCiAgICBpZiBtYXhfc2NhbGVkX3Njb3JlczoKICAgICAgICBub3JtYWxpemVkX2RmID0gcmVzdWx0X21hdHJpeF9kZi5yZXBsYWNlKFtucC5pbmYsIC1ucC5pbmZdLCBucC5uYW4pLnZhbHVlcwogICAgICAgIG1pbl9tYXhfc2NhbGVyID0gTWluTWF4U2NhbGVyKCkKICAgICAgICBub3JtYWxpemVkX2RmID0gbWluX21heF9zY2FsZXIuZml0X3RyYW5zZm9ybShub3JtYWxpemVkX2RmKQogICAgICAgIG5vcm1hbGl6ZWRfZGYgPSBwZC5EYXRhRnJhbWUoZGF0YT1ub3JtYWxpemVkX2RmLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sdW1ucz1yZXN1bHRfbWF0cml4X2RmLmNvbHVtbnMsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbmRleD1yZXN1bHRfbWF0cml4X2RmLmluZGV4KQogICAgICAgIGNvbnRleHQubG9nX2RhdGFzZXQoa2V5PSdtYXhfc2NhbGVkX3Njb3Jlc19mZWF0dXJlX3Njb3JlcycsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZj1ub3JtYWxpemVkX2RmLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgbG9jYWxfcGF0aD0nbWF4X3NjYWxlZF9zY29yZXNfZmVhdHVyZV9zY29yZXMucGFycXVldCcsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3JtYXQ9J3BhcnF1ZXQnKQoKICAgICMgQ3JlYXRlIGZlYXR1cmUgY291bnQgRGF0YUZyYW1lCiAgICBmb3IgdGVzdF9uYW1lIGluIHNlbGVjdGVkX2ZlYXR1cmVzX2FnZzoKICAgICAgICByZXN1bHRfbWF0cml4X2RmW3Rlc3RfbmFtZV0gPSBbMSBpZiB4IGluIHNlbGVjdGVkX2ZlYXR1cmVzX2FnZ1t0ZXN0X25hbWVdIGVsc2UgMCBmb3IgeCBpbiBYLmNvbHVtbnNdCiAgICByZXN1bHRfbWF0cml4X2RmLmxvY1s6LCAnbnVtX3ZvdGVzJ10gPSByZXN1bHRfbWF0cml4X2RmLnN1bShheGlzPTEpCiAgICBjb250ZXh0LmxvZ19kYXRhc2V0KGtleT0nc2VsZWN0ZWRfZmVhdHVyZXNfY291bnQnLAogICAgICAgICAgICAgICAgICAgICAgICBkZj1yZXN1bHRfbWF0cml4X2RmLAogICAgICAgICAgICAgICAgICAgICAgICBsb2NhbF9wYXRoPSdzZWxlY3RlZF9mZWF0dXJlc19jb3VudC5wYXJxdWV0JywKICAgICAgICAgICAgICAgICAgICAgICAgZm9ybWF0PSdwYXJxdWV0JykKCiAgICAjIEhvdyBtYW55IHZvdGVzIGFyZSBuZWVkZWQgZm9yIGEgZmVhdHVyZSB0byBiZSBzZWxlY3RlZD8KICAgIGlmIGlzaW5zdGFuY2UobWluX3ZvdGVzLCBpbnQpOgogICAgICAgIHZvdGVzX25lZWRlZCA9IG1pbl92b3RlcwogICAgZWxzZToKICAgICAgICBudW1fZmlsdGVycyA9IGxlbihzdGF0X2ZpbHRlcnMpICsgbGVuKG1vZGVsX2ZpbHRlcnMpCiAgICAgICAgdm90ZXNfbmVlZGVkID0gaW50KG5wLmZsb29yKG51bV9maWx0ZXJzICogbWF4KG1pbihtaW5fdm90ZXMsIDEpLCAwKSkpCiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKGYndm90ZXMgbmVlZGVkIHRvIGJlIHNlbGVjdGVkOiB7dm90ZXNfbmVlZGVkfScpCgogICAgIyBDcmVhdGUgZmluYWwgZmVhdHVyZSBkYXRhZnJhbWUKICAgIHNlbGVjdGVkX2ZlYXR1cmVzID0gcmVzdWx0X21hdHJpeF9kZltyZXN1bHRfbWF0cml4X2RmLm51bV92b3RlcyA+PSB2b3Rlc19uZWVkZWRdLmluZGV4LnRvbGlzdCgpCiAgICBnb29kX2ZlYXR1cmVfZGYgPSBkZi5sb2NbOiwgc2VsZWN0ZWRfZmVhdHVyZXNdCiAgICBmaW5hbF9kZiA9IHBkLmNvbmNhdChbZ29vZF9mZWF0dXJlX2RmLCB5XSwgYXhpcz0xKQogICAgY29udGV4dC5sb2dfZGF0YXNldChrZXk9J3NlbGVjdGVkX2ZlYXR1cmVzJywKICAgICAgICAgICAgICAgICAgICAgICAgZGY9ZmluYWxfZGYsCiAgICAgICAgICAgICAgICAgICAgICAgIGxvY2FsX3BhdGg9J3NlbGVjdGVkX2ZlYXR1cmVzLnBhcnF1ZXQnLAogICAgICAgICAgICAgICAgICAgICAgICBmb3JtYXQ9J3BhcnF1ZXQnKQogICAgCiAgICAjIENyZWF0aW5nIGEgbmV3IGZlYXR1cmUgdmVjdG9yIGNvbnRhaW5pbmcgb25seSB0aGUgaWRlbnRpZmllZCB0b3AgZmVhdHVyZXMKICAgIGlmIGlzX2ZlYXR1cmVfdmVjdG9yIGFuZCBkZl9hcnRpZmFjdC5tZXRhLnNwZWMuZmVhdHVyZXMgYW5kIG91dHB1dF92ZWN0b3JfbmFtZToKCiAgICAgICAgIyBTZWxlY3RpbmcgdGhlIHRvcCBLIGZlYXR1cmVzIGZyb20gb3VyIHRvcCBmZWF0dXJlIGRhdGFmcmFtZQogICAgICAgIHNlbGVjdGVkX2ZlYXR1cmVzID0gcmVzdWx0X21hdHJpeF9kZi5oZWFkKGspLmluZGV4CgogICAgICAgICMgTWF0Y2ggdGhlIHNlbGVjdGVkIGZlYXR1cmUgbmFtZXMgdG8gdGhlIEZTIEZlYXR1cmUgYW5ub3RhdGlvbnMKICAgICAgICBtYXRjaGVkX3NlbGVjdGlvbnMgPSBbZmVhdHVyZSBmb3IgZmVhdHVyZSBpbiBsaXN0KGRmX2FydGlmYWN0Lm1ldGEuc3BlYy5mZWF0dXJlcykgZm9yIHNlbGVjdGVkIGluIGxpc3Qoc2VsZWN0ZWRfZmVhdHVyZXMpIGlmIGZlYXR1cmUuZW5kc3dpdGgoc2VsZWN0ZWQpXQoKICAgICAgICAjIERlZmluaW5nIG91ciBuZXcgZmVhdHVyZSB2ZWN0b3IKICAgICAgICB0b3BfZmVhdHVyZXNfZnYgPSBmcy5GZWF0dXJlVmVjdG9yKG91dHB1dF92ZWN0b3JfbmFtZSwgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hdGNoZWRfc2VsZWN0aW9ucywgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsX2ZlYXR1cmU9ImxhYmVscy5sYWJlbCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uPSdmZWF0dXJlIHZlY3RvciBjb21wb3NlZCBzdHJpY3RseSBvZiBvdXIgdG9wIGZlYXR1cmVzJykKCiAgICAgICAgIyBTYXZpbmcKICAgICAgICB0b3BfZmVhdHVyZXNfZnYuc2F2ZSgpCiAgICAgICAgZnMuZ2V0X29mZmxpbmVfZmVhdHVyZXModG9wX2ZlYXR1cmVzX2Z2LCB0YXJnZXQ9UGFycXVldFRhcmdldCgpKQoKICAgICAgICAjIExvZ2dpbmcgb3VyIG5ldyBmZWF0dXJlIHZlY3RvciBVUkkKICAgICAgICBjb250ZXh0LmxvZ19yZXN1bHQoJ3RvcF9mZWF0dXJlc192ZWN0b3InLCB0b3BfZmVhdHVyZXNfZnYudXJpKQ==",
          "commands": [],
          "origin_filename": "feature_selection.py"
        },
        "mount_applied": true,
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "feature-selection",
        "tag": "latest",
        "hash": "137afa676b38faa7e33a10880401e31fcb18ff16",
        "project": "network-operations-admin",
        "categories": [],
        "updated": "2021-08-29T20:26:06.413783+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/ml-models",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "feature_selection",
        "entry_points": {
          "show_values_on_bars": {
            "name": "show_values_on_bars",
            "doc": "",
            "parameters": [
              {
                "name": "axs",
                "default": ""
              },
              {
                "name": "h_v",
                "default": "v"
              },
              {
                "name": "space",
                "default": 0.4
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 28
          },
          "plot_stat": {
            "name": "plot_stat",
            "doc": "",
            "parameters": [
              {
                "name": "context",
                "default": ""
              },
              {
                "name": "stat_name",
                "default": ""
              },
              {
                "name": "stat_df",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 50
          },
          "feature_selection": {
            "name": "feature_selection",
            "doc": "Applies selected feature selection statistical functions\nor models on our 'df_artifact'.\n\nEach statistical function or model will vote for it's best K selected features.\nIf a feature has >= 'min_votes' votes, it will be selected.",
            "parameters": [
              {
                "name": "context",
                "doc": "the function context.",
                "default": ""
              },
              {
                "name": "df_artifact",
                "default": ""
              },
              {
                "name": "k",
                "type": "int",
                "doc": "number of top features to select from each statistical function or model. ",
                "default": 5
              },
              {
                "name": "min_votes",
                "type": "float",
                "doc": "minimal number of votes (from a model or by statistical function) needed for a feature to be selected. Can be specified by percentage of votes or absolute number of votes. ",
                "default": 0.5
              },
              {
                "name": "label_column",
                "type": "str",
                "doc": "ground-truth (y) labels.",
                "default": null
              },
              {
                "name": "stat_filters",
                "type": "list",
                "doc": "statistical functions to apply to the features (from sklearn.feature_selection). ",
                "default": [
                  "f_classif",
                  "mutual_info_classif",
                  "chi2",
                  "f_regression"
                ]
              },
              {
                "name": "model_filters",
                "type": "dict",
                "doc": "models to use for feature evaluation, can be specified by model name (ex. LinearSVC), formalized json (contains 'CLASS', 'FIT', 'META') or a path to such json file. ",
                "default": {
                  "LinearSVC": "LinearSVC",
                  "LogisticRegression": "LogisticRegression",
                  "ExtraTreesClassifier": "ExtraTreesClassifier"
                }
              },
              {
                "name": "max_scaled_scores",
                "type": "bool",
                "doc": "produce feature scores table scaled with max_scaler.",
                "default": true
              },
              {
                "name": "sample_ratio",
                "type": "float",
                "doc": "percentage of the dataset the user whishes to compute the feature selection process on.",
                "default": null
              },
              {
                "name": "output_vector_name",
                "type": "float",
                "doc": "creates a new feature vector containing only the identifies features.",
                "default": null
              },
              {
                "name": "ignore_type_errors",
                "type": "bool",
                "doc": "skips datatypes that are neither float or int within the feature vector.",
                "default": false
              },
              {
                "name": "is_feature_vector",
                "type": "bool",
                "doc": "bool stating if the data is passed as a feature vector.",
                "default": false
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 74
          }
        },
        "description": "",
        "image_pull_policy": "Always",
        "build": {
          "functionSourceCode": "",
          "commands": [],
          "origin_filename": "feature_selection.py"
        },
        "mount_applied": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": {}
    },
    {
      "kind": "job",
      "metadata": {
        "name": "sklearn-classifier",
        "tag": "",
        "hash": "e096126a5130d0bf7c601bd21d6644bea22141ee",
        "project": "network-operations-admin",
        "labels": {
          "author": "yjb",
          "framework": "sklearn"
        },
        "categories": [
          "machine-learning",
          "model-training"
        ],
        "updated": "2021-08-29T20:26:44.981639+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/ml-models",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "train_model",
        "entry_points": {
          "train_model": {
            "name": "train_model",
            "doc": "train a classifier\n\nAn optional cutom model evaluator can be supplied that should have the signature:\n`my_custom_evaluator(context, xvalid, yvalid, model)` and return a dictionary of\nscalar \"results\", a \"plots\" keys with a list of PlotArtifacts, and\nand \"tables\" key containing a returned list of TableArtifacts.",
            "parameters": [
              {
                "name": "context",
                "type": "MLClientCtx",
                "doc": "the function context",
                "default": ""
              },
              {
                "name": "model_pkg_class",
                "type": "str",
                "doc": "the model to train, e.g, \"sklearn.neural_networks.MLPClassifier\", or json model config",
                "default": ""
              },
              {
                "name": "dataset",
                "type": "DataItem",
                "doc": "(\"data\") name of raw data file",
                "default": ""
              },
              {
                "name": "label_column",
                "type": "str",
                "doc": "ground-truth (y) labels",
                "default": "labels"
              },
              {
                "name": "encode_cols",
                "type": "List[str]",
                "doc": "dictionary of names and prefixes for columns that are to hot be encoded.",
                "default": []
              },
              {
                "name": "sample",
                "type": "int",
                "doc": "Selects the first n rows, or select a sample starting from the first. If negative <-1, select a random sample",
                "default": "<_ast.USub object at 0x7fd86dbc17b8>"
              },
              {
                "name": "test_size",
                "type": "float",
                "doc": "(0.05) test set size",
                "default": 0.3
              },
              {
                "name": "train_val_split",
                "type": "float",
                "doc": "(0.75) Once the test set has been removed the training set gets this proportion.",
                "default": 0.7
              },
              {
                "name": "test_set_key",
                "type": "str",
                "doc": "key of held out data in artifact store",
                "default": "test_set"
              },
              {
                "name": "model_evaluator",
                "doc": "(None) a custom model evaluator can be specified",
                "default": null
              },
              {
                "name": "models_dest",
                "type": "str",
                "doc": "(\"\") models subfolder on artifact path",
                "default": ""
              },
              {
                "name": "plots_dest",
                "type": "str",
                "doc": "plot subfolder on artifact path",
                "default": "plots"
              },
              {
                "name": "file_ext",
                "type": "str",
                "doc": "(\"parquet\") format for test_set_key hold out data",
                "default": "parquet"
              },
              {
                "name": "model_pkg_file",
                "type": "str",
                "default": ""
              },
              {
                "name": "random_state",
                "type": "int",
                "doc": "(1) sklearn rng seed",
                "default": 1
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 20
          }
        },
        "description": "train any classifier using scikit-learn's API",
        "image_pull_policy": "Always",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHdhcm5pbmdzCgp3YXJuaW5ncy5zaW1wbGVmaWx0ZXIoYWN0aW9uPSJpZ25vcmUiLCBjYXRlZ29yeT1GdXR1cmVXYXJuaW5nKQoKaW1wb3J0IG9zCgpmcm9tIGNsb3VkcGlja2xlIGltcG9ydCBkdW1wcwppbXBvcnQgcGFuZGFzIGFzIHBkCmZyb20gdHlwaW5nIGltcG9ydCBMaXN0CmZyb20gbWxydW4uZXhlY3V0aW9uIGltcG9ydCBNTENsaWVudEN0eApmcm9tIG1scnVuLmRhdGFzdG9yZSBpbXBvcnQgRGF0YUl0ZW0KZnJvbSBtbHJ1bi5tbHV0aWxzLmRhdGEgaW1wb3J0IGdldF9zYW1wbGUsIGdldF9zcGxpdHMKZnJvbSBtbHJ1bi5tbHV0aWxzLm1vZGVscyBpbXBvcnQgZ2VuX3NrbGVhcm5fbW9kZWwsIGV2YWxfbW9kZWxfdjIKZnJvbSBtbHJ1bi51dGlscy5oZWxwZXJzIGltcG9ydCBjcmVhdGVfY2xhc3MKZnJvbSBtbHJ1bi5hcnRpZmFjdHMubW9kZWwgaW1wb3J0IE1vZGVsQXJ0aWZhY3QKCgpkZWYgdHJhaW5fbW9kZWwoCiAgICBjb250ZXh0OiBNTENsaWVudEN0eCwKICAgIG1vZGVsX3BrZ19jbGFzczogc3RyLAogICAgZGF0YXNldDogRGF0YUl0ZW0sCiAgICBsYWJlbF9jb2x1bW46IHN0ciA9ICJsYWJlbHMiLAogICAgZW5jb2RlX2NvbHM6IExpc3Rbc3RyXSA9IFtdLAogICAgc2FtcGxlOiBpbnQgPSAtMSwKICAgIHRlc3Rfc2l6ZTogZmxvYXQgPSAwLjMwLAogICAgdHJhaW5fdmFsX3NwbGl0OiBmbG9hdCA9IDAuNzAsCiAgICB0ZXN0X3NldF9rZXk6IHN0ciA9ICJ0ZXN0X3NldCIsCiAgICBtb2RlbF9ldmFsdWF0b3I9Tm9uZSwKICAgIG1vZGVsc19kZXN0OiBzdHIgPSAiIiwKICAgIHBsb3RzX2Rlc3Q6IHN0ciA9ICJwbG90cyIsCiAgICBmaWxlX2V4dDogc3RyID0gInBhcnF1ZXQiLAogICAgbW9kZWxfcGtnX2ZpbGU6IHN0ciA9ICIiLAogICAgcmFuZG9tX3N0YXRlOiBpbnQgPSAxLAopIC0+IE5vbmU6CiAgICAiIiJ0cmFpbiBhIGNsYXNzaWZpZXIKCiAgICBBbiBvcHRpb25hbCBjdXRvbSBtb2RlbCBldmFsdWF0b3IgY2FuIGJlIHN1cHBsaWVkIHRoYXQgc2hvdWxkIGhhdmUgdGhlIHNpZ25hdHVyZToKICAgIGBteV9jdXN0b21fZXZhbHVhdG9yKGNvbnRleHQsIHh2YWxpZCwgeXZhbGlkLCBtb2RlbClgIGFuZCByZXR1cm4gYSBkaWN0aW9uYXJ5IG9mCiAgICBzY2FsYXIgInJlc3VsdHMiLCBhICJwbG90cyIga2V5cyB3aXRoIGEgbGlzdCBvZiBQbG90QXJ0aWZhY3RzLCBhbmQKICAgIGFuZCAidGFibGVzIiBrZXkgY29udGFpbmluZyBhIHJldHVybmVkIGxpc3Qgb2YgVGFibGVBcnRpZmFjdHMuCgogICAgOnBhcmFtIGNvbnRleHQ6ICAgICAgICAgICB0aGUgZnVuY3Rpb24gY29udGV4dAogICAgOnBhcmFtIG1vZGVsX3BrZ19jbGFzczogICB0aGUgbW9kZWwgdG8gdHJhaW4sIGUuZywgInNrbGVhcm4ubmV1cmFsX25ldHdvcmtzLk1MUENsYXNzaWZpZXIiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvciBqc29uIG1vZGVsIGNvbmZpZwogICAgOnBhcmFtIGRhdGFzZXQ6ICAgICAgICAgICAoImRhdGEiKSBuYW1lIG9mIHJhdyBkYXRhIGZpbGUKICAgIDpwYXJhbSBsYWJlbF9jb2x1bW46ICAgICAgZ3JvdW5kLXRydXRoICh5KSBsYWJlbHMKICAgIDpwYXJhbSBlbmNvZGVfY29sczogICAgICAgZGljdGlvbmFyeSBvZiBuYW1lcyBhbmQgcHJlZml4ZXMgZm9yIGNvbHVtbnMgdGhhdCBhcmUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gaG90IGJlIGVuY29kZWQuCiAgICA6cGFyYW0gc2FtcGxlOiAgICAgICAgICAgIFNlbGVjdHMgdGhlIGZpcnN0IG4gcm93cywgb3Igc2VsZWN0IGEgc2FtcGxlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0aW5nIGZyb20gdGhlIGZpcnN0LiBJZiBuZWdhdGl2ZSA8LTEsIHNlbGVjdAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhIHJhbmRvbSBzYW1wbGUKICAgIDpwYXJhbSB0ZXN0X3NpemU6ICAgICAgICAgKDAuMDUpIHRlc3Qgc2V0IHNpemUKICAgIDpwYXJhbSB0cmFpbl92YWxfc3BsaXQ6ICAgKDAuNzUpIE9uY2UgdGhlIHRlc3Qgc2V0IGhhcyBiZWVuIHJlbW92ZWQgdGhlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYWluaW5nIHNldCBnZXRzIHRoaXMgcHJvcG9ydGlvbi4KICAgIDpwYXJhbSB0ZXN0X3NldF9rZXk6ICAgICAga2V5IG9mIGhlbGQgb3V0IGRhdGEgaW4gYXJ0aWZhY3Qgc3RvcmUKICAgIDpwYXJhbSBtb2RlbF9ldmFsdWF0b3I6ICAgKE5vbmUpIGEgY3VzdG9tIG1vZGVsIGV2YWx1YXRvciBjYW4gYmUgc3BlY2lmaWVkCiAgICA6cGFyYW0gbW9kZWxzX2Rlc3Q6ICAgICAgICgiIikgbW9kZWxzIHN1YmZvbGRlciBvbiBhcnRpZmFjdCBwYXRoCiAgICA6cGFyYW0gcGxvdHNfZGVzdDogICAgICAgIHBsb3Qgc3ViZm9sZGVyIG9uIGFydGlmYWN0IHBhdGgKICAgIDpwYXJhbSBmaWxlX2V4dDogICAgICAgICAgKCJwYXJxdWV0IikgZm9ybWF0IGZvciB0ZXN0X3NldF9rZXkgaG9sZCBvdXQgZGF0YQogICAgOnBhcmFtIHJhbmRvbV9zdGF0ZTogICAgICAoMSkgc2tsZWFybiBybmcgc2VlZAoKICAgICIiIgogICAgbW9kZWxzX2Rlc3QgPSBtb2RlbHNfZGVzdCBvciAibW9kZWwiCgogICAgcmF3LCBsYWJlbHMsIGhlYWRlciA9IGdldF9zYW1wbGUoZGF0YXNldCwgc2FtcGxlLCBsYWJlbF9jb2x1bW4pCgogICAgaWYgZW5jb2RlX2NvbHM6CiAgICAgICAgcmF3ID0gcGQuZ2V0X2R1bW1pZXMoCiAgICAgICAgICAgIHJhdywKICAgICAgICAgICAgY29sdW1ucz1saXN0KGVuY29kZV9jb2xzLmtleXMoKSksCiAgICAgICAgICAgIHByZWZpeD1saXN0KGVuY29kZV9jb2xzLnZhbHVlcygpKSwKICAgICAgICAgICAgZHJvcF9maXJzdD1UcnVlLAogICAgICAgICkKCiAgICAoeHRyYWluLCB5dHJhaW4pLCAoeHZhbGlkLCB5dmFsaWQpLCAoeHRlc3QsIHl0ZXN0KSA9IGdldF9zcGxpdHMoCiAgICAgICAgcmF3LCBsYWJlbHMsIDMsIHRlc3Rfc2l6ZSwgMSAtIHRyYWluX3ZhbF9zcGxpdCwgcmFuZG9tX3N0YXRlCiAgICApCgogICAgdGVzdF9zZXQgPSBwZC5jb25jYXQoW3h0ZXN0LCB5dGVzdC50b19mcmFtZSgpXSwgYXhpcz0xKQogICAgY29udGV4dC5sb2dfZGF0YXNldCgKICAgICAgICB0ZXN0X3NldF9rZXksCiAgICAgICAgZGY9dGVzdF9zZXQsCiAgICAgICAgZm9ybWF0PWZpbGVfZXh0LAogICAgICAgIGluZGV4PUZhbHNlLAogICAgICAgIGxhYmVscz17ImRhdGEtdHlwZSI6ICJoZWxkLW91dCJ9LAogICAgICAgIGFydGlmYWN0X3BhdGg9Y29udGV4dC5hcnRpZmFjdF9zdWJwYXRoKCJkYXRhIiksCiAgICApCgogICAgbW9kZWxfY29uZmlnID0gZ2VuX3NrbGVhcm5fbW9kZWwobW9kZWxfcGtnX2NsYXNzLCBjb250ZXh0LnBhcmFtZXRlcnMuaXRlbXMoKSkKCiAgICBtb2RlbF9jb25maWdbIkZJVCJdLnVwZGF0ZSh7IlgiOiB4dHJhaW4sICJ5IjogeXRyYWluLnZhbHVlc30pCgogICAgQ2xhc3NpZmllckNsYXNzID0gY3JlYXRlX2NsYXNzKG1vZGVsX2NvbmZpZ1siTUVUQSJdWyJjbGFzcyJdKQoKICAgIG1vZGVsID0gQ2xhc3NpZmllckNsYXNzKCoqbW9kZWxfY29uZmlnWyJDTEFTUyJdKQoKICAgIG1vZGVsLmZpdCgqKm1vZGVsX2NvbmZpZ1siRklUIl0pCgogICAgYXJ0aWZhY3RfcGF0aCA9IGNvbnRleHQuYXJ0aWZhY3Rfc3VicGF0aChtb2RlbHNfZGVzdCkKICAgIHBsb3RzX3BhdGggPSBjb250ZXh0LmFydGlmYWN0X3N1YnBhdGgobW9kZWxzX2Rlc3QsIHBsb3RzX2Rlc3QpCiAgICBpZiBtb2RlbF9ldmFsdWF0b3I6CiAgICAgICAgZXZhbF9tZXRyaWNzID0gbW9kZWxfZXZhbHVhdG9yKAogICAgICAgICAgICBjb250ZXh0LCB4dmFsaWQsIHl2YWxpZCwgbW9kZWwsIHBsb3RzX2FydGlmYWN0X3BhdGg9cGxvdHNfcGF0aAogICAgICAgICkKICAgIGVsc2U6CiAgICAgICAgZXZhbF9tZXRyaWNzID0gZXZhbF9tb2RlbF92MigKICAgICAgICAgICAgY29udGV4dCwgeHZhbGlkLCB5dmFsaWQsIG1vZGVsLCBwbG90c19hcnRpZmFjdF9wYXRoPXBsb3RzX3BhdGgKICAgICAgICApCgogICAga3dhcmdzID0ge30KICAgIGlmICJhbGdvcml0aG0iIGluIE1vZGVsQXJ0aWZhY3QuX2RpY3RfZmllbGRzOgogICAgICAgIGt3YXJnc1sidHJhaW5pbmdfc2V0Il0gPSB0ZXN0X3NldAogICAgICAgIGt3YXJnc1sibGFiZWxfY29sdW1uIl0gPSBsYWJlbF9jb2x1bW4KICAgICAgICBzcGxpdCA9IG1vZGVsX3BrZ19jbGFzcy5yc3BsaXQoIi4iLCAxKQogICAgICAgIGlmIHNwbGl0IGFuZCBsZW4oc3BsaXQpID09IDI6CiAgICAgICAgICAgIGt3YXJnc1siYWxnb3JpdGhtIl0gPSBzcGxpdFsxXQoKICAgICAgICBpZiBkYXRhc2V0Lm1ldGEgYW5kIGRhdGFzZXQubWV0YS5raW5kID09ICJGZWF0dXJlVmVjdG9yIjoKICAgICAgICAgICAga3dhcmdzWyJmZWF0dXJlX3ZlY3RvciJdID0gZGF0YXNldC5tZXRhLnVyaQoKICAgIGNvbnRleHQuc2V0X2xhYmVsKCJjbGFzcyIsIG1vZGVsX3BrZ19jbGFzcykKICAgIGNvbnRleHQubG9nX21vZGVsKAogICAgICAgICJtb2RlbCIsCiAgICAgICAgYm9keT1kdW1wcyhtb2RlbCksCiAgICAgICAgYXJ0aWZhY3RfcGF0aD1hcnRpZmFjdF9wYXRoLAogICAgICAgIGV4dHJhX2RhdGE9ZXZhbF9tZXRyaWNzLAogICAgICAgIG1vZGVsX2ZpbGU9Im1vZGVsLnBrbCIsCiAgICAgICAgbWV0cmljcz1jb250ZXh0LnJlc3VsdHMsCiAgICAgICAgbGFiZWxzPXsiY2xhc3MiOiBtb2RlbF9wa2dfY2xhc3N9LAogICAgICAgIGZyYW1ld29yaz0ic2tsZWFybiIsCiAgICAgICAgKiprd2FyZ3MKICAgICkK",
          "commands": []
        },
        "mount_applied": true,
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "sklearn-classifier",
        "tag": "latest",
        "hash": "7e6a65696ac7b68fd1980c043f70979a0e143374",
        "project": "network-operations-admin",
        "labels": {
          "author": "yjb",
          "framework": "sklearn"
        },
        "categories": [
          "machine-learning",
          "model-training"
        ],
        "updated": "2021-08-29T20:26:45.319243+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/ml-models",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "train_model",
        "entry_points": {
          "train_model": {
            "name": "train_model",
            "doc": "train a classifier\n\nAn optional cutom model evaluator can be supplied that should have the signature:\n`my_custom_evaluator(context, xvalid, yvalid, model)` and return a dictionary of\nscalar \"results\", a \"plots\" keys with a list of PlotArtifacts, and\nand \"tables\" key containing a returned list of TableArtifacts.",
            "parameters": [
              {
                "name": "context",
                "type": "MLClientCtx",
                "doc": "the function context",
                "default": ""
              },
              {
                "name": "model_pkg_class",
                "type": "str",
                "doc": "the model to train, e.g, \"sklearn.neural_networks.MLPClassifier\", or json model config",
                "default": ""
              },
              {
                "name": "dataset",
                "type": "DataItem",
                "doc": "(\"data\") name of raw data file",
                "default": ""
              },
              {
                "name": "label_column",
                "type": "str",
                "doc": "ground-truth (y) labels",
                "default": "labels"
              },
              {
                "name": "encode_cols",
                "type": "List[str]",
                "doc": "dictionary of names and prefixes for columns that are to hot be encoded.",
                "default": []
              },
              {
                "name": "sample",
                "type": "int",
                "doc": "Selects the first n rows, or select a sample starting from the first. If negative <-1, select a random sample",
                "default": "<_ast.USub object at 0x7fd86dbc17b8>"
              },
              {
                "name": "test_size",
                "type": "float",
                "doc": "(0.05) test set size",
                "default": 0.3
              },
              {
                "name": "train_val_split",
                "type": "float",
                "doc": "(0.75) Once the test set has been removed the training set gets this proportion.",
                "default": 0.7
              },
              {
                "name": "test_set_key",
                "type": "str",
                "doc": "key of held out data in artifact store",
                "default": "test_set"
              },
              {
                "name": "model_evaluator",
                "doc": "(None) a custom model evaluator can be specified",
                "default": null
              },
              {
                "name": "models_dest",
                "type": "str",
                "doc": "(\"\") models subfolder on artifact path",
                "default": ""
              },
              {
                "name": "plots_dest",
                "type": "str",
                "doc": "plot subfolder on artifact path",
                "default": "plots"
              },
              {
                "name": "file_ext",
                "type": "str",
                "doc": "(\"parquet\") format for test_set_key hold out data",
                "default": "parquet"
              },
              {
                "name": "model_pkg_file",
                "type": "str",
                "default": ""
              },
              {
                "name": "random_state",
                "type": "int",
                "doc": "(1) sklearn rng seed",
                "default": 1
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 20
          }
        },
        "description": "train any classifier using scikit-learn's API",
        "image_pull_policy": "Always",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHdhcm5pbmdzCgp3YXJuaW5ncy5zaW1wbGVmaWx0ZXIoYWN0aW9uPSJpZ25vcmUiLCBjYXRlZ29yeT1GdXR1cmVXYXJuaW5nKQoKaW1wb3J0IG9zCgpmcm9tIGNsb3VkcGlja2xlIGltcG9ydCBkdW1wcwppbXBvcnQgcGFuZGFzIGFzIHBkCmZyb20gdHlwaW5nIGltcG9ydCBMaXN0CmZyb20gbWxydW4uZXhlY3V0aW9uIGltcG9ydCBNTENsaWVudEN0eApmcm9tIG1scnVuLmRhdGFzdG9yZSBpbXBvcnQgRGF0YUl0ZW0KZnJvbSBtbHJ1bi5tbHV0aWxzLmRhdGEgaW1wb3J0IGdldF9zYW1wbGUsIGdldF9zcGxpdHMKZnJvbSBtbHJ1bi5tbHV0aWxzLm1vZGVscyBpbXBvcnQgZ2VuX3NrbGVhcm5fbW9kZWwsIGV2YWxfbW9kZWxfdjIKZnJvbSBtbHJ1bi51dGlscy5oZWxwZXJzIGltcG9ydCBjcmVhdGVfY2xhc3MKZnJvbSBtbHJ1bi5hcnRpZmFjdHMubW9kZWwgaW1wb3J0IE1vZGVsQXJ0aWZhY3QKCgpkZWYgdHJhaW5fbW9kZWwoCiAgICBjb250ZXh0OiBNTENsaWVudEN0eCwKICAgIG1vZGVsX3BrZ19jbGFzczogc3RyLAogICAgZGF0YXNldDogRGF0YUl0ZW0sCiAgICBsYWJlbF9jb2x1bW46IHN0ciA9ICJsYWJlbHMiLAogICAgZW5jb2RlX2NvbHM6IExpc3Rbc3RyXSA9IFtdLAogICAgc2FtcGxlOiBpbnQgPSAtMSwKICAgIHRlc3Rfc2l6ZTogZmxvYXQgPSAwLjMwLAogICAgdHJhaW5fdmFsX3NwbGl0OiBmbG9hdCA9IDAuNzAsCiAgICB0ZXN0X3NldF9rZXk6IHN0ciA9ICJ0ZXN0X3NldCIsCiAgICBtb2RlbF9ldmFsdWF0b3I9Tm9uZSwKICAgIG1vZGVsc19kZXN0OiBzdHIgPSAiIiwKICAgIHBsb3RzX2Rlc3Q6IHN0ciA9ICJwbG90cyIsCiAgICBmaWxlX2V4dDogc3RyID0gInBhcnF1ZXQiLAogICAgbW9kZWxfcGtnX2ZpbGU6IHN0ciA9ICIiLAogICAgcmFuZG9tX3N0YXRlOiBpbnQgPSAxLAopIC0+IE5vbmU6CiAgICAiIiJ0cmFpbiBhIGNsYXNzaWZpZXIKCiAgICBBbiBvcHRpb25hbCBjdXRvbSBtb2RlbCBldmFsdWF0b3IgY2FuIGJlIHN1cHBsaWVkIHRoYXQgc2hvdWxkIGhhdmUgdGhlIHNpZ25hdHVyZToKICAgIGBteV9jdXN0b21fZXZhbHVhdG9yKGNvbnRleHQsIHh2YWxpZCwgeXZhbGlkLCBtb2RlbClgIGFuZCByZXR1cm4gYSBkaWN0aW9uYXJ5IG9mCiAgICBzY2FsYXIgInJlc3VsdHMiLCBhICJwbG90cyIga2V5cyB3aXRoIGEgbGlzdCBvZiBQbG90QXJ0aWZhY3RzLCBhbmQKICAgIGFuZCAidGFibGVzIiBrZXkgY29udGFpbmluZyBhIHJldHVybmVkIGxpc3Qgb2YgVGFibGVBcnRpZmFjdHMuCgogICAgOnBhcmFtIGNvbnRleHQ6ICAgICAgICAgICB0aGUgZnVuY3Rpb24gY29udGV4dAogICAgOnBhcmFtIG1vZGVsX3BrZ19jbGFzczogICB0aGUgbW9kZWwgdG8gdHJhaW4sIGUuZywgInNrbGVhcm4ubmV1cmFsX25ldHdvcmtzLk1MUENsYXNzaWZpZXIiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvciBqc29uIG1vZGVsIGNvbmZpZwogICAgOnBhcmFtIGRhdGFzZXQ6ICAgICAgICAgICAoImRhdGEiKSBuYW1lIG9mIHJhdyBkYXRhIGZpbGUKICAgIDpwYXJhbSBsYWJlbF9jb2x1bW46ICAgICAgZ3JvdW5kLXRydXRoICh5KSBsYWJlbHMKICAgIDpwYXJhbSBlbmNvZGVfY29sczogICAgICAgZGljdGlvbmFyeSBvZiBuYW1lcyBhbmQgcHJlZml4ZXMgZm9yIGNvbHVtbnMgdGhhdCBhcmUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gaG90IGJlIGVuY29kZWQuCiAgICA6cGFyYW0gc2FtcGxlOiAgICAgICAgICAgIFNlbGVjdHMgdGhlIGZpcnN0IG4gcm93cywgb3Igc2VsZWN0IGEgc2FtcGxlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0aW5nIGZyb20gdGhlIGZpcnN0LiBJZiBuZWdhdGl2ZSA8LTEsIHNlbGVjdAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhIHJhbmRvbSBzYW1wbGUKICAgIDpwYXJhbSB0ZXN0X3NpemU6ICAgICAgICAgKDAuMDUpIHRlc3Qgc2V0IHNpemUKICAgIDpwYXJhbSB0cmFpbl92YWxfc3BsaXQ6ICAgKDAuNzUpIE9uY2UgdGhlIHRlc3Qgc2V0IGhhcyBiZWVuIHJlbW92ZWQgdGhlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYWluaW5nIHNldCBnZXRzIHRoaXMgcHJvcG9ydGlvbi4KICAgIDpwYXJhbSB0ZXN0X3NldF9rZXk6ICAgICAga2V5IG9mIGhlbGQgb3V0IGRhdGEgaW4gYXJ0aWZhY3Qgc3RvcmUKICAgIDpwYXJhbSBtb2RlbF9ldmFsdWF0b3I6ICAgKE5vbmUpIGEgY3VzdG9tIG1vZGVsIGV2YWx1YXRvciBjYW4gYmUgc3BlY2lmaWVkCiAgICA6cGFyYW0gbW9kZWxzX2Rlc3Q6ICAgICAgICgiIikgbW9kZWxzIHN1YmZvbGRlciBvbiBhcnRpZmFjdCBwYXRoCiAgICA6cGFyYW0gcGxvdHNfZGVzdDogICAgICAgIHBsb3Qgc3ViZm9sZGVyIG9uIGFydGlmYWN0IHBhdGgKICAgIDpwYXJhbSBmaWxlX2V4dDogICAgICAgICAgKCJwYXJxdWV0IikgZm9ybWF0IGZvciB0ZXN0X3NldF9rZXkgaG9sZCBvdXQgZGF0YQogICAgOnBhcmFtIHJhbmRvbV9zdGF0ZTogICAgICAoMSkgc2tsZWFybiBybmcgc2VlZAoKICAgICIiIgogICAgbW9kZWxzX2Rlc3QgPSBtb2RlbHNfZGVzdCBvciAibW9kZWwiCgogICAgcmF3LCBsYWJlbHMsIGhlYWRlciA9IGdldF9zYW1wbGUoZGF0YXNldCwgc2FtcGxlLCBsYWJlbF9jb2x1bW4pCgogICAgaWYgZW5jb2RlX2NvbHM6CiAgICAgICAgcmF3ID0gcGQuZ2V0X2R1bW1pZXMoCiAgICAgICAgICAgIHJhdywKICAgICAgICAgICAgY29sdW1ucz1saXN0KGVuY29kZV9jb2xzLmtleXMoKSksCiAgICAgICAgICAgIHByZWZpeD1saXN0KGVuY29kZV9jb2xzLnZhbHVlcygpKSwKICAgICAgICAgICAgZHJvcF9maXJzdD1UcnVlLAogICAgICAgICkKCiAgICAoeHRyYWluLCB5dHJhaW4pLCAoeHZhbGlkLCB5dmFsaWQpLCAoeHRlc3QsIHl0ZXN0KSA9IGdldF9zcGxpdHMoCiAgICAgICAgcmF3LCBsYWJlbHMsIDMsIHRlc3Rfc2l6ZSwgMSAtIHRyYWluX3ZhbF9zcGxpdCwgcmFuZG9tX3N0YXRlCiAgICApCgogICAgdGVzdF9zZXQgPSBwZC5jb25jYXQoW3h0ZXN0LCB5dGVzdC50b19mcmFtZSgpXSwgYXhpcz0xKQogICAgY29udGV4dC5sb2dfZGF0YXNldCgKICAgICAgICB0ZXN0X3NldF9rZXksCiAgICAgICAgZGY9dGVzdF9zZXQsCiAgICAgICAgZm9ybWF0PWZpbGVfZXh0LAogICAgICAgIGluZGV4PUZhbHNlLAogICAgICAgIGxhYmVscz17ImRhdGEtdHlwZSI6ICJoZWxkLW91dCJ9LAogICAgICAgIGFydGlmYWN0X3BhdGg9Y29udGV4dC5hcnRpZmFjdF9zdWJwYXRoKCJkYXRhIiksCiAgICApCgogICAgbW9kZWxfY29uZmlnID0gZ2VuX3NrbGVhcm5fbW9kZWwobW9kZWxfcGtnX2NsYXNzLCBjb250ZXh0LnBhcmFtZXRlcnMuaXRlbXMoKSkKCiAgICBtb2RlbF9jb25maWdbIkZJVCJdLnVwZGF0ZSh7IlgiOiB4dHJhaW4sICJ5IjogeXRyYWluLnZhbHVlc30pCgogICAgQ2xhc3NpZmllckNsYXNzID0gY3JlYXRlX2NsYXNzKG1vZGVsX2NvbmZpZ1siTUVUQSJdWyJjbGFzcyJdKQoKICAgIG1vZGVsID0gQ2xhc3NpZmllckNsYXNzKCoqbW9kZWxfY29uZmlnWyJDTEFTUyJdKQoKICAgIG1vZGVsLmZpdCgqKm1vZGVsX2NvbmZpZ1siRklUIl0pCgogICAgYXJ0aWZhY3RfcGF0aCA9IGNvbnRleHQuYXJ0aWZhY3Rfc3VicGF0aChtb2RlbHNfZGVzdCkKICAgIHBsb3RzX3BhdGggPSBjb250ZXh0LmFydGlmYWN0X3N1YnBhdGgobW9kZWxzX2Rlc3QsIHBsb3RzX2Rlc3QpCiAgICBpZiBtb2RlbF9ldmFsdWF0b3I6CiAgICAgICAgZXZhbF9tZXRyaWNzID0gbW9kZWxfZXZhbHVhdG9yKAogICAgICAgICAgICBjb250ZXh0LCB4dmFsaWQsIHl2YWxpZCwgbW9kZWwsIHBsb3RzX2FydGlmYWN0X3BhdGg9cGxvdHNfcGF0aAogICAgICAgICkKICAgIGVsc2U6CiAgICAgICAgZXZhbF9tZXRyaWNzID0gZXZhbF9tb2RlbF92MigKICAgICAgICAgICAgY29udGV4dCwgeHZhbGlkLCB5dmFsaWQsIG1vZGVsLCBwbG90c19hcnRpZmFjdF9wYXRoPXBsb3RzX3BhdGgKICAgICAgICApCgogICAga3dhcmdzID0ge30KICAgIGlmICJhbGdvcml0aG0iIGluIE1vZGVsQXJ0aWZhY3QuX2RpY3RfZmllbGRzOgogICAgICAgIGt3YXJnc1sidHJhaW5pbmdfc2V0Il0gPSB0ZXN0X3NldAogICAgICAgIGt3YXJnc1sibGFiZWxfY29sdW1uIl0gPSBsYWJlbF9jb2x1bW4KICAgICAgICBzcGxpdCA9IG1vZGVsX3BrZ19jbGFzcy5yc3BsaXQoIi4iLCAxKQogICAgICAgIGlmIHNwbGl0IGFuZCBsZW4oc3BsaXQpID09IDI6CiAgICAgICAgICAgIGt3YXJnc1siYWxnb3JpdGhtIl0gPSBzcGxpdFsxXQoKICAgICAgICBpZiBkYXRhc2V0Lm1ldGEgYW5kIGRhdGFzZXQubWV0YS5raW5kID09ICJGZWF0dXJlVmVjdG9yIjoKICAgICAgICAgICAga3dhcmdzWyJmZWF0dXJlX3ZlY3RvciJdID0gZGF0YXNldC5tZXRhLnVyaQoKICAgIGNvbnRleHQuc2V0X2xhYmVsKCJjbGFzcyIsIG1vZGVsX3BrZ19jbGFzcykKICAgIGNvbnRleHQubG9nX21vZGVsKAogICAgICAgICJtb2RlbCIsCiAgICAgICAgYm9keT1kdW1wcyhtb2RlbCksCiAgICAgICAgYXJ0aWZhY3RfcGF0aD1hcnRpZmFjdF9wYXRoLAogICAgICAgIGV4dHJhX2RhdGE9ZXZhbF9tZXRyaWNzLAogICAgICAgIG1vZGVsX2ZpbGU9Im1vZGVsLnBrbCIsCiAgICAgICAgbWV0cmljcz1jb250ZXh0LnJlc3VsdHMsCiAgICAgICAgbGFiZWxzPXsiY2xhc3MiOiBtb2RlbF9wa2dfY2xhc3N9LAogICAgICAgIGZyYW1ld29yaz0ic2tsZWFybiIsCiAgICAgICAgKiprd2FyZ3MKICAgICkK",
          "commands": []
        },
        "mount_applied": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": {}
    },
    {
      "kind": "job",
      "metadata": {
        "name": "test-classifier",
        "tag": "",
        "hash": "69e9283a0d236077194c50022e622a469e54c0a6",
        "project": "network-operations-admin",
        "labels": {
          "author": "yjb",
          "framework": "sklearn"
        },
        "categories": [
          "machine-learning",
          "model-testing"
        ],
        "updated": "2021-08-29T20:27:25.044324+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/ml-models",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "test_classifier",
        "entry_points": {
          "test_classifier": {
            "name": "test_classifier",
            "doc": "Test one or more classifier models against held-out dataset\n\nUsing held-out test features, evaluates the peformance of the estimated model\n\nCan be part of a kubeflow pipeline as a test step that is run post EDA and\ntraining/validation cycles",
            "parameters": [
              {
                "name": "context",
                "doc": "the function context",
                "default": ""
              },
              {
                "name": "models_path",
                "type": "DataItem",
                "doc": "artifact models representing a file or a folder",
                "default": ""
              },
              {
                "name": "test_set",
                "type": "DataItem",
                "doc": "test features and labels",
                "default": ""
              },
              {
                "name": "label_column",
                "type": "str",
                "doc": "column name for ground truth labels",
                "default": ""
              },
              {
                "name": "score_method",
                "type": "str",
                "doc": "for multiclass classification",
                "default": "micro"
              },
              {
                "name": "plots_dest",
                "type": "str",
                "doc": "dir for test plots",
                "default": ""
              },
              {
                "name": "model_evaluator",
                "doc": "NOT IMPLEMENTED: specific method to generate eval, passed in as string or available in this folder",
                "default": null
              },
              {
                "name": "default_model",
                "type": "str",
                "default": "model.pkl"
              },
              {
                "name": "predictions_column",
                "type": "str",
                "doc": "column name for the predictions column on the resulted artifact",
                "default": "yscore"
              },
              {
                "name": "model_update",
                "doc": "(True) update model, when running as stand alone no need in update",
                "default": true
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 17
          }
        },
        "description": "test a classifier using held-out or new data",
        "image_pull_policy": "Always",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHdhcm5pbmdzCgp3YXJuaW5ncy5maWx0ZXJ3YXJuaW5ncygiaWdub3JlIikKCmltcG9ydCBvcwppbXBvcnQgcGFuZGFzIGFzIHBkCgpmcm9tIG1scnVuLmRhdGFzdG9yZSBpbXBvcnQgRGF0YUl0ZW0KZnJvbSBtbHJ1bi5hcnRpZmFjdHMgaW1wb3J0IGdldF9tb2RlbCwgdXBkYXRlX21vZGVsCmZyb20gbWxydW4ubWx1dGlscy5tb2RlbHMgaW1wb3J0IGV2YWxfbW9kZWxfdjIKZnJvbSBjbG91ZHBpY2tsZSBpbXBvcnQgbG9hZApmcm9tIHVybGxpYi5yZXF1ZXN0IGltcG9ydCB1cmxvcGVuCgoKZGVmIHRlc3RfY2xhc3NpZmllcigKICAgIGNvbnRleHQsCiAgICBtb2RlbHNfcGF0aDogRGF0YUl0ZW0sCiAgICB0ZXN0X3NldDogRGF0YUl0ZW0sCiAgICBsYWJlbF9jb2x1bW46IHN0ciwKICAgIHNjb3JlX21ldGhvZDogc3RyID0gIm1pY3JvIiwKICAgIHBsb3RzX2Rlc3Q6IHN0ciA9ICIiLAogICAgbW9kZWxfZXZhbHVhdG9yPU5vbmUsCiAgICBkZWZhdWx0X21vZGVsOiBzdHIgPSAibW9kZWwucGtsIiwKICAgIHByZWRpY3Rpb25zX2NvbHVtbjogc3RyID0gInlzY29yZSIsCiAgICBtb2RlbF91cGRhdGU9VHJ1ZSwKKSAtPiBOb25lOgogICAgIiIiVGVzdCBvbmUgb3IgbW9yZSBjbGFzc2lmaWVyIG1vZGVscyBhZ2FpbnN0IGhlbGQtb3V0IGRhdGFzZXQKCiAgICBVc2luZyBoZWxkLW91dCB0ZXN0IGZlYXR1cmVzLCBldmFsdWF0ZXMgdGhlIHBlZm9ybWFuY2Ugb2YgdGhlIGVzdGltYXRlZCBtb2RlbAoKICAgIENhbiBiZSBwYXJ0IG9mIGEga3ViZWZsb3cgcGlwZWxpbmUgYXMgYSB0ZXN0IHN0ZXAgdGhhdCBpcyBydW4gcG9zdCBFREEgYW5kCiAgICB0cmFpbmluZy92YWxpZGF0aW9uIGN5Y2xlcwoKICAgIDpwYXJhbSBjb250ZXh0OiAgICAgICAgICAgIHRoZSBmdW5jdGlvbiBjb250ZXh0CiAgICA6cGFyYW0gbW9kZWxzX3BhdGg6ICAgICAgICBhcnRpZmFjdCBtb2RlbHMgcmVwcmVzZW50aW5nIGEgZmlsZSBvciBhIGZvbGRlcgogICAgOnBhcmFtIHRlc3Rfc2V0OiAgICAgICAgICAgdGVzdCBmZWF0dXJlcyBhbmQgbGFiZWxzCiAgICA6cGFyYW0gbGFiZWxfY29sdW1uOiAgICAgICBjb2x1bW4gbmFtZSBmb3IgZ3JvdW5kIHRydXRoIGxhYmVscwogICAgOnBhcmFtIHNjb3JlX21ldGhvZDogICAgICAgZm9yIG11bHRpY2xhc3MgY2xhc3NpZmljYXRpb24KICAgIDpwYXJhbSBwbG90c19kZXN0OiAgICAgICAgIGRpciBmb3IgdGVzdCBwbG90cwogICAgOnBhcmFtIG1vZGVsX2V2YWx1YXRvcjogICAgTk9UIElNUExFTUVOVEVEOiBzcGVjaWZpYyBtZXRob2QgdG8gZ2VuZXJhdGUgZXZhbCwgcGFzc2VkIGluIGFzIHN0cmluZwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3IgYXZhaWxhYmxlIGluIHRoaXMgZm9sZGVyCiAgICA6cGFyYW0gcHJlZGljdGlvbnNfY29sdW1uOiBjb2x1bW4gbmFtZSBmb3IgdGhlIHByZWRpY3Rpb25zIGNvbHVtbiBvbiB0aGUgcmVzdWx0ZWQgYXJ0aWZhY3QKICAgIDpwYXJhbSBtb2RlbF91cGRhdGU6ICAgICAgIChUcnVlKSB1cGRhdGUgbW9kZWwsIHdoZW4gcnVubmluZyBhcyBzdGFuZCBhbG9uZSBubyBuZWVkIGluIHVwZGF0ZQogICAgIiIiCiAgICB4dGVzdCA9IHRlc3Rfc2V0LmFzX2RmKCkKICAgIHl0ZXN0ID0geHRlc3QucG9wKGxhYmVsX2NvbHVtbikKCiAgICB0cnk6CiAgICAgICAgbW9kZWxfZmlsZSwgbW9kZWxfb2JqLCBfID0gZ2V0X21vZGVsKG1vZGVsc19wYXRoLCBzdWZmaXg9Ii5wa2wiKQogICAgICAgIG1vZGVsX29iaiA9IGxvYWQob3Blbihtb2RlbF9maWxlLCAicmIiKSkKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgYToKICAgICAgICByYWlzZSBFeGNlcHRpb24oIm1vZGVsIGxvY2F0aW9uIGxpa2VseSBzcGVjaWZpZWQiKQoKICAgIGV4dHJhX2RhdGEgPSBldmFsX21vZGVsX3YyKGNvbnRleHQsIHh0ZXN0LCB5dGVzdC52YWx1ZXMsIG1vZGVsX29iaikKICAgIGlmIG1vZGVsX29iaiBhbmQgbW9kZWxfdXBkYXRlID09IFRydWU6CiAgICAgICAgdXBkYXRlX21vZGVsKAogICAgICAgICAgICBtb2RlbHNfcGF0aCwKICAgICAgICAgICAgZXh0cmFfZGF0YT1leHRyYV9kYXRhLAogICAgICAgICAgICBtZXRyaWNzPWNvbnRleHQucmVzdWx0cywKICAgICAgICAgICAga2V5X3ByZWZpeD0idmFsaWRhdGlvbi0iLAogICAgICAgICkKCiAgICB5X2hhdCA9IG1vZGVsX29iai5wcmVkaWN0KHh0ZXN0KQogICAgaWYgeV9oYXQubmRpbSA9PSAxIG9yIHlfaGF0LnNoYXBlWzFdID09IDE6CiAgICAgICAgc2NvcmVfbmFtZXMgPSBbcHJlZGljdGlvbnNfY29sdW1uXQogICAgZWxzZToKICAgICAgICBzY29yZV9uYW1lcyA9IFtmIntwcmVkaWN0aW9uc19jb2x1bW59XyIgKyBzdHIoeCkgZm9yIHggaW4gcmFuZ2UoeV9oYXQuc2hhcGVbMV0pXQoKICAgIGRmID0gcGQuY29uY2F0KFt4dGVzdCwgeXRlc3QsIHBkLkRhdGFGcmFtZSh5X2hhdCwgY29sdW1ucz1zY29yZV9uYW1lcyldLCBheGlzPTEpCiAgICBjb250ZXh0LmxvZ19kYXRhc2V0KCJ0ZXN0X3NldF9wcmVkcyIsIGRmPWRmLCBmb3JtYXQ9InBhcnF1ZXQiLCBpbmRleD1GYWxzZSkK",
          "commands": []
        },
        "mount_applied": true,
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "test-classifier",
        "tag": "latest",
        "hash": "45a4f11f79e6aa3940a6068612dcbd00a057f294",
        "project": "network-operations-admin",
        "labels": {
          "author": "yjb",
          "framework": "sklearn"
        },
        "categories": [
          "machine-learning",
          "model-testing"
        ],
        "updated": "2021-08-29T20:27:25.275004+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/ml-models",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "test_classifier",
        "entry_points": {
          "test_classifier": {
            "name": "test_classifier",
            "doc": "Test one or more classifier models against held-out dataset\n\nUsing held-out test features, evaluates the peformance of the estimated model\n\nCan be part of a kubeflow pipeline as a test step that is run post EDA and\ntraining/validation cycles",
            "parameters": [
              {
                "name": "context",
                "doc": "the function context",
                "default": ""
              },
              {
                "name": "models_path",
                "type": "DataItem",
                "doc": "artifact models representing a file or a folder",
                "default": ""
              },
              {
                "name": "test_set",
                "type": "DataItem",
                "doc": "test features and labels",
                "default": ""
              },
              {
                "name": "label_column",
                "type": "str",
                "doc": "column name for ground truth labels",
                "default": ""
              },
              {
                "name": "score_method",
                "type": "str",
                "doc": "for multiclass classification",
                "default": "micro"
              },
              {
                "name": "plots_dest",
                "type": "str",
                "doc": "dir for test plots",
                "default": ""
              },
              {
                "name": "model_evaluator",
                "doc": "NOT IMPLEMENTED: specific method to generate eval, passed in as string or available in this folder",
                "default": null
              },
              {
                "name": "default_model",
                "type": "str",
                "default": "model.pkl"
              },
              {
                "name": "predictions_column",
                "type": "str",
                "doc": "column name for the predictions column on the resulted artifact",
                "default": "yscore"
              },
              {
                "name": "model_update",
                "doc": "(True) update model, when running as stand alone no need in update",
                "default": true
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 17
          }
        },
        "description": "test a classifier using held-out or new data",
        "image_pull_policy": "Always",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHdhcm5pbmdzCgp3YXJuaW5ncy5maWx0ZXJ3YXJuaW5ncygiaWdub3JlIikKCmltcG9ydCBvcwppbXBvcnQgcGFuZGFzIGFzIHBkCgpmcm9tIG1scnVuLmRhdGFzdG9yZSBpbXBvcnQgRGF0YUl0ZW0KZnJvbSBtbHJ1bi5hcnRpZmFjdHMgaW1wb3J0IGdldF9tb2RlbCwgdXBkYXRlX21vZGVsCmZyb20gbWxydW4ubWx1dGlscy5tb2RlbHMgaW1wb3J0IGV2YWxfbW9kZWxfdjIKZnJvbSBjbG91ZHBpY2tsZSBpbXBvcnQgbG9hZApmcm9tIHVybGxpYi5yZXF1ZXN0IGltcG9ydCB1cmxvcGVuCgoKZGVmIHRlc3RfY2xhc3NpZmllcigKICAgIGNvbnRleHQsCiAgICBtb2RlbHNfcGF0aDogRGF0YUl0ZW0sCiAgICB0ZXN0X3NldDogRGF0YUl0ZW0sCiAgICBsYWJlbF9jb2x1bW46IHN0ciwKICAgIHNjb3JlX21ldGhvZDogc3RyID0gIm1pY3JvIiwKICAgIHBsb3RzX2Rlc3Q6IHN0ciA9ICIiLAogICAgbW9kZWxfZXZhbHVhdG9yPU5vbmUsCiAgICBkZWZhdWx0X21vZGVsOiBzdHIgPSAibW9kZWwucGtsIiwKICAgIHByZWRpY3Rpb25zX2NvbHVtbjogc3RyID0gInlzY29yZSIsCiAgICBtb2RlbF91cGRhdGU9VHJ1ZSwKKSAtPiBOb25lOgogICAgIiIiVGVzdCBvbmUgb3IgbW9yZSBjbGFzc2lmaWVyIG1vZGVscyBhZ2FpbnN0IGhlbGQtb3V0IGRhdGFzZXQKCiAgICBVc2luZyBoZWxkLW91dCB0ZXN0IGZlYXR1cmVzLCBldmFsdWF0ZXMgdGhlIHBlZm9ybWFuY2Ugb2YgdGhlIGVzdGltYXRlZCBtb2RlbAoKICAgIENhbiBiZSBwYXJ0IG9mIGEga3ViZWZsb3cgcGlwZWxpbmUgYXMgYSB0ZXN0IHN0ZXAgdGhhdCBpcyBydW4gcG9zdCBFREEgYW5kCiAgICB0cmFpbmluZy92YWxpZGF0aW9uIGN5Y2xlcwoKICAgIDpwYXJhbSBjb250ZXh0OiAgICAgICAgICAgIHRoZSBmdW5jdGlvbiBjb250ZXh0CiAgICA6cGFyYW0gbW9kZWxzX3BhdGg6ICAgICAgICBhcnRpZmFjdCBtb2RlbHMgcmVwcmVzZW50aW5nIGEgZmlsZSBvciBhIGZvbGRlcgogICAgOnBhcmFtIHRlc3Rfc2V0OiAgICAgICAgICAgdGVzdCBmZWF0dXJlcyBhbmQgbGFiZWxzCiAgICA6cGFyYW0gbGFiZWxfY29sdW1uOiAgICAgICBjb2x1bW4gbmFtZSBmb3IgZ3JvdW5kIHRydXRoIGxhYmVscwogICAgOnBhcmFtIHNjb3JlX21ldGhvZDogICAgICAgZm9yIG11bHRpY2xhc3MgY2xhc3NpZmljYXRpb24KICAgIDpwYXJhbSBwbG90c19kZXN0OiAgICAgICAgIGRpciBmb3IgdGVzdCBwbG90cwogICAgOnBhcmFtIG1vZGVsX2V2YWx1YXRvcjogICAgTk9UIElNUExFTUVOVEVEOiBzcGVjaWZpYyBtZXRob2QgdG8gZ2VuZXJhdGUgZXZhbCwgcGFzc2VkIGluIGFzIHN0cmluZwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3IgYXZhaWxhYmxlIGluIHRoaXMgZm9sZGVyCiAgICA6cGFyYW0gcHJlZGljdGlvbnNfY29sdW1uOiBjb2x1bW4gbmFtZSBmb3IgdGhlIHByZWRpY3Rpb25zIGNvbHVtbiBvbiB0aGUgcmVzdWx0ZWQgYXJ0aWZhY3QKICAgIDpwYXJhbSBtb2RlbF91cGRhdGU6ICAgICAgIChUcnVlKSB1cGRhdGUgbW9kZWwsIHdoZW4gcnVubmluZyBhcyBzdGFuZCBhbG9uZSBubyBuZWVkIGluIHVwZGF0ZQogICAgIiIiCiAgICB4dGVzdCA9IHRlc3Rfc2V0LmFzX2RmKCkKICAgIHl0ZXN0ID0geHRlc3QucG9wKGxhYmVsX2NvbHVtbikKCiAgICB0cnk6CiAgICAgICAgbW9kZWxfZmlsZSwgbW9kZWxfb2JqLCBfID0gZ2V0X21vZGVsKG1vZGVsc19wYXRoLCBzdWZmaXg9Ii5wa2wiKQogICAgICAgIG1vZGVsX29iaiA9IGxvYWQob3Blbihtb2RlbF9maWxlLCAicmIiKSkKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgYToKICAgICAgICByYWlzZSBFeGNlcHRpb24oIm1vZGVsIGxvY2F0aW9uIGxpa2VseSBzcGVjaWZpZWQiKQoKICAgIGV4dHJhX2RhdGEgPSBldmFsX21vZGVsX3YyKGNvbnRleHQsIHh0ZXN0LCB5dGVzdC52YWx1ZXMsIG1vZGVsX29iaikKICAgIGlmIG1vZGVsX29iaiBhbmQgbW9kZWxfdXBkYXRlID09IFRydWU6CiAgICAgICAgdXBkYXRlX21vZGVsKAogICAgICAgICAgICBtb2RlbHNfcGF0aCwKICAgICAgICAgICAgZXh0cmFfZGF0YT1leHRyYV9kYXRhLAogICAgICAgICAgICBtZXRyaWNzPWNvbnRleHQucmVzdWx0cywKICAgICAgICAgICAga2V5X3ByZWZpeD0idmFsaWRhdGlvbi0iLAogICAgICAgICkKCiAgICB5X2hhdCA9IG1vZGVsX29iai5wcmVkaWN0KHh0ZXN0KQogICAgaWYgeV9oYXQubmRpbSA9PSAxIG9yIHlfaGF0LnNoYXBlWzFdID09IDE6CiAgICAgICAgc2NvcmVfbmFtZXMgPSBbcHJlZGljdGlvbnNfY29sdW1uXQogICAgZWxzZToKICAgICAgICBzY29yZV9uYW1lcyA9IFtmIntwcmVkaWN0aW9uc19jb2x1bW59XyIgKyBzdHIoeCkgZm9yIHggaW4gcmFuZ2UoeV9oYXQuc2hhcGVbMV0pXQoKICAgIGRmID0gcGQuY29uY2F0KFt4dGVzdCwgeXRlc3QsIHBkLkRhdGFGcmFtZSh5X2hhdCwgY29sdW1ucz1zY29yZV9uYW1lcyldLCBheGlzPTEpCiAgICBjb250ZXh0LmxvZ19kYXRhc2V0KCJ0ZXN0X3NldF9wcmVkcyIsIGRmPWRmLCBmb3JtYXQ9InBhcnF1ZXQiLCBpbmRleD1GYWxzZSkK",
          "commands": []
        },
        "mount_applied": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": {}
    },
    {
      "kind": "remote",
      "metadata": {
        "name": "serving",
        "tag": "v1",
        "hash": "dbcd1dd127b352d697654d070332151aa53e740e",
        "project": "network-operations-admin",
        "categories": [],
        "updated": "2021-08-29T20:28:14.526863+00:00"
      },
      "spec": {
        "command": "http://default-tenant.app.vmdev36.lab.iguazeng.com:31436",
        "args": [],
        "image": "",
        "description": "",
        "min_replicas": 1,
        "max_replicas": 4,
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          },
          {
            "name": "model_path",
            "value": "store://artifacts/network-operations-admin/train_model:cd151783-05df-4f9c-a9db-3aa674e4a058"
          },
          {
            "name": "FEATURES_TABLE",
            "value": "/User/demos/network-operations/streaming/features"
          },
          {
            "name": "PREDICTIONS_TABLE",
            "value": "/User/demos/network-operations/streaming/predictions"
          },
          {
            "name": "prediction_col",
            "value": "predictions"
          },
          {
            "name": "BATCHES_TO_GENERATE",
            "value": "20"
          }
        ],
        "config": {
          "spec.triggers.cron": {
            "kind": "cron",
            "attributes": {
              "interval": "1m"
            }
          }
        },
        "base_spec": {
          "apiVersion": "nuclio.io/v1",
          "kind": "Function",
          "metadata": {
            "annotations": {
              "nuclio.io/generated_by": "function generated from /User/demos/network-operations/notebooks/server.ipynb"
            },
            "labels": {},
            "name": "serving"
          },
          "spec": {
            "build": {
              "baseImage": "mlrun/ml-models",
              "commands": [],
              "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG9zCmltcG9ydCBwYW5kYXMgYXMgcGQKaW1wb3J0IGNsb3VkcGlja2xlCmltcG9ydCBudW1weSBhcyBucAppbXBvcnQganNvbgpmcm9tIG1scnVuIGltcG9ydCBnZXRfb3JfY3JlYXRlX2N0eAppbXBvcnQgc29ja2V0CgpkZWYgZ2V0X2RhdGFfcGFycXVldChjb250ZXh0KToKICAgIG1wYXRoID0gW29zLnBhdGguam9pbihjb250ZXh0LmZlYXR1cmVzX3RhYmxlLCBmaWxlKSBmb3IgZmlsZSBpbiBvcy5saXN0ZGlyKGNvbnRleHQuZmVhdHVyZXNfdGFibGUpIGlmIGZpbGUuZW5kc3dpdGgoKCdwYXJxdWV0JywgJ3BxJykpXQogICAgZmlsZXNfYnlfdXBkYXRlZCA9IHNvcnRlZChtcGF0aCwga2V5PW9zLnBhdGguZ2V0bXRpbWUsIHJldmVyc2U9VHJ1ZSkKICAgIHJldHVybiBwZC5yZWFkX3BhcnF1ZXQoZmlsZXNfYnlfdXBkYXRlZFs6MV1bMF0pCgpkZWYgc2F2ZV90b19wYXJxdWV0KGNvbnRleHQsIGRmOiBwZC5EYXRhRnJhbWUpOgogICAgcHJpbnQoJ1NhdmluZyBmZWF0dXJlcyB0byBQYXJxdWV0JykKICAgIAogICAga2V5cyA9IGxpc3QoW25hbWUgaWYgbmFtZSAhPSBjb250ZXh0Lm9yaWdfdGltZXN0YW1wX2NvbCBlbHNlIGNvbnRleHQudGltZXN0YW1wX2NvbCBmb3IgbmFtZSBpbiBkZi5pbmRleC5uYW1lc10pICsgW2NvbnRleHQubW9kZWxfY29sLCBjb250ZXh0Lm1vZGVsX2NsYXNzX2NvbCwgY29udGV4dC53b3JrZXJfY29sLCBjb250ZXh0Lmhvc3RuYW1lX2NvbF0KICAgIGRmID0gZGYucmVzZXRfaW5kZXgoKQogICAgZGZbY29udGV4dC50aW1lc3RhbXBfY29sXSA9IGRmLnBvcChjb250ZXh0Lm9yaWdfdGltZXN0YW1wX2NvbCkuYXN0eXBlKCdkYXRldGltZTY0W21zXScpCiAgICAKICAgIGRmID0gZGYuc2V0X2luZGV4KGtleXMpCiAgICAKICAgIGZpcnN0X3RpbWVzdGFtcCA9IGRmLmluZGV4WzBdWzBdLnN0cmZ0aW1lKCclWSVtJWRUJUglTSVTJykKICAgIGxhc3RfdGltZXN0YW1wID0gZGYuaW5kZXhbLTFdWzBdLnN0cmZ0aW1lKCclWSVtJWRUJUglTSVTJykKICAgIGZpbGVuYW1lID0gZmlyc3RfdGltZXN0YW1wICsgJy0nICsgbGFzdF90aW1lc3RhbXAgKyAnLnBhcnF1ZXQnCiAgICBmaWxlcGF0aCA9IG9zLnBhdGguam9pbihjb250ZXh0LnByZWRpY3Rpb25zX3RhYmxlLCBmaWxlbmFtZSkKICAgIHdpdGggb3BlbihmaWxlcGF0aCwgJ3diKycpIGFzIGY6CiAgICAgICAgZGYudG9fcGFycXVldChmKQoKZGVmIGluaXRfY29udGV4dChjb250ZXh0KToKICAgIAogICAgYmF0Y2hlc190b19nZW5lcmF0ZSA9IGludChvcy5nZXRlbnYoJ0JBVENIRVNfVE9fR0VORVJBVEUnLCAyMCkpCiAgICBzZXRhdHRyKGNvbnRleHQsICdiYXRjaGVzX3RvX2dlbmVyYXRlJywgYmF0Y2hlc190b19nZW5lcmF0ZSkKICAgIHNldGF0dHIoY29udGV4dCwgJ2JhdGNoZXNfZ2VuZXJhdGVkJywgMCkKICAgIAogICAgc2V0YXR0cihjb250ZXh0LCAnbW9kZWxfbmFtZScsIG9zLmdldGVudignbW9kZWxfbmFtZScsICduZXRvcHNfbW9kZWwnKSkKICAgIHNldGF0dHIoY29udGV4dCwgJ21vZGVsX2NvbCcsIG9zLmdldGVudignbW9kZWxfY29sJywgJ21vZGVsJykpCiAgICBzZXRhdHRyKGNvbnRleHQsICdtb2RlbF9jbGFzc19jb2wnLCBvcy5nZXRlbnYoJ21vZGVsX2NsYXNzX2NvbCcsICdjbGFzcycpKQogICAgc2V0YXR0cihjb250ZXh0LCAnd29ya2VyX2NvbCcsIG9zLmdldGVudignd29ya2VyX2NvbCcsICd3b3JrZXInKSkKICAgIHNldGF0dHIoY29udGV4dCwgJ2hvc3RuYW1lX2NvbCcsIG9zLmdldGVudignaG9zdG5hbWVfY29sJywgJ2hvc3RuYW1lJykpCiAgICBzZXRhdHRyKGNvbnRleHQsICd0aW1lc3RhbXBfY29sJywgb3MuZ2V0ZW52KCd0aW1lc3RhbXBfY29sJywgJ3doZW4nKSkKICAgIHNldGF0dHIoY29udGV4dCwgJ29yaWdfdGltZXN0YW1wX2NvbCcsIG9zLmdldGVudignb3JpZ190aW1lc3RhbXBfY29sJywgJ3RpbWVzdGFtcCcpKQogICAgc2V0YXR0cihjb250ZXh0LCAnZmVhdHVyZXNfdGFibGUnLCBvcy5nZXRlbnYoJ0ZFQVRVUkVTX1RBQkxFJywgJ25ldG9wc19mZWF0dXJlcycpKQogICAgc2V0YXR0cihjb250ZXh0LCAncHJlZGljdGlvbnNfdGFibGUnLCBvcy5nZXRlbnYoJ1BSRURJQ1RJT05TX1RBQkxFJywgJ25ldG9wc19wcmVkaWN0aW9ucycpKQogICAgc2V0YXR0cihjb250ZXh0LCAncHJlZGljdGlvbl9jb2wnLCBvcy5nZXRlbnYoJ3ByZWRpY3Rpb25fY29sJywgJ3ByZWRpY3Rpb24nKSkKICAgIAogICAgbW9kZWxfcGF0aCA9IG9zLmVudmlyb25bJ21vZGVsX3BhdGgnXQogICAgaWYgbW9kZWxfcGF0aC5zdGFydHN3aXRoKCdzdG9yZTovLycpOgogICAgICAgIG1sY3R4ID0gZ2V0X29yX2NyZWF0ZV9jdHgoJ2luZmVyZW5jZScpCiAgICAgICAgbW9kZWwgPSBtbGN0eC5nZXRfZGF0YWl0ZW0obW9kZWxfcGF0aCkKICAgICAgICBtb2RlbF9wYXRoID0gb3MucGF0aC5qb2luKG1vZGVsLnVybCwgJ21vZGVsLnBrbCcpCiAgICB3aXRoIG9wZW4obW9kZWxfcGF0aCwgJ3JiJykgYXMgZjoKICAgICAgICBtb2RlbCA9IGNsb3VkcGlja2xlLmxvYWQoZikKICAgIHNldGF0dHIoY29udGV4dCwgJ21vZGVsJywgbW9kZWwpCiAgICBzZXRhdHRyKGNvbnRleHQsICdtb2RlbF9jbGFzcycsIHR5cGUobW9kZWwpLl9fbmFtZV9fKQogICAgCiAgICBmaWxlcGF0aCA9IG9zLnBhdGguam9pbihjb250ZXh0LnByZWRpY3Rpb25zX3RhYmxlKQogICAgaWYgbm90IG9zLnBhdGguZXhpc3RzKGZpbGVwYXRoKToKICAgICAgICBvcy5tYWtlZGlycyhmaWxlcGF0aCkKCmRlZiBoYW5kbGVyKGNvbnRleHQsIGV2ZW50KToKICAgIAogICAgaWYgKGNvbnRleHQuYmF0Y2hlc190b19nZW5lcmF0ZSA9PSAtMSkgb3IgKGNvbnRleHQuYmF0Y2hlc19nZW5lcmF0ZWQgPD0gY29udGV4dC5iYXRjaGVzX3RvX2dlbmVyYXRlKToKICAgIAogICAgICAgIGlmIGdldGF0dHIoZXZlbnQudHJpZ2dlciwgJ2tpbmQnLCAnY3JvbicpID09ICdjcm9uJzoKICAgICAgICAgICAgZGYgPSBnZXRfZGF0YV9wYXJxdWV0KGNvbnRleHQpCgogICAgICAgICAgICBkZltjb250ZXh0LnByZWRpY3Rpb25fY29sXSA9IGNvbnRleHQubW9kZWwucHJlZGljdChkZi52YWx1ZXMpCgogICAgICAgICAgICBkZltjb250ZXh0Lm1vZGVsX2NvbF0gPSBjb250ZXh0Lm1vZGVsX25hbWUKICAgICAgICAgICAgZGZbY29udGV4dC5tb2RlbF9jbGFzc19jb2xdID0gY29udGV4dC5tb2RlbF9jbGFzcwogICAgICAgICAgICBkZltjb250ZXh0Lndvcmtlcl9jb2xdID0gY29udGV4dC53b3JrZXJfaWQKICAgICAgICAgICAgZGZbY29udGV4dC5ob3N0bmFtZV9jb2xdID0gc29ja2V0LmdldGhvc3RuYW1lKCkKCiAgICAgICAgICAgIHNhdmVfdG9fcGFycXVldChjb250ZXh0LCBkZikKICAgICAgICBlbHNlOgogICAgICAgICAgICBib2R5ID0ganNvbi5sb2FkcyhldmVudC5ib2R5KQogICAgICAgICAgICBmZWF0cyA9IG5wLmFzYXJyYXkoYm9keVsnaW5zdGFuY2VzJ10pCiAgICAgICAgICAgIHJlc3VsdDogbnAubmRhcnJheSA9IGNvbnRleHQubW9kZWwucHJlZGljdChmZWF0cykKICAgICAgICAgICAgcmV0dXJuIHJlc3VsdC50b2xpc3QoKQogICAgICAgIAogICAgICAgIGNvbnRleHQuYmF0Y2hlc19nZW5lcmF0ZWQgKz0gMQoK",
              "noBaseImagesPull": true
            },
            "env": [
              {
                "name": "METRICS_TABLE",
                "value": "${data_path}"
              },
              {
                "name": "FEATURES_TABLE",
                "value": "${streaming_path}/features"
              },
              {
                "name": "PREDICTIONS_TABLE",
                "value": "${streaming_path}/predictions"
              },
              {
                "name": "BATCHES_TO_GENERATE",
                "value": "20"
              },
              {
                "name": "model_path",
                "value": "${base_path}/artifacts/model/1/model.pkl"
              },
              {
                "name": "model_name",
                "value": "netops_predictor_v1"
              },
              {
                "name": "model_class",
                "value": "MLRunModel"
              },
              {
                "name": "model_col",
                "value": "model"
              },
              {
                "name": "model_class_col",
                "value": "class"
              },
              {
                "name": "prediction_col",
                "value": "predictions"
              },
              {
                "name": "worker_col",
                "value": "worker"
              },
              {
                "name": "hostname_col",
                "value": "hostname"
              },
              {
                "name": "timestamp_col",
                "value": "when"
              },
              {
                "name": "orig_timestamp_col",
                "value": "timestamp"
              }
            ],
            "handler": "server:handler",
            "runtime": "python:3.6",
            "volumes": []
          }
        },
        "source": "",
        "image_pull_policy": "Always",
        "build": {
          "commands": [],
          "origin_filename": "/User/demos/network-operations/notebooks/server.ipynb"
        },
        "mount_applied": true,
        "affinity": null
      },
      "status": {
        "state": "ready",
        "nuclio_name": "network-operations-admin-serving-v1",
        "address": "default-tenant.app.vmdev36.lab.iguazeng.com:31436",
        "internal_invocation_urls": [
          "nuclio-network-operations-admin-serving-v1.default-tenant.svc.cluster.local:8080"
        ],
        "external_invocation_urls": [
          "default-tenant.app.vmdev36.lab.iguazeng.com:31436"
        ]
      },
      "verbose": false
    },
    {
      "kind": "remote",
      "metadata": {
        "name": "serving",
        "tag": "",
        "hash": "ed197116ae5c16ffc3f24f7f7d5d3b42f78c43a6",
        "project": "network-operations-admin",
        "categories": [],
        "updated": "2021-08-29T20:28:14.409805+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "",
        "description": "",
        "min_replicas": 1,
        "max_replicas": 4,
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          },
          {
            "name": "model_path",
            "value": "store://artifacts/network-operations-admin/train_model:cd151783-05df-4f9c-a9db-3aa674e4a058"
          },
          {
            "name": "FEATURES_TABLE",
            "value": "/User/demos/network-operations/streaming/features"
          },
          {
            "name": "PREDICTIONS_TABLE",
            "value": "/User/demos/network-operations/streaming/predictions"
          },
          {
            "name": "prediction_col",
            "value": "predictions"
          },
          {
            "name": "BATCHES_TO_GENERATE",
            "value": "20"
          }
        ],
        "config": {
          "spec.triggers.cron": {
            "kind": "cron",
            "attributes": {
              "interval": "1m"
            }
          },
          "metadata.labels.mlrun/class": "remote",
          "spec.serviceType": "NodePort",
          "spec.minReplicas": 1,
          "spec.maxReplicas": 4
        },
        "base_spec": {
          "apiVersion": "nuclio.io/v1",
          "kind": "Function",
          "metadata": {
            "annotations": {
              "nuclio.io/generated_by": "function generated from /User/demos/network-operations/notebooks/server.ipynb"
            },
            "labels": {
              "mlrun/class": "remote",
              "nuclio.io/tag": "v1",
              "nuclio.io/project-name": "network-operations-admin"
            },
            "name": "network-operations-admin-serving-v1"
          },
          "spec": {
            "build": {
              "baseImage": "mlrun/ml-models:0.7.0-rc11",
              "commands": [],
              "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG9zCmltcG9ydCBwYW5kYXMgYXMgcGQKaW1wb3J0IGNsb3VkcGlja2xlCmltcG9ydCBudW1weSBhcyBucAppbXBvcnQganNvbgpmcm9tIG1scnVuIGltcG9ydCBnZXRfb3JfY3JlYXRlX2N0eAppbXBvcnQgc29ja2V0CgpkZWYgZ2V0X2RhdGFfcGFycXVldChjb250ZXh0KToKICAgIG1wYXRoID0gW29zLnBhdGguam9pbihjb250ZXh0LmZlYXR1cmVzX3RhYmxlLCBmaWxlKSBmb3IgZmlsZSBpbiBvcy5saXN0ZGlyKGNvbnRleHQuZmVhdHVyZXNfdGFibGUpIGlmIGZpbGUuZW5kc3dpdGgoKCdwYXJxdWV0JywgJ3BxJykpXQogICAgZmlsZXNfYnlfdXBkYXRlZCA9IHNvcnRlZChtcGF0aCwga2V5PW9zLnBhdGguZ2V0bXRpbWUsIHJldmVyc2U9VHJ1ZSkKICAgIHJldHVybiBwZC5yZWFkX3BhcnF1ZXQoZmlsZXNfYnlfdXBkYXRlZFs6MV1bMF0pCgpkZWYgc2F2ZV90b19wYXJxdWV0KGNvbnRleHQsIGRmOiBwZC5EYXRhRnJhbWUpOgogICAgcHJpbnQoJ1NhdmluZyBmZWF0dXJlcyB0byBQYXJxdWV0JykKICAgIAogICAga2V5cyA9IGxpc3QoW25hbWUgaWYgbmFtZSAhPSBjb250ZXh0Lm9yaWdfdGltZXN0YW1wX2NvbCBlbHNlIGNvbnRleHQudGltZXN0YW1wX2NvbCBmb3IgbmFtZSBpbiBkZi5pbmRleC5uYW1lc10pICsgW2NvbnRleHQubW9kZWxfY29sLCBjb250ZXh0Lm1vZGVsX2NsYXNzX2NvbCwgY29udGV4dC53b3JrZXJfY29sLCBjb250ZXh0Lmhvc3RuYW1lX2NvbF0KICAgIGRmID0gZGYucmVzZXRfaW5kZXgoKQogICAgZGZbY29udGV4dC50aW1lc3RhbXBfY29sXSA9IGRmLnBvcChjb250ZXh0Lm9yaWdfdGltZXN0YW1wX2NvbCkuYXN0eXBlKCdkYXRldGltZTY0W21zXScpCiAgICAKICAgIGRmID0gZGYuc2V0X2luZGV4KGtleXMpCiAgICAKICAgIGZpcnN0X3RpbWVzdGFtcCA9IGRmLmluZGV4WzBdWzBdLnN0cmZ0aW1lKCclWSVtJWRUJUglTSVTJykKICAgIGxhc3RfdGltZXN0YW1wID0gZGYuaW5kZXhbLTFdWzBdLnN0cmZ0aW1lKCclWSVtJWRUJUglTSVTJykKICAgIGZpbGVuYW1lID0gZmlyc3RfdGltZXN0YW1wICsgJy0nICsgbGFzdF90aW1lc3RhbXAgKyAnLnBhcnF1ZXQnCiAgICBmaWxlcGF0aCA9IG9zLnBhdGguam9pbihjb250ZXh0LnByZWRpY3Rpb25zX3RhYmxlLCBmaWxlbmFtZSkKICAgIHdpdGggb3BlbihmaWxlcGF0aCwgJ3diKycpIGFzIGY6CiAgICAgICAgZGYudG9fcGFycXVldChmKQoKZGVmIGluaXRfY29udGV4dChjb250ZXh0KToKICAgIAogICAgYmF0Y2hlc190b19nZW5lcmF0ZSA9IGludChvcy5nZXRlbnYoJ0JBVENIRVNfVE9fR0VORVJBVEUnLCAyMCkpCiAgICBzZXRhdHRyKGNvbnRleHQsICdiYXRjaGVzX3RvX2dlbmVyYXRlJywgYmF0Y2hlc190b19nZW5lcmF0ZSkKICAgIHNldGF0dHIoY29udGV4dCwgJ2JhdGNoZXNfZ2VuZXJhdGVkJywgMCkKICAgIAogICAgc2V0YXR0cihjb250ZXh0LCAnbW9kZWxfbmFtZScsIG9zLmdldGVudignbW9kZWxfbmFtZScsICduZXRvcHNfbW9kZWwnKSkKICAgIHNldGF0dHIoY29udGV4dCwgJ21vZGVsX2NvbCcsIG9zLmdldGVudignbW9kZWxfY29sJywgJ21vZGVsJykpCiAgICBzZXRhdHRyKGNvbnRleHQsICdtb2RlbF9jbGFzc19jb2wnLCBvcy5nZXRlbnYoJ21vZGVsX2NsYXNzX2NvbCcsICdjbGFzcycpKQogICAgc2V0YXR0cihjb250ZXh0LCAnd29ya2VyX2NvbCcsIG9zLmdldGVudignd29ya2VyX2NvbCcsICd3b3JrZXInKSkKICAgIHNldGF0dHIoY29udGV4dCwgJ2hvc3RuYW1lX2NvbCcsIG9zLmdldGVudignaG9zdG5hbWVfY29sJywgJ2hvc3RuYW1lJykpCiAgICBzZXRhdHRyKGNvbnRleHQsICd0aW1lc3RhbXBfY29sJywgb3MuZ2V0ZW52KCd0aW1lc3RhbXBfY29sJywgJ3doZW4nKSkKICAgIHNldGF0dHIoY29udGV4dCwgJ29yaWdfdGltZXN0YW1wX2NvbCcsIG9zLmdldGVudignb3JpZ190aW1lc3RhbXBfY29sJywgJ3RpbWVzdGFtcCcpKQogICAgc2V0YXR0cihjb250ZXh0LCAnZmVhdHVyZXNfdGFibGUnLCBvcy5nZXRlbnYoJ0ZFQVRVUkVTX1RBQkxFJywgJ25ldG9wc19mZWF0dXJlcycpKQogICAgc2V0YXR0cihjb250ZXh0LCAncHJlZGljdGlvbnNfdGFibGUnLCBvcy5nZXRlbnYoJ1BSRURJQ1RJT05TX1RBQkxFJywgJ25ldG9wc19wcmVkaWN0aW9ucycpKQogICAgc2V0YXR0cihjb250ZXh0LCAncHJlZGljdGlvbl9jb2wnLCBvcy5nZXRlbnYoJ3ByZWRpY3Rpb25fY29sJywgJ3ByZWRpY3Rpb24nKSkKICAgIAogICAgbW9kZWxfcGF0aCA9IG9zLmVudmlyb25bJ21vZGVsX3BhdGgnXQogICAgaWYgbW9kZWxfcGF0aC5zdGFydHN3aXRoKCdzdG9yZTovLycpOgogICAgICAgIG1sY3R4ID0gZ2V0X29yX2NyZWF0ZV9jdHgoJ2luZmVyZW5jZScpCiAgICAgICAgbW9kZWwgPSBtbGN0eC5nZXRfZGF0YWl0ZW0obW9kZWxfcGF0aCkKICAgICAgICBtb2RlbF9wYXRoID0gb3MucGF0aC5qb2luKG1vZGVsLnVybCwgJ21vZGVsLnBrbCcpCiAgICB3aXRoIG9wZW4obW9kZWxfcGF0aCwgJ3JiJykgYXMgZjoKICAgICAgICBtb2RlbCA9IGNsb3VkcGlja2xlLmxvYWQoZikKICAgIHNldGF0dHIoY29udGV4dCwgJ21vZGVsJywgbW9kZWwpCiAgICBzZXRhdHRyKGNvbnRleHQsICdtb2RlbF9jbGFzcycsIHR5cGUobW9kZWwpLl9fbmFtZV9fKQogICAgCiAgICBmaWxlcGF0aCA9IG9zLnBhdGguam9pbihjb250ZXh0LnByZWRpY3Rpb25zX3RhYmxlKQogICAgaWYgbm90IG9zLnBhdGguZXhpc3RzKGZpbGVwYXRoKToKICAgICAgICBvcy5tYWtlZGlycyhmaWxlcGF0aCkKCmRlZiBoYW5kbGVyKGNvbnRleHQsIGV2ZW50KToKICAgIAogICAgaWYgKGNvbnRleHQuYmF0Y2hlc190b19nZW5lcmF0ZSA9PSAtMSkgb3IgKGNvbnRleHQuYmF0Y2hlc19nZW5lcmF0ZWQgPD0gY29udGV4dC5iYXRjaGVzX3RvX2dlbmVyYXRlKToKICAgIAogICAgICAgIGlmIGdldGF0dHIoZXZlbnQudHJpZ2dlciwgJ2tpbmQnLCAnY3JvbicpID09ICdjcm9uJzoKICAgICAgICAgICAgZGYgPSBnZXRfZGF0YV9wYXJxdWV0KGNvbnRleHQpCgogICAgICAgICAgICBkZltjb250ZXh0LnByZWRpY3Rpb25fY29sXSA9IGNvbnRleHQubW9kZWwucHJlZGljdChkZi52YWx1ZXMpCgogICAgICAgICAgICBkZltjb250ZXh0Lm1vZGVsX2NvbF0gPSBjb250ZXh0Lm1vZGVsX25hbWUKICAgICAgICAgICAgZGZbY29udGV4dC5tb2RlbF9jbGFzc19jb2xdID0gY29udGV4dC5tb2RlbF9jbGFzcwogICAgICAgICAgICBkZltjb250ZXh0Lndvcmtlcl9jb2xdID0gY29udGV4dC53b3JrZXJfaWQKICAgICAgICAgICAgZGZbY29udGV4dC5ob3N0bmFtZV9jb2xdID0gc29ja2V0LmdldGhvc3RuYW1lKCkKCiAgICAgICAgICAgIHNhdmVfdG9fcGFycXVldChjb250ZXh0LCBkZikKICAgICAgICBlbHNlOgogICAgICAgICAgICBib2R5ID0ganNvbi5sb2FkcyhldmVudC5ib2R5KQogICAgICAgICAgICBmZWF0cyA9IG5wLmFzYXJyYXkoYm9keVsnaW5zdGFuY2VzJ10pCiAgICAgICAgICAgIHJlc3VsdDogbnAubmRhcnJheSA9IGNvbnRleHQubW9kZWwucHJlZGljdChmZWF0cykKICAgICAgICAgICAgcmV0dXJuIHJlc3VsdC50b2xpc3QoKQogICAgICAgIAogICAgICAgIGNvbnRleHQuYmF0Y2hlc19nZW5lcmF0ZWQgKz0gMQoK",
              "noBaseImagesPull": true
            },
            "env": [
              {
                "name": "METRICS_TABLE",
                "value": "${data_path}"
              },
              {
                "name": "FEATURES_TABLE",
                "value": "/User/demos/network-operations/streaming/features"
              },
              {
                "name": "PREDICTIONS_TABLE",
                "value": "/User/demos/network-operations/streaming/predictions"
              },
              {
                "name": "BATCHES_TO_GENERATE",
                "value": "20"
              },
              {
                "name": "model_path",
                "value": "store://artifacts/network-operations-admin/train_model:cd151783-05df-4f9c-a9db-3aa674e4a058"
              },
              {
                "name": "model_name",
                "value": "netops_predictor_v1"
              },
              {
                "name": "model_class",
                "value": "MLRunModel"
              },
              {
                "name": "model_col",
                "value": "model"
              },
              {
                "name": "model_class_col",
                "value": "class"
              },
              {
                "name": "prediction_col",
                "value": "predictions"
              },
              {
                "name": "worker_col",
                "value": "worker"
              },
              {
                "name": "hostname_col",
                "value": "hostname"
              },
              {
                "name": "timestamp_col",
                "value": "when"
              },
              {
                "name": "orig_timestamp_col",
                "value": "timestamp"
              },
              {
                "name": "V3IO_API",
                "value": "v3io-webapi.default-tenant.svc:8081"
              },
              {
                "name": "V3IO_USERNAME",
                "value": "admin"
              },
              {
                "name": "V3IO_ACCESS_KEY",
                "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              },
              {
                "name": "V3IO_FRAMESD",
                "value": "framesd:8081"
              },
              {
                "name": "MLRUN_DEFAULT_PROJECT",
                "value": "network-operations-admin"
              },
              {
                "name": "MLRUN_DBPATH",
                "value": "http://mlrun-api:8080"
              },
              {
                "name": "MLRUN_NAMESPACE",
                "value": "default-tenant"
              }
            ],
            "handler": "server:handler",
            "runtime": "python:3.6",
            "volumes": [
              {
                "volume": {
                  "flexVolume": {
                    "driver": "v3io/fuse",
                    "options": {
                      "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
                    }
                  },
                  "name": "v3io"
                },
                "volumeMount": {
                  "mountPath": "/v3io",
                  "name": "v3io",
                  "subPath": ""
                }
              },
              {
                "volume": {
                  "flexVolume": {
                    "driver": "v3io/fuse",
                    "options": {
                      "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
                    }
                  },
                  "name": "v3io"
                },
                "volumeMount": {
                  "mountPath": "/User",
                  "name": "v3io",
                  "subPath": "users/admin"
                }
              }
            ],
            "triggers": {
              "cron": {
                "kind": "cron",
                "attributes": {
                  "interval": "1m"
                }
              }
            },
            "serviceType": "NodePort",
            "minReplicas": 1,
            "maxReplicas": 4
          }
        },
        "source": "",
        "image_pull_policy": "Always",
        "function_kind": "mlrun",
        "build": {
          "commands": [],
          "origin_filename": "/User/demos/network-operations/notebooks/server.ipynb"
        },
        "mount_applied": true,
        "priority_class_name": "",
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "name": "model-server-tester",
        "tag": "",
        "hash": "d6a716fa9a1b361ca000e86d869c88477f1d5124",
        "project": "network-operations-admin",
        "labels": {
          "author": "yaronh"
        },
        "categories": [
          "monitoring",
          "model-serving"
        ],
        "updated": "2021-08-29T20:28:22.922532+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "model_server_tester",
        "entry_points": {
          "model_server_tester": {
            "name": "model_server_tester",
            "doc": "Test a model server",
            "parameters": [
              {
                "name": "context",
                "default": ""
              },
              {
                "name": "table",
                "type": "DataItem",
                "doc": "csv/parquet table with test data",
                "default": ""
              },
              {
                "name": "addr",
                "type": "str",
                "doc": "function address/url",
                "default": ""
              },
              {
                "name": "label_column",
                "type": "str",
                "doc": "name of the label column in table",
                "default": "label"
              },
              {
                "name": "model",
                "type": "str",
                "doc": "tested model name",
                "default": ""
              },
              {
                "name": "match_err",
                "type": "bool",
                "doc": "raise error on validation (require proper test set)",
                "default": false
              },
              {
                "name": "rows",
                "type": "int",
                "doc": "number of rows to use from test set",
                "default": 20
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 14
          }
        },
        "description": "test model servers",
        "image_pull_policy": "Always",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG9zCmltcG9ydCBwYW5kYXMgYXMgcGQKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBqc29uCmltcG9ydCBudW1weSBhcyBucAoKZnJvbSBkYXRldGltZSBpbXBvcnQgZGF0ZXRpbWUKZnJvbSBtbHJ1bi5kYXRhc3RvcmUgaW1wb3J0IERhdGFJdGVtCmZyb20gbWxydW4uYXJ0aWZhY3RzIGltcG9ydCBnZXRfbW9kZWwsIENoYXJ0QXJ0aWZhY3QKCgpkZWYgbW9kZWxfc2VydmVyX3Rlc3RlcigKICAgIGNvbnRleHQsCiAgICB0YWJsZTogRGF0YUl0ZW0sCiAgICBhZGRyOiBzdHIsCiAgICBsYWJlbF9jb2x1bW46IHN0ciA9ICJsYWJlbCIsCiAgICBtb2RlbDogc3RyID0gIiIsCiAgICBtYXRjaF9lcnI6IGJvb2wgPSBGYWxzZSwKICAgIHJvd3M6IGludCA9IDIwLAopOgogICAgIiIiVGVzdCBhIG1vZGVsIHNlcnZlcgoKICAgIDpwYXJhbSB0YWJsZTogICAgICAgICBjc3YvcGFycXVldCB0YWJsZSB3aXRoIHRlc3QgZGF0YQogICAgOnBhcmFtIGFkZHI6ICAgICAgICAgIGZ1bmN0aW9uIGFkZHJlc3MvdXJsCiAgICA6cGFyYW0gbGFiZWxfY29sdW1uOiAgbmFtZSBvZiB0aGUgbGFiZWwgY29sdW1uIGluIHRhYmxlCiAgICA6cGFyYW0gbW9kZWw6ICAgICAgICAgdGVzdGVkIG1vZGVsIG5hbWUKICAgIDpwYXJhbSBtYXRjaF9lcnI6ICAgICByYWlzZSBlcnJvciBvbiB2YWxpZGF0aW9uIChyZXF1aXJlIHByb3BlciB0ZXN0IHNldCkKICAgIDpwYXJhbSByb3dzOiAgICAgICAgICBudW1iZXIgb2Ygcm93cyB0byB1c2UgZnJvbSB0ZXN0IHNldAogICAgIiIiCgogICAgdGFibGUgPSB0YWJsZS5hc19kZigpCgogICAgeV9saXN0ID0gdGFibGUucG9wKGxhYmVsX2NvbHVtbikudmFsdWVzLnRvbGlzdCgpCiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKGYidGVzdGluZyB3aXRoIGRhdGFzZXQgYWdhaW5zdCB7YWRkcn0sIG1vZGVsOiB7bW9kZWx9IikKICAgIGlmIHJvd3MgYW5kIHJvd3MgPCB0YWJsZS5zaGFwZVswXToKICAgICAgICB0YWJsZSA9IHRhYmxlLnNhbXBsZShyb3dzKQoKICAgIGNvdW50ID0gZXJyX2NvdW50ID0gbWF0Y2ggPSAwCiAgICB0aW1lcyA9IFtdCiAgICBmb3IgeCwgeSBpbiB6aXAodGFibGUudmFsdWVzLCB5X2xpc3QpOgogICAgICAgIGNvdW50ICs9IDEKICAgICAgICBldmVudF9kYXRhID0ganNvbi5kdW1wcyh7Imluc3RhbmNlcyI6IFt4LnRvbGlzdCgpXX0pCiAgICAgICAgaGFkX2VyciA9IEZhbHNlCiAgICAgICAgdHJ5OgogICAgICAgICAgICBzdGFydCA9IGRhdGV0aW1lLm5vdygpCiAgICAgICAgICAgIHJlc3AgPSByZXF1ZXN0cy5wdXQoZiJ7YWRkcn0ve21vZGVsfS9wcmVkaWN0IiwganNvbj1ldmVudF9kYXRhKQogICAgICAgICAgICBpZiBub3QgcmVzcC5vazoKICAgICAgICAgICAgICAgIGNvbnRleHQubG9nZ2VyLmVycm9yKGYiYmFkIGZ1bmN0aW9uIHJlc3AhIVxue3Jlc3AudGV4dH0iKQogICAgICAgICAgICAgICAgZXJyX2NvdW50ICs9IDEKICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgIHRpbWVzLmFwcGVuZCgoZGF0ZXRpbWUubm93KCkgLSBzdGFydCkubWljcm9zZWNvbmRzKQoKICAgICAgICBleGNlcHQgT1NFcnJvciBhcyBlcnI6CiAgICAgICAgICAgIGNvbnRleHQubG9nZ2VyLmVycm9yKGYiZXJyb3IgaW4gcmVxdWVzdCwgZGF0YTp7ZXZlbnRfZGF0YX0sIGVycm9yOiB7ZXJyfSIpCiAgICAgICAgICAgIGVycl9jb3VudCArPSAxCiAgICAgICAgICAgIGNvbnRpbnVlCgogICAgICAgIHlfcmVzcCA9IHJlc3AuanNvbigpWzBdCiAgICAgICAgaWYgeSA9PSB5X3Jlc3A6CiAgICAgICAgICAgIG1hdGNoICs9IDEKCiAgICBjb250ZXh0LmxvZ19yZXN1bHQoInRvdGFsX3Rlc3RzIiwgY291bnQpCiAgICBjb250ZXh0LmxvZ19yZXN1bHQoImVycm9ycyIsIGVycl9jb3VudCkKICAgIGNvbnRleHQubG9nX3Jlc3VsdCgibWF0Y2giLCBtYXRjaCkKICAgIGlmIGNvdW50IC0gZXJyX2NvdW50ID4gMDoKICAgICAgICB0aW1lc19hcnIgPSBucC5hcnJheSh0aW1lcykKICAgICAgICBjb250ZXh0LmxvZ19yZXN1bHQoImF2Z19sYXRlbmN5IiwgaW50KG5wLm1lYW4odGltZXNfYXJyKSkpCiAgICAgICAgY29udGV4dC5sb2dfcmVzdWx0KCJtaW5fbGF0ZW5jeSIsIGludChucC5hbWluKHRpbWVzX2FycikpKQogICAgICAgIGNvbnRleHQubG9nX3Jlc3VsdCgibWF4X2xhdGVuY3kiLCBpbnQobnAuYW1heCh0aW1lc19hcnIpKSkKCiAgICAgICAgY2hhcnQgPSBDaGFydEFydGlmYWN0KCJsYXRlbmN5IiwgaGVhZGVyPVsiVGVzdCIsICJMYXRlbmN5IChtaWNyb3NlYykiXSkKICAgICAgICBmb3IgaSBpbiByYW5nZShsZW4odGltZXMpKToKICAgICAgICAgICAgY2hhcnQuYWRkX3JvdyhbaSArIDEsIGludCh0aW1lc1tpXSldKQogICAgICAgIGNvbnRleHQubG9nX2FydGlmYWN0KGNoYXJ0KQoKICAgIGNvbnRleHQubG9nZ2VyLmluZm8oCiAgICAgICAgZiJydW4ge2NvdW50fSB0ZXN0cywge2Vycl9jb3VudH0gZXJyb3JzIGFuZCB7bWF0Y2h9IG1hdGNoIGV4cGVjdGVkIHZhbHVlIgogICAgKQoKICAgIGlmIGVycl9jb3VudDoKICAgICAgICByYWlzZSBWYWx1ZUVycm9yKGYiZmFpbGVkIG9uIHtlcnJfY291bnR9IHRlc3RzIG9mIHtjb3VudH0iKQoKICAgIGlmIG1hdGNoX2VyciBhbmQgbWF0Y2ggIT0gY291bnQ6CiAgICAgICAgcmFpc2UgVmFsdWVFcnJvcihmIm9ubHkge21hdGNofSByZXN1bHRzIG1hdGNoIG91dCBvZiB7Y291bnR9IikK",
          "commands": []
        },
        "mount_applied": true,
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "model-server-tester",
        "tag": "latest",
        "hash": "7c608ffa5b235a252df415d2a91f8f9c26edd143",
        "project": "network-operations-admin",
        "labels": {
          "author": "yaronh"
        },
        "categories": [
          "monitoring",
          "model-serving"
        ],
        "updated": "2021-08-29T20:28:23.097787+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "model_server_tester",
        "entry_points": {
          "model_server_tester": {
            "name": "model_server_tester",
            "doc": "Test a model server",
            "parameters": [
              {
                "name": "context",
                "default": ""
              },
              {
                "name": "table",
                "type": "DataItem",
                "doc": "csv/parquet table with test data",
                "default": ""
              },
              {
                "name": "addr",
                "type": "str",
                "doc": "function address/url",
                "default": ""
              },
              {
                "name": "label_column",
                "type": "str",
                "doc": "name of the label column in table",
                "default": "label"
              },
              {
                "name": "model",
                "type": "str",
                "doc": "tested model name",
                "default": ""
              },
              {
                "name": "match_err",
                "type": "bool",
                "doc": "raise error on validation (require proper test set)",
                "default": false
              },
              {
                "name": "rows",
                "type": "int",
                "doc": "number of rows to use from test set",
                "default": 20
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 14
          }
        },
        "description": "test model servers",
        "image_pull_policy": "Always",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG9zCmltcG9ydCBwYW5kYXMgYXMgcGQKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBqc29uCmltcG9ydCBudW1weSBhcyBucAoKZnJvbSBkYXRldGltZSBpbXBvcnQgZGF0ZXRpbWUKZnJvbSBtbHJ1bi5kYXRhc3RvcmUgaW1wb3J0IERhdGFJdGVtCmZyb20gbWxydW4uYXJ0aWZhY3RzIGltcG9ydCBnZXRfbW9kZWwsIENoYXJ0QXJ0aWZhY3QKCgpkZWYgbW9kZWxfc2VydmVyX3Rlc3RlcigKICAgIGNvbnRleHQsCiAgICB0YWJsZTogRGF0YUl0ZW0sCiAgICBhZGRyOiBzdHIsCiAgICBsYWJlbF9jb2x1bW46IHN0ciA9ICJsYWJlbCIsCiAgICBtb2RlbDogc3RyID0gIiIsCiAgICBtYXRjaF9lcnI6IGJvb2wgPSBGYWxzZSwKICAgIHJvd3M6IGludCA9IDIwLAopOgogICAgIiIiVGVzdCBhIG1vZGVsIHNlcnZlcgoKICAgIDpwYXJhbSB0YWJsZTogICAgICAgICBjc3YvcGFycXVldCB0YWJsZSB3aXRoIHRlc3QgZGF0YQogICAgOnBhcmFtIGFkZHI6ICAgICAgICAgIGZ1bmN0aW9uIGFkZHJlc3MvdXJsCiAgICA6cGFyYW0gbGFiZWxfY29sdW1uOiAgbmFtZSBvZiB0aGUgbGFiZWwgY29sdW1uIGluIHRhYmxlCiAgICA6cGFyYW0gbW9kZWw6ICAgICAgICAgdGVzdGVkIG1vZGVsIG5hbWUKICAgIDpwYXJhbSBtYXRjaF9lcnI6ICAgICByYWlzZSBlcnJvciBvbiB2YWxpZGF0aW9uIChyZXF1aXJlIHByb3BlciB0ZXN0IHNldCkKICAgIDpwYXJhbSByb3dzOiAgICAgICAgICBudW1iZXIgb2Ygcm93cyB0byB1c2UgZnJvbSB0ZXN0IHNldAogICAgIiIiCgogICAgdGFibGUgPSB0YWJsZS5hc19kZigpCgogICAgeV9saXN0ID0gdGFibGUucG9wKGxhYmVsX2NvbHVtbikudmFsdWVzLnRvbGlzdCgpCiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKGYidGVzdGluZyB3aXRoIGRhdGFzZXQgYWdhaW5zdCB7YWRkcn0sIG1vZGVsOiB7bW9kZWx9IikKICAgIGlmIHJvd3MgYW5kIHJvd3MgPCB0YWJsZS5zaGFwZVswXToKICAgICAgICB0YWJsZSA9IHRhYmxlLnNhbXBsZShyb3dzKQoKICAgIGNvdW50ID0gZXJyX2NvdW50ID0gbWF0Y2ggPSAwCiAgICB0aW1lcyA9IFtdCiAgICBmb3IgeCwgeSBpbiB6aXAodGFibGUudmFsdWVzLCB5X2xpc3QpOgogICAgICAgIGNvdW50ICs9IDEKICAgICAgICBldmVudF9kYXRhID0ganNvbi5kdW1wcyh7Imluc3RhbmNlcyI6IFt4LnRvbGlzdCgpXX0pCiAgICAgICAgaGFkX2VyciA9IEZhbHNlCiAgICAgICAgdHJ5OgogICAgICAgICAgICBzdGFydCA9IGRhdGV0aW1lLm5vdygpCiAgICAgICAgICAgIHJlc3AgPSByZXF1ZXN0cy5wdXQoZiJ7YWRkcn0ve21vZGVsfS9wcmVkaWN0IiwganNvbj1ldmVudF9kYXRhKQogICAgICAgICAgICBpZiBub3QgcmVzcC5vazoKICAgICAgICAgICAgICAgIGNvbnRleHQubG9nZ2VyLmVycm9yKGYiYmFkIGZ1bmN0aW9uIHJlc3AhIVxue3Jlc3AudGV4dH0iKQogICAgICAgICAgICAgICAgZXJyX2NvdW50ICs9IDEKICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgIHRpbWVzLmFwcGVuZCgoZGF0ZXRpbWUubm93KCkgLSBzdGFydCkubWljcm9zZWNvbmRzKQoKICAgICAgICBleGNlcHQgT1NFcnJvciBhcyBlcnI6CiAgICAgICAgICAgIGNvbnRleHQubG9nZ2VyLmVycm9yKGYiZXJyb3IgaW4gcmVxdWVzdCwgZGF0YTp7ZXZlbnRfZGF0YX0sIGVycm9yOiB7ZXJyfSIpCiAgICAgICAgICAgIGVycl9jb3VudCArPSAxCiAgICAgICAgICAgIGNvbnRpbnVlCgogICAgICAgIHlfcmVzcCA9IHJlc3AuanNvbigpWzBdCiAgICAgICAgaWYgeSA9PSB5X3Jlc3A6CiAgICAgICAgICAgIG1hdGNoICs9IDEKCiAgICBjb250ZXh0LmxvZ19yZXN1bHQoInRvdGFsX3Rlc3RzIiwgY291bnQpCiAgICBjb250ZXh0LmxvZ19yZXN1bHQoImVycm9ycyIsIGVycl9jb3VudCkKICAgIGNvbnRleHQubG9nX3Jlc3VsdCgibWF0Y2giLCBtYXRjaCkKICAgIGlmIGNvdW50IC0gZXJyX2NvdW50ID4gMDoKICAgICAgICB0aW1lc19hcnIgPSBucC5hcnJheSh0aW1lcykKICAgICAgICBjb250ZXh0LmxvZ19yZXN1bHQoImF2Z19sYXRlbmN5IiwgaW50KG5wLm1lYW4odGltZXNfYXJyKSkpCiAgICAgICAgY29udGV4dC5sb2dfcmVzdWx0KCJtaW5fbGF0ZW5jeSIsIGludChucC5hbWluKHRpbWVzX2FycikpKQogICAgICAgIGNvbnRleHQubG9nX3Jlc3VsdCgibWF4X2xhdGVuY3kiLCBpbnQobnAuYW1heCh0aW1lc19hcnIpKSkKCiAgICAgICAgY2hhcnQgPSBDaGFydEFydGlmYWN0KCJsYXRlbmN5IiwgaGVhZGVyPVsiVGVzdCIsICJMYXRlbmN5IChtaWNyb3NlYykiXSkKICAgICAgICBmb3IgaSBpbiByYW5nZShsZW4odGltZXMpKToKICAgICAgICAgICAgY2hhcnQuYWRkX3JvdyhbaSArIDEsIGludCh0aW1lc1tpXSldKQogICAgICAgIGNvbnRleHQubG9nX2FydGlmYWN0KGNoYXJ0KQoKICAgIGNvbnRleHQubG9nZ2VyLmluZm8oCiAgICAgICAgZiJydW4ge2NvdW50fSB0ZXN0cywge2Vycl9jb3VudH0gZXJyb3JzIGFuZCB7bWF0Y2h9IG1hdGNoIGV4cGVjdGVkIHZhbHVlIgogICAgKQoKICAgIGlmIGVycl9jb3VudDoKICAgICAgICByYWlzZSBWYWx1ZUVycm9yKGYiZmFpbGVkIG9uIHtlcnJfY291bnR9IHRlc3RzIG9mIHtjb3VudH0iKQoKICAgIGlmIG1hdGNoX2VyciBhbmQgbWF0Y2ggIT0gY291bnQ6CiAgICAgICAgcmFpc2UgVmFsdWVFcnJvcihmIm9ubHkge21hdGNofSByZXN1bHRzIG1hdGNoIG91dCBvZiB7Y291bnR9IikK",
          "commands": []
        },
        "mount_applied": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": {}
    },
    {
      "kind": "remote",
      "metadata": {
        "name": "create-feature-vector",
        "tag": "latest",
        "hash": "82cc2e32948c162c610851fdde768bd2764baefe",
        "project": "network-operations-admin",
        "categories": [],
        "updated": "2021-08-29T20:29:02.931410+00:00"
      },
      "spec": {
        "command": "http://default-tenant.app.vmdev36.lab.iguazeng.com:30027",
        "args": [],
        "image": "",
        "description": "",
        "min_replicas": 1,
        "max_replicas": 4,
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          },
          {
            "name": "aggregate_fn_url",
            "value": "hub://aggregate"
          },
          {
            "name": "METRICS_TABLE",
            "value": "/User/demos/network-operations/streaming/metrics"
          },
          {
            "name": "FEATURES_TABLE",
            "value": "/User/demos/network-operations/streaming/features"
          },
          {
            "name": "metrics",
            "value": "[\"cpu_utilization\", \"throughput\", \"packet_loss\", \"latency\"]"
          },
          {
            "name": "metric_aggs",
            "value": "[\"mean\", \"sum\", \"std\", \"var\", \"min\", \"max\", \"median\"]"
          },
          {
            "name": "suffix",
            "value": "daily"
          },
          {
            "name": "base_dataset",
            "value": "store://artifacts/network-operations-admin/train_test_set:cd151783-05df-4f9c-a9db-3aa674e4a058"
          },
          {
            "name": "label_col",
            "value": "is_error"
          },
          {
            "name": "BATCHES_TO_GENERATE",
            "value": "20"
          }
        ],
        "config": {
          "spec.triggers.cron": {
            "kind": "cron",
            "attributes": {
              "interval": "1m"
            }
          }
        },
        "base_spec": {
          "apiVersion": "nuclio.io/v1",
          "kind": "Function",
          "metadata": {
            "annotations": {
              "nuclio.io/generated_by": "function generated from /User/demos/network-operations/notebooks/preprocessor.ipynb"
            },
            "labels": {},
            "name": "create-feature-vector"
          },
          "spec": {
            "build": {
              "baseImage": "mlrun/ml-models",
              "commands": [],
              "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG9zCmltcG9ydCBwYW5kYXMgYXMgcGQKZnJvbSBtbHJ1bi5kYXRhc3RvcmUgaW1wb3J0IERhdGFJdGVtCmltcG9ydCBhc3QKCmZyb20gdHlwaW5nIGltcG9ydCBVbmlvbgpmcm9tIG1scnVuIGltcG9ydCBtbGNvbmYsIGltcG9ydF9mdW5jdGlvbiwgbW91bnRfdjNpbywgTmV3VGFzaywgZnVuY3Rpb25fdG9fbW9kdWxlLCBnZXRfb3JfY3JlYXRlX2N0eApmcm9tIG1scnVuLnJ1biBpbXBvcnQgZ2V0X2RhdGFpdGVtCgpkZWYgZ2V0X2RhdGFfdHNkYihjb250ZXh0KToKICAgIGRmID0gY29udGV4dC52M2YucmVhZChiYWNrZW5kPSd0c2RiJywgcXVlcnk9ZidzZWxlY3QgY3B1X3V0aWxpemF0aW9uLCBsYXRlbmN5LCBwYWNrZXRfbG9zcywgdGhyb3VnaHB1dCwgaXNfZXJyb3IgZnJvbSB7Y29udGV4dC5tZXRyaWNzX3RhYmxlfScsCiAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnQ9Zidub3ctMmgnLCBlbmQ9J25vdycsIG11bHRpX2luZGV4PVRydWUpCiAgICBkZiA9IGZvcm1hdF9kZl9mcm9tX3RzZGIoY29udGV4dCwgZGYpCiAgICByZXR1cm4gZGYKCmRlZiBnZXRfZGF0YV9wYXJxdWV0KGNvbnRleHQpOgogICAgbXBhdGggPSBbb3MucGF0aC5qb2luKGNvbnRleHQubWV0cmljc190YWJsZSwgZmlsZSkgZm9yIGZpbGUgaW4gb3MubGlzdGRpcihjb250ZXh0Lm1ldHJpY3NfdGFibGUpIGlmIGZpbGUuZW5kc3dpdGgoKCdwYXJxdWV0JywgJ3BxJykpXQogICAgZmlsZXNfYnlfdXBkYXRlZCA9IHNvcnRlZChtcGF0aCwga2V5PW9zLnBhdGguZ2V0bXRpbWUsIHJldmVyc2U9VHJ1ZSkKICAgIGNvbnRleHQubG9nZ2VyLmluZm8oZmlsZXNfYnlfdXBkYXRlZCkKICAgIGxhdGVzdCA9IGZpbGVzX2J5X3VwZGF0ZWRbOmNvbnRleHQuZmlsZXNfdG9fc2VsZWN0XQogICAgY29udGV4dC5sb2dnZXIuaW5mbyhmJ0FnZ3JlZ2F0aW5nIHtsYXRlc3R9JykKICAgIGlucHV0X2RmID0gcGQuY29uY2F0KFtwZC5yZWFkX3BhcnF1ZXQoZGYpIGZvciBkZiBpbiBsYXRlc3RdKQogICAgcmV0dXJuIGlucHV0X2RmCgpkZWYgc2F2ZV90b190c2RiKGNvbnRleHQsIGZlYXR1cmVzOiBwZC5EYXRhRnJhbWUpOiAgIAogICAgY29udGV4dC52M2Yud3JpdGUoJ3RzZGInLCBjb250ZXh0LmZlYXR1cmVzX3RhYmxlLCBmZWF0dXJlcykKCmRlZiBzYXZlX3RvX3BhcnF1ZXQoY29udGV4dCwgZGY6IHBkLkRhdGFGcmFtZSk6CiAgICBwcmludCgnU2F2aW5nIGZlYXR1cmVzIHRvIFBhcnF1ZXQnKQogICAgCiAgICBkZiA9IGRmLnJlc2V0X2luZGV4KCkKICAgIGRmWyd0aW1lc3RhbXAnXSA9IGRmLmxvY1s6LCAndGltZXN0YW1wJ10uYXN0eXBlKCdkYXRldGltZTY0W21zXScpCiAgICAKICAgIGRmID0gZGYuc2V0X2luZGV4KGNvbnRleHQua2V5cykKICAgIAogICAgZmlyc3RfdGltZXN0YW1wID0gZGYuaW5kZXhbMF1bMF0uc3RyZnRpbWUoJyVZJW0lZFQlSCVNJVMnKQogICAgbGFzdF90aW1lc3RhbXAgPSBkZi5pbmRleFstMV1bMF0uc3RyZnRpbWUoJyVZJW0lZFQlSCVNJVMnKQogICAgZmlsZW5hbWUgPSBmaXJzdF90aW1lc3RhbXAgKyAnLScgKyBsYXN0X3RpbWVzdGFtcCArICcucGFycXVldCcKICAgIGZpbGVwYXRoID0gb3MucGF0aC5qb2luKGNvbnRleHQuZmVhdHVyZXNfdGFibGUsIGZpbGVuYW1lKQogICAgd2l0aCBvcGVuKGZpbGVwYXRoLCAnd2IrJykgYXMgZjoKICAgICAgICBkZi50b19wYXJxdWV0KGYpCgpkZWYgaW5pdF9jb250ZXh0KGNvbnRleHQpOgogICAgCiAgICBtbGNvbmYuZGJwYXRoID0gJ2h0dHA6Ly9tbHJ1bi1hcGk6ODA4MCcKICAgIAogICAgYWdncmVnYXRlX2ZuID0gaW1wb3J0X2Z1bmN0aW9uKG9zLmdldGVudignYWdncmVnYXRlX2ZuX3VybCcsICdodWI6Ly9hZ2dyZWdhdGUnKSkKICAgIG1vZCA9IGZ1bmN0aW9uX3RvX21vZHVsZShhZ2dyZWdhdGVfZm4pCiAgICBzZXRhdHRyKGNvbnRleHQsICdhZ2dyZWdhdGUnLCBtb2QuYWdncmVnYXRlKQogICAgCiAgICBhZ19jb250ZXh0ID0gZ2V0X29yX2NyZWF0ZV9jdHgoJ2FnZ3JlZ2F0ZScpCiAgICBzZXRhdHRyKGNvbnRleHQsICdtbHJ1bl9jdHgnLCBhZ19jb250ZXh0KQogICAgCiAgICBiYXRjaGVzX3RvX2dlbmVyYXRlID0gaW50KG9zLmdldGVudignQkFUQ0hFU19UT19HRU5FUkFURScsIDIwKSkKICAgIHNldGF0dHIoY29udGV4dCwgJ2JhdGNoZXNfdG9fZ2VuZXJhdGUnLCBiYXRjaGVzX3RvX2dlbmVyYXRlKQogICAgc2V0YXR0cihjb250ZXh0LCAnYmF0Y2hlc19nZW5lcmF0ZWQnLCAwKQogICAgCiAgICBzZXRhdHRyKGNvbnRleHQsICdtZXRyaWNzX3RhYmxlJywgb3MuZ2V0ZW52KCdNRVRSSUNTX1RBQkxFJywgJ25ldG9wc19tZXRyaWNzJykpCiAgICBzZXRhdHRyKGNvbnRleHQsICdmZWF0dXJlc190YWJsZScsIG9zLmdldGVudignRkVBVFVSRVNfVEFCTEUnLCAnbmV0b3BzX2ZlYXR1cmVzJykpCiAgICBzZXRhdHRyKGNvbnRleHQsICdrZXlzJywgb3MuZ2V0ZW52KCdrZXlzJywgJycpLnNwbGl0KCcsJykpCiAgICBzZXRhdHRyKGNvbnRleHQsICdtZXRyaWNzJywgYXN0LmxpdGVyYWxfZXZhbChvcy5nZXRlbnYoJ21ldHJpY3MnLCAnJykpKQogICAgc2V0YXR0cihjb250ZXh0LCAnbWV0cmljX2FnZ3MnLCBhc3QubGl0ZXJhbF9ldmFsKG9zLmdldGVudignbWV0cmljX2FnZ3MnLCAnJykpKQogICAgc2V0YXR0cihjb250ZXh0LCAnc3VmZml4Jywgb3MuZ2V0ZW52KCdzdWZmaXgnLCAnX2FnZycpKQogICAgc2V0YXR0cihjb250ZXh0LCAnd2luZG93JywgaW50KG9zLmdldGVudignd2luZG93JywgJzMnKSkpCiAgICBzZXRhdHRyKGNvbnRleHQsICdjZW50ZXInLCBib29sKGludChvcy5nZXRlbnYoJ2NlbnRlcicsICcwJykpKSkKICAgIHNldGF0dHIoY29udGV4dCwgJ2lucGxhY2UnLCBib29sKGludChvcy5nZXRlbnYoJ2lucGxhY2UnLCAnMCcpKSkpCiAgICBzZXRhdHRyKGNvbnRleHQsICdkcm9wX25hJywgYm9vbChpbnQob3MuZ2V0ZW52KCdkcm9wX25hJywgJzEnKSkpKQogICAgc2V0YXR0cihjb250ZXh0LCAnZmlsZXNfdG9fc2VsZWN0JywgaW50KG9zLmdldGVudignZmlsZXNfdG9fc2VsZWN0JywgMSkpKQogICAgCiAgICBzYW1wbGVfZGF0YXNldCA9IGdldF9kYXRhaXRlbShvcy5lbnZpcm9uWydiYXNlX2RhdGFzZXQnXSkuYXNfZGYoKQogICAgc2VsZWN0ZWRfZmVhdHVyZXMgPSBbY29sIGZvciBjb2wgaW4gbGlzdChzYW1wbGVfZGF0YXNldC5jb2x1bW5zKSBpZiBjb2wgIT0gb3MuZ2V0ZW52KCdsYWJlbF9jb2wnLCAnJyldCiAgICBhZ2dyZWdhdGVkX2ZlYXR1cmVzID0gW2ZlYXR1cmUuc3BsaXQoJ18nKVs6LTFdIGZvciBmZWF0dXJlIGluIHNlbGVjdGVkX2ZlYXR1cmVzIGlmIGZlYXR1cmUuZW5kc3dpdGgoY29udGV4dC5zdWZmaXgpXQogICAgYmFzZV9mZWF0dXJlcyA9IHNldChbZlswXSBmb3IgZiBpbiBhZ2dyZWdhdGVkX2ZlYXR1cmVzXSkKICAgIGFnZ3JlZ2F0aW9ucyA9IHNldChbZlsxXSBmb3IgZiBpbiBhZ2dyZWdhdGVkX2ZlYXR1cmVzXSkKICAgIHNldGF0dHIoY29udGV4dCwgJ2ZlYXR1cmVzJywgc2VsZWN0ZWRfZmVhdHVyZXMpCiAgICBzZXRhdHRyKGNvbnRleHQsICdiYXNlX2ZlYXR1cmVzJywgYmFzZV9mZWF0dXJlcykKICAgIHNldGF0dHIoY29udGV4dCwgJ2FnZ3JlZ2F0aW9ucycsIGFnZ3JlZ2F0aW9ucykKICAgIAogICAgCiAgICAKICAgIGlzX3NhdmVfdG9fdHNkYiA9IGJvb2woaW50KG9zLmdldGVudignc2F2ZV90b190c2RiJywgJzAnKSkpCiAgICBpZiBpc19zYXZlX3RvX3RzZGI6CiAgICAgICAgdjNpb19jbGllbnQgPSB2M2YuQ2xpZW50KGFkZHJlc3M9J2ZyYW1lc2Q6ODA4MScsIGNvbnRhaW5lcj0nYmlnZGF0YScpCiAgICAgICAgc2V0YXR0cihjb250ZXh0LCAndjNmJywgdjNpb19jbGllbnQpCiAgICAgICAgCiAgICAgICAgY29udGV4dC52M2YuY3JlYXRlKCd0c2RiJywgY29udGV4dC5mZWF0dXJlc190YWJsZSwgYXR0cnM9eydyYXRlJzogJzEvcyd9LCBpZl9leGlzdHM9MSkKICAgICAgICAKICAgICAgICBzZXRhdHRyKGNvbnRleHQsICdyZWFkJywgZ2V0X2RhdGFfdHNkYikKICAgICAgICAKICAgICAgICBzZXRhdHRyKGNvbnRleHQsICd3cml0ZScsIHNhdmVfdG9fdHNkYikKICAgICAgICAKICAgIGVsc2U6CiAgICAgICAgZmlsZXBhdGggPSBvcy5wYXRoLmpvaW4oY29udGV4dC5mZWF0dXJlc190YWJsZSkKICAgICAgICBpZiBub3Qgb3MucGF0aC5leGlzdHMoZmlsZXBhdGgpOgogICAgICAgICAgICBvcy5tYWtlZGlycyhmaWxlcGF0aCkKICAgICAgICAgICAgCiAgICAgICAgc2V0YXR0cihjb250ZXh0LCAncmVhZCcsIGdldF9kYXRhX3BhcnF1ZXQpCiAgICAgICAgCiAgICAgICAgc2V0YXR0cihjb250ZXh0LCAnd3JpdGUnLCBzYXZlX3RvX3BhcnF1ZXQpCgpkZWYgaGFuZGxlcihjb250ZXh0LCBldmVudCk6CiAgICAKICAgIGlmIChjb250ZXh0LmJhdGNoZXNfdG9fZ2VuZXJhdGUgPT0gLTEpIG9yIChjb250ZXh0LmJhdGNoZXNfZ2VuZXJhdGVkIDw9IGNvbnRleHQuYmF0Y2hlc190b19nZW5lcmF0ZSk6CiAgICAKICAgICAgICBkZiA9IGNvbnRleHQucmVhZChjb250ZXh0KQoKICAgICAgICByZXMgPSBjb250ZXh0LmFnZ3JlZ2F0ZShjb250ZXh0PWNvbnRleHQubWxydW5fY3R4LAogICAgICAgICAgICAgICAgICBkZl9hcnRpZmFjdD1kZiwKICAgICAgICAgICAgICAgICAgc2F2ZV90bz1jb250ZXh0LmZlYXR1cmVzX3RhYmxlLCAKICAgICAgICAgICAgICAgICAga2V5cz1jb250ZXh0LmtleXMsIAogICAgICAgICAgICAgICAgICBtZXRyaWNzPWNvbnRleHQubWV0cmljcywgCiAgICAgICAgICAgICAgICAgIG1ldHJpY19hZ2dzPWNvbnRleHQubWV0cmljX2FnZ3MsIAogICAgICAgICAgICAgICAgICBzdWZmaXg9Y29udGV4dC5zdWZmaXgsIAogICAgICAgICAgICAgICAgICB3aW5kb3c9Y29udGV4dC53aW5kb3csIAogICAgICAgICAgICAgICAgICBjZW50ZXI9Y29udGV4dC5jZW50ZXIsIAogICAgICAgICAgICAgICAgICBpbnBsYWNlPWNvbnRleHQuaW5wbGFjZSwKICAgICAgICAgICAgICAgICAgZHJvcF9uYT1jb250ZXh0LmRyb3BfbmEpCgogICAgICAgIGNvbnRleHQubG9nZ2VyLmluZm8oZidyZXMuY29sdW1uczoge3Jlcy5jb2x1bW5zfScpCiAgICAgICAgY29udGV4dC5sb2dnZXIuaW5mbyhmJ2NvbnRleHQuY29sdW1uczoge2NvbnRleHQuZmVhdHVyZXN9JykKICAgICAgICByZXMgPSByZXNbY29udGV4dC5mZWF0dXJlc10KCiAgICAgICAgY29udGV4dC53cml0ZShjb250ZXh0LCByZXMpCiAgICAgICAgCiAgICAgICAgY29udGV4dC5iYXRjaGVzX2dlbmVyYXRlZCArPSAxCgo=",
              "noBaseImagesPull": true
            },
            "env": [
              {
                "name": "METRICS_TABLE",
                "value": "{data_path}"
              },
              {
                "name": "FEATURES_TABLE",
                "value": "{features_path}"
              },
              {
                "name": "base_dataset",
                "value": "{artifacts_path}/selected_features.parquet"
              },
              {
                "name": "BATCHES_TO_GENERATE",
                "value": "20"
              },
              {
                "name": "keys",
                "value": "timestamp,company,data_center,device"
              },
              {
                "name": "metrics",
                "value": "[\"cpu_utilization\", \"throughput\", \"packet_loss\", \"latency\"]"
              },
              {
                "name": "metric_aggs",
                "value": "[\"mean\", \"sum\", \"std\", \"var\", \"min\", \"max\", \"median\"]"
              },
              {
                "name": "suffix",
                "value": "daily"
              },
              {
                "name": "window",
                "value": "3"
              },
              {
                "name": "center",
                "value": "0"
              },
              {
                "name": "inplace",
                "value": "0"
              },
              {
                "name": "drop_na",
                "value": "1"
              },
              {
                "name": "files_to_select",
                "value": "1"
              },
              {
                "name": "label_col",
                "value": "is_error"
              },
              {
                "name": "is_save_to_tsdb",
                "value": "0"
              }
            ],
            "handler": "preprocessor:handler",
            "runtime": "python:3.6",
            "volumes": []
          }
        },
        "source": "",
        "image_pull_policy": "Always",
        "build": {
          "commands": [],
          "origin_filename": "/User/demos/network-operations/notebooks/preprocessor.ipynb"
        },
        "mount_applied": true,
        "affinity": null
      },
      "status": {
        "state": "ready",
        "nuclio_name": "network-operations-admin-create-feature-vector",
        "address": "default-tenant.app.vmdev36.lab.iguazeng.com:30027",
        "internal_invocation_urls": [
          "nuclio-network-operations-admin-create-feature-vector.default-tenant.svc.cluster.local:8080"
        ],
        "external_invocation_urls": [
          "default-tenant.app.vmdev36.lab.iguazeng.com:30027"
        ]
      },
      "verbose": false
    },
    {
      "kind": "remote",
      "metadata": {
        "name": "labeled-stream",
        "tag": "latest",
        "hash": "c6579f42c96db2ff70f821135174bd13cda54a4c",
        "project": "network-operations-admin",
        "categories": [],
        "updated": "2021-08-29T20:29:08.060370+00:00"
      },
      "spec": {
        "command": "http://default-tenant.app.vmdev36.lab.iguazeng.com:31132",
        "args": [],
        "image": "",
        "description": "",
        "min_replicas": 1,
        "max_replicas": 4,
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          },
          {
            "name": "METRICS_TABLE",
            "value": "/User/demos/network-operations/streaming/metrics"
          },
          {
            "name": "PREDICTIONS_TABLE",
            "value": "/User/demos/network-operations/streaming/predictions"
          },
          {
            "name": "OUTPUT_STREAM",
            "value": "/users/admin/demos/network-operations/streaming/labeled_stream"
          },
          {
            "name": "label_col",
            "value": "is_error"
          },
          {
            "name": "prediction_col",
            "value": "predictions"
          },
          {
            "name": "BATCHES_TO_GENERATE",
            "value": "20"
          }
        ],
        "config": {
          "spec.triggers.cron": {
            "kind": "cron",
            "attributes": {
              "interval": "1m"
            }
          }
        },
        "base_spec": {
          "apiVersion": "nuclio.io/v1",
          "kind": "Function",
          "metadata": {
            "annotations": {
              "nuclio.io/generated_by": "function generated from /User/demos/network-operations/notebooks/labeled_stream_creator.ipynb"
            },
            "labels": {},
            "name": "labeled-stream"
          },
          "spec": {
            "build": {
              "baseImage": "mlrun/ml-models",
              "commands": [
                "python -m pip install v3io --upgrade"
              ],
              "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG9zCmltcG9ydCBwYW5kYXMgYXMgcGQKaW1wb3J0IGpzb24KaW1wb3J0IHYzaW8KaW1wb3J0IHYzaW8uZGF0YXBsYW5lCmltcG9ydCBzb2NrZXQKCmRlZiBzcGxpdF9wYXRoKG1udHBhdGg9JycpOgogICAgaWYgbW50cGF0aFswXSA9PSAnLyc6CiAgICAgICAgbW50cGF0aCA9IG1udHBhdGhbMTpdCiAgICBwYXRocyA9IG1udHBhdGguc3BsaXQoJy8nKQogICAgY29udGFpbmVyID0gcGF0aHNbMF0KICAgIHN1YnBhdGggPSAnJwogICAgaWYgbGVuKHBhdGhzKSA+IDE6CiAgICAgICAgc3VicGF0aCA9IG1udHBhdGhbbGVuKGNvbnRhaW5lcik6XQogICAgcmV0dXJuIGNvbnRhaW5lciwgc3VicGF0aAoKZGVmIGNyZWF0ZV9zdHJlYW0oY29udGV4dCwgcGF0aCwgc2hhcmRzPTEpOgogICAgY29udGFpbmVyLCBzdHJlYW1fcGF0aCA9IHNwbGl0X3BhdGgocGF0aCkKICAgIGNvbnRleHQubG9nZ2VyLmluZm8oZidDcmVhdGluZyBzdHJlYW0gaW4gQ29udGFpbmVyOiB7Y29udGFpbmVyfSAmIFBhdGgge3N0cmVhbV9wYXRofScpCiAgICByZXNwb25zZSA9IGNvbnRleHQudjNpb19jbGllbnQuc3RyZWFtLmNyZWF0ZShjb250YWluZXI9Y29udGFpbmVyLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RyZWFtX3BhdGg9c3RyZWFtX3BhdGgsIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hhcmRfY291bnQ9c2hhcmRzLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmFpc2VfZm9yX3N0YXR1cz12M2lvLmRhdGFwbGFuZS5SYWlzZUZvclN0YXR1cy5uZXZlcikKICAgIHJlc3BvbnNlLnJhaXNlX2Zvcl9zdGF0dXMoWzQwOSwgMjA0XSkKCmRlZiBwdXNoX3RvX3N0cmVhbShjb250ZXh0LCBzdHJlYW1fcGF0aCwgZGF0YSk6CiAgICBkZWYgcmVzdHJ1Y3R1cmVfc3RyZWFtX2V2ZW50KGNvbnRleHQsIGV2ZW50KToKICAgICAgICBpbnN0YW5jZXMgPSBbZGljdCgpXQogICAgICAgIGZvciBrZXkgaW4gZGF0YS5rZXlzKCk6CiAgICAgICAgICAgIGlmIGtleSBub3QgaW4gWyd3aGVuJywgJ2NsYXNzJywgJ21vZGVsJywgJ3dvcmtlcicsICdob3N0bmFtZScsIGNvbnRleHQucHJlZGljdGlvbl9jb2xdOgogICAgICAgICAgICAgICAgaW5zdGFuY2VzWzBdLnVwZGF0ZSh7a2V5OiBldmVudC5wb3Aoa2V5KX0pCiAgICAgICAgZXZlbnRbJ3JlcXVlc3QnXSA9IHsnaW5zdGFuY2VzJzogaW5zdGFuY2VzfQogICAgICAgIGV2ZW50WydyZXNwJ10gPSBbaW50KGV2ZW50LnBvcChjb250ZXh0LnByZWRpY3Rpb25fY29sKSldCiAgICAgICAgcmV0dXJuIGV2ZW50CiAgICAKICAgIHJlY29yZHMgPSBqc29uLmxvYWRzKGRhdGEudG9fanNvbihvcmllbnQ9J3JlY29yZHMnKSkKICAgIHJlY29yZHMgPSBbeydkYXRhJzoganNvbi5kdW1wcyhyZXN0cnVjdHVyZV9zdHJlYW1fZXZlbnQoY29udGV4dCwgcmVjb3JkKSl9IGZvciByZWNvcmQgaW4gcmVjb3Jkc10KICAgIGNvbnRleHQubG9nZ2VyLmluZm8oZidMb2dnaW5nIHtsZW4ocmVjb3Jkcyl9IHJlY29yZHMsIFJlY29yZCBleGFtcGxlOiB7cmVjb3Jkc1swXX0nKQogICAgY29udGFpbmVyLCBzdHJlYW1fcGF0aCA9IHNwbGl0X3BhdGgoc3RyZWFtX3BhdGgpCiAgICBzdGVwID0gMTAKICAgIGZvciBpZHggaW4gcmFuZ2UoMCwgbGVuKHJlY29yZHMpLCBzdGVwKToKICAgICAgICByZXNwb25zZSA9IGNvbnRleHQudjNpb19jbGllbnQucHV0X3JlY29yZHMoY29udGFpbmVyPWNvbnRhaW5lciwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGF0aD1zdHJlYW1fcGF0aCwgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlY29yZHM9cmVjb3Jkc1tpZHg6aWR4K3N0ZXBdKQoKZGVmIGdldF9kYXRhX3BhcnF1ZXQoY29udGV4dCwgdGFibGUsIGZpbGVzX3RvX3NlbGVjdD0xKToKICAgIG1wYXRoID0gW29zLnBhdGguam9pbih0YWJsZSwgZmlsZSkgZm9yIGZpbGUgaW4gb3MubGlzdGRpcih0YWJsZSkgaWYgZmlsZS5lbmRzd2l0aCgoJ3BhcnF1ZXQnLCAncHEnKSldCiAgICBmaWxlc19ieV91cGRhdGVkID0gc29ydGVkKG1wYXRoLCBrZXk9b3MucGF0aC5nZXRtdGltZSwgcmV2ZXJzZT1GYWxzZSkKICAgIGNvbnRleHQubG9nZ2VyLmRlYnVnX3dpdGgoJ0lucHV0JywgaW5wdXRfZmlsZXM9ZmlsZXNfYnlfdXBkYXRlZFs6ZmlsZXNfdG9fc2VsZWN0XSkKICAgIGRmcyA9IHBkLmNvbmNhdChbcGQucmVhZF9wYXJxdWV0KGZpbGUpIGZvciBmaWxlIGluIGZpbGVzX2J5X3VwZGF0ZWRbOmZpbGVzX3RvX3NlbGVjdF1dKQogICAgcmV0dXJuIGRmcwoKZGVmIGluaXRfY29udGV4dChjb250ZXh0KToKICAgIAogICAgYmF0Y2hlc190b19nZW5lcmF0ZSA9IGludChvcy5nZXRlbnYoJ0JBVENIRVNfVE9fR0VORVJBVEUnLCAyMCkpCiAgICBzZXRhdHRyKGNvbnRleHQsICdiYXRjaGVzX3RvX2dlbmVyYXRlJywgYmF0Y2hlc190b19nZW5lcmF0ZSkKICAgIHNldGF0dHIoY29udGV4dCwgJ2JhdGNoZXNfZ2VuZXJhdGVkJywgMCkKICAgIAogICAgc2V0YXR0cihjb250ZXh0LCAnbWV0cmljc190YWJsZScsIG9zLmVudmlyb25bJ01FVFJJQ1NfVEFCTEUnXSkKICAgIHNldGF0dHIoY29udGV4dCwgJ3ByZWRpY3Rpb25zX3RhYmxlJywgb3MuZW52aXJvblsnUFJFRElDVElPTlNfVEFCTEUnXSkKICAgIHNldGF0dHIoY29udGV4dCwgJ291dHB1dF9zdHJlYW0nLCBvcy5lbnZpcm9uWydPVVRQVVRfU1RSRUFNJ10pCiAgICBzZXRhdHRyKGNvbnRleHQsICd0aW1lc3RhbXBfY29sJywgb3MuZ2V0ZW52KCd0aW1lc3RhbXBfY29sJywgJ3doZW4nKSkKICAgIHNldGF0dHIoY29udGV4dCwgJ29yaWdfdGltZXN0YW1wX2NvbCcsIG9zLmdldGVudignb3JpZ190aW1lc3RhbXBfY29sJywgJ3RpbWVzdGFtcCcpKQogICAgCiAgICB2M2lvX2NsaWVudCA9IHYzaW8uZGF0YXBsYW5lLkNsaWVudChsb2dnZXJfdmVyYm9zaXR5PSdERUJVRycsIHRyYW5zcG9ydF92ZXJib3NpdHk9J0RFQlVHJykKICAgIHNldGF0dHIoY29udGV4dCwgJ3YzaW9fY2xpZW50JywgdjNpb19jbGllbnQpCiAgICBjcmVhdGVfc3RyZWFtKGNvbnRleHQsIGNvbnRleHQub3V0cHV0X3N0cmVhbSkKICAgIAogICAgc2V0YXR0cihjb250ZXh0LCAnbGFiZWxfY29sJywgb3MuZW52aXJvblsnbGFiZWxfY29sJ10pCiAgICBzZXRhdHRyKGNvbnRleHQsICdwcmVkaWN0aW9uX2NvbCcsIG9zLmVudmlyb25bJ3ByZWRpY3Rpb25fY29sJ10pCgpkZWYgaGFuZGxlcihjb250ZXh0LCBldmVudCk6CiAgICAKICAgIGlmIChjb250ZXh0LmJhdGNoZXNfdG9fZ2VuZXJhdGUgPT0gLTEpIG9yIChjb250ZXh0LmJhdGNoZXNfZ2VuZXJhdGVkIDw9IGNvbnRleHQuYmF0Y2hlc190b19nZW5lcmF0ZSk6CiAgICAgICAgCiAgICAgICAgbWV0cmljcyA9IGdldF9kYXRhX3BhcnF1ZXQoY29udGV4dCwgY29udGV4dC5tZXRyaWNzX3RhYmxlLCAyKS5sb2NbOiwgY29udGV4dC5sYWJlbF9jb2xdLmFzdHlwZSgnaW50JykKICAgICAgICBtZXRyaWNzLmluZGV4Lm5hbWVzID0gbGlzdChbbmFtZSBpZiBuYW1lICE9IGNvbnRleHQub3JpZ190aW1lc3RhbXBfY29sIGVsc2UgY29udGV4dC50aW1lc3RhbXBfY29sIGZvciBuYW1lIGluIG1ldHJpY3MuaW5kZXgubmFtZXNdKQogICAgICAgIHByZWRpY3Rpb25zID0gZ2V0X2RhdGFfcGFycXVldChjb250ZXh0LCBjb250ZXh0LnByZWRpY3Rpb25zX3RhYmxlLCAyKQogICAgICAgIGNvbnRleHQubG9nZ2VyLmRlYnVnKGYnTGFiZWxpbmcgbWV0cmljcyAoe21ldHJpY3Muc2hhcGV9KSBhbmQgcHJlZGljdGlvbnMgKHtwcmVkaWN0aW9ucy5zaGFwZX0pJykKICAgICAgICBjb250ZXh0LmxvZ2dlci5kZWJ1Z193aXRoKCdJbmRleGVzJywgbWV0cmljc19pbmRleD1tZXRyaWNzLmluZGV4Lm5hbWVzLCBwcmVkaWN0aW9uc19pbmRleD1wcmVkaWN0aW9ucy5pbmRleC5uYW1lcykKCiAgICAgICAgcHJpbnQoJ21ldHJpY3MnKQogICAgICAgIHByaW50KG1ldHJpY3MuaGVhZCgpKQogICAgICAgIHByaW50KHR5cGUobWV0cmljcykpCiAgICAgICAgbWV0cmljcyA9IHBkLkRhdGFGcmFtZShtZXRyaWNzKQogICAgICAgIHByaW50KCdjaGFuZ2UnKQogICAgICAgIHByaW50KHR5cGUobWV0cmljcykpCiAgICAgICAgcHJpbnQobWV0cmljcy5oZWFkKCkpCiAgICAgICAgcHJpbnQobWV0cmljcy5pbmRleC5uYW1lcykKCiAgICAgICAgZnVsbF9kZiA9IHBkLm1lcmdlKGxlZnQ9cHJlZGljdGlvbnMsIHJpZ2h0PW1ldHJpY3MsIGxlZnRfb249bWV0cmljcy5pbmRleC5uYW1lcywgaG93PSdsZWZ0JywgbGVmdF9pbmRleD1UcnVlLCByaWdodF9pbmRleD1UcnVlKQogICAgICAgIGZ1bGxfZGYgPSBmdWxsX2RmLnJlc2V0X2luZGV4KCkKICAgICAgICBjb250ZXh0LmxvZ2dlci5pbmZvKGYnRnVsbHkgbGFiZWxlZCBiYXRjaCBzaXplIGlzIHtmdWxsX2RmLnNoYXBlfScpCiAgICAgICAgY29udGV4dC5sb2dnZXIuaW5mbyhmJ0luZGV4ZXM6IHtsaXN0KGZ1bGxfZGYuaW5kZXgubmFtZXMpfScpCiAgICAgICAgY29udGV4dC5sb2dnZXIuaW5mbyhmJ0NvbHVtbnM6IHtmdWxsX2RmLmNvbHVtbnN9JykKICAgICAgICBjb250ZXh0LmxvZ2dlci5pbmZvX3dpdGgoJ3NhbXBsZScsIGZ1bGxfZGY9ZnVsbF9kZi5oZWFkKDEpKSAgICAKICAgICAgICBwdXNoX3RvX3N0cmVhbShjb250ZXh0LCBjb250ZXh0Lm91dHB1dF9zdHJlYW0sIGZ1bGxfZGYpCiAgICAgICAgCiAgICAgICAgY29udGV4dC5iYXRjaGVzX2dlbmVyYXRlZCArPSAxCgo=",
              "noBaseImagesPull": true
            },
            "env": [
              {
                "name": "METRICS_TABLE",
                "value": "${fs_streaming_path}/metrics"
              },
              {
                "name": "PREDICTIONS_TABLE",
                "value": "${fs_streaming_path}/predictions"
              },
              {
                "name": "OUTPUT_STREAM",
                "value": "${streaming_path}/labeled_stream"
              },
              {
                "name": "prediction_col",
                "value": "predictions"
              },
              {
                "name": "label_col",
                "value": "is_error"
              },
              {
                "name": "output_stream_shards",
                "value": "1"
              },
              {
                "name": "BATCHES_TO_GENERATE",
                "value": "20"
              }
            ],
            "handler": "labeled_stream_creator:handler",
            "runtime": "python:3.6",
            "volumes": []
          }
        },
        "source": "",
        "image_pull_policy": "Always",
        "build": {
          "commands": [],
          "origin_filename": "/User/demos/network-operations/notebooks/labeled_stream_creator.ipynb"
        },
        "mount_applied": true,
        "affinity": null
      },
      "status": {
        "state": "ready",
        "nuclio_name": "network-operations-admin-labeled-stream",
        "address": "default-tenant.app.vmdev36.lab.iguazeng.com:31132",
        "internal_invocation_urls": [
          "nuclio-network-operations-admin-labeled-stream.default-tenant.svc.cluster.local:8080"
        ],
        "external_invocation_urls": [
          "default-tenant.app.vmdev36.lab.iguazeng.com:31132"
        ]
      },
      "verbose": false
    },
    {
      "kind": "remote",
      "metadata": {
        "name": "create-feature-vector",
        "tag": "",
        "hash": "33122e07cf40a9a6780639c5e545cba950d7f12d",
        "project": "network-operations-admin",
        "categories": [],
        "updated": "2021-08-29T20:29:02.816111+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "",
        "description": "",
        "min_replicas": 1,
        "max_replicas": 4,
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          },
          {
            "name": "aggregate_fn_url",
            "value": "hub://aggregate"
          },
          {
            "name": "METRICS_TABLE",
            "value": "/User/demos/network-operations/streaming/metrics"
          },
          {
            "name": "FEATURES_TABLE",
            "value": "/User/demos/network-operations/streaming/features"
          },
          {
            "name": "metrics",
            "value": "[\"cpu_utilization\", \"throughput\", \"packet_loss\", \"latency\"]"
          },
          {
            "name": "metric_aggs",
            "value": "[\"mean\", \"sum\", \"std\", \"var\", \"min\", \"max\", \"median\"]"
          },
          {
            "name": "suffix",
            "value": "daily"
          },
          {
            "name": "base_dataset",
            "value": "store://artifacts/network-operations-admin/train_test_set:cd151783-05df-4f9c-a9db-3aa674e4a058"
          },
          {
            "name": "label_col",
            "value": "is_error"
          },
          {
            "name": "BATCHES_TO_GENERATE",
            "value": "20"
          }
        ],
        "config": {
          "spec.triggers.cron": {
            "kind": "cron",
            "attributes": {
              "interval": "1m"
            }
          },
          "metadata.labels.mlrun/class": "remote",
          "spec.serviceType": "NodePort",
          "spec.minReplicas": 1,
          "spec.maxReplicas": 4
        },
        "base_spec": {
          "apiVersion": "nuclio.io/v1",
          "kind": "Function",
          "metadata": {
            "annotations": {
              "nuclio.io/generated_by": "function generated from /User/demos/network-operations/notebooks/preprocessor.ipynb"
            },
            "labels": {
              "mlrun/class": "remote",
              "nuclio.io/project-name": "network-operations-admin"
            },
            "name": "network-operations-admin-create-feature-vector"
          },
          "spec": {
            "build": {
              "baseImage": "mlrun/ml-models:0.7.0-rc11",
              "commands": [],
              "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG9zCmltcG9ydCBwYW5kYXMgYXMgcGQKZnJvbSBtbHJ1bi5kYXRhc3RvcmUgaW1wb3J0IERhdGFJdGVtCmltcG9ydCBhc3QKCmZyb20gdHlwaW5nIGltcG9ydCBVbmlvbgpmcm9tIG1scnVuIGltcG9ydCBtbGNvbmYsIGltcG9ydF9mdW5jdGlvbiwgbW91bnRfdjNpbywgTmV3VGFzaywgZnVuY3Rpb25fdG9fbW9kdWxlLCBnZXRfb3JfY3JlYXRlX2N0eApmcm9tIG1scnVuLnJ1biBpbXBvcnQgZ2V0X2RhdGFpdGVtCgpkZWYgZ2V0X2RhdGFfdHNkYihjb250ZXh0KToKICAgIGRmID0gY29udGV4dC52M2YucmVhZChiYWNrZW5kPSd0c2RiJywgcXVlcnk9ZidzZWxlY3QgY3B1X3V0aWxpemF0aW9uLCBsYXRlbmN5LCBwYWNrZXRfbG9zcywgdGhyb3VnaHB1dCwgaXNfZXJyb3IgZnJvbSB7Y29udGV4dC5tZXRyaWNzX3RhYmxlfScsCiAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnQ9Zidub3ctMmgnLCBlbmQ9J25vdycsIG11bHRpX2luZGV4PVRydWUpCiAgICBkZiA9IGZvcm1hdF9kZl9mcm9tX3RzZGIoY29udGV4dCwgZGYpCiAgICByZXR1cm4gZGYKCmRlZiBnZXRfZGF0YV9wYXJxdWV0KGNvbnRleHQpOgogICAgbXBhdGggPSBbb3MucGF0aC5qb2luKGNvbnRleHQubWV0cmljc190YWJsZSwgZmlsZSkgZm9yIGZpbGUgaW4gb3MubGlzdGRpcihjb250ZXh0Lm1ldHJpY3NfdGFibGUpIGlmIGZpbGUuZW5kc3dpdGgoKCdwYXJxdWV0JywgJ3BxJykpXQogICAgZmlsZXNfYnlfdXBkYXRlZCA9IHNvcnRlZChtcGF0aCwga2V5PW9zLnBhdGguZ2V0bXRpbWUsIHJldmVyc2U9VHJ1ZSkKICAgIGNvbnRleHQubG9nZ2VyLmluZm8oZmlsZXNfYnlfdXBkYXRlZCkKICAgIGxhdGVzdCA9IGZpbGVzX2J5X3VwZGF0ZWRbOmNvbnRleHQuZmlsZXNfdG9fc2VsZWN0XQogICAgY29udGV4dC5sb2dnZXIuaW5mbyhmJ0FnZ3JlZ2F0aW5nIHtsYXRlc3R9JykKICAgIGlucHV0X2RmID0gcGQuY29uY2F0KFtwZC5yZWFkX3BhcnF1ZXQoZGYpIGZvciBkZiBpbiBsYXRlc3RdKQogICAgcmV0dXJuIGlucHV0X2RmCgpkZWYgc2F2ZV90b190c2RiKGNvbnRleHQsIGZlYXR1cmVzOiBwZC5EYXRhRnJhbWUpOiAgIAogICAgY29udGV4dC52M2Yud3JpdGUoJ3RzZGInLCBjb250ZXh0LmZlYXR1cmVzX3RhYmxlLCBmZWF0dXJlcykKCmRlZiBzYXZlX3RvX3BhcnF1ZXQoY29udGV4dCwgZGY6IHBkLkRhdGFGcmFtZSk6CiAgICBwcmludCgnU2F2aW5nIGZlYXR1cmVzIHRvIFBhcnF1ZXQnKQogICAgCiAgICBkZiA9IGRmLnJlc2V0X2luZGV4KCkKICAgIGRmWyd0aW1lc3RhbXAnXSA9IGRmLmxvY1s6LCAndGltZXN0YW1wJ10uYXN0eXBlKCdkYXRldGltZTY0W21zXScpCiAgICAKICAgIGRmID0gZGYuc2V0X2luZGV4KGNvbnRleHQua2V5cykKICAgIAogICAgZmlyc3RfdGltZXN0YW1wID0gZGYuaW5kZXhbMF1bMF0uc3RyZnRpbWUoJyVZJW0lZFQlSCVNJVMnKQogICAgbGFzdF90aW1lc3RhbXAgPSBkZi5pbmRleFstMV1bMF0uc3RyZnRpbWUoJyVZJW0lZFQlSCVNJVMnKQogICAgZmlsZW5hbWUgPSBmaXJzdF90aW1lc3RhbXAgKyAnLScgKyBsYXN0X3RpbWVzdGFtcCArICcucGFycXVldCcKICAgIGZpbGVwYXRoID0gb3MucGF0aC5qb2luKGNvbnRleHQuZmVhdHVyZXNfdGFibGUsIGZpbGVuYW1lKQogICAgd2l0aCBvcGVuKGZpbGVwYXRoLCAnd2IrJykgYXMgZjoKICAgICAgICBkZi50b19wYXJxdWV0KGYpCgpkZWYgaW5pdF9jb250ZXh0KGNvbnRleHQpOgogICAgCiAgICBtbGNvbmYuZGJwYXRoID0gJ2h0dHA6Ly9tbHJ1bi1hcGk6ODA4MCcKICAgIAogICAgYWdncmVnYXRlX2ZuID0gaW1wb3J0X2Z1bmN0aW9uKG9zLmdldGVudignYWdncmVnYXRlX2ZuX3VybCcsICdodWI6Ly9hZ2dyZWdhdGUnKSkKICAgIG1vZCA9IGZ1bmN0aW9uX3RvX21vZHVsZShhZ2dyZWdhdGVfZm4pCiAgICBzZXRhdHRyKGNvbnRleHQsICdhZ2dyZWdhdGUnLCBtb2QuYWdncmVnYXRlKQogICAgCiAgICBhZ19jb250ZXh0ID0gZ2V0X29yX2NyZWF0ZV9jdHgoJ2FnZ3JlZ2F0ZScpCiAgICBzZXRhdHRyKGNvbnRleHQsICdtbHJ1bl9jdHgnLCBhZ19jb250ZXh0KQogICAgCiAgICBiYXRjaGVzX3RvX2dlbmVyYXRlID0gaW50KG9zLmdldGVudignQkFUQ0hFU19UT19HRU5FUkFURScsIDIwKSkKICAgIHNldGF0dHIoY29udGV4dCwgJ2JhdGNoZXNfdG9fZ2VuZXJhdGUnLCBiYXRjaGVzX3RvX2dlbmVyYXRlKQogICAgc2V0YXR0cihjb250ZXh0LCAnYmF0Y2hlc19nZW5lcmF0ZWQnLCAwKQogICAgCiAgICBzZXRhdHRyKGNvbnRleHQsICdtZXRyaWNzX3RhYmxlJywgb3MuZ2V0ZW52KCdNRVRSSUNTX1RBQkxFJywgJ25ldG9wc19tZXRyaWNzJykpCiAgICBzZXRhdHRyKGNvbnRleHQsICdmZWF0dXJlc190YWJsZScsIG9zLmdldGVudignRkVBVFVSRVNfVEFCTEUnLCAnbmV0b3BzX2ZlYXR1cmVzJykpCiAgICBzZXRhdHRyKGNvbnRleHQsICdrZXlzJywgb3MuZ2V0ZW52KCdrZXlzJywgJycpLnNwbGl0KCcsJykpCiAgICBzZXRhdHRyKGNvbnRleHQsICdtZXRyaWNzJywgYXN0LmxpdGVyYWxfZXZhbChvcy5nZXRlbnYoJ21ldHJpY3MnLCAnJykpKQogICAgc2V0YXR0cihjb250ZXh0LCAnbWV0cmljX2FnZ3MnLCBhc3QubGl0ZXJhbF9ldmFsKG9zLmdldGVudignbWV0cmljX2FnZ3MnLCAnJykpKQogICAgc2V0YXR0cihjb250ZXh0LCAnc3VmZml4Jywgb3MuZ2V0ZW52KCdzdWZmaXgnLCAnX2FnZycpKQogICAgc2V0YXR0cihjb250ZXh0LCAnd2luZG93JywgaW50KG9zLmdldGVudignd2luZG93JywgJzMnKSkpCiAgICBzZXRhdHRyKGNvbnRleHQsICdjZW50ZXInLCBib29sKGludChvcy5nZXRlbnYoJ2NlbnRlcicsICcwJykpKSkKICAgIHNldGF0dHIoY29udGV4dCwgJ2lucGxhY2UnLCBib29sKGludChvcy5nZXRlbnYoJ2lucGxhY2UnLCAnMCcpKSkpCiAgICBzZXRhdHRyKGNvbnRleHQsICdkcm9wX25hJywgYm9vbChpbnQob3MuZ2V0ZW52KCdkcm9wX25hJywgJzEnKSkpKQogICAgc2V0YXR0cihjb250ZXh0LCAnZmlsZXNfdG9fc2VsZWN0JywgaW50KG9zLmdldGVudignZmlsZXNfdG9fc2VsZWN0JywgMSkpKQogICAgCiAgICBzYW1wbGVfZGF0YXNldCA9IGdldF9kYXRhaXRlbShvcy5lbnZpcm9uWydiYXNlX2RhdGFzZXQnXSkuYXNfZGYoKQogICAgc2VsZWN0ZWRfZmVhdHVyZXMgPSBbY29sIGZvciBjb2wgaW4gbGlzdChzYW1wbGVfZGF0YXNldC5jb2x1bW5zKSBpZiBjb2wgIT0gb3MuZ2V0ZW52KCdsYWJlbF9jb2wnLCAnJyldCiAgICBhZ2dyZWdhdGVkX2ZlYXR1cmVzID0gW2ZlYXR1cmUuc3BsaXQoJ18nKVs6LTFdIGZvciBmZWF0dXJlIGluIHNlbGVjdGVkX2ZlYXR1cmVzIGlmIGZlYXR1cmUuZW5kc3dpdGgoY29udGV4dC5zdWZmaXgpXQogICAgYmFzZV9mZWF0dXJlcyA9IHNldChbZlswXSBmb3IgZiBpbiBhZ2dyZWdhdGVkX2ZlYXR1cmVzXSkKICAgIGFnZ3JlZ2F0aW9ucyA9IHNldChbZlsxXSBmb3IgZiBpbiBhZ2dyZWdhdGVkX2ZlYXR1cmVzXSkKICAgIHNldGF0dHIoY29udGV4dCwgJ2ZlYXR1cmVzJywgc2VsZWN0ZWRfZmVhdHVyZXMpCiAgICBzZXRhdHRyKGNvbnRleHQsICdiYXNlX2ZlYXR1cmVzJywgYmFzZV9mZWF0dXJlcykKICAgIHNldGF0dHIoY29udGV4dCwgJ2FnZ3JlZ2F0aW9ucycsIGFnZ3JlZ2F0aW9ucykKICAgIAogICAgCiAgICAKICAgIGlzX3NhdmVfdG9fdHNkYiA9IGJvb2woaW50KG9zLmdldGVudignc2F2ZV90b190c2RiJywgJzAnKSkpCiAgICBpZiBpc19zYXZlX3RvX3RzZGI6CiAgICAgICAgdjNpb19jbGllbnQgPSB2M2YuQ2xpZW50KGFkZHJlc3M9J2ZyYW1lc2Q6ODA4MScsIGNvbnRhaW5lcj0nYmlnZGF0YScpCiAgICAgICAgc2V0YXR0cihjb250ZXh0LCAndjNmJywgdjNpb19jbGllbnQpCiAgICAgICAgCiAgICAgICAgY29udGV4dC52M2YuY3JlYXRlKCd0c2RiJywgY29udGV4dC5mZWF0dXJlc190YWJsZSwgYXR0cnM9eydyYXRlJzogJzEvcyd9LCBpZl9leGlzdHM9MSkKICAgICAgICAKICAgICAgICBzZXRhdHRyKGNvbnRleHQsICdyZWFkJywgZ2V0X2RhdGFfdHNkYikKICAgICAgICAKICAgICAgICBzZXRhdHRyKGNvbnRleHQsICd3cml0ZScsIHNhdmVfdG9fdHNkYikKICAgICAgICAKICAgIGVsc2U6CiAgICAgICAgZmlsZXBhdGggPSBvcy5wYXRoLmpvaW4oY29udGV4dC5mZWF0dXJlc190YWJsZSkKICAgICAgICBpZiBub3Qgb3MucGF0aC5leGlzdHMoZmlsZXBhdGgpOgogICAgICAgICAgICBvcy5tYWtlZGlycyhmaWxlcGF0aCkKICAgICAgICAgICAgCiAgICAgICAgc2V0YXR0cihjb250ZXh0LCAncmVhZCcsIGdldF9kYXRhX3BhcnF1ZXQpCiAgICAgICAgCiAgICAgICAgc2V0YXR0cihjb250ZXh0LCAnd3JpdGUnLCBzYXZlX3RvX3BhcnF1ZXQpCgpkZWYgaGFuZGxlcihjb250ZXh0LCBldmVudCk6CiAgICAKICAgIGlmIChjb250ZXh0LmJhdGNoZXNfdG9fZ2VuZXJhdGUgPT0gLTEpIG9yIChjb250ZXh0LmJhdGNoZXNfZ2VuZXJhdGVkIDw9IGNvbnRleHQuYmF0Y2hlc190b19nZW5lcmF0ZSk6CiAgICAKICAgICAgICBkZiA9IGNvbnRleHQucmVhZChjb250ZXh0KQoKICAgICAgICByZXMgPSBjb250ZXh0LmFnZ3JlZ2F0ZShjb250ZXh0PWNvbnRleHQubWxydW5fY3R4LAogICAgICAgICAgICAgICAgICBkZl9hcnRpZmFjdD1kZiwKICAgICAgICAgICAgICAgICAgc2F2ZV90bz1jb250ZXh0LmZlYXR1cmVzX3RhYmxlLCAKICAgICAgICAgICAgICAgICAga2V5cz1jb250ZXh0LmtleXMsIAogICAgICAgICAgICAgICAgICBtZXRyaWNzPWNvbnRleHQubWV0cmljcywgCiAgICAgICAgICAgICAgICAgIG1ldHJpY19hZ2dzPWNvbnRleHQubWV0cmljX2FnZ3MsIAogICAgICAgICAgICAgICAgICBzdWZmaXg9Y29udGV4dC5zdWZmaXgsIAogICAgICAgICAgICAgICAgICB3aW5kb3c9Y29udGV4dC53aW5kb3csIAogICAgICAgICAgICAgICAgICBjZW50ZXI9Y29udGV4dC5jZW50ZXIsIAogICAgICAgICAgICAgICAgICBpbnBsYWNlPWNvbnRleHQuaW5wbGFjZSwKICAgICAgICAgICAgICAgICAgZHJvcF9uYT1jb250ZXh0LmRyb3BfbmEpCgogICAgICAgIGNvbnRleHQubG9nZ2VyLmluZm8oZidyZXMuY29sdW1uczoge3Jlcy5jb2x1bW5zfScpCiAgICAgICAgY29udGV4dC5sb2dnZXIuaW5mbyhmJ2NvbnRleHQuY29sdW1uczoge2NvbnRleHQuZmVhdHVyZXN9JykKICAgICAgICByZXMgPSByZXNbY29udGV4dC5mZWF0dXJlc10KCiAgICAgICAgY29udGV4dC53cml0ZShjb250ZXh0LCByZXMpCiAgICAgICAgCiAgICAgICAgY29udGV4dC5iYXRjaGVzX2dlbmVyYXRlZCArPSAxCgo=",
              "noBaseImagesPull": true
            },
            "env": [
              {
                "name": "METRICS_TABLE",
                "value": "/User/demos/network-operations/streaming/metrics"
              },
              {
                "name": "FEATURES_TABLE",
                "value": "/User/demos/network-operations/streaming/features"
              },
              {
                "name": "base_dataset",
                "value": "store://artifacts/network-operations-admin/train_test_set:cd151783-05df-4f9c-a9db-3aa674e4a058"
              },
              {
                "name": "BATCHES_TO_GENERATE",
                "value": "20"
              },
              {
                "name": "keys",
                "value": "timestamp,company,data_center,device"
              },
              {
                "name": "metrics",
                "value": "[\"cpu_utilization\", \"throughput\", \"packet_loss\", \"latency\"]"
              },
              {
                "name": "metric_aggs",
                "value": "[\"mean\", \"sum\", \"std\", \"var\", \"min\", \"max\", \"median\"]"
              },
              {
                "name": "suffix",
                "value": "daily"
              },
              {
                "name": "window",
                "value": "3"
              },
              {
                "name": "center",
                "value": "0"
              },
              {
                "name": "inplace",
                "value": "0"
              },
              {
                "name": "drop_na",
                "value": "1"
              },
              {
                "name": "files_to_select",
                "value": "1"
              },
              {
                "name": "label_col",
                "value": "is_error"
              },
              {
                "name": "is_save_to_tsdb",
                "value": "0"
              },
              {
                "name": "V3IO_API",
                "value": "v3io-webapi.default-tenant.svc:8081"
              },
              {
                "name": "V3IO_USERNAME",
                "value": "admin"
              },
              {
                "name": "V3IO_ACCESS_KEY",
                "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              },
              {
                "name": "V3IO_FRAMESD",
                "value": "framesd:8081"
              },
              {
                "name": "aggregate_fn_url",
                "value": "hub://aggregate"
              },
              {
                "name": "MLRUN_DEFAULT_PROJECT",
                "value": "network-operations-admin"
              },
              {
                "name": "MLRUN_DBPATH",
                "value": "http://mlrun-api:8080"
              },
              {
                "name": "MLRUN_NAMESPACE",
                "value": "default-tenant"
              }
            ],
            "handler": "preprocessor:handler",
            "runtime": "python:3.6",
            "volumes": [
              {
                "volume": {
                  "flexVolume": {
                    "driver": "v3io/fuse",
                    "options": {
                      "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
                    }
                  },
                  "name": "v3io"
                },
                "volumeMount": {
                  "mountPath": "/v3io",
                  "name": "v3io",
                  "subPath": ""
                }
              },
              {
                "volume": {
                  "flexVolume": {
                    "driver": "v3io/fuse",
                    "options": {
                      "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
                    }
                  },
                  "name": "v3io"
                },
                "volumeMount": {
                  "mountPath": "/User",
                  "name": "v3io",
                  "subPath": "users/admin"
                }
              }
            ],
            "triggers": {
              "cron": {
                "kind": "cron",
                "attributes": {
                  "interval": "1m"
                }
              }
            },
            "serviceType": "NodePort",
            "minReplicas": 1,
            "maxReplicas": 4
          }
        },
        "source": "",
        "image_pull_policy": "Always",
        "function_kind": "mlrun",
        "build": {
          "commands": [],
          "origin_filename": "/User/demos/network-operations/notebooks/preprocessor.ipynb"
        },
        "mount_applied": true,
        "priority_class_name": "",
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "remote",
      "metadata": {
        "name": "labeled-stream",
        "tag": "",
        "hash": "2095c4938e7cdf3d4e750659b3f138db42ed4006",
        "project": "network-operations-admin",
        "categories": [],
        "updated": "2021-08-29T20:29:07.815064+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "",
        "description": "",
        "min_replicas": 1,
        "max_replicas": 4,
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          },
          {
            "name": "METRICS_TABLE",
            "value": "/User/demos/network-operations/streaming/metrics"
          },
          {
            "name": "PREDICTIONS_TABLE",
            "value": "/User/demos/network-operations/streaming/predictions"
          },
          {
            "name": "OUTPUT_STREAM",
            "value": "/users/admin/demos/network-operations/streaming/labeled_stream"
          },
          {
            "name": "label_col",
            "value": "is_error"
          },
          {
            "name": "prediction_col",
            "value": "predictions"
          },
          {
            "name": "BATCHES_TO_GENERATE",
            "value": "20"
          }
        ],
        "config": {
          "spec.triggers.cron": {
            "kind": "cron",
            "attributes": {
              "interval": "1m"
            }
          },
          "metadata.labels.mlrun/class": "remote",
          "spec.serviceType": "NodePort",
          "spec.minReplicas": 1,
          "spec.maxReplicas": 4
        },
        "base_spec": {
          "apiVersion": "nuclio.io/v1",
          "kind": "Function",
          "metadata": {
            "annotations": {
              "nuclio.io/generated_by": "function generated from /User/demos/network-operations/notebooks/labeled_stream_creator.ipynb"
            },
            "labels": {
              "mlrun/class": "remote",
              "nuclio.io/project-name": "network-operations-admin"
            },
            "name": "network-operations-admin-labeled-stream"
          },
          "spec": {
            "build": {
              "baseImage": "mlrun/ml-models:0.7.0-rc11",
              "commands": [
                "python -m pip install v3io --upgrade"
              ],
              "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG9zCmltcG9ydCBwYW5kYXMgYXMgcGQKaW1wb3J0IGpzb24KaW1wb3J0IHYzaW8KaW1wb3J0IHYzaW8uZGF0YXBsYW5lCmltcG9ydCBzb2NrZXQKCmRlZiBzcGxpdF9wYXRoKG1udHBhdGg9JycpOgogICAgaWYgbW50cGF0aFswXSA9PSAnLyc6CiAgICAgICAgbW50cGF0aCA9IG1udHBhdGhbMTpdCiAgICBwYXRocyA9IG1udHBhdGguc3BsaXQoJy8nKQogICAgY29udGFpbmVyID0gcGF0aHNbMF0KICAgIHN1YnBhdGggPSAnJwogICAgaWYgbGVuKHBhdGhzKSA+IDE6CiAgICAgICAgc3VicGF0aCA9IG1udHBhdGhbbGVuKGNvbnRhaW5lcik6XQogICAgcmV0dXJuIGNvbnRhaW5lciwgc3VicGF0aAoKZGVmIGNyZWF0ZV9zdHJlYW0oY29udGV4dCwgcGF0aCwgc2hhcmRzPTEpOgogICAgY29udGFpbmVyLCBzdHJlYW1fcGF0aCA9IHNwbGl0X3BhdGgocGF0aCkKICAgIGNvbnRleHQubG9nZ2VyLmluZm8oZidDcmVhdGluZyBzdHJlYW0gaW4gQ29udGFpbmVyOiB7Y29udGFpbmVyfSAmIFBhdGgge3N0cmVhbV9wYXRofScpCiAgICByZXNwb25zZSA9IGNvbnRleHQudjNpb19jbGllbnQuc3RyZWFtLmNyZWF0ZShjb250YWluZXI9Y29udGFpbmVyLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RyZWFtX3BhdGg9c3RyZWFtX3BhdGgsIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hhcmRfY291bnQ9c2hhcmRzLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmFpc2VfZm9yX3N0YXR1cz12M2lvLmRhdGFwbGFuZS5SYWlzZUZvclN0YXR1cy5uZXZlcikKICAgIHJlc3BvbnNlLnJhaXNlX2Zvcl9zdGF0dXMoWzQwOSwgMjA0XSkKCmRlZiBwdXNoX3RvX3N0cmVhbShjb250ZXh0LCBzdHJlYW1fcGF0aCwgZGF0YSk6CiAgICBkZWYgcmVzdHJ1Y3R1cmVfc3RyZWFtX2V2ZW50KGNvbnRleHQsIGV2ZW50KToKICAgICAgICBpbnN0YW5jZXMgPSBbZGljdCgpXQogICAgICAgIGZvciBrZXkgaW4gZGF0YS5rZXlzKCk6CiAgICAgICAgICAgIGlmIGtleSBub3QgaW4gWyd3aGVuJywgJ2NsYXNzJywgJ21vZGVsJywgJ3dvcmtlcicsICdob3N0bmFtZScsIGNvbnRleHQucHJlZGljdGlvbl9jb2xdOgogICAgICAgICAgICAgICAgaW5zdGFuY2VzWzBdLnVwZGF0ZSh7a2V5OiBldmVudC5wb3Aoa2V5KX0pCiAgICAgICAgZXZlbnRbJ3JlcXVlc3QnXSA9IHsnaW5zdGFuY2VzJzogaW5zdGFuY2VzfQogICAgICAgIGV2ZW50WydyZXNwJ10gPSBbaW50KGV2ZW50LnBvcChjb250ZXh0LnByZWRpY3Rpb25fY29sKSldCiAgICAgICAgcmV0dXJuIGV2ZW50CiAgICAKICAgIHJlY29yZHMgPSBqc29uLmxvYWRzKGRhdGEudG9fanNvbihvcmllbnQ9J3JlY29yZHMnKSkKICAgIHJlY29yZHMgPSBbeydkYXRhJzoganNvbi5kdW1wcyhyZXN0cnVjdHVyZV9zdHJlYW1fZXZlbnQoY29udGV4dCwgcmVjb3JkKSl9IGZvciByZWNvcmQgaW4gcmVjb3Jkc10KICAgIGNvbnRleHQubG9nZ2VyLmluZm8oZidMb2dnaW5nIHtsZW4ocmVjb3Jkcyl9IHJlY29yZHMsIFJlY29yZCBleGFtcGxlOiB7cmVjb3Jkc1swXX0nKQogICAgY29udGFpbmVyLCBzdHJlYW1fcGF0aCA9IHNwbGl0X3BhdGgoc3RyZWFtX3BhdGgpCiAgICBzdGVwID0gMTAKICAgIGZvciBpZHggaW4gcmFuZ2UoMCwgbGVuKHJlY29yZHMpLCBzdGVwKToKICAgICAgICByZXNwb25zZSA9IGNvbnRleHQudjNpb19jbGllbnQucHV0X3JlY29yZHMoY29udGFpbmVyPWNvbnRhaW5lciwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGF0aD1zdHJlYW1fcGF0aCwgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlY29yZHM9cmVjb3Jkc1tpZHg6aWR4K3N0ZXBdKQoKZGVmIGdldF9kYXRhX3BhcnF1ZXQoY29udGV4dCwgdGFibGUsIGZpbGVzX3RvX3NlbGVjdD0xKToKICAgIG1wYXRoID0gW29zLnBhdGguam9pbih0YWJsZSwgZmlsZSkgZm9yIGZpbGUgaW4gb3MubGlzdGRpcih0YWJsZSkgaWYgZmlsZS5lbmRzd2l0aCgoJ3BhcnF1ZXQnLCAncHEnKSldCiAgICBmaWxlc19ieV91cGRhdGVkID0gc29ydGVkKG1wYXRoLCBrZXk9b3MucGF0aC5nZXRtdGltZSwgcmV2ZXJzZT1GYWxzZSkKICAgIGNvbnRleHQubG9nZ2VyLmRlYnVnX3dpdGgoJ0lucHV0JywgaW5wdXRfZmlsZXM9ZmlsZXNfYnlfdXBkYXRlZFs6ZmlsZXNfdG9fc2VsZWN0XSkKICAgIGRmcyA9IHBkLmNvbmNhdChbcGQucmVhZF9wYXJxdWV0KGZpbGUpIGZvciBmaWxlIGluIGZpbGVzX2J5X3VwZGF0ZWRbOmZpbGVzX3RvX3NlbGVjdF1dKQogICAgcmV0dXJuIGRmcwoKZGVmIGluaXRfY29udGV4dChjb250ZXh0KToKICAgIAogICAgYmF0Y2hlc190b19nZW5lcmF0ZSA9IGludChvcy5nZXRlbnYoJ0JBVENIRVNfVE9fR0VORVJBVEUnLCAyMCkpCiAgICBzZXRhdHRyKGNvbnRleHQsICdiYXRjaGVzX3RvX2dlbmVyYXRlJywgYmF0Y2hlc190b19nZW5lcmF0ZSkKICAgIHNldGF0dHIoY29udGV4dCwgJ2JhdGNoZXNfZ2VuZXJhdGVkJywgMCkKICAgIAogICAgc2V0YXR0cihjb250ZXh0LCAnbWV0cmljc190YWJsZScsIG9zLmVudmlyb25bJ01FVFJJQ1NfVEFCTEUnXSkKICAgIHNldGF0dHIoY29udGV4dCwgJ3ByZWRpY3Rpb25zX3RhYmxlJywgb3MuZW52aXJvblsnUFJFRElDVElPTlNfVEFCTEUnXSkKICAgIHNldGF0dHIoY29udGV4dCwgJ291dHB1dF9zdHJlYW0nLCBvcy5lbnZpcm9uWydPVVRQVVRfU1RSRUFNJ10pCiAgICBzZXRhdHRyKGNvbnRleHQsICd0aW1lc3RhbXBfY29sJywgb3MuZ2V0ZW52KCd0aW1lc3RhbXBfY29sJywgJ3doZW4nKSkKICAgIHNldGF0dHIoY29udGV4dCwgJ29yaWdfdGltZXN0YW1wX2NvbCcsIG9zLmdldGVudignb3JpZ190aW1lc3RhbXBfY29sJywgJ3RpbWVzdGFtcCcpKQogICAgCiAgICB2M2lvX2NsaWVudCA9IHYzaW8uZGF0YXBsYW5lLkNsaWVudChsb2dnZXJfdmVyYm9zaXR5PSdERUJVRycsIHRyYW5zcG9ydF92ZXJib3NpdHk9J0RFQlVHJykKICAgIHNldGF0dHIoY29udGV4dCwgJ3YzaW9fY2xpZW50JywgdjNpb19jbGllbnQpCiAgICBjcmVhdGVfc3RyZWFtKGNvbnRleHQsIGNvbnRleHQub3V0cHV0X3N0cmVhbSkKICAgIAogICAgc2V0YXR0cihjb250ZXh0LCAnbGFiZWxfY29sJywgb3MuZW52aXJvblsnbGFiZWxfY29sJ10pCiAgICBzZXRhdHRyKGNvbnRleHQsICdwcmVkaWN0aW9uX2NvbCcsIG9zLmVudmlyb25bJ3ByZWRpY3Rpb25fY29sJ10pCgpkZWYgaGFuZGxlcihjb250ZXh0LCBldmVudCk6CiAgICAKICAgIGlmIChjb250ZXh0LmJhdGNoZXNfdG9fZ2VuZXJhdGUgPT0gLTEpIG9yIChjb250ZXh0LmJhdGNoZXNfZ2VuZXJhdGVkIDw9IGNvbnRleHQuYmF0Y2hlc190b19nZW5lcmF0ZSk6CiAgICAgICAgCiAgICAgICAgbWV0cmljcyA9IGdldF9kYXRhX3BhcnF1ZXQoY29udGV4dCwgY29udGV4dC5tZXRyaWNzX3RhYmxlLCAyKS5sb2NbOiwgY29udGV4dC5sYWJlbF9jb2xdLmFzdHlwZSgnaW50JykKICAgICAgICBtZXRyaWNzLmluZGV4Lm5hbWVzID0gbGlzdChbbmFtZSBpZiBuYW1lICE9IGNvbnRleHQub3JpZ190aW1lc3RhbXBfY29sIGVsc2UgY29udGV4dC50aW1lc3RhbXBfY29sIGZvciBuYW1lIGluIG1ldHJpY3MuaW5kZXgubmFtZXNdKQogICAgICAgIHByZWRpY3Rpb25zID0gZ2V0X2RhdGFfcGFycXVldChjb250ZXh0LCBjb250ZXh0LnByZWRpY3Rpb25zX3RhYmxlLCAyKQogICAgICAgIGNvbnRleHQubG9nZ2VyLmRlYnVnKGYnTGFiZWxpbmcgbWV0cmljcyAoe21ldHJpY3Muc2hhcGV9KSBhbmQgcHJlZGljdGlvbnMgKHtwcmVkaWN0aW9ucy5zaGFwZX0pJykKICAgICAgICBjb250ZXh0LmxvZ2dlci5kZWJ1Z193aXRoKCdJbmRleGVzJywgbWV0cmljc19pbmRleD1tZXRyaWNzLmluZGV4Lm5hbWVzLCBwcmVkaWN0aW9uc19pbmRleD1wcmVkaWN0aW9ucy5pbmRleC5uYW1lcykKCiAgICAgICAgcHJpbnQoJ21ldHJpY3MnKQogICAgICAgIHByaW50KG1ldHJpY3MuaGVhZCgpKQogICAgICAgIHByaW50KHR5cGUobWV0cmljcykpCiAgICAgICAgbWV0cmljcyA9IHBkLkRhdGFGcmFtZShtZXRyaWNzKQogICAgICAgIHByaW50KCdjaGFuZ2UnKQogICAgICAgIHByaW50KHR5cGUobWV0cmljcykpCiAgICAgICAgcHJpbnQobWV0cmljcy5oZWFkKCkpCiAgICAgICAgcHJpbnQobWV0cmljcy5pbmRleC5uYW1lcykKCiAgICAgICAgZnVsbF9kZiA9IHBkLm1lcmdlKGxlZnQ9cHJlZGljdGlvbnMsIHJpZ2h0PW1ldHJpY3MsIGxlZnRfb249bWV0cmljcy5pbmRleC5uYW1lcywgaG93PSdsZWZ0JywgbGVmdF9pbmRleD1UcnVlLCByaWdodF9pbmRleD1UcnVlKQogICAgICAgIGZ1bGxfZGYgPSBmdWxsX2RmLnJlc2V0X2luZGV4KCkKICAgICAgICBjb250ZXh0LmxvZ2dlci5pbmZvKGYnRnVsbHkgbGFiZWxlZCBiYXRjaCBzaXplIGlzIHtmdWxsX2RmLnNoYXBlfScpCiAgICAgICAgY29udGV4dC5sb2dnZXIuaW5mbyhmJ0luZGV4ZXM6IHtsaXN0KGZ1bGxfZGYuaW5kZXgubmFtZXMpfScpCiAgICAgICAgY29udGV4dC5sb2dnZXIuaW5mbyhmJ0NvbHVtbnM6IHtmdWxsX2RmLmNvbHVtbnN9JykKICAgICAgICBjb250ZXh0LmxvZ2dlci5pbmZvX3dpdGgoJ3NhbXBsZScsIGZ1bGxfZGY9ZnVsbF9kZi5oZWFkKDEpKSAgICAKICAgICAgICBwdXNoX3RvX3N0cmVhbShjb250ZXh0LCBjb250ZXh0Lm91dHB1dF9zdHJlYW0sIGZ1bGxfZGYpCiAgICAgICAgCiAgICAgICAgY29udGV4dC5iYXRjaGVzX2dlbmVyYXRlZCArPSAxCgo=",
              "noBaseImagesPull": true
            },
            "env": [
              {
                "name": "METRICS_TABLE",
                "value": "/User/demos/network-operations/streaming/metrics"
              },
              {
                "name": "PREDICTIONS_TABLE",
                "value": "/User/demos/network-operations/streaming/predictions"
              },
              {
                "name": "OUTPUT_STREAM",
                "value": "/users/admin/demos/network-operations/streaming/labeled_stream"
              },
              {
                "name": "prediction_col",
                "value": "predictions"
              },
              {
                "name": "label_col",
                "value": "is_error"
              },
              {
                "name": "output_stream_shards",
                "value": "1"
              },
              {
                "name": "BATCHES_TO_GENERATE",
                "value": "20"
              },
              {
                "name": "V3IO_API",
                "value": "v3io-webapi.default-tenant.svc:8081"
              },
              {
                "name": "V3IO_USERNAME",
                "value": "admin"
              },
              {
                "name": "V3IO_ACCESS_KEY",
                "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              },
              {
                "name": "V3IO_FRAMESD",
                "value": "framesd:8081"
              },
              {
                "name": "MLRUN_DEFAULT_PROJECT",
                "value": "network-operations-admin"
              },
              {
                "name": "MLRUN_DBPATH",
                "value": "http://mlrun-api:8080"
              },
              {
                "name": "MLRUN_NAMESPACE",
                "value": "default-tenant"
              }
            ],
            "handler": "labeled_stream_creator:handler",
            "runtime": "python:3.6",
            "volumes": [
              {
                "volume": {
                  "flexVolume": {
                    "driver": "v3io/fuse",
                    "options": {
                      "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
                    }
                  },
                  "name": "v3io"
                },
                "volumeMount": {
                  "mountPath": "/v3io",
                  "name": "v3io",
                  "subPath": ""
                }
              },
              {
                "volume": {
                  "flexVolume": {
                    "driver": "v3io/fuse",
                    "options": {
                      "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
                    }
                  },
                  "name": "v3io"
                },
                "volumeMount": {
                  "mountPath": "/User",
                  "name": "v3io",
                  "subPath": "users/admin"
                }
              }
            ],
            "triggers": {
              "cron": {
                "kind": "cron",
                "attributes": {
                  "interval": "1m"
                }
              }
            },
            "serviceType": "NodePort",
            "minReplicas": 1,
            "maxReplicas": 4
          }
        },
        "source": "",
        "image_pull_policy": "Always",
        "function_kind": "mlrun",
        "build": {
          "commands": [],
          "origin_filename": "/User/demos/network-operations/notebooks/labeled_stream_creator.ipynb"
        },
        "mount_applied": true,
        "priority_class_name": "",
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "remote",
      "metadata": {
        "name": "generator",
        "tag": "latest",
        "hash": "42cb29041beb2afc7654164332c8ad25b47dd19d",
        "project": "network-operations-admin",
        "categories": [],
        "updated": "2021-08-29T20:29:26.102515+00:00"
      },
      "spec": {
        "command": "http://default-tenant.app.vmdev36.lab.iguazeng.com:32164",
        "args": [],
        "image": "",
        "description": "",
        "min_replicas": 1,
        "max_replicas": 4,
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          },
          {
            "name": "SAVE_TO",
            "value": "/User/demos/network-operations/streaming/metrics"
          },
          {
            "name": "SECS_TO_GENERATE",
            "value": "10"
          },
          {
            "name": "METRICS_CONFIGURATION_FILEPATH",
            "value": "/User/demos/network-operations/src/metric_configurations.yaml"
          },
          {
            "name": "BATCHES_TO_GENERATE",
            "value": "20"
          }
        ],
        "config": {
          "spec.triggers.cron": {
            "kind": "cron",
            "attributes": {
              "interval": "1m"
            }
          }
        },
        "base_spec": {
          "apiVersion": "nuclio.io/v1",
          "kind": "Function",
          "metadata": {
            "annotations": {
              "nuclio.io/generated_by": "function generated from /User/demos/network-operations/notebooks/generator.ipynb"
            },
            "labels": {},
            "name": "generator"
          },
          "spec": {
            "build": {
              "commands": [
                "python -m pip install pyyaml",
                "python -m pip install pyarrow",
                "python -m pip install pandas",
                "python -m pip install pytimeparse",
                "python -m pip install v3io_frames --upgrade",
                "python -m pip install -i https://test.pypi.org/simple/ v3io-generator",
                "python -m pip install faker"
              ],
              "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG9zCmltcG9ydCB0aW1lCmltcG9ydCB5YW1sCmltcG9ydCBwYW5kYXMgYXMgcGQKaW1wb3J0IGl0ZXJ0b29scwppbXBvcnQgZGF0ZXRpbWUKCmltcG9ydCB2M2lvX2ZyYW1lcyBhcyB2M2YKCmZyb20gdjNpb19nZW5lcmF0b3IgaW1wb3J0IG1ldHJpY3NfZ2VuZXJhdG9yLCBkZXBsb3ltZW50X2dlbmVyYXRvcgoKZGVmIF9jcmVhdGVfZGVwbG95bWVudCgpOgogICAgcHJpbnQoJ2NyZWF0aW5nIGRlcGxveW1lbnQnKQogICAgZGVwX2dlbiA9IGRlcGxveW1lbnRfZ2VuZXJhdG9yLmRlcGxveW1lbnRfZ2VuZXJhdG9yKCkKICAgIGZha2VyPWRlcF9nZW4uZ2V0X2Zha2VyKCkKCiAgICBkZXBfZ2VuLmFkZF9sZXZlbChuYW1lPSdjb21wYW55JyxudW1iZXI9MixsZXZlbF90eXBlPWZha2VyLmNvbXBhbnkpCiAgICBkZXBfZ2VuLmFkZF9sZXZlbCgnZGF0YV9jZW50ZXInLG51bWJlcj0yLGxldmVsX3R5cGU9ZmFrZXIuc3RyZWV0X25hbWUpCiAgICBkZXBfZ2VuLmFkZF9sZXZlbCgnZGV2aWNlJyxudW1iZXI9MixsZXZlbF90eXBlPWZha2VyLm1zaXNkbikKCiAgICBkZXBsb3ltZW50X2RmID0gZGVwX2dlbi5nZW5lcmF0ZV9kZXBsb3ltZW50KCkKICAgIHJldHVybiBkZXBsb3ltZW50X2RmCgpkZWYgX2lzX2RlcGxveW1lbnRfZXhpc3QocGF0aCk6CiAgICByZXR1cm4gb3MucGF0aC5leGlzdHMoZicvdjNpby9iaWdkYXRhL3twYXRofScpCgpkZWYgX2dldF9kZXBsb3ltZW50X2Zyb21fa3YoY2xpZW50LCBwYXRoKToKICAgIHByaW50KGYnUmV0cmlldmluZyBkZXBsb3ltZW50IGZyb20ge3BhdGh9JykKICAgIGNvbnRleHQubG9nZ2VyLmRlYnVnKGYnUmV0cmlldmluZyBkZXBsb3ltZW50IGZyb20ge3BhdGh9JykKICAgIGRlcGxveW1lbnRfZGYgPSBjbGllbnQucmVhZChiYWNrZW5kPSdrdicsIHRhYmxlPXBhdGgpCiAgICAKICAgIGRlcGxveW1lbnRfZGYuaW5kZXgubmFtZSA9ICdkZXZpY2UnCiAgICBkZXBsb3ltZW50X2RmID0gZGVwbG95bWVudF9kZi5yZXNldF9pbmRleCgpCiAgICByZXR1cm4gZGVwbG95bWVudF9kZgoKZGVmIF9zYXZlX2RlcGxveW1lbnRfdG9fa3YocGF0aCwgZGYsIGNsaWVudD1Ob25lKToKICAgIGNsaWVudC53cml0ZShiYWNrZW5kPSdrdicsIHRhYmxlPSduZXRvcHNfZGV2aWNlcycsZGZzPWRmLCBpbmRleF9jb2xzPVsnZGV2aWNlJ10pCgpkZWYgZ2V0X29yX2NyZWF0ZV9kZXBsb3ltZW50KHBhdGgsIHNhdmVfdG9fY2xvdWQ9RmFsc2UsIGNsaWVudD1Ob25lKToKICAgIGlmIGNsaWVudCBhbmQgX2lzX2RlcGxveW1lbnRfZXhpc3QocGF0aCk6CiAgICAgICAgZGVwbG95bWVudF9kZiA9IF9nZXRfZGVwbG95bWVudF9mcm9tX2t2KGNsaWVudCwgcGF0aCkKICAgIGVsc2U6CiAgICAgICAgZGVwbG95bWVudF9kZiA9IF9jcmVhdGVfZGVwbG95bWVudCgpCiAgICAgICAgCiAgICAgICAgaWYgY2xpZW50IGFuZCBzYXZlX3RvX2Nsb3VkOgogICAgICAgICAgICBfc2F2ZV9kZXBsb3ltZW50X3RvX2t2KHBhdGgsIGRlcGxveW1lbnRfZGYsIGNsaWVudCkKCiAgICByZXR1cm4gZGVwbG95bWVudF9kZgoKZGVmIHNldF9pbmRleGVzKGRmKToKICAgIGRmID0gZGYuc2V0X2luZGV4KFsndGltZXN0YW1wJywgJ2NvbXBhbnknLCAnZGF0YV9jZW50ZXInLCAnZGV2aWNlJ10pCiAgICByZXR1cm4gZGYKCmRlZiBzYXZlX21ldHJpY3NfdG9fdHNkYihjb250ZXh0LCBtZXRyaWNzOiBwZC5EYXRhRnJhbWUpOgogICAgcHJpbnQoJ1NhdmluZyBtZXRyaWNzIHRvIFRTREInKQogICAgCiAgICBjb250ZXh0LnYzZi53cml0ZSgndHNkYicsIGNvbnRleHQubWV0cmljc190YWJsZSwgbWV0cmljcykKCmRlZiBzYXZlX21ldHJpY3NfdG9fcGFycXVldChjb250ZXh0LCBtZXRyaWNzKToKICAgIHByaW50KCdTYXZpbmcgbWV0cmljcyB0byBQYXJxdWV0JykKICAgIGRmID0gcGQuY29uY2F0KGl0ZXJ0b29scy5jaGFpbihtZXRyaWNzKSkKICAgIAogICAgZGYgPSBkZi5yZXNldF9pbmRleCgpCiAgICBkZlsndGltZXN0YW1wJ10gPSBkZi5sb2NbOiwgJ3RpbWVzdGFtcCddLmFzdHlwZSgnZGF0ZXRpbWU2NFttc10nKQogICAgCiAgICBkZiA9IHNldF9pbmRleGVzKGRmKQogICAgCiAgICBmaXJzdF90aW1lc3RhbXAgPSBkZi5pbmRleFswXVswXS5zdHJmdGltZSgnJVklbSVkVCVIJU0lUycpCiAgICBsYXN0X3RpbWVzdGFtcCA9IGRmLmluZGV4Wy0xXVswXS5zdHJmdGltZSgnJVklbSVkVCVIJU0lUycpCiAgICBmaWxlbmFtZSA9IGZpcnN0X3RpbWVzdGFtcCArICctJyArIGxhc3RfdGltZXN0YW1wICsgJy5wYXJxdWV0JwogICAgcHJpbnQoZmlsZW5hbWUpCiAgICBmaWxlcGF0aCA9IG9zLnBhdGguam9pbihjb250ZXh0Lm1ldHJpY3NfdGFibGUsIGZpbGVuYW1lKQogICAgcHJpbnQoZmlsZXBhdGgpCiAgICB3aXRoIG9wZW4oZmlsZXBhdGgsICd3YisnKSBhcyBmOgogICAgICAgIGRmLnRvX3BhcnF1ZXQoZikKCmRlZiBpc19kZXBsb3ltZW50X2luaXRpYWxpemVkKGNvbnRleHQpOgogICAgcmV0dXJuIGhhc2F0dHIoY29udGV4dCwgJ21ldHJpY19nZW5lcmF0b3InKQoKZGVmIGluaXRfY29udGV4dChjb250ZXh0KToKICAgIAogICAgYmF0Y2hlc190b19nZW5lcmF0ZSA9IGludChvcy5nZXRlbnYoJ0JBVENIRVNfVE9fR0VORVJBVEUnLCAyMCkpCiAgICBzZXRhdHRyKGNvbnRleHQsICdiYXRjaGVzX3RvX2dlbmVyYXRlJywgYmF0Y2hlc190b19nZW5lcmF0ZSkKICAgIHNldGF0dHIoY29udGV4dCwgJ2JhdGNoZXNfZ2VuZXJhdGVkJywgMCkKICAgIAogICAgc2F2ZV90b190c2RiID0gKGludChvcy5nZXRlbnYoJ1NBVkVfVE9fVFNEQicsIDEpKSA9PSAxKQogICAgCiAgICBtZXRyaWNzX3RhYmxlID0gb3MuZ2V0ZW52KCdTQVZFX1RPJywgJ25ldG9wc19tZXRyaWNzJykKICAgIHNldGF0dHIoY29udGV4dCwgJ21ldHJpY3NfdGFibGUnLCBtZXRyaWNzX3RhYmxlKSAKCiAgICBpZiBzYXZlX3RvX3RzZGI6CiAgICAgICAgY29udGV4dC5sb2dnZXIuZGVidWcoJ1NhdmluZyB0byBUU0RCJykKICAgICAgICBjbGllbnQgPSB2M2YuQ2xpZW50KGFkZHJlc3M9J2ZyYW1lc2Q6ODA4MScsIGNvbnRhaW5lcj0nYmlnZGF0YScpCiAgICAgICAgCiAgICAgICAgY2xpZW50LmNyZWF0ZSgndHNkYicsIG1ldHJpY3NfdGFibGUsIHJhdGU9JzEvcycsIGlmX2V4aXN0cz0xKQogICAgICAgIAogICAgICAgIHNldGF0dHIoY29udGV4dCwgJ3dyaXRlJywgc2F2ZV9tZXRyaWNzX3RvX3RzZGIpCiAgICAKICAgIGVsc2U6CiAgICAgICAgY29udGV4dC5sb2dnZXIuZGVidWcoJ1NhdmluZyB0byBQYXJxdWV0JykKICAgICAgICBjbGllbnQgPSBOb25lCiAgICAgICAgICAKICAgICAgICBmaWxlcGF0aCA9IG9zLnBhdGguam9pbihtZXRyaWNzX3RhYmxlKQogICAgICAgIGlmIG5vdCBvcy5wYXRoLmV4aXN0cyhmaWxlcGF0aCk6CiAgICAgICAgICAgIG9zLm1ha2VkaXJzKGZpbGVwYXRoKQogICAgICAgIAogICAgICAgIHNldGF0dHIoY29udGV4dCwgJ3dyaXRlJywgc2F2ZV9tZXRyaWNzX3RvX3BhcnF1ZXQpCiAgICAKICAgICAgICAgIAogICAgc2Vjc190b19nZW5lcmF0ZSA9IG9zLmdldGVudignU0VDU19UT19HRU5FUkFURScsIDEwKQogICAgc2V0YXR0cihjb250ZXh0LCAnc2Vjc190b19nZW5lcmF0ZScsIHNlY3NfdG9fZ2VuZXJhdGUpCiAgICAKICAgICAKICAgIAogICAgZGVwbG95bWVudF9kZiA9IGdldF9vcl9jcmVhdGVfZGVwbG95bWVudChvcy5lbnZpcm9uWydERVBMT1lNRU5UX1RBQkxFJ10sIG9zLmVudmlyb25bJ1NBVkVfREVQTE9ZTUVOVCddLCBjbGllbnQpCiAgICAKICAgIGRlcGxveW1lbnRfZGZbJ2NwdV91dGlsaXphdGlvbiddID0gNzAKICAgIGRlcGxveW1lbnRfZGZbJ2xhdGVuY3knXSA9IDAKICAgIGRlcGxveW1lbnRfZGZbJ3BhY2tldF9sb3NzJ10gPSAwCiAgICBkZXBsb3ltZW50X2RmWyd0aHJvdWdocHV0J10gPSAyOTAKICAgIGRlcGxveW1lbnRfZGYuaGVhZCgpCiAgICAKICAgIHdpdGggb3Blbihvcy5nZXRlbnYoJ01FVFJJQ1NfQ09ORklHVVJBVElPTl9GSUxFUEFUSCcsICcvc3JjL21ldHJpY3NfY29uZmlndXJhdGlvbi55YW1sJyksICdyJykgYXMgZjoKICAgICAgICBtZXRyaWNzX2NvbmZpZ3VyYXRpb24gPSB5YW1sLmxvYWQoZikKICAgICAgICAKICAgIGluaXRpYWxfdGltZXN0YW1wID0gaW50KG9zLmdldGVudignaW5pdGlhbF90aW1lc3RhbXAnLCAoZGF0ZXRpbWUuZGF0ZXRpbWUubm93KCktZGF0ZXRpbWUudGltZWRlbHRhKGRheXM9MSkpLnRpbWVzdGFtcCgpKSkKICAgIG1ldF9nZW4gPSBtZXRyaWNzX2dlbmVyYXRvci5HZW5lcmF0b3JfZGYobWV0cmljc19jb25maWd1cmF0aW9uLCAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlcl9oaWVyYXJjaHk9ZGVwbG95bWVudF9kZiwgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluaXRpYWxfdGltZXN0YW1wPWluaXRpYWxfdGltZXN0YW1wKQogICAgc2V0YXR0cihjb250ZXh0LCAnbWV0cmljX2dlbmVyYXRvcicsIG1ldF9nZW4pCiAgICAKICAgIHNldGF0dHIoY29udGV4dCwgJ3YzZicsIGNsaWVudCkKCmRlZiBoYW5kbGVyKGNvbnRleHQsIGV2ZW50KToKICAgIAogICAgaWYgKGNvbnRleHQuYmF0Y2hlc190b19nZW5lcmF0ZSA9PSAtMSkgb3IgKGNvbnRleHQuYmF0Y2hlc19nZW5lcmF0ZWQgPD0gY29udGV4dC5iYXRjaGVzX3RvX2dlbmVyYXRlKToKICAgICAgICAKICAgICAgICBtZXRyaWNzID0gY29udGV4dC5tZXRyaWNfZ2VuZXJhdG9yLmdlbmVyYXRlX3JhbmdlKHN0YXJ0X3RpbWU9ZGF0ZXRpbWUuZGF0ZXRpbWUubm93KCksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZW5kX3RpbWU9ZGF0ZXRpbWUuZGF0ZXRpbWUubm93KCkrZGF0ZXRpbWUudGltZWRlbHRhKHNlY29uZHM9aW50KGNvbnRleHQuc2Vjc190b19nZW5lcmF0ZSkpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFzX2RmPVRydWUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXNfaXRlcmF0b3I9VHJ1ZSkKCiAgICAgICAgY29udGV4dC53cml0ZShjb250ZXh0LCBtZXRyaWNzKQogICAgICAgIAogICAgICAgIGNvbnRleHQuYmF0Y2hlc19nZW5lcmF0ZWQgKz0gMQoK",
              "noBaseImagesPull": true
            },
            "env": [
              {
                "name": "BATCHES_TO_GENERATE",
                "value": "20"
              },
              {
                "name": "SAVE_DEPLOYMENT",
                "value": "1"
              },
              {
                "name": "DEPLOYMENT_TABLE",
                "value": "devices"
              },
              {
                "name": "METRICS_CONFIGURATION_FILEPATH",
                "value": "{src_path}/metric_configurations.yaml"
              },
              {
                "name": "SAVE_TO",
                "value": "{data_path}"
              },
              {
                "name": "SECS_TO_GENERATE",
                "value": "3600"
              },
              {
                "name": "SAVE_TO_TSDB",
                "value": "0"
              }
            ],
            "handler": "generator:handler",
            "runtime": "python:3.6",
            "volumes": []
          }
        },
        "source": "",
        "image_pull_policy": "Always",
        "build": {
          "commands": [],
          "origin_filename": "/User/demos/network-operations/notebooks/generator.ipynb"
        },
        "mount_applied": true,
        "affinity": null
      },
      "status": {
        "state": "ready",
        "nuclio_name": "network-operations-admin-generator",
        "address": "default-tenant.app.vmdev36.lab.iguazeng.com:32164",
        "internal_invocation_urls": [
          "nuclio-network-operations-admin-generator.default-tenant.svc.cluster.local:8080"
        ],
        "external_invocation_urls": [
          "default-tenant.app.vmdev36.lab.iguazeng.com:32164"
        ]
      },
      "verbose": false
    },
    {
      "kind": "remote",
      "metadata": {
        "name": "generator",
        "tag": "",
        "hash": "fdf30cfcaad51f07eff4223b3a5e3b99c44d3f17",
        "project": "network-operations-admin",
        "categories": [],
        "updated": "2021-08-29T20:29:25.920305+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "",
        "description": "",
        "min_replicas": 1,
        "max_replicas": 4,
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          },
          {
            "name": "SAVE_TO",
            "value": "/User/demos/network-operations/streaming/metrics"
          },
          {
            "name": "SECS_TO_GENERATE",
            "value": "10"
          },
          {
            "name": "METRICS_CONFIGURATION_FILEPATH",
            "value": "/User/demos/network-operations/src/metric_configurations.yaml"
          },
          {
            "name": "BATCHES_TO_GENERATE",
            "value": "20"
          }
        ],
        "config": {
          "spec.triggers.cron": {
            "kind": "cron",
            "attributes": {
              "interval": "1m"
            }
          },
          "metadata.labels.mlrun/class": "remote",
          "spec.serviceType": "NodePort",
          "spec.minReplicas": 1,
          "spec.maxReplicas": 4
        },
        "base_spec": {
          "apiVersion": "nuclio.io/v1",
          "kind": "Function",
          "metadata": {
            "annotations": {
              "nuclio.io/generated_by": "function generated from /User/demos/network-operations/notebooks/generator.ipynb"
            },
            "labels": {
              "mlrun/class": "remote",
              "nuclio.io/project-name": "network-operations-admin"
            },
            "name": "network-operations-admin-generator"
          },
          "spec": {
            "build": {
              "commands": [
                "python -m pip install pyyaml",
                "python -m pip install pyarrow",
                "python -m pip install pandas",
                "python -m pip install pytimeparse",
                "python -m pip install v3io_frames --upgrade",
                "python -m pip install -i https://test.pypi.org/simple/ v3io-generator",
                "python -m pip install faker"
              ],
              "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG9zCmltcG9ydCB0aW1lCmltcG9ydCB5YW1sCmltcG9ydCBwYW5kYXMgYXMgcGQKaW1wb3J0IGl0ZXJ0b29scwppbXBvcnQgZGF0ZXRpbWUKCmltcG9ydCB2M2lvX2ZyYW1lcyBhcyB2M2YKCmZyb20gdjNpb19nZW5lcmF0b3IgaW1wb3J0IG1ldHJpY3NfZ2VuZXJhdG9yLCBkZXBsb3ltZW50X2dlbmVyYXRvcgoKZGVmIF9jcmVhdGVfZGVwbG95bWVudCgpOgogICAgcHJpbnQoJ2NyZWF0aW5nIGRlcGxveW1lbnQnKQogICAgZGVwX2dlbiA9IGRlcGxveW1lbnRfZ2VuZXJhdG9yLmRlcGxveW1lbnRfZ2VuZXJhdG9yKCkKICAgIGZha2VyPWRlcF9nZW4uZ2V0X2Zha2VyKCkKCiAgICBkZXBfZ2VuLmFkZF9sZXZlbChuYW1lPSdjb21wYW55JyxudW1iZXI9MixsZXZlbF90eXBlPWZha2VyLmNvbXBhbnkpCiAgICBkZXBfZ2VuLmFkZF9sZXZlbCgnZGF0YV9jZW50ZXInLG51bWJlcj0yLGxldmVsX3R5cGU9ZmFrZXIuc3RyZWV0X25hbWUpCiAgICBkZXBfZ2VuLmFkZF9sZXZlbCgnZGV2aWNlJyxudW1iZXI9MixsZXZlbF90eXBlPWZha2VyLm1zaXNkbikKCiAgICBkZXBsb3ltZW50X2RmID0gZGVwX2dlbi5nZW5lcmF0ZV9kZXBsb3ltZW50KCkKICAgIHJldHVybiBkZXBsb3ltZW50X2RmCgpkZWYgX2lzX2RlcGxveW1lbnRfZXhpc3QocGF0aCk6CiAgICByZXR1cm4gb3MucGF0aC5leGlzdHMoZicvdjNpby9iaWdkYXRhL3twYXRofScpCgpkZWYgX2dldF9kZXBsb3ltZW50X2Zyb21fa3YoY2xpZW50LCBwYXRoKToKICAgIHByaW50KGYnUmV0cmlldmluZyBkZXBsb3ltZW50IGZyb20ge3BhdGh9JykKICAgIGNvbnRleHQubG9nZ2VyLmRlYnVnKGYnUmV0cmlldmluZyBkZXBsb3ltZW50IGZyb20ge3BhdGh9JykKICAgIGRlcGxveW1lbnRfZGYgPSBjbGllbnQucmVhZChiYWNrZW5kPSdrdicsIHRhYmxlPXBhdGgpCiAgICAKICAgIGRlcGxveW1lbnRfZGYuaW5kZXgubmFtZSA9ICdkZXZpY2UnCiAgICBkZXBsb3ltZW50X2RmID0gZGVwbG95bWVudF9kZi5yZXNldF9pbmRleCgpCiAgICByZXR1cm4gZGVwbG95bWVudF9kZgoKZGVmIF9zYXZlX2RlcGxveW1lbnRfdG9fa3YocGF0aCwgZGYsIGNsaWVudD1Ob25lKToKICAgIGNsaWVudC53cml0ZShiYWNrZW5kPSdrdicsIHRhYmxlPSduZXRvcHNfZGV2aWNlcycsZGZzPWRmLCBpbmRleF9jb2xzPVsnZGV2aWNlJ10pCgpkZWYgZ2V0X29yX2NyZWF0ZV9kZXBsb3ltZW50KHBhdGgsIHNhdmVfdG9fY2xvdWQ9RmFsc2UsIGNsaWVudD1Ob25lKToKICAgIGlmIGNsaWVudCBhbmQgX2lzX2RlcGxveW1lbnRfZXhpc3QocGF0aCk6CiAgICAgICAgZGVwbG95bWVudF9kZiA9IF9nZXRfZGVwbG95bWVudF9mcm9tX2t2KGNsaWVudCwgcGF0aCkKICAgIGVsc2U6CiAgICAgICAgZGVwbG95bWVudF9kZiA9IF9jcmVhdGVfZGVwbG95bWVudCgpCiAgICAgICAgCiAgICAgICAgaWYgY2xpZW50IGFuZCBzYXZlX3RvX2Nsb3VkOgogICAgICAgICAgICBfc2F2ZV9kZXBsb3ltZW50X3RvX2t2KHBhdGgsIGRlcGxveW1lbnRfZGYsIGNsaWVudCkKCiAgICByZXR1cm4gZGVwbG95bWVudF9kZgoKZGVmIHNldF9pbmRleGVzKGRmKToKICAgIGRmID0gZGYuc2V0X2luZGV4KFsndGltZXN0YW1wJywgJ2NvbXBhbnknLCAnZGF0YV9jZW50ZXInLCAnZGV2aWNlJ10pCiAgICByZXR1cm4gZGYKCmRlZiBzYXZlX21ldHJpY3NfdG9fdHNkYihjb250ZXh0LCBtZXRyaWNzOiBwZC5EYXRhRnJhbWUpOgogICAgcHJpbnQoJ1NhdmluZyBtZXRyaWNzIHRvIFRTREInKQogICAgCiAgICBjb250ZXh0LnYzZi53cml0ZSgndHNkYicsIGNvbnRleHQubWV0cmljc190YWJsZSwgbWV0cmljcykKCmRlZiBzYXZlX21ldHJpY3NfdG9fcGFycXVldChjb250ZXh0LCBtZXRyaWNzKToKICAgIHByaW50KCdTYXZpbmcgbWV0cmljcyB0byBQYXJxdWV0JykKICAgIGRmID0gcGQuY29uY2F0KGl0ZXJ0b29scy5jaGFpbihtZXRyaWNzKSkKICAgIAogICAgZGYgPSBkZi5yZXNldF9pbmRleCgpCiAgICBkZlsndGltZXN0YW1wJ10gPSBkZi5sb2NbOiwgJ3RpbWVzdGFtcCddLmFzdHlwZSgnZGF0ZXRpbWU2NFttc10nKQogICAgCiAgICBkZiA9IHNldF9pbmRleGVzKGRmKQogICAgCiAgICBmaXJzdF90aW1lc3RhbXAgPSBkZi5pbmRleFswXVswXS5zdHJmdGltZSgnJVklbSVkVCVIJU0lUycpCiAgICBsYXN0X3RpbWVzdGFtcCA9IGRmLmluZGV4Wy0xXVswXS5zdHJmdGltZSgnJVklbSVkVCVIJU0lUycpCiAgICBmaWxlbmFtZSA9IGZpcnN0X3RpbWVzdGFtcCArICctJyArIGxhc3RfdGltZXN0YW1wICsgJy5wYXJxdWV0JwogICAgcHJpbnQoZmlsZW5hbWUpCiAgICBmaWxlcGF0aCA9IG9zLnBhdGguam9pbihjb250ZXh0Lm1ldHJpY3NfdGFibGUsIGZpbGVuYW1lKQogICAgcHJpbnQoZmlsZXBhdGgpCiAgICB3aXRoIG9wZW4oZmlsZXBhdGgsICd3YisnKSBhcyBmOgogICAgICAgIGRmLnRvX3BhcnF1ZXQoZikKCmRlZiBpc19kZXBsb3ltZW50X2luaXRpYWxpemVkKGNvbnRleHQpOgogICAgcmV0dXJuIGhhc2F0dHIoY29udGV4dCwgJ21ldHJpY19nZW5lcmF0b3InKQoKZGVmIGluaXRfY29udGV4dChjb250ZXh0KToKICAgIAogICAgYmF0Y2hlc190b19nZW5lcmF0ZSA9IGludChvcy5nZXRlbnYoJ0JBVENIRVNfVE9fR0VORVJBVEUnLCAyMCkpCiAgICBzZXRhdHRyKGNvbnRleHQsICdiYXRjaGVzX3RvX2dlbmVyYXRlJywgYmF0Y2hlc190b19nZW5lcmF0ZSkKICAgIHNldGF0dHIoY29udGV4dCwgJ2JhdGNoZXNfZ2VuZXJhdGVkJywgMCkKICAgIAogICAgc2F2ZV90b190c2RiID0gKGludChvcy5nZXRlbnYoJ1NBVkVfVE9fVFNEQicsIDEpKSA9PSAxKQogICAgCiAgICBtZXRyaWNzX3RhYmxlID0gb3MuZ2V0ZW52KCdTQVZFX1RPJywgJ25ldG9wc19tZXRyaWNzJykKICAgIHNldGF0dHIoY29udGV4dCwgJ21ldHJpY3NfdGFibGUnLCBtZXRyaWNzX3RhYmxlKSAKCiAgICBpZiBzYXZlX3RvX3RzZGI6CiAgICAgICAgY29udGV4dC5sb2dnZXIuZGVidWcoJ1NhdmluZyB0byBUU0RCJykKICAgICAgICBjbGllbnQgPSB2M2YuQ2xpZW50KGFkZHJlc3M9J2ZyYW1lc2Q6ODA4MScsIGNvbnRhaW5lcj0nYmlnZGF0YScpCiAgICAgICAgCiAgICAgICAgY2xpZW50LmNyZWF0ZSgndHNkYicsIG1ldHJpY3NfdGFibGUsIHJhdGU9JzEvcycsIGlmX2V4aXN0cz0xKQogICAgICAgIAogICAgICAgIHNldGF0dHIoY29udGV4dCwgJ3dyaXRlJywgc2F2ZV9tZXRyaWNzX3RvX3RzZGIpCiAgICAKICAgIGVsc2U6CiAgICAgICAgY29udGV4dC5sb2dnZXIuZGVidWcoJ1NhdmluZyB0byBQYXJxdWV0JykKICAgICAgICBjbGllbnQgPSBOb25lCiAgICAgICAgICAKICAgICAgICBmaWxlcGF0aCA9IG9zLnBhdGguam9pbihtZXRyaWNzX3RhYmxlKQogICAgICAgIGlmIG5vdCBvcy5wYXRoLmV4aXN0cyhmaWxlcGF0aCk6CiAgICAgICAgICAgIG9zLm1ha2VkaXJzKGZpbGVwYXRoKQogICAgICAgIAogICAgICAgIHNldGF0dHIoY29udGV4dCwgJ3dyaXRlJywgc2F2ZV9tZXRyaWNzX3RvX3BhcnF1ZXQpCiAgICAKICAgICAgICAgIAogICAgc2Vjc190b19nZW5lcmF0ZSA9IG9zLmdldGVudignU0VDU19UT19HRU5FUkFURScsIDEwKQogICAgc2V0YXR0cihjb250ZXh0LCAnc2Vjc190b19nZW5lcmF0ZScsIHNlY3NfdG9fZ2VuZXJhdGUpCiAgICAKICAgICAKICAgIAogICAgZGVwbG95bWVudF9kZiA9IGdldF9vcl9jcmVhdGVfZGVwbG95bWVudChvcy5lbnZpcm9uWydERVBMT1lNRU5UX1RBQkxFJ10sIG9zLmVudmlyb25bJ1NBVkVfREVQTE9ZTUVOVCddLCBjbGllbnQpCiAgICAKICAgIGRlcGxveW1lbnRfZGZbJ2NwdV91dGlsaXphdGlvbiddID0gNzAKICAgIGRlcGxveW1lbnRfZGZbJ2xhdGVuY3knXSA9IDAKICAgIGRlcGxveW1lbnRfZGZbJ3BhY2tldF9sb3NzJ10gPSAwCiAgICBkZXBsb3ltZW50X2RmWyd0aHJvdWdocHV0J10gPSAyOTAKICAgIGRlcGxveW1lbnRfZGYuaGVhZCgpCiAgICAKICAgIHdpdGggb3Blbihvcy5nZXRlbnYoJ01FVFJJQ1NfQ09ORklHVVJBVElPTl9GSUxFUEFUSCcsICcvc3JjL21ldHJpY3NfY29uZmlndXJhdGlvbi55YW1sJyksICdyJykgYXMgZjoKICAgICAgICBtZXRyaWNzX2NvbmZpZ3VyYXRpb24gPSB5YW1sLmxvYWQoZikKICAgICAgICAKICAgIGluaXRpYWxfdGltZXN0YW1wID0gaW50KG9zLmdldGVudignaW5pdGlhbF90aW1lc3RhbXAnLCAoZGF0ZXRpbWUuZGF0ZXRpbWUubm93KCktZGF0ZXRpbWUudGltZWRlbHRhKGRheXM9MSkpLnRpbWVzdGFtcCgpKSkKICAgIG1ldF9nZW4gPSBtZXRyaWNzX2dlbmVyYXRvci5HZW5lcmF0b3JfZGYobWV0cmljc19jb25maWd1cmF0aW9uLCAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlcl9oaWVyYXJjaHk9ZGVwbG95bWVudF9kZiwgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluaXRpYWxfdGltZXN0YW1wPWluaXRpYWxfdGltZXN0YW1wKQogICAgc2V0YXR0cihjb250ZXh0LCAnbWV0cmljX2dlbmVyYXRvcicsIG1ldF9nZW4pCiAgICAKICAgIHNldGF0dHIoY29udGV4dCwgJ3YzZicsIGNsaWVudCkKCmRlZiBoYW5kbGVyKGNvbnRleHQsIGV2ZW50KToKICAgIAogICAgaWYgKGNvbnRleHQuYmF0Y2hlc190b19nZW5lcmF0ZSA9PSAtMSkgb3IgKGNvbnRleHQuYmF0Y2hlc19nZW5lcmF0ZWQgPD0gY29udGV4dC5iYXRjaGVzX3RvX2dlbmVyYXRlKToKICAgICAgICAKICAgICAgICBtZXRyaWNzID0gY29udGV4dC5tZXRyaWNfZ2VuZXJhdG9yLmdlbmVyYXRlX3JhbmdlKHN0YXJ0X3RpbWU9ZGF0ZXRpbWUuZGF0ZXRpbWUubm93KCksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZW5kX3RpbWU9ZGF0ZXRpbWUuZGF0ZXRpbWUubm93KCkrZGF0ZXRpbWUudGltZWRlbHRhKHNlY29uZHM9aW50KGNvbnRleHQuc2Vjc190b19nZW5lcmF0ZSkpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFzX2RmPVRydWUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXNfaXRlcmF0b3I9VHJ1ZSkKCiAgICAgICAgY29udGV4dC53cml0ZShjb250ZXh0LCBtZXRyaWNzKQogICAgICAgIAogICAgICAgIGNvbnRleHQuYmF0Y2hlc19nZW5lcmF0ZWQgKz0gMQoK",
              "noBaseImagesPull": true
            },
            "env": [
              {
                "name": "BATCHES_TO_GENERATE",
                "value": "20"
              },
              {
                "name": "SAVE_DEPLOYMENT",
                "value": "1"
              },
              {
                "name": "DEPLOYMENT_TABLE",
                "value": "devices"
              },
              {
                "name": "METRICS_CONFIGURATION_FILEPATH",
                "value": "/User/demos/network-operations/src/metric_configurations.yaml"
              },
              {
                "name": "SAVE_TO",
                "value": "/User/demos/network-operations/streaming/metrics"
              },
              {
                "name": "SECS_TO_GENERATE",
                "value": "10"
              },
              {
                "name": "SAVE_TO_TSDB",
                "value": "0"
              },
              {
                "name": "V3IO_API",
                "value": "v3io-webapi.default-tenant.svc:8081"
              },
              {
                "name": "V3IO_USERNAME",
                "value": "admin"
              },
              {
                "name": "V3IO_ACCESS_KEY",
                "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              },
              {
                "name": "V3IO_FRAMESD",
                "value": "framesd:8081"
              },
              {
                "name": "MLRUN_DEFAULT_PROJECT",
                "value": "network-operations-admin"
              },
              {
                "name": "MLRUN_DBPATH",
                "value": "http://mlrun-api:8080"
              },
              {
                "name": "MLRUN_NAMESPACE",
                "value": "default-tenant"
              }
            ],
            "handler": "generator:handler",
            "runtime": "python:3.6",
            "volumes": [
              {
                "volume": {
                  "flexVolume": {
                    "driver": "v3io/fuse",
                    "options": {
                      "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
                    }
                  },
                  "name": "v3io"
                },
                "volumeMount": {
                  "mountPath": "/v3io",
                  "name": "v3io",
                  "subPath": ""
                }
              },
              {
                "volume": {
                  "flexVolume": {
                    "driver": "v3io/fuse",
                    "options": {
                      "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
                    }
                  },
                  "name": "v3io"
                },
                "volumeMount": {
                  "mountPath": "/User",
                  "name": "v3io",
                  "subPath": "users/admin"
                }
              }
            ],
            "triggers": {
              "cron": {
                "kind": "cron",
                "attributes": {
                  "interval": "1m"
                }
              }
            },
            "serviceType": "NodePort",
            "minReplicas": 1,
            "maxReplicas": 4
          }
        },
        "source": "",
        "image_pull_policy": "Always",
        "function_kind": "mlrun",
        "build": {
          "commands": [],
          "origin_filename": "/User/demos/network-operations/notebooks/generator.ipynb"
        },
        "mount_applied": true,
        "priority_class_name": "",
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "name": "concept-drift",
        "tag": "latest",
        "hash": "daae2e94d08e32ad9d972ed98770e144fa896d0a",
        "project": "network-operations-admin",
        "labels": {
          "author": "orz",
          "framework": "sklearn"
        },
        "categories": [
          "machine-learning",
          "model-serving"
        ],
        "updated": "2021-08-29T20:29:25.099473+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/ml-models",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "concept_drift_deployer",
        "entry_points": {
          "concept_drift_deployer": {
            "name": "concept_drift_deployer",
            "doc": "Deploy a streaming Concept Drift detector on a labeled stream\n   This function is the Deployment step for the Streaming Concept Drift Detector.\n   It will load the selected drift detectors and initialize them with the\n   base_dataset's statistics.  Then it will deploy the concept_drift_streaming\n   function and pass the models to it for streaming concept-drift detection on top\n   of a labeled stream.",
            "parameters": [
              {
                "name": "context",
                "type": "MLClientCtx",
                "doc": "MLRun context",
                "default": ""
              },
              {
                "name": "base_dataset",
                "type": "DataItem",
                "doc": "Dataset containing label_col and prediction_col to initialize the detectors",
                "default": ""
              },
              {
                "name": "input_stream",
                "type": "str",
                "doc": "labeled stream to track. Should contain label_col and prediction_col",
                "default": ""
              },
              {
                "name": "output_stream",
                "type": "str",
                "doc": "Output stream to push the detector's alerts",
                "default": ""
              },
              {
                "name": "output_tsdb",
                "type": "str",
                "doc": "Output TSDB table to allow analysis and display",
                "default": ""
              },
              {
                "name": "tsdb_batch_size",
                "type": "int",
                "doc": "Batch size of alerts to buffer before pushing to the TSDB",
                "default": ""
              },
              {
                "name": "callbacks",
                "type": "list",
                "doc": "Additional rest endpoints to send the alert data to",
                "default": ""
              },
              {
                "name": "models",
                "type": "list",
                "doc": "List of the detectors to deploy Defaults to ['ddm', 'eddm', 'pagehinkley'].",
                "default": [
                  "ddm",
                  "eddm",
                  "pagehinkley"
                ]
              },
              {
                "name": "models_dest",
                "doc": "Location for saving the detectors Defaults to 'models' (in relation to artifact_path).",
                "default": "models"
              },
              {
                "name": "pagehinkley_threshold",
                "type": "float",
                "doc": "Drift level threshold for PH detector Defaults to 10.",
                "default": 10
              },
              {
                "name": "ddm_warning_level",
                "type": "float",
                "doc": "Warning level alert for DDM detector Defaults to 2.",
                "default": 2
              },
              {
                "name": "ddm_out_control_level",
                "type": "float",
                "doc": "Drift level alert for DDM detector Defaults to 3.",
                "default": 3
              },
              {
                "name": "label_col",
                "doc": "Label column to be used on base_dataset and input_stream Defaults to 'label'.",
                "default": "label"
              },
              {
                "name": "prediction_col",
                "doc": "Prediction column to be used on base_dataset and input_stream Defaults to 'prediction'.",
                "default": "prediction"
              },
              {
                "name": "hub_url",
                "type": "str",
                "doc": "hub_url in case the default is not used, concept_drift_streaming will be loaded by this url Defaults to mlconf.hub_url.",
                "default": "<_ast.Name object at 0x7f4521c584e0>"
              },
              {
                "name": "fn_tag",
                "type": "str",
                "doc": "hub tag to use Defaults to 'master'",
                "default": "master"
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 15
          }
        },
        "description": "Deploy a streaming Concept Drift detector on a labeled stream",
        "image_pull_policy": "Always",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHNrbXVsdGlmbG93LmRyaWZ0X2RldGVjdGlvbiAgIyBXZSB3aWxsIGdyYWIgb3VyIFBILCBERE0sIEVERE0gYWxnb3JpdGhtcyBmcm9tIGhlcmUKaW1wb3J0IG51bXB5IGFzIG5wCmltcG9ydCBwYW5kYXMgYXMgcGQKaW1wb3J0IG9zCmZyb20gY2xvdWRwaWNrbGUgaW1wb3J0IGR1bXBzLCBsb2FkLCBkdW1wCgpmcm9tIG51Y2xpby50cmlnZ2VycyBpbXBvcnQgVjNJT1N0cmVhbVRyaWdnZXIKZnJvbSBtbHJ1biBpbXBvcnQgRGF0YUl0ZW0sIGltcG9ydF9mdW5jdGlvbiwgbWxjb25mLCBNTENsaWVudEN0eCwgbW91bnRfdjNpbwoKaW1wb3J0IHJhbmRvbQoKCmRlZiBjb25jZXB0X2RyaWZ0X2RlcGxveWVyKAogICAgY29udGV4dDogTUxDbGllbnRDdHgsCiAgICBiYXNlX2RhdGFzZXQ6IERhdGFJdGVtLAogICAgaW5wdXRfc3RyZWFtOiBzdHIsCiAgICBvdXRwdXRfc3RyZWFtOiBzdHIsCiAgICBvdXRwdXRfdHNkYjogc3RyLAogICAgdHNkYl9iYXRjaF9zaXplOiBpbnQsCiAgICBjYWxsYmFja3M6IGxpc3QsCiAgICBtb2RlbHM6IGxpc3QgPSBbImRkbSIsICJlZGRtIiwgInBhZ2VoaW5rbGV5Il0sCiAgICBtb2RlbHNfZGVzdD0ibW9kZWxzIiwKICAgIHBhZ2VoaW5rbGV5X3RocmVzaG9sZDogZmxvYXQgPSAxMCwKICAgIGRkbV93YXJuaW5nX2xldmVsOiBmbG9hdCA9IDIsCiAgICBkZG1fb3V0X2NvbnRyb2xfbGV2ZWw6IGZsb2F0ID0gMywKICAgIGxhYmVsX2NvbD0ibGFiZWwiLAogICAgcHJlZGljdGlvbl9jb2w9InByZWRpY3Rpb24iLAogICAgaHViX3VybDogc3RyID0gbWxjb25mLmh1Yl91cmwsCiAgICBmbl90YWc6IHN0ciA9ICJtYXN0ZXIiLAopOgogICAgIiIiRGVwbG95IGEgc3RyZWFtaW5nIENvbmNlcHQgRHJpZnQgZGV0ZWN0b3Igb24gYSBsYWJlbGVkIHN0cmVhbQogICAgICAgVGhpcyBmdW5jdGlvbiBpcyB0aGUgRGVwbG95bWVudCBzdGVwIGZvciB0aGUgU3RyZWFtaW5nIENvbmNlcHQgRHJpZnQgRGV0ZWN0b3IuCiAgICAgICBJdCB3aWxsIGxvYWQgdGhlIHNlbGVjdGVkIGRyaWZ0IGRldGVjdG9ycyBhbmQgaW5pdGlhbGl6ZSB0aGVtIHdpdGggdGhlCiAgICAgICBiYXNlX2RhdGFzZXQncyBzdGF0aXN0aWNzLiAgVGhlbiBpdCB3aWxsIGRlcGxveSB0aGUgY29uY2VwdF9kcmlmdF9zdHJlYW1pbmcKICAgICAgIGZ1bmN0aW9uIGFuZCBwYXNzIHRoZSBtb2RlbHMgdG8gaXQgZm9yIHN0cmVhbWluZyBjb25jZXB0LWRyaWZ0IGRldGVjdGlvbiBvbiB0b3AKICAgICAgIG9mIGEgbGFiZWxlZCBzdHJlYW0uCgogICAgOnBhcmFtIGNvbnRleHQ6ICAgICAgICAgTUxSdW4gY29udGV4dAogICAgOnBhcmFtIGJhc2VfZGF0YXNldDogICAgRGF0YXNldCBjb250YWluaW5nIGxhYmVsX2NvbCBhbmQgcHJlZGljdGlvbl9jb2wgdG8gaW5pdGlhbGl6ZSB0aGUgZGV0ZWN0b3JzCiAgICA6cGFyYW0gaW5wdXRfc3RyZWFtOiAgICBsYWJlbGVkIHN0cmVhbSB0byB0cmFjay4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIFNob3VsZCBjb250YWluIGxhYmVsX2NvbCBhbmQgcHJlZGljdGlvbl9jb2wKICAgIDpwYXJhbSBvdXRwdXRfc3RyZWFtOiAgIE91dHB1dCBzdHJlYW0gdG8gcHVzaCB0aGUgZGV0ZWN0b3IncyBhbGVydHMKICAgIDpwYXJhbSBvdXRwdXRfdHNkYjogICAgIE91dHB1dCBUU0RCIHRhYmxlIHRvIGFsbG93IGFuYWx5c2lzIGFuZCBkaXNwbGF5CiAgICA6cGFyYW0gdHNkYl9iYXRjaF9zaXplOiBCYXRjaCBzaXplIG9mIGFsZXJ0cyB0byBidWZmZXIgYmVmb3JlIHB1c2hpbmcgdG8gdGhlIFRTREIKICAgIDpwYXJhbSBjYWxsYmFja3M6ICAgICAgIEFkZGl0aW9uYWwgcmVzdCBlbmRwb2ludHMgdG8gc2VuZCB0aGUgYWxlcnQgZGF0YSB0bwogICAgOnBhcmFtIG1vZGVsczogICAgICAgICAgTGlzdCBvZiB0aGUgZGV0ZWN0b3JzIHRvIGRlcGxveQogICAgICAgICAgICAgICAgICAgICAgICAgICAgRGVmYXVsdHMgdG8gWydkZG0nLCAnZWRkbScsICdwYWdlaGlua2xleSddLgogICAgOnBhcmFtIG1vZGVsc19kZXN0OiAgICAgTG9jYXRpb24gZm9yIHNhdmluZyB0aGUgZGV0ZWN0b3JzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBEZWZhdWx0cyB0byAnbW9kZWxzJyAoaW4gcmVsYXRpb24gdG8gYXJ0aWZhY3RfcGF0aCkuCiAgICA6cGFyYW0gcGFnZWhpbmtsZXlfdGhyZXNob2xkOiAgRHJpZnQgbGV2ZWwgdGhyZXNob2xkIGZvciBQSCBkZXRlY3RvciBEZWZhdWx0cyB0byAxMC4KICAgIDpwYXJhbSBkZG1fd2FybmluZ19sZXZlbDogICAgICBXYXJuaW5nIGxldmVsIGFsZXJ0IGZvciBERE0gZGV0ZWN0b3IgRGVmYXVsdHMgdG8gMi4KICAgIDpwYXJhbSBkZG1fb3V0X2NvbnRyb2xfbGV2ZWw6ICBEcmlmdCBsZXZlbCBhbGVydCBmb3IgRERNIGRldGVjdG9yIERlZmF1bHRzIHRvIDMuCiAgICA6cGFyYW0gbGFiZWxfY29sOiAgICAgICBMYWJlbCBjb2x1bW4gdG8gYmUgdXNlZCBvbiBiYXNlX2RhdGFzZXQgYW5kIGlucHV0X3N0cmVhbQogICAgICAgICAgICAgICAgICAgICAgICAgICAgRGVmYXVsdHMgdG8gJ2xhYmVsJy4KICAgIDpwYXJhbSBwcmVkaWN0aW9uX2NvbDogIFByZWRpY3Rpb24gY29sdW1uIHRvIGJlIHVzZWQgb24gYmFzZV9kYXRhc2V0IGFuZCBpbnB1dF9zdHJlYW0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIERlZmF1bHRzIHRvICdwcmVkaWN0aW9uJy4KICAgIDpwYXJhbSBodWJfdXJsOiAgICAgICAgIGh1Yl91cmwgaW4gY2FzZSB0aGUgZGVmYXVsdCBpcyBub3QgdXNlZCwgY29uY2VwdF9kcmlmdF9zdHJlYW1pbmcgd2lsbCBiZSBsb2FkZWQKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJ5IHRoaXMgdXJsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBEZWZhdWx0cyB0byBtbGNvbmYuaHViX3VybC4KICAgIDpwYXJhbSBmbl90YWc6ICAgICAgICAgIGh1YiB0YWcgdG8gdXNlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBEZWZhdWx0cyB0byAnbWFzdGVyJwogICAgIiIiCgogICAgbWxjb25mLmRicGF0aCA9IG1sY29uZi5kYnBhdGggb3IgImh0dHA6Ly9tbHJ1bi1hcGk6ODA4MCIKICAgIG1sY29uZi5odWJfdXJsID0gaHViX3VybAogICAgZm4gPSBpbXBvcnRfZnVuY3Rpb24odXJsPSJodWI6Ly9jb25jZXB0X2RyaWZ0X3N0cmVhbWluZyIpCgogICAgY29udGV4dC5sb2dnZXIuaW5mbygiTG9hZGluZyBiYXNlIGRhdGFzZXQiKQogICAgYmFzZV9kZiA9IGJhc2VfZGF0YXNldC5hc19kZigpCiAgICBlcnJvcl9zdHJlYW0gPSBucC53aGVyZSgKICAgICAgICBiYXNlX2RmW3ByZWRpY3Rpb25fY29sXS52YWx1ZXMgPT0gYmFzZV9kZltsYWJlbF9jb2xdLnZhbHVlcywgMCwgMQogICAgKQoKICAgIGNvbnRleHQubG9nZ2VyLmluZm8oIkNyZWF0aW5nIG1vZGVscyIpCiAgICBtb2RlbHMgPSBbCiAgICAgICAgbW9kZWwuc3RyaXAoKQogICAgICAgIGZvciBtb2RlbCBpbiBvcy5nZXRlbnYoIm1vZGVscyIsICJwYWdlaGlua2xleSwgZGRtLCBlZGRtIikuc3BsaXQoIiwiKQogICAgXQogICAgbW9kZWxzID0gewogICAgICAgICJlZGRtIjogc2ttdWx0aWZsb3cuZHJpZnRfZGV0ZWN0aW9uLkVERE0oKSwKICAgICAgICAicGFnZWhpbmtsZXkiOiBza211bHRpZmxvdy5kcmlmdF9kZXRlY3Rpb24uUGFnZUhpbmtsZXkoCiAgICAgICAgICAgIG1pbl9pbnN0YW5jZXM9bGVuKGVycm9yX3N0cmVhbSksIHRocmVzaG9sZD1wYWdlaGlua2xleV90aHJlc2hvbGQKICAgICAgICApLAogICAgICAgICJkZG0iOiBza211bHRpZmxvdy5kcmlmdF9kZXRlY3Rpb24uRERNKAogICAgICAgICAgICBtaW5fbnVtX2luc3RhbmNlcz1sZW4oZXJyb3Jfc3RyZWFtKSwKICAgICAgICAgICAgd2FybmluZ19sZXZlbD1kZG1fd2FybmluZ19sZXZlbCwKICAgICAgICAgICAgb3V0X2NvbnRyb2xfbGV2ZWw9ZGRtX291dF9jb250cm9sX2xldmVsLAogICAgICAgICksCiAgICB9CgogICAgY29udGV4dC5sb2dnZXIuaW5mbygiU3RyZWFtaW5nIGRhdGEgdG8gbW9kZWxzIikKICAgIGZvciBpIGluIHJhbmdlKGxlbihlcnJvcl9zdHJlYW0pKToKICAgICAgICBmb3IgbW9kZWxfbmFtZSwgbW9kZWwgaW4gbW9kZWxzLml0ZW1zKCk6CiAgICAgICAgICAgIG1vZGVsLmFkZF9lbGVtZW50KGVycm9yX3N0cmVhbVtpXSkKCiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCJMb2dnaW5nIHJlYWR5IG1vZGVscyIpCiAgICBmb3IgbmFtZSwgbW9kZWwgaW4gbW9kZWxzLml0ZW1zKCk6CiAgICAgICAgZGF0YSA9IGR1bXBzKG1vZGVsKQogICAgICAgIG1vZGVsX2ZpbGUgPSBmIntuYW1lfS5wa2wiCiAgICAgICAgY29udGV4dC5sb2dfbW9kZWwoCiAgICAgICAgICAgIGYie25hbWV9X2NvbmNlcHRfZHJpZnQiLAogICAgICAgICAgICBib2R5PWRhdGEsCiAgICAgICAgICAgIGxhYmVscz17ImZyYW1ld29yayI6ICJza211bHRpZmxvdyIsICJ3b3JrZmxvdyI6ICJjb25jZXB0LWRyaWZ0In0sCiAgICAgICAgICAgIG1vZGVsX2ZpbGU9bW9kZWxfZmlsZSwKICAgICAgICAgICAgbW9kZWxfZGlyPW1vZGVsc19kZXN0LAogICAgICAgICAgICB0YWc9ImxhdGVzdCIsCiAgICAgICAgKQogICAgICAgIGZuLnNldF9lbnZzKAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBmIntuYW1lfV9tb2RlbF9wYXRoIjogb3MucGF0aC5qb2luKAogICAgICAgICAgICAgICAgICAgIGNvbnRleHQuYXJ0aWZhY3RfcGF0aCwgbW9kZWxzX2Rlc3QsIG1vZGVsX2ZpbGUKICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgfQogICAgICAgICkKCiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCJEZXBsb3lpbmcgQ29uY2VwdCBEcmlmdCBTdHJlYW1pbmcgZnVuY3Rpb24iKQogICAgZm4uc2V0X2VudnMoCiAgICAgICAgewogICAgICAgICAgICAibGFiZWxfY29sIjogbGFiZWxfY29sLAogICAgICAgICAgICAicHJlZGljdGlvbl9jb2wiOiBwcmVkaWN0aW9uX2NvbCwKICAgICAgICAgICAgImRyaWZ0X3N0cmVhbSI6IG91dHB1dF9zdHJlYW0sCiAgICAgICAgICAgICJ0c2RiX3RhYmxlIjogb3V0cHV0X3RzZGIsCiAgICAgICAgICAgICJwYWdlaGlua2xleV90aHJlc2hvbGQiOiBwYWdlaGlua2xleV90aHJlc2hvbGQsCiAgICAgICAgICAgICJkZG1fd2FybmluZ19sZXZlbCI6IGRkbV93YXJuaW5nX2xldmVsLAogICAgICAgICAgICAiZGRtX291dF9jb250cm9sIjogZGRtX291dF9jb250cm9sX2xldmVsLAogICAgICAgIH0KICAgICkKICAgIGZuLmFkZF90cmlnZ2VyKAogICAgICAgICJsYWJlbGVkX3N0cmVhbSIsIFYzSU9TdHJlYW1UcmlnZ2VyKHVybD1pbnB1dF9zdHJlYW0sIG5hbWU9ImxhYmVsZWRfc3RyZWFtIikKICAgICkKICAgIGZuLmFwcGx5KG1vdW50X3YzaW8oKSkKICAgIGZuLmRlcGxveShwcm9qZWN0PWNvbnRleHQucHJvamVjdCkK",
          "commands": []
        },
        "mount_applied": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": {}
    },
    {
      "kind": "remote",
      "metadata": {
        "name": "stream-to-parquet",
        "tag": "latest",
        "hash": "9bbc8e60b136f098bbb2eae57528a03ebf82f684",
        "project": "network-operations-admin",
        "labels": {
          "author": "orz"
        },
        "categories": [
          "machine-learning",
          "data-preparation"
        ],
        "updated": "2021-08-29T20:29:36.371314+00:00"
      },
      "spec": {
        "command": "http://default-tenant.app.vmdev36.lab.iguazeng.com:30125",
        "args": [],
        "image": "mlrun/ml-models",
        "description": "Saves a stream to Parquet and can lunch drift detection task on it",
        "min_replicas": 1,
        "max_replicas": 1,
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          },
          {
            "name": "window",
            "value": "100"
          },
          {
            "name": "features",
            "value": "[\"cpu_utilization\", \"throughput\", \"packet_loss\", \"latency\"]"
          },
          {
            "name": "save_to",
            "value": "/User/demos/network-operations/streaming/inference_pq"
          },
          {
            "name": "base_dataset",
            "value": "store://artifacts/network-operations-admin/test_test_set_preds:cd151783-05df-4f9c-a9db-3aa674e4a058"
          },
          {
            "name": "results_tsdb_container",
            "value": "users"
          },
          {
            "name": "results_tsdb_table",
            "value": "admin/demos/network-operations/streaming/drift_magnitude"
          },
          {
            "name": "mount_path",
            "value": "/users/orz"
          },
          {
            "name": "mount_remote",
            "value": "/User"
          }
        ],
        "config": {
          "spec.triggers.labeled_stream": {
            "kind": "v3ioStream",
            "url": "http://v3io-webapi:8081",
            "attributes": {
              "containerName": "users",
              "streamPath": "/admin/demos/network-operations/streaming/labeled_stream",
              "consumerGroup": "s2p",
              "sequenceNumberCommitInterval": "1s",
              "workerAllocationMode": "pool",
              "sessionTimeout": "10s",
              "heartbeatInterval": "3s",
              "seekTo": "earliest",
              "readBatchSize": 64,
              "partitions": [
                0
              ],
              "pollingIntervalMs": 500
            },
            "name": "labeled_stream",
            "maxWorkers": 1,
            "password": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          }
        },
        "base_spec": {
          "apiVersion": "nuclio.io/v1",
          "kind": "Function",
          "metadata": {
            "name": "stream-to-parquet",
            "labels": {},
            "annotations": {
              "nuclio.io/generated_by": "function generated from /home/kali/functions/stream_to_parquet/stream_to_parquet.py"
            }
          },
          "spec": {
            "runtime": "python:3.6",
            "handler": "stream_to_parquet:handler",
            "env": [],
            "volumes": [],
            "build": {
              "commands": [],
              "noBaseImagesPull": true,
              "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG9zCmltcG9ydCBwYW5kYXMgYXMgcGQKaW1wb3J0IG51bXB5IGFzIG5wCmltcG9ydCBqc29uCmltcG9ydCBkYXRldGltZQppbXBvcnQgbWxydW4KCgpkZWYgcmVjb3JkX3RvX2ZlYXR1cmVzKHJlY29yZCk6CiAgICBmZWF0dXJlcyA9IHJlY29yZFsicmVxdWVzdCJdWyJpbnN0YW5jZXMiXVswXQogICAgdGltZXN0YW1wID0gcmVjb3JkWyJ3aGVuIl0KICAgIHByZWRpY3Rpb24gPSByZWNvcmRbInJlc3AiXQoKICAgIHJlY29yZCA9IHsidGltZXN0YW1wIjogdGltZXN0YW1wLCAqKmZlYXR1cmVzLCAicHJlZGljdGlvbnMiOiBwcmVkaWN0aW9ufQoKICAgIHJldHVybiByZWNvcmQKCgpkZWYgaW5pdF9jb250ZXh0KGNvbnRleHQpOgogICAgc2V0YXR0cihjb250ZXh0LCAiYmF0Y2giLCBbXSkKICAgIHNldGF0dHIoY29udGV4dCwgIndpbmRvdyIsIGludChvcy5nZXRlbnYoIndpbmRvdyIsIDEwKSkpCiAgICBzZXRhdHRyKGNvbnRleHQsICJzYXZlX3RvIiwgb3MuZ2V0ZW52KCJzYXZlX3RvIiwgIi9iaWdkYXRhL2luZmVyZW5jZV9wcS8iKSkKICAgIG9zLm1ha2VkaXJzKGNvbnRleHQuc2F2ZV90bywgZXhpc3Rfb2s9VHJ1ZSkKCiAgICBtbHJ1bi5tbGNvbmYuZGJwYXRoID0gbWxydW4ubWxjb25mLmRicGF0aCBvciAiaHR0cDovL21scnVuLWFwaTo4MDgwIgogICAgYXJ0aWZhY3RfcGF0aCA9IG9zLmdldGVudigiYXJ0aWZhY3RfcGF0aCIsIE5vbmUpCiAgICBpZiBhcnRpZmFjdF9wYXRoOgogICAgICAgIG1scnVuLm1sY29uZi5hcnRpZmFjdF9wYXRoID0gYXJ0aWZhY3RfcGF0aAogICAgaWYgImh1Yl91cmwiIGluIG9zLmVudmlyb246CiAgICAgICAgbWxydW4ubWxjb25mLmh1Yl91cmwgPSBvcy5lbnZpcm9uWyJodWJfdXJsIl0KICAgIHZpcnR1YWxfZHJpZnRfZm4gPSBtbHJ1bi5pbXBvcnRfZnVuY3Rpb24oImh1YjovL3ZpcnR1YWxfZHJpZnQiKQogICAgdmlydHVhbF9kcmlmdF9mbi5hcHBseSgKICAgICAgICBtbHJ1bi5tb3VudF92M2lvKAogICAgICAgICAgICBtb3VudF9wYXRoPW9zLmdldGVudigibW91bnRfcGF0aCIsICJ+LyIpLAogICAgICAgICAgICByZW1vdGU9b3MuZ2V0ZW52KCJtb3VudF9yZW1vdGUiLCAiL1VzZXIiKSwKICAgICAgICApCiAgICApCiAgICBzZXRhdHRyKGNvbnRleHQsICJ2aXJ0dWFsX2RyaWZ0X2ZuIiwgdmlydHVhbF9kcmlmdF9mbikKCiAgICBwcmVkaWN0aW9uc19jb2wgPSBvcy5nZXRlbnYoInByZWRpY3Rpb25zIiwgTm9uZSkKICAgIGxhYmVsX2NvbCA9IG9zLmdldGVudigibGFiZWxfY29sIiwgTm9uZSkKICAgIHNldGF0dHIoY29udGV4dCwgImJhc2VfZGF0YXNldCIsIG9zLmdldGVudigiYmFzZV9kYXRhc2V0IiwgIiIpKQogICAgc2V0YXR0cihjb250ZXh0LCAiaW5kZXhlcyIsIGpzb24ubG9hZHMob3MuZW52aXJvbi5nZXQoImluZGV4ZXMiLCAiW10iKSkpCiAgICBzZXRhdHRyKGNvbnRleHQsICJwcmVkaWN0aW9uc19jb2wiLCBwcmVkaWN0aW9uc19jb2wpCiAgICBzZXRhdHRyKGNvbnRleHQsICJsYWJlbF9jb2wiLCBsYWJlbF9jb2wpCiAgICBzZXRhdHRyKAogICAgICAgIGNvbnRleHQsICJyZXN1bHRzX3RzZGJfY29udGFpbmVyIiwgb3MuZ2V0ZW52KCJyZXN1bHRzX3RzZGJfY29udGFpbmVyIiwgTm9uZSkKICAgICkKICAgIHNldGF0dHIoY29udGV4dCwgInJlc3VsdHNfdHNkYl90YWJsZSIsIG9zLmdldGVudigicmVzdWx0c190c2RiX3RhYmxlIiwgTm9uZSkpCgoKZGVmIGhhbmRsZXIoY29udGV4dCwgZXZlbnQpOgoKICAgIGNvbnRleHQubG9nZ2VyLmluZm8oZiJBZGRpbmcge2V2ZW50LmJvZHl9IikKICAgIGNvbnRleHQuYmF0Y2guYXBwZW5kKHJlY29yZF90b19mZWF0dXJlcyhqc29uLmxvYWRzKGV2ZW50LmJvZHkpKSkKCiAgICBpZiBsZW4oY29udGV4dC5iYXRjaCkgPiBjb250ZXh0LndpbmRvdzoKICAgICAgICBjb250ZXh0LmxvZ2dlci5pbmZvKGNvbnRleHQuYmF0Y2hbOjFdKQogICAgICAgIGNvbnRleHQubG9nZ2VyLmluZm8oY29udGV4dC5pbmRleGVzKQogICAgICAgIGRmID0gcGQuRGF0YUZyYW1lKGNvbnRleHQuYmF0Y2gpCiAgICAgICAgY29udGV4dC5sb2dnZXIuaW5mbyhmImRmIGV4YW1wbGU6IHtkZi5oZWFkKDEpfSIpCiAgICAgICAgaWYgY29udGV4dC5pbmRleGVzOgogICAgICAgICAgICBkZiA9IGRmLnNldF9pbmRleChjb250ZXh0LmluZGV4ZXMpCiAgICAgICAgZGZfcGF0aCA9IG9zLnBhdGguam9pbigKICAgICAgICAgICAgY29udGV4dC5zYXZlX3RvLAogICAgICAgICAgICBmIntkYXRldGltZS5kYXRldGltZS5ub3coKS5zdHJmdGltZSgnJVktJW0tJWRUJUg6JU06JVMnKX0ucHEiLAogICAgICAgICkKICAgICAgICBkZi50b19wYXJxdWV0KGRmX3BhdGgpCgogICAgICAgIHRhc2sgPSBtbHJ1bi5OZXdUYXNrKAogICAgICAgICAgICBuYW1lPSJkcmlmdF9tYWduaXR1ZGUiLAogICAgICAgICAgICBoYW5kbGVyPSJkcmlmdF9tYWduaXR1ZGUiLAogICAgICAgICAgICBwYXJhbXM9ewogICAgICAgICAgICAgICAgImxhYmVsX2NvbCI6IGNvbnRleHQubGFiZWxfY29sLAogICAgICAgICAgICAgICAgInByZWRpY3Rpb25fY29sIjogY29udGV4dC5wcmVkaWN0aW9uc19jb2wsCiAgICAgICAgICAgICAgICAicmVzdWx0c190c2RiX2NvbnRhaW5lciI6IGNvbnRleHQucmVzdWx0c190c2RiX2NvbnRhaW5lciwKICAgICAgICAgICAgICAgICJyZXN1bHRzX3RzZGJfdGFibGUiOiBjb250ZXh0LnJlc3VsdHNfdHNkYl90YWJsZSwKICAgICAgICAgICAgfSwKICAgICAgICAgICAgaW5wdXRzPXsidCI6IGNvbnRleHQuYmFzZV9kYXRhc2V0LCAidSI6IGRmX3BhdGh9LAogICAgICAgICAgICBhcnRpZmFjdF9wYXRoPW1scnVuLm1sY29uZi5hcnRpZmFjdF9wYXRoLAogICAgICAgICkKCiAgICAgICAgY29udGV4dC52aXJ0dWFsX2RyaWZ0X2ZuLnJ1bih0YXNrLCB3YXRjaD1GYWxzZSkKCiAgICAgICAgY29udGV4dC5iYXRjaCA9IFtdCg=="
            }
          }
        },
        "source": "",
        "image_pull_policy": "Always",
        "function_kind": "mlrun",
        "build": {
          "commands": []
        },
        "default_handler": "handler",
        "mount_applied": true,
        "affinity": null
      },
      "status": {
        "state": "ready",
        "nuclio_name": "network-operations-admin-stream-to-parquet",
        "address": "default-tenant.app.vmdev36.lab.iguazeng.com:30125",
        "internal_invocation_urls": [
          "nuclio-network-operations-admin-stream-to-parquet.default-tenant.svc.cluster.local:8080"
        ],
        "external_invocation_urls": [
          "default-tenant.app.vmdev36.lab.iguazeng.com:30125"
        ]
      },
      "verbose": false
    },
    {
      "kind": "remote",
      "metadata": {
        "name": "stream-to-parquet",
        "tag": "",
        "hash": "89d33516b2ea9464198cdb1c636e067f79339797",
        "project": "network-operations-admin",
        "labels": {
          "author": "orz"
        },
        "categories": [
          "machine-learning",
          "data-preparation"
        ],
        "updated": "2021-08-29T20:29:36.195395+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/ml-models",
        "description": "Saves a stream to Parquet and can lunch drift detection task on it",
        "min_replicas": 1,
        "max_replicas": 1,
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          },
          {
            "name": "window",
            "value": "100"
          },
          {
            "name": "features",
            "value": "[\"cpu_utilization\", \"throughput\", \"packet_loss\", \"latency\"]"
          },
          {
            "name": "save_to",
            "value": "/User/demos/network-operations/streaming/inference_pq"
          },
          {
            "name": "base_dataset",
            "value": "store://artifacts/network-operations-admin/test_test_set_preds:cd151783-05df-4f9c-a9db-3aa674e4a058"
          },
          {
            "name": "results_tsdb_container",
            "value": "users"
          },
          {
            "name": "results_tsdb_table",
            "value": "admin/demos/network-operations/streaming/drift_magnitude"
          },
          {
            "name": "mount_path",
            "value": "/users/orz"
          },
          {
            "name": "mount_remote",
            "value": "/User"
          }
        ],
        "config": {
          "spec.triggers.labeled_stream": {
            "kind": "v3ioStream",
            "url": "http://v3io-webapi:8081",
            "attributes": {
              "containerName": "users",
              "streamPath": "/admin/demos/network-operations/streaming/labeled_stream",
              "consumerGroup": "s2p",
              "sequenceNumberCommitInterval": "1s",
              "workerAllocationMode": "pool",
              "sessionTimeout": "10s",
              "heartbeatInterval": "3s",
              "seekTo": "earliest",
              "readBatchSize": 64,
              "partitions": [
                0
              ],
              "pollingIntervalMs": 500
            },
            "name": "labeled_stream",
            "maxWorkers": 1,
            "password": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          "metadata.labels.mlrun/class": "remote",
          "spec.serviceType": "NodePort",
          "spec.minReplicas": 1,
          "spec.maxReplicas": 1
        },
        "base_spec": {
          "apiVersion": "nuclio.io/v1",
          "kind": "Function",
          "metadata": {
            "name": "network-operations-admin-stream-to-parquet",
            "labels": {
              "mlrun/class": "remote",
              "nuclio.io/project-name": "network-operations-admin"
            },
            "annotations": {
              "nuclio.io/generated_by": "function generated from /home/kali/functions/stream_to_parquet/stream_to_parquet.py"
            }
          },
          "spec": {
            "runtime": "python:3.6",
            "handler": "stream_to_parquet:handler",
            "env": [
              {
                "name": "V3IO_API",
                "value": "v3io-webapi.default-tenant.svc:8081"
              },
              {
                "name": "V3IO_USERNAME",
                "value": "admin"
              },
              {
                "name": "V3IO_ACCESS_KEY",
                "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              },
              {
                "name": "V3IO_FRAMESD",
                "value": "framesd:8081"
              },
              {
                "name": "window",
                "value": "100"
              },
              {
                "name": "features",
                "value": "[\"cpu_utilization\", \"throughput\", \"packet_loss\", \"latency\"]"
              },
              {
                "name": "save_to",
                "value": "/User/demos/network-operations/streaming/inference_pq"
              },
              {
                "name": "base_dataset",
                "value": "store://artifacts/network-operations-admin/test_test_set_preds:cd151783-05df-4f9c-a9db-3aa674e4a058"
              },
              {
                "name": "results_tsdb_container",
                "value": "users"
              },
              {
                "name": "results_tsdb_table",
                "value": "admin/demos/network-operations/streaming/drift_magnitude"
              },
              {
                "name": "mount_path",
                "value": "/users/orz"
              },
              {
                "name": "mount_remote",
                "value": "/User"
              },
              {
                "name": "MLRUN_DEFAULT_PROJECT",
                "value": "network-operations-admin"
              },
              {
                "name": "MLRUN_DBPATH",
                "value": "http://mlrun-api:8080"
              },
              {
                "name": "MLRUN_NAMESPACE",
                "value": "default-tenant"
              }
            ],
            "volumes": [
              {
                "volume": {
                  "flexVolume": {
                    "driver": "v3io/fuse",
                    "options": {
                      "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
                    }
                  },
                  "name": "v3io"
                },
                "volumeMount": {
                  "mountPath": "/v3io",
                  "name": "v3io",
                  "subPath": ""
                }
              },
              {
                "volume": {
                  "flexVolume": {
                    "driver": "v3io/fuse",
                    "options": {
                      "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
                    }
                  },
                  "name": "v3io"
                },
                "volumeMount": {
                  "mountPath": "/User",
                  "name": "v3io",
                  "subPath": "users/admin"
                }
              }
            ],
            "build": {
              "commands": [],
              "noBaseImagesPull": true,
              "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG9zCmltcG9ydCBwYW5kYXMgYXMgcGQKaW1wb3J0IG51bXB5IGFzIG5wCmltcG9ydCBqc29uCmltcG9ydCBkYXRldGltZQppbXBvcnQgbWxydW4KCgpkZWYgcmVjb3JkX3RvX2ZlYXR1cmVzKHJlY29yZCk6CiAgICBmZWF0dXJlcyA9IHJlY29yZFsicmVxdWVzdCJdWyJpbnN0YW5jZXMiXVswXQogICAgdGltZXN0YW1wID0gcmVjb3JkWyJ3aGVuIl0KICAgIHByZWRpY3Rpb24gPSByZWNvcmRbInJlc3AiXQoKICAgIHJlY29yZCA9IHsidGltZXN0YW1wIjogdGltZXN0YW1wLCAqKmZlYXR1cmVzLCAicHJlZGljdGlvbnMiOiBwcmVkaWN0aW9ufQoKICAgIHJldHVybiByZWNvcmQKCgpkZWYgaW5pdF9jb250ZXh0KGNvbnRleHQpOgogICAgc2V0YXR0cihjb250ZXh0LCAiYmF0Y2giLCBbXSkKICAgIHNldGF0dHIoY29udGV4dCwgIndpbmRvdyIsIGludChvcy5nZXRlbnYoIndpbmRvdyIsIDEwKSkpCiAgICBzZXRhdHRyKGNvbnRleHQsICJzYXZlX3RvIiwgb3MuZ2V0ZW52KCJzYXZlX3RvIiwgIi9iaWdkYXRhL2luZmVyZW5jZV9wcS8iKSkKICAgIG9zLm1ha2VkaXJzKGNvbnRleHQuc2F2ZV90bywgZXhpc3Rfb2s9VHJ1ZSkKCiAgICBtbHJ1bi5tbGNvbmYuZGJwYXRoID0gbWxydW4ubWxjb25mLmRicGF0aCBvciAiaHR0cDovL21scnVuLWFwaTo4MDgwIgogICAgYXJ0aWZhY3RfcGF0aCA9IG9zLmdldGVudigiYXJ0aWZhY3RfcGF0aCIsIE5vbmUpCiAgICBpZiBhcnRpZmFjdF9wYXRoOgogICAgICAgIG1scnVuLm1sY29uZi5hcnRpZmFjdF9wYXRoID0gYXJ0aWZhY3RfcGF0aAogICAgaWYgImh1Yl91cmwiIGluIG9zLmVudmlyb246CiAgICAgICAgbWxydW4ubWxjb25mLmh1Yl91cmwgPSBvcy5lbnZpcm9uWyJodWJfdXJsIl0KICAgIHZpcnR1YWxfZHJpZnRfZm4gPSBtbHJ1bi5pbXBvcnRfZnVuY3Rpb24oImh1YjovL3ZpcnR1YWxfZHJpZnQiKQogICAgdmlydHVhbF9kcmlmdF9mbi5hcHBseSgKICAgICAgICBtbHJ1bi5tb3VudF92M2lvKAogICAgICAgICAgICBtb3VudF9wYXRoPW9zLmdldGVudigibW91bnRfcGF0aCIsICJ+LyIpLAogICAgICAgICAgICByZW1vdGU9b3MuZ2V0ZW52KCJtb3VudF9yZW1vdGUiLCAiL1VzZXIiKSwKICAgICAgICApCiAgICApCiAgICBzZXRhdHRyKGNvbnRleHQsICJ2aXJ0dWFsX2RyaWZ0X2ZuIiwgdmlydHVhbF9kcmlmdF9mbikKCiAgICBwcmVkaWN0aW9uc19jb2wgPSBvcy5nZXRlbnYoInByZWRpY3Rpb25zIiwgTm9uZSkKICAgIGxhYmVsX2NvbCA9IG9zLmdldGVudigibGFiZWxfY29sIiwgTm9uZSkKICAgIHNldGF0dHIoY29udGV4dCwgImJhc2VfZGF0YXNldCIsIG9zLmdldGVudigiYmFzZV9kYXRhc2V0IiwgIiIpKQogICAgc2V0YXR0cihjb250ZXh0LCAiaW5kZXhlcyIsIGpzb24ubG9hZHMob3MuZW52aXJvbi5nZXQoImluZGV4ZXMiLCAiW10iKSkpCiAgICBzZXRhdHRyKGNvbnRleHQsICJwcmVkaWN0aW9uc19jb2wiLCBwcmVkaWN0aW9uc19jb2wpCiAgICBzZXRhdHRyKGNvbnRleHQsICJsYWJlbF9jb2wiLCBsYWJlbF9jb2wpCiAgICBzZXRhdHRyKAogICAgICAgIGNvbnRleHQsICJyZXN1bHRzX3RzZGJfY29udGFpbmVyIiwgb3MuZ2V0ZW52KCJyZXN1bHRzX3RzZGJfY29udGFpbmVyIiwgTm9uZSkKICAgICkKICAgIHNldGF0dHIoY29udGV4dCwgInJlc3VsdHNfdHNkYl90YWJsZSIsIG9zLmdldGVudigicmVzdWx0c190c2RiX3RhYmxlIiwgTm9uZSkpCgoKZGVmIGhhbmRsZXIoY29udGV4dCwgZXZlbnQpOgoKICAgIGNvbnRleHQubG9nZ2VyLmluZm8oZiJBZGRpbmcge2V2ZW50LmJvZHl9IikKICAgIGNvbnRleHQuYmF0Y2guYXBwZW5kKHJlY29yZF90b19mZWF0dXJlcyhqc29uLmxvYWRzKGV2ZW50LmJvZHkpKSkKCiAgICBpZiBsZW4oY29udGV4dC5iYXRjaCkgPiBjb250ZXh0LndpbmRvdzoKICAgICAgICBjb250ZXh0LmxvZ2dlci5pbmZvKGNvbnRleHQuYmF0Y2hbOjFdKQogICAgICAgIGNvbnRleHQubG9nZ2VyLmluZm8oY29udGV4dC5pbmRleGVzKQogICAgICAgIGRmID0gcGQuRGF0YUZyYW1lKGNvbnRleHQuYmF0Y2gpCiAgICAgICAgY29udGV4dC5sb2dnZXIuaW5mbyhmImRmIGV4YW1wbGU6IHtkZi5oZWFkKDEpfSIpCiAgICAgICAgaWYgY29udGV4dC5pbmRleGVzOgogICAgICAgICAgICBkZiA9IGRmLnNldF9pbmRleChjb250ZXh0LmluZGV4ZXMpCiAgICAgICAgZGZfcGF0aCA9IG9zLnBhdGguam9pbigKICAgICAgICAgICAgY29udGV4dC5zYXZlX3RvLAogICAgICAgICAgICBmIntkYXRldGltZS5kYXRldGltZS5ub3coKS5zdHJmdGltZSgnJVktJW0tJWRUJUg6JU06JVMnKX0ucHEiLAogICAgICAgICkKICAgICAgICBkZi50b19wYXJxdWV0KGRmX3BhdGgpCgogICAgICAgIHRhc2sgPSBtbHJ1bi5OZXdUYXNrKAogICAgICAgICAgICBuYW1lPSJkcmlmdF9tYWduaXR1ZGUiLAogICAgICAgICAgICBoYW5kbGVyPSJkcmlmdF9tYWduaXR1ZGUiLAogICAgICAgICAgICBwYXJhbXM9ewogICAgICAgICAgICAgICAgImxhYmVsX2NvbCI6IGNvbnRleHQubGFiZWxfY29sLAogICAgICAgICAgICAgICAgInByZWRpY3Rpb25fY29sIjogY29udGV4dC5wcmVkaWN0aW9uc19jb2wsCiAgICAgICAgICAgICAgICAicmVzdWx0c190c2RiX2NvbnRhaW5lciI6IGNvbnRleHQucmVzdWx0c190c2RiX2NvbnRhaW5lciwKICAgICAgICAgICAgICAgICJyZXN1bHRzX3RzZGJfdGFibGUiOiBjb250ZXh0LnJlc3VsdHNfdHNkYl90YWJsZSwKICAgICAgICAgICAgfSwKICAgICAgICAgICAgaW5wdXRzPXsidCI6IGNvbnRleHQuYmFzZV9kYXRhc2V0LCAidSI6IGRmX3BhdGh9LAogICAgICAgICAgICBhcnRpZmFjdF9wYXRoPW1scnVuLm1sY29uZi5hcnRpZmFjdF9wYXRoLAogICAgICAgICkKCiAgICAgICAgY29udGV4dC52aXJ0dWFsX2RyaWZ0X2ZuLnJ1bih0YXNrLCB3YXRjaD1GYWxzZSkKCiAgICAgICAgY29udGV4dC5iYXRjaCA9IFtdCg==",
              "baseImage": "mlrun/ml-models:0.7.0-rc11"
            },
            "triggers": {
              "labeled_stream": {
                "kind": "v3ioStream",
                "url": "http://v3io-webapi:8081",
                "attributes": {
                  "containerName": "users",
                  "streamPath": "/admin/demos/network-operations/streaming/labeled_stream",
                  "consumerGroup": "s2p",
                  "sequenceNumberCommitInterval": "1s",
                  "workerAllocationMode": "pool",
                  "sessionTimeout": "10s",
                  "heartbeatInterval": "3s",
                  "seekTo": "earliest",
                  "readBatchSize": 64,
                  "partitions": [
                    0
                  ],
                  "pollingIntervalMs": 500
                },
                "name": "labeled_stream",
                "maxWorkers": 1,
                "password": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "serviceType": "NodePort",
            "minReplicas": 1,
            "maxReplicas": 1
          }
        },
        "source": "",
        "image_pull_policy": "Always",
        "function_kind": "mlrun",
        "build": {
          "commands": []
        },
        "default_handler": "handler",
        "mount_applied": true,
        "priority_class_name": "",
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "remote",
      "metadata": {
        "name": "concept-drift-streaming",
        "tag": "latest",
        "hash": "be38a29875ebea8a4328ff55911e51ecc24604c3",
        "project": "network-operations-admin",
        "labels": {
          "author": "orz",
          "framework": "sklearn"
        },
        "categories": [
          "machine-learning",
          "monitoring"
        ],
        "updated": "2021-08-29T20:30:27.567844+00:00"
      },
      "spec": {
        "command": "http://default-tenant.app.vmdev36.lab.iguazeng.com:30739",
        "args": [],
        "image": "mlrun/ml-models",
        "description": "Deploy a streaming Concept Drift detector on a labeled stream. the nuclio part of the concept_drift function",
        "min_replicas": 1,
        "max_replicas": 4,
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "eddm_model_path",
            "value": "/User/demos/network-operations/artifacts/models/eddm.pkl"
          },
          {
            "name": "pagehinkley_model_path",
            "value": "/User/demos/network-operations/artifacts/models/pagehinkley.pkl"
          },
          {
            "name": "ddm_model_path",
            "value": "/User/demos/network-operations/artifacts/models/ddm.pkl"
          },
          {
            "name": "label_col",
            "value": "is_error"
          },
          {
            "name": "prediction_col",
            "value": "predictions"
          },
          {
            "name": "drift_stream",
            "value": "/User/demos/network-operations/streaming/drift_stream"
          },
          {
            "name": "tsdb_table",
            "value": "/User/demos/network-operations/streaming/drift_tsdb"
          },
          {
            "name": "pagehinkley_threshold",
            "value": "10"
          },
          {
            "name": "ddm_warning_level",
            "value": "2"
          },
          {
            "name": "ddm_out_control",
            "value": "3"
          },
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "config": {
          "spec.triggers.labeled_stream": {
            "kind": "v3ioStream",
            "url": "http://v3io-webapi:8081/users/admin/demos/network-operations/streaming/labeled_stream@cds",
            "attributes": {
              "seekTo": "latest",
              "readBatchSize": 64,
              "pollingIntervalMs": 500
            },
            "maxWorkers": 1,
            "password": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          }
        },
        "base_spec": {
          "apiVersion": "nuclio.io/v1",
          "kind": "Function",
          "metadata": {
            "name": "concept-drift-streaming",
            "labels": {},
            "annotations": {
              "nuclio.io/generated_by": "function generated from /home/kali/functions/concept_drift_streaming/concept_drift_streaming.py"
            }
          },
          "spec": {
            "runtime": "python:3.6",
            "handler": "concept_drift_streaming:handler",
            "env": [],
            "volumes": [],
            "build": {
              "commands": [],
              "noBaseImagesPull": true,
              "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHNrbXVsdGlmbG93LmRyaWZ0X2RldGVjdGlvbgppbXBvcnQgbnVtcHkgYXMgbnAKaW1wb3J0IHBhbmRhcyBhcyBwZAppbXBvcnQgb3MKaW1wb3J0IGpzb24KaW1wb3J0IHYzaW8uZGF0YXBsYW5lCmltcG9ydCB2M2lvX2ZyYW1lcyBhcyB2M2YKaW1wb3J0IHJlcXVlc3RzCmZyb20gY2xvdWRwaWNrbGUgaW1wb3J0IGxvYWQKCmltcG9ydCByYW5kb20KCgpkZWYgc3BsaXRfcGF0aChtbnRwYXRoPSIiKToKICAgIGlmIG1udHBhdGhbMF0gPT0gIi8iOgogICAgICAgIG1udHBhdGggPSBtbnRwYXRoWzE6XQogICAgcGF0aHMgPSBtbnRwYXRoLnNwbGl0KCIvIikKICAgIGNvbnRhaW5lciA9IHBhdGhzWzBdCiAgICBzdWJwYXRoID0gIiIKICAgIGlmIGxlbihwYXRocykgPiAxOgogICAgICAgIHN1YnBhdGggPSBtbnRwYXRoW2xlbihjb250YWluZXIpIDpdCiAgICByZXR1cm4gY29udGFpbmVyLCBzdWJwYXRoCgoKZGVmIGNyZWF0ZV9zdHJlYW0oY29udGV4dCwgcGF0aCwgc2hhcmRzPTEpOgogICAgY29udGFpbmVyLCBzdHJlYW1fcGF0aCA9IHNwbGl0X3BhdGgocGF0aCkKICAgIGNvbnRleHQubG9nZ2VyLmluZm8oCiAgICAgICAgZiJDcmVhdGluZyBzdHJlYW0gaW4gQ29udGFpbmVyOiB7Y29udGFpbmVyfSAmIFBhdGgge3N0cmVhbV9wYXRofSIKICAgICkKICAgIHJlc3BvbnNlID0gY29udGV4dC52M2lvX2NsaWVudC5jcmVhdGVfc3RyZWFtKAogICAgICAgIGNvbnRhaW5lcj1jb250YWluZXIsCiAgICAgICAgcGF0aD1zdHJlYW1fcGF0aCwKICAgICAgICBzaGFyZF9jb3VudD1zaGFyZHMsCiAgICAgICAgcmFpc2VfZm9yX3N0YXR1cz12M2lvLmRhdGFwbGFuZS5SYWlzZUZvclN0YXR1cy5uZXZlciwKICAgICkKICAgIHJlc3BvbnNlLnJhaXNlX2Zvcl9zdGF0dXMoWzQwOSwgMjA0XSkKCgpkZWYgcHVzaF90b19zdHJlYW0oY29udGV4dCwgc3RyZWFtX3BhdGgsIGRhdGEpOgogICAgcmVjb3JkcyA9IFt7ImRhdGEiOiBqc29uLmR1bXBzKHJlYyl9IGZvciByZWMgaW4gZGF0YV0KICAgIGNvbnRhaW5lciwgc3RyZWFtX3BhdGggPSBzcGxpdF9wYXRoKHN0cmVhbV9wYXRoKQogICAgcmVzcG9uc2UgPSBjb250ZXh0LnYzaW9fY2xpZW50LnB1dF9yZWNvcmRzKAogICAgICAgIGNvbnRhaW5lcj1jb250YWluZXIsIHBhdGg9c3RyZWFtX3BhdGgsIHJlY29yZHM9cmVjb3JkcwogICAgKQoKCmRlZiBjb25zdHJ1Y3RfcmVjb3JkKHJlY29yZCk6CiAgICBsYWJlbF9jb2wgPSBvcy5nZXRlbnYoImxhYmVsX2NvbCIsICJsYWJlbCIpCiAgICBwcmVkaWN0aW9uX2NvbCA9IG9zLmdldGVudigicHJlZGljdGlvbl9jb2wiLCAicHJlZGljdGlvbiIpCiAgICByZXMgPSBkaWN0KFsoaywgcmVjb3JkW2tdKSBmb3IgayBpbiBbIndoZW4iLCAiY2xhc3MiLCAibW9kZWwiLCAicmVzcCIsICJyZXF1ZXN0Il1dKQogICAgcmVzWyJmZWF0dXJlX3ZlY3RvciJdID0gcmVzLnBvcCgicmVxdWVzdCIpWyJpbnN0YW5jZXMiXVswXQogICAgcmVzWyJ0aW1lc3RhbXAiXSA9IHJlcy5wb3AoIndoZW4iKQogICAgcmVzWyJwcmVkaWN0aW9uIl0gPSByZXNbInJlc3AiXVswXQogICAgcmV0dXJuIHJlcwoKCmRlZiBpbml0X2NvbnRleHQoY29udGV4dCk6CiAgICB2M2lvX2NsaWVudCA9IHYzaW8uZGF0YXBsYW5lLkNsaWVudCgpCiAgICBzZXRhdHRyKGNvbnRleHQsICJ2M2lvX2NsaWVudCIsIHYzaW9fY2xpZW50KQoKICAgIHYzZl9jbGllbnQgPSB2M2YuQ2xpZW50KCJmcmFtZXNkOjgwODEiLCBjb250YWluZXI9ImJpZ2RhdGEiKQogICAgc2V0YXR0cihjb250ZXh0LCAidjNmIiwgdjNmX2NsaWVudCkKICAgIHdpbmRvdyA9IFtdCiAgICBzZXRhdHRyKGNvbnRleHQsICJ3aW5kb3ciLCB3aW5kb3cpCiAgICBzZXRhdHRyKGNvbnRleHQsICJ3aW5kb3dfc2l6ZSIsIGludChvcy5nZXRlbnYoIndpbmRvd19zaXplIiwgMTApKSkKICAgIHNldGF0dHIoY29udGV4dCwgInRzZGJfdGFibGUiLCBvcy5nZXRlbnYoInRzZGJfdGFibGUiLCAiY29uY2VwdF9kcmlmdF90c2RiXzEiKSkKICAgIHRyeToKICAgICAgICBjb250ZXh0LnYzZi5jcmVhdGUoInRzZGIiLCBjb250ZXh0LnRzZGJfdGFibGUsIHJhdGU9IjEvcyIsIGlmX2V4aXN0cz0xKQogICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgIGNvbnRleHQubG9nZ2VyLmluZm8oZiJDcmVhdGluZyBjb250ZXh0IHdpdGggcmF0ZT0gZmFpbGUgZm9yIHtlfSIpCiAgICAgICAgY29udGV4dC52M2YuY3JlYXRlKAogICAgICAgICAgICAidHNkYiIsIGNvbnRleHQudHNkYl90YWJsZSwgYXR0cnM9eyJyYXRlIjogIjEvcyJ9LCBpZl9leGlzdHM9MQogICAgICAgICkKCiAgICBjYWxsYmFja3MgPSBbY2FsbGJhY2suc3RyaXAoKSBmb3IgY2FsbGJhY2sgaW4gb3MuZ2V0ZW52KCJjYWxsYmFja3MiLCAiIikuc3BsaXQoIiwiKV0KICAgIHNldGF0dHIoY29udGV4dCwgImNhbGxiYWNrcyIsIGNhbGxiYWNrcykKCiAgICBzZXRhdHRyKGNvbnRleHQsICJkcmlmdF9zdHJlYW0iLCBvcy5nZXRlbnYoImRyaWZ0X3N0cmVhbSIsICIvYmlnZGF0YS9kcmlmdF9zdHJlYW0iKSkKICAgIHRyeToKICAgICAgICBjcmVhdGVfc3RyZWFtKAogICAgICAgICAgICBjb250ZXh0LCBjb250ZXh0LmRyaWZ0X3N0cmVhbSwgaW50KG9zLmdldGVudigiZHJpZnRfc3RyZWFtX3NoYXJkcyIsIDEpKQogICAgICAgICkKICAgIGV4Y2VwdDoKICAgICAgICBjb250ZXh0LmxvZ2dlci5pbmZvKGYie2NvbnRleHQuZHJpZnRfc3RyZWFtfSBhbHJlYWR5IGV4aXN0cyIpCgogICAgbW9kZWxzID0ge30KICAgIG1vZGVsX3R5cGVzID0gWyJwYWdlaGlua2VseSIsICJkZG0iLCAiZWRkbSJdCiAgICBwYXRoX3N1ZmZpeCA9ICJfbW9kZWxfcGF0aCIKICAgIGZvciBtb2RlbCBpbiBtb2RlbF90eXBlczoKICAgICAgICBtb2RlbF9lbnYgPSBmInttb2RlbH17cGF0aF9zdWZmaXh9IgogICAgICAgIGlmIG1vZGVsX2VudiBpbiBvcy5lbnZpcm9uOgogICAgICAgICAgICB3aXRoIG9wZW4ob3MuZW52aXJvblttb2RlbF9lbnZdLCAicmIiKSBhcyBmOgogICAgICAgICAgICAgICAgbW9kZWxzW21vZGVsXSA9IGxvYWQoZikKICAgIHNldGF0dHIoY29udGV4dCwgIm1vZGVscyIsIG1vZGVscykKCiAgICBzZXRhdHRyKGNvbnRleHQsICJsYWJlbF9jb2wiLCBvcy5nZXRlbnYoImxhYmVsX2NvbCIsICJsYWJlbCIpKQogICAgc2V0YXR0cihjb250ZXh0LCAicHJlZGljdGlvbl9jb2wiLCBvcy5nZXRlbnYoInByZWRpY3Rpb25fY29sIiwgInByZWRpY3Rpb24iKSkKCgpkZWYgaGFuZGxlcihjb250ZXh0LCBldmVudCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKGYiZXZlbnQ6IHtldmVudC5ib2R5fSIpCiAgICBmdWxsX2V2ZW50ID0ganNvbi5sb2FkcyhldmVudC5ib2R5KQogICAgcmVjb3JkID0gY29uc3RydWN0X3JlY29yZChmdWxsX2V2ZW50KQoKICAgIGlzX2Vycm9yID0gcmVjb3JkW2NvbnRleHQubGFiZWxfY29sXSAhPSByZWNvcmRbY29udGV4dC5wcmVkaWN0aW9uX2NvbF0KICAgIGNvbnRleHQubG9nZ2VyLmluZm8oZiJBZGRpbmcge2lzX2Vycm9yfSIpCgogICAgZm9yIG5hbWUsIG1vZGVsIGluIGNvbnRleHQubW9kZWxzLml0ZW1zKCk6CiAgICAgICAgcmVzdWx0cyA9IHsidGltZXN0YW1wIjogcmVjb3JkWyJ0aW1lc3RhbXAiXX0KICAgICAgICByZXN1bHRzWyJhbGdvcml0aG0iXSA9IG5hbWUKICAgICAgICBtb2RlbC5hZGRfZWxlbWVudChpc19lcnJvcikKCiAgICAgICAgaWYgaGFzYXR0cihtb2RlbCwgImRldGVjdGVkX3dhcm5pbmdfem9uZSIpIGFuZCBtb2RlbC5kZXRlY3RlZF93YXJuaW5nX3pvbmUoKToKICAgICAgICAgICAgY29udGV4dC5sb2dnZXIuaW5mbyhmIntuYW1lfVx0V2FybmluZyB6b25lIGRldGVjdGVkIikKICAgICAgICAgICAgcmVzdWx0c1sid2FybmluZ196b25lIl0gPSAxCiAgICAgICAgICAgIGZ1bGxfZXZlbnRbZiJ7bmFtZX1fd2FybmluZ196b25lIl0gPSAxCiAgICAgICAgZWxzZToKICAgICAgICAgICAgcmVzdWx0c1sid2FybmluZ196b25lIl0gPSAwCiAgICAgICAgICAgIGZ1bGxfZXZlbnRbZiJ7bmFtZX1fd2FybmluZ196b25lIl0gPSAwCgogICAgICAgIGlmIG1vZGVsLmRldGVjdGVkX2NoYW5nZSgpOgogICAgICAgICAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCJDaGFuZ2UgRGV0ZWN0ZWQiKQogICAgICAgICAgICByZXN1bHRzWyJjaGFuZ2VfZGV0ZWN0ZWQiXSA9IDEKICAgICAgICAgICAgZnVsbF9ldmVudFtmIntuYW1lfV9kcmlmdCJdID0gMQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIHJlc3VsdHNbImNoYW5nZV9kZXRlY3RlZCJdID0gMAogICAgICAgICAgICBmdWxsX2V2ZW50W2Yie25hbWV9X2RyaWZ0Il0gPSAwCiAgICAgICAgY29udGV4dC53aW5kb3cuYXBwZW5kKHJlc3VsdHMpCgogICAgcHVzaF90b19zdHJlYW0oY29udGV4dCwgY29udGV4dC5kcmlmdF9zdHJlYW0sIFtmdWxsX2V2ZW50XSkKCiAgICBpZiBjb250ZXh0LmNhbGxiYWNrcyAhPSBbIiJdOgogICAgICAgIGZvciBjYWxsYmFjayBpbiBjb250ZXh0LmNhbGxiYWNrczoKICAgICAgICAgICAgcmVxdWVzdHMucG9zdCh1cmw9Y2FsbGJhY2ssIGpzb249ZnVsbF9ldmVudCkKCiAgICBpZiAobGVuKGNvbnRleHQud2luZG93KSAvIGxlbihjb250ZXh0Lm1vZGVscykpID49IGNvbnRleHQud2luZG93X3NpemU6CiAgICAgICAgZGYgPSBwZC5EYXRhRnJhbWUoY29udGV4dC53aW5kb3cpCiAgICAgICAgZGZbInRpbWVzdGFtcCJdID0gcGQudG9fZGF0ZXRpbWUoZGZbInRpbWVzdGFtcCJdKQogICAgICAgIGRmID0gZGYuc2V0X2luZGV4KFsidGltZXN0YW1wIiwgImFsZ29yaXRobSJdKQogICAgICAgIGNvbnRleHQudjNmLndyaXRlKCJ0c2RiIiwgY29udGV4dC50c2RiX3RhYmxlLCBkZikKICAgICAgICBjb250ZXh0LndpbmRvdyA9IFtdCg=="
            }
          }
        },
        "source": "",
        "function_kind": "mlrun",
        "build": {
          "commands": [
            "python -m pip install scikit-multiflow==0.4.1 v3io_frames"
          ],
          "code_origin": "https://github.com/daniels290813/functions.git#55a79c32be5d233cc11efcf40cd3edbe309bfdef:/home/kali/functions/concept_drift_streaming/concept_drift_streaming.py"
        },
        "default_handler": "handler",
        "mount_applied": true,
        "affinity": null
      },
      "status": {
        "state": "ready",
        "nuclio_name": "network-operations-admin-concept-drift-streaming",
        "address": "default-tenant.app.vmdev36.lab.iguazeng.com:30739",
        "internal_invocation_urls": [
          "nuclio-network-operations-admin-concept-drift-streaming.default-tenant.svc.cluster.local:8080"
        ],
        "external_invocation_urls": [
          "default-tenant.app.vmdev36.lab.iguazeng.com:30739"
        ]
      },
      "verbose": false
    },
    {
      "kind": "remote",
      "metadata": {
        "name": "concept-drift-streaming",
        "tag": "",
        "hash": "c45b2252ff413fdf7d77b13c57740fe2023f7ff9",
        "project": "network-operations-admin",
        "labels": {
          "author": "orz",
          "framework": "sklearn"
        },
        "categories": [
          "machine-learning",
          "monitoring"
        ],
        "updated": "2021-08-29T20:30:27.476705+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/ml-models",
        "description": "Deploy a streaming Concept Drift detector on a labeled stream. the nuclio part of the concept_drift function",
        "min_replicas": 1,
        "max_replicas": 4,
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "eddm_model_path",
            "value": "/User/demos/network-operations/artifacts/models/eddm.pkl"
          },
          {
            "name": "pagehinkley_model_path",
            "value": "/User/demos/network-operations/artifacts/models/pagehinkley.pkl"
          },
          {
            "name": "ddm_model_path",
            "value": "/User/demos/network-operations/artifacts/models/ddm.pkl"
          },
          {
            "name": "label_col",
            "value": "is_error"
          },
          {
            "name": "prediction_col",
            "value": "predictions"
          },
          {
            "name": "drift_stream",
            "value": "/User/demos/network-operations/streaming/drift_stream"
          },
          {
            "name": "tsdb_table",
            "value": "/User/demos/network-operations/streaming/drift_tsdb"
          },
          {
            "name": "pagehinkley_threshold",
            "value": "10"
          },
          {
            "name": "ddm_warning_level",
            "value": "2"
          },
          {
            "name": "ddm_out_control",
            "value": "3"
          },
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "config": {
          "spec.triggers.labeled_stream": {
            "kind": "v3ioStream",
            "url": "http://v3io-webapi:8081/users/admin/demos/network-operations/streaming/labeled_stream@cds",
            "attributes": {
              "seekTo": "latest",
              "readBatchSize": 64,
              "pollingIntervalMs": 500
            },
            "maxWorkers": 1,
            "password": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          "metadata.labels.mlrun/class": "remote",
          "spec.serviceType": "NodePort",
          "spec.minReplicas": 1,
          "spec.maxReplicas": 4
        },
        "base_spec": {
          "apiVersion": "nuclio.io/v1",
          "kind": "Function",
          "metadata": {
            "name": "network-operations-admin-concept-drift-streaming",
            "labels": {
              "mlrun/class": "remote",
              "nuclio.io/project-name": "network-operations-admin"
            },
            "annotations": {
              "nuclio.io/generated_by": "function generated from https://github.com/daniels290813/functions.git#55a79c32be5d233cc11efcf40cd3edbe309bfdef:/home/kali/functions/concept_drift_streaming/concept_drift_streaming.py"
            }
          },
          "spec": {
            "runtime": "python:3.6",
            "handler": "concept_drift_streaming:handler",
            "env": [
              {
                "name": "eddm_model_path",
                "value": "/User/demos/network-operations/artifacts/models/eddm.pkl"
              },
              {
                "name": "pagehinkley_model_path",
                "value": "/User/demos/network-operations/artifacts/models/pagehinkley.pkl"
              },
              {
                "name": "ddm_model_path",
                "value": "/User/demos/network-operations/artifacts/models/ddm.pkl"
              },
              {
                "name": "label_col",
                "value": "is_error"
              },
              {
                "name": "prediction_col",
                "value": "predictions"
              },
              {
                "name": "drift_stream",
                "value": "/User/demos/network-operations/streaming/drift_stream"
              },
              {
                "name": "tsdb_table",
                "value": "/User/demos/network-operations/streaming/drift_tsdb"
              },
              {
                "name": "pagehinkley_threshold",
                "value": "10"
              },
              {
                "name": "ddm_warning_level",
                "value": "2"
              },
              {
                "name": "ddm_out_control",
                "value": "3"
              },
              {
                "name": "V3IO_API",
                "value": "v3io-webapi.default-tenant.svc:8081"
              },
              {
                "name": "V3IO_USERNAME",
                "value": "admin"
              },
              {
                "name": "V3IO_ACCESS_KEY",
                "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              },
              {
                "name": "V3IO_FRAMESD",
                "value": "framesd:8081"
              },
              {
                "name": "MLRUN_DEFAULT_PROJECT",
                "value": "network-operations-admin"
              },
              {
                "name": "MLRUN_DBPATH",
                "value": "http://mlrun-api:8080"
              },
              {
                "name": "MLRUN_NAMESPACE",
                "value": "default-tenant"
              }
            ],
            "volumes": [
              {
                "volume": {
                  "flexVolume": {
                    "driver": "v3io/fuse",
                    "options": {
                      "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
                    }
                  },
                  "name": "v3io"
                },
                "volumeMount": {
                  "mountPath": "/v3io",
                  "name": "v3io",
                  "subPath": ""
                }
              },
              {
                "volume": {
                  "flexVolume": {
                    "driver": "v3io/fuse",
                    "options": {
                      "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
                    }
                  },
                  "name": "v3io"
                },
                "volumeMount": {
                  "mountPath": "/User",
                  "name": "v3io",
                  "subPath": "users/admin"
                }
              }
            ],
            "build": {
              "commands": [
                "python -m pip install scikit-multiflow==0.4.1 v3io_frames"
              ],
              "noBaseImagesPull": true,
              "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHNrbXVsdGlmbG93LmRyaWZ0X2RldGVjdGlvbgppbXBvcnQgbnVtcHkgYXMgbnAKaW1wb3J0IHBhbmRhcyBhcyBwZAppbXBvcnQgb3MKaW1wb3J0IGpzb24KaW1wb3J0IHYzaW8uZGF0YXBsYW5lCmltcG9ydCB2M2lvX2ZyYW1lcyBhcyB2M2YKaW1wb3J0IHJlcXVlc3RzCmZyb20gY2xvdWRwaWNrbGUgaW1wb3J0IGxvYWQKCmltcG9ydCByYW5kb20KCgpkZWYgc3BsaXRfcGF0aChtbnRwYXRoPSIiKToKICAgIGlmIG1udHBhdGhbMF0gPT0gIi8iOgogICAgICAgIG1udHBhdGggPSBtbnRwYXRoWzE6XQogICAgcGF0aHMgPSBtbnRwYXRoLnNwbGl0KCIvIikKICAgIGNvbnRhaW5lciA9IHBhdGhzWzBdCiAgICBzdWJwYXRoID0gIiIKICAgIGlmIGxlbihwYXRocykgPiAxOgogICAgICAgIHN1YnBhdGggPSBtbnRwYXRoW2xlbihjb250YWluZXIpIDpdCiAgICByZXR1cm4gY29udGFpbmVyLCBzdWJwYXRoCgoKZGVmIGNyZWF0ZV9zdHJlYW0oY29udGV4dCwgcGF0aCwgc2hhcmRzPTEpOgogICAgY29udGFpbmVyLCBzdHJlYW1fcGF0aCA9IHNwbGl0X3BhdGgocGF0aCkKICAgIGNvbnRleHQubG9nZ2VyLmluZm8oCiAgICAgICAgZiJDcmVhdGluZyBzdHJlYW0gaW4gQ29udGFpbmVyOiB7Y29udGFpbmVyfSAmIFBhdGgge3N0cmVhbV9wYXRofSIKICAgICkKICAgIHJlc3BvbnNlID0gY29udGV4dC52M2lvX2NsaWVudC5jcmVhdGVfc3RyZWFtKAogICAgICAgIGNvbnRhaW5lcj1jb250YWluZXIsCiAgICAgICAgcGF0aD1zdHJlYW1fcGF0aCwKICAgICAgICBzaGFyZF9jb3VudD1zaGFyZHMsCiAgICAgICAgcmFpc2VfZm9yX3N0YXR1cz12M2lvLmRhdGFwbGFuZS5SYWlzZUZvclN0YXR1cy5uZXZlciwKICAgICkKICAgIHJlc3BvbnNlLnJhaXNlX2Zvcl9zdGF0dXMoWzQwOSwgMjA0XSkKCgpkZWYgcHVzaF90b19zdHJlYW0oY29udGV4dCwgc3RyZWFtX3BhdGgsIGRhdGEpOgogICAgcmVjb3JkcyA9IFt7ImRhdGEiOiBqc29uLmR1bXBzKHJlYyl9IGZvciByZWMgaW4gZGF0YV0KICAgIGNvbnRhaW5lciwgc3RyZWFtX3BhdGggPSBzcGxpdF9wYXRoKHN0cmVhbV9wYXRoKQogICAgcmVzcG9uc2UgPSBjb250ZXh0LnYzaW9fY2xpZW50LnB1dF9yZWNvcmRzKAogICAgICAgIGNvbnRhaW5lcj1jb250YWluZXIsIHBhdGg9c3RyZWFtX3BhdGgsIHJlY29yZHM9cmVjb3JkcwogICAgKQoKCmRlZiBjb25zdHJ1Y3RfcmVjb3JkKHJlY29yZCk6CiAgICBsYWJlbF9jb2wgPSBvcy5nZXRlbnYoImxhYmVsX2NvbCIsICJsYWJlbCIpCiAgICBwcmVkaWN0aW9uX2NvbCA9IG9zLmdldGVudigicHJlZGljdGlvbl9jb2wiLCAicHJlZGljdGlvbiIpCiAgICByZXMgPSBkaWN0KFsoaywgcmVjb3JkW2tdKSBmb3IgayBpbiBbIndoZW4iLCAiY2xhc3MiLCAibW9kZWwiLCAicmVzcCIsICJyZXF1ZXN0Il1dKQogICAgcmVzWyJmZWF0dXJlX3ZlY3RvciJdID0gcmVzLnBvcCgicmVxdWVzdCIpWyJpbnN0YW5jZXMiXVswXQogICAgcmVzWyJ0aW1lc3RhbXAiXSA9IHJlcy5wb3AoIndoZW4iKQogICAgcmVzWyJwcmVkaWN0aW9uIl0gPSByZXNbInJlc3AiXVswXQogICAgcmV0dXJuIHJlcwoKCmRlZiBpbml0X2NvbnRleHQoY29udGV4dCk6CiAgICB2M2lvX2NsaWVudCA9IHYzaW8uZGF0YXBsYW5lLkNsaWVudCgpCiAgICBzZXRhdHRyKGNvbnRleHQsICJ2M2lvX2NsaWVudCIsIHYzaW9fY2xpZW50KQoKICAgIHYzZl9jbGllbnQgPSB2M2YuQ2xpZW50KCJmcmFtZXNkOjgwODEiLCBjb250YWluZXI9ImJpZ2RhdGEiKQogICAgc2V0YXR0cihjb250ZXh0LCAidjNmIiwgdjNmX2NsaWVudCkKICAgIHdpbmRvdyA9IFtdCiAgICBzZXRhdHRyKGNvbnRleHQsICJ3aW5kb3ciLCB3aW5kb3cpCiAgICBzZXRhdHRyKGNvbnRleHQsICJ3aW5kb3dfc2l6ZSIsIGludChvcy5nZXRlbnYoIndpbmRvd19zaXplIiwgMTApKSkKICAgIHNldGF0dHIoY29udGV4dCwgInRzZGJfdGFibGUiLCBvcy5nZXRlbnYoInRzZGJfdGFibGUiLCAiY29uY2VwdF9kcmlmdF90c2RiXzEiKSkKICAgIHRyeToKICAgICAgICBjb250ZXh0LnYzZi5jcmVhdGUoInRzZGIiLCBjb250ZXh0LnRzZGJfdGFibGUsIHJhdGU9IjEvcyIsIGlmX2V4aXN0cz0xKQogICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgIGNvbnRleHQubG9nZ2VyLmluZm8oZiJDcmVhdGluZyBjb250ZXh0IHdpdGggcmF0ZT0gZmFpbGUgZm9yIHtlfSIpCiAgICAgICAgY29udGV4dC52M2YuY3JlYXRlKAogICAgICAgICAgICAidHNkYiIsIGNvbnRleHQudHNkYl90YWJsZSwgYXR0cnM9eyJyYXRlIjogIjEvcyJ9LCBpZl9leGlzdHM9MQogICAgICAgICkKCiAgICBjYWxsYmFja3MgPSBbY2FsbGJhY2suc3RyaXAoKSBmb3IgY2FsbGJhY2sgaW4gb3MuZ2V0ZW52KCJjYWxsYmFja3MiLCAiIikuc3BsaXQoIiwiKV0KICAgIHNldGF0dHIoY29udGV4dCwgImNhbGxiYWNrcyIsIGNhbGxiYWNrcykKCiAgICBzZXRhdHRyKGNvbnRleHQsICJkcmlmdF9zdHJlYW0iLCBvcy5nZXRlbnYoImRyaWZ0X3N0cmVhbSIsICIvYmlnZGF0YS9kcmlmdF9zdHJlYW0iKSkKICAgIHRyeToKICAgICAgICBjcmVhdGVfc3RyZWFtKAogICAgICAgICAgICBjb250ZXh0LCBjb250ZXh0LmRyaWZ0X3N0cmVhbSwgaW50KG9zLmdldGVudigiZHJpZnRfc3RyZWFtX3NoYXJkcyIsIDEpKQogICAgICAgICkKICAgIGV4Y2VwdDoKICAgICAgICBjb250ZXh0LmxvZ2dlci5pbmZvKGYie2NvbnRleHQuZHJpZnRfc3RyZWFtfSBhbHJlYWR5IGV4aXN0cyIpCgogICAgbW9kZWxzID0ge30KICAgIG1vZGVsX3R5cGVzID0gWyJwYWdlaGlua2VseSIsICJkZG0iLCAiZWRkbSJdCiAgICBwYXRoX3N1ZmZpeCA9ICJfbW9kZWxfcGF0aCIKICAgIGZvciBtb2RlbCBpbiBtb2RlbF90eXBlczoKICAgICAgICBtb2RlbF9lbnYgPSBmInttb2RlbH17cGF0aF9zdWZmaXh9IgogICAgICAgIGlmIG1vZGVsX2VudiBpbiBvcy5lbnZpcm9uOgogICAgICAgICAgICB3aXRoIG9wZW4ob3MuZW52aXJvblttb2RlbF9lbnZdLCAicmIiKSBhcyBmOgogICAgICAgICAgICAgICAgbW9kZWxzW21vZGVsXSA9IGxvYWQoZikKICAgIHNldGF0dHIoY29udGV4dCwgIm1vZGVscyIsIG1vZGVscykKCiAgICBzZXRhdHRyKGNvbnRleHQsICJsYWJlbF9jb2wiLCBvcy5nZXRlbnYoImxhYmVsX2NvbCIsICJsYWJlbCIpKQogICAgc2V0YXR0cihjb250ZXh0LCAicHJlZGljdGlvbl9jb2wiLCBvcy5nZXRlbnYoInByZWRpY3Rpb25fY29sIiwgInByZWRpY3Rpb24iKSkKCgpkZWYgaGFuZGxlcihjb250ZXh0LCBldmVudCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKGYiZXZlbnQ6IHtldmVudC5ib2R5fSIpCiAgICBmdWxsX2V2ZW50ID0ganNvbi5sb2FkcyhldmVudC5ib2R5KQogICAgcmVjb3JkID0gY29uc3RydWN0X3JlY29yZChmdWxsX2V2ZW50KQoKICAgIGlzX2Vycm9yID0gcmVjb3JkW2NvbnRleHQubGFiZWxfY29sXSAhPSByZWNvcmRbY29udGV4dC5wcmVkaWN0aW9uX2NvbF0KICAgIGNvbnRleHQubG9nZ2VyLmluZm8oZiJBZGRpbmcge2lzX2Vycm9yfSIpCgogICAgZm9yIG5hbWUsIG1vZGVsIGluIGNvbnRleHQubW9kZWxzLml0ZW1zKCk6CiAgICAgICAgcmVzdWx0cyA9IHsidGltZXN0YW1wIjogcmVjb3JkWyJ0aW1lc3RhbXAiXX0KICAgICAgICByZXN1bHRzWyJhbGdvcml0aG0iXSA9IG5hbWUKICAgICAgICBtb2RlbC5hZGRfZWxlbWVudChpc19lcnJvcikKCiAgICAgICAgaWYgaGFzYXR0cihtb2RlbCwgImRldGVjdGVkX3dhcm5pbmdfem9uZSIpIGFuZCBtb2RlbC5kZXRlY3RlZF93YXJuaW5nX3pvbmUoKToKICAgICAgICAgICAgY29udGV4dC5sb2dnZXIuaW5mbyhmIntuYW1lfVx0V2FybmluZyB6b25lIGRldGVjdGVkIikKICAgICAgICAgICAgcmVzdWx0c1sid2FybmluZ196b25lIl0gPSAxCiAgICAgICAgICAgIGZ1bGxfZXZlbnRbZiJ7bmFtZX1fd2FybmluZ196b25lIl0gPSAxCiAgICAgICAgZWxzZToKICAgICAgICAgICAgcmVzdWx0c1sid2FybmluZ196b25lIl0gPSAwCiAgICAgICAgICAgIGZ1bGxfZXZlbnRbZiJ7bmFtZX1fd2FybmluZ196b25lIl0gPSAwCgogICAgICAgIGlmIG1vZGVsLmRldGVjdGVkX2NoYW5nZSgpOgogICAgICAgICAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCJDaGFuZ2UgRGV0ZWN0ZWQiKQogICAgICAgICAgICByZXN1bHRzWyJjaGFuZ2VfZGV0ZWN0ZWQiXSA9IDEKICAgICAgICAgICAgZnVsbF9ldmVudFtmIntuYW1lfV9kcmlmdCJdID0gMQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIHJlc3VsdHNbImNoYW5nZV9kZXRlY3RlZCJdID0gMAogICAgICAgICAgICBmdWxsX2V2ZW50W2Yie25hbWV9X2RyaWZ0Il0gPSAwCiAgICAgICAgY29udGV4dC53aW5kb3cuYXBwZW5kKHJlc3VsdHMpCgogICAgcHVzaF90b19zdHJlYW0oY29udGV4dCwgY29udGV4dC5kcmlmdF9zdHJlYW0sIFtmdWxsX2V2ZW50XSkKCiAgICBpZiBjb250ZXh0LmNhbGxiYWNrcyAhPSBbIiJdOgogICAgICAgIGZvciBjYWxsYmFjayBpbiBjb250ZXh0LmNhbGxiYWNrczoKICAgICAgICAgICAgcmVxdWVzdHMucG9zdCh1cmw9Y2FsbGJhY2ssIGpzb249ZnVsbF9ldmVudCkKCiAgICBpZiAobGVuKGNvbnRleHQud2luZG93KSAvIGxlbihjb250ZXh0Lm1vZGVscykpID49IGNvbnRleHQud2luZG93X3NpemU6CiAgICAgICAgZGYgPSBwZC5EYXRhRnJhbWUoY29udGV4dC53aW5kb3cpCiAgICAgICAgZGZbInRpbWVzdGFtcCJdID0gcGQudG9fZGF0ZXRpbWUoZGZbInRpbWVzdGFtcCJdKQogICAgICAgIGRmID0gZGYuc2V0X2luZGV4KFsidGltZXN0YW1wIiwgImFsZ29yaXRobSJdKQogICAgICAgIGNvbnRleHQudjNmLndyaXRlKCJ0c2RiIiwgY29udGV4dC50c2RiX3RhYmxlLCBkZikKICAgICAgICBjb250ZXh0LndpbmRvdyA9IFtdCg==",
              "baseImage": "mlrun/ml-models:0.7.0-rc11"
            },
            "triggers": {
              "labeled_stream": {
                "kind": "v3ioStream",
                "url": "http://v3io-webapi:8081/users/admin/demos/network-operations/streaming/labeled_stream@cds",
                "attributes": {
                  "seekTo": "latest",
                  "readBatchSize": 64,
                  "pollingIntervalMs": 500
                },
                "maxWorkers": 1,
                "password": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "serviceType": "NodePort",
            "minReplicas": 1,
            "maxReplicas": 4
          }
        },
        "source": "",
        "function_kind": "mlrun",
        "build": {
          "commands": [
            "python -m pip install scikit-multiflow==0.4.1 v3io_frames"
          ],
          "code_origin": "https://github.com/daniels290813/functions.git#55a79c32be5d233cc11efcf40cd3edbe309bfdef:/home/kali/functions/concept_drift_streaming/concept_drift_streaming.py"
        },
        "default_handler": "handler",
        "mount_applied": true,
        "priority_class_name": "",
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "name": "describe",
        "tag": "",
        "hash": "dc789b998cfc2c4b75e7d4b1b1bf877040e0e5ca",
        "project": "sk-project-admin",
        "labels": {
          "author": "Iguazio"
        },
        "categories": [
          "data-analysis"
        ],
        "updated": "2021-08-30T05:20:02.954707+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "summarize",
        "entry_points": {
          "summarize": {
            "name": "summarize",
            "doc": "Summarize a table",
            "parameters": [
              {
                "name": "context",
                "type": "MLClientCtx",
                "doc": "the function context",
                "default": ""
              },
              {
                "name": "table",
                "type": "DataItem",
                "doc": "MLRun input pointing to pandas dataframe (csv/parquet file path)",
                "default": ""
              },
              {
                "name": "label_column",
                "type": "str",
                "doc": "ground truth column label",
                "default": null
              },
              {
                "name": "class_labels",
                "type": "List[str]",
                "doc": "label for each class in tables and plots",
                "default": []
              },
              {
                "name": "plot_hist",
                "type": "bool",
                "doc": "(True) set this to False for large tables",
                "default": true
              },
              {
                "name": "plots_dest",
                "type": "str",
                "doc": "destination folder of summary plots (relative to artifact_path)",
                "default": "plots"
              },
              {
                "name": "update_dataset",
                "doc": "when the table is a registered dataset update the charts in-place",
                "default": false
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 23
          }
        },
        "description": "describe and visualizes dataset stats",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHdhcm5pbmdzCgp3YXJuaW5ncy5zaW1wbGVmaWx0ZXIoYWN0aW9uPSJpZ25vcmUiLCBjYXRlZ29yeT1GdXR1cmVXYXJuaW5nKQoKaW1wb3J0IG9zCmltcG9ydCBudW1weSBhcyBucAppbXBvcnQgcGFuZGFzIGFzIHBkCmltcG9ydCBtYXRwbG90bGliLnB5cGxvdCBhcyBwbHQKaW1wb3J0IHNlYWJvcm4gYXMgc25zCgpmcm9tIG1scnVuLmV4ZWN1dGlvbiBpbXBvcnQgTUxDbGllbnRDdHgKZnJvbSBtbHJ1bi5kYXRhc3RvcmUgaW1wb3J0IERhdGFJdGVtCmZyb20gbWxydW4uYXJ0aWZhY3RzIGltcG9ydCBQbG90QXJ0aWZhY3QsIFRhYmxlQXJ0aWZhY3QKZnJvbSBtbHJ1bi5tbHV0aWxzLnBsb3RzIGltcG9ydCBnY2ZfY2xlYXIKCmZyb20gdHlwaW5nIGltcG9ydCBMaXN0CgpwZC5zZXRfb3B0aW9uKCJkaXNwbGF5LmZsb2F0X2Zvcm1hdCIsIGxhbWJkYSB4OiAiJS4yZiIgJSB4KQoKCmRlZiBzdW1tYXJpemUoCiAgICBjb250ZXh0OiBNTENsaWVudEN0eCwKICAgIHRhYmxlOiBEYXRhSXRlbSwKICAgIGxhYmVsX2NvbHVtbjogc3RyID0gTm9uZSwKICAgIGNsYXNzX2xhYmVsczogTGlzdFtzdHJdID0gW10sCiAgICBwbG90X2hpc3Q6IGJvb2wgPSBUcnVlLAogICAgcGxvdHNfZGVzdDogc3RyID0gInBsb3RzIiwKICAgIHVwZGF0ZV9kYXRhc2V0PUZhbHNlLAopIC0+IE5vbmU6CiAgICAiIiJTdW1tYXJpemUgYSB0YWJsZQoKICAgIDpwYXJhbSBjb250ZXh0OiAgICAgICAgIHRoZSBmdW5jdGlvbiBjb250ZXh0CiAgICA6cGFyYW0gdGFibGU6ICAgICAgICAgICBNTFJ1biBpbnB1dCBwb2ludGluZyB0byBwYW5kYXMgZGF0YWZyYW1lIChjc3YvcGFycXVldCBmaWxlIHBhdGgpCiAgICA6cGFyYW0gbGFiZWxfY29sdW1uOiAgICBncm91bmQgdHJ1dGggY29sdW1uIGxhYmVsCiAgICA6cGFyYW0gY2xhc3NfbGFiZWxzOiAgICBsYWJlbCBmb3IgZWFjaCBjbGFzcyBpbiB0YWJsZXMgYW5kIHBsb3RzCiAgICA6cGFyYW0gcGxvdF9oaXN0OiAgICAgICAoVHJ1ZSkgc2V0IHRoaXMgdG8gRmFsc2UgZm9yIGxhcmdlIHRhYmxlcwogICAgOnBhcmFtIHBsb3RzX2Rlc3Q6ICAgICAgZGVzdGluYXRpb24gZm9sZGVyIG9mIHN1bW1hcnkgcGxvdHMgKHJlbGF0aXZlIHRvIGFydGlmYWN0X3BhdGgpCiAgICA6cGFyYW0gdXBkYXRlX2RhdGFzZXQ6ICB3aGVuIHRoZSB0YWJsZSBpcyBhIHJlZ2lzdGVyZWQgZGF0YXNldCB1cGRhdGUgdGhlIGNoYXJ0cyBpbi1wbGFjZQogICAgIiIiCiAgICBkZiA9IHRhYmxlLmFzX2RmKCkKICAgIGhlYWRlciA9IGRmLmNvbHVtbnMudmFsdWVzCiAgICBleHRyYV9kYXRhID0ge30KCiAgICB0cnk6CiAgICAgICAgZ2NmX2NsZWFyKHBsdCkKICAgICAgICBzbnNwbHQgPSBzbnMucGFpcnBsb3QoZGYsIGh1ZT1sYWJlbF9jb2x1bW4pICAjICwgZGlhZ19rd3M9eyJidyI6IDEuNX0pCiAgICAgICAgZXh0cmFfZGF0YVsiaGlzdG9ncmFtcyJdID0gY29udGV4dC5sb2dfYXJ0aWZhY3QoCiAgICAgICAgICAgIFBsb3RBcnRpZmFjdCgiaGlzdG9ncmFtcyIsIGJvZHk9cGx0LmdjZigpKSwKICAgICAgICAgICAgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS9oaXN0Lmh0bWwiLAogICAgICAgICAgICBkYl9rZXk9RmFsc2UsCiAgICAgICAgKQogICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgIGNvbnRleHQubG9nZ2VyLmVycm9yKGYiRmFpbGVkIHRvIGNyZWF0ZSBwYWlycGxvdCBoaXN0b2dyYW1zIGR1ZSB0bzoge2V9IikKCiAgICB0cnk6CiAgICAgICAgZ2NmX2NsZWFyKHBsdCkKICAgICAgICBwbG90X2NvbHMgPSAzCiAgICAgICAgcGxvdF9yb3dzID0gaW50KChsZW4oaGVhZGVyKSAtIDEpIC8gcGxvdF9jb2xzKSArIDEKICAgICAgICBmaWcsIGF4ID0gcGx0LnN1YnBsb3RzKHBsb3Rfcm93cywgcGxvdF9jb2xzLCBmaWdzaXplPSgxNSwgNCkpCiAgICAgICAgZmlnLnRpZ2h0X2xheW91dChwYWQ9Mi4wKQogICAgICAgIGZvciBpIGluIHJhbmdlKHBsb3Rfcm93cyAqIHBsb3RfY29scyk6CiAgICAgICAgICAgIGlmIGkgPCBsZW4oaGVhZGVyKToKICAgICAgICAgICAgICAgIHNucy52aW9saW5wbG90KAogICAgICAgICAgICAgICAgICAgIHg9ZGZbaGVhZGVyW2ldXSwKICAgICAgICAgICAgICAgICAgICBheD1heFtpbnQoaSAvIHBsb3RfY29scyldW2kgJSBwbG90X2NvbHNdLAogICAgICAgICAgICAgICAgICAgIG9yaWVudD0iaCIsCiAgICAgICAgICAgICAgICAgICAgd2lkdGg9MC43LAogICAgICAgICAgICAgICAgICAgIGlubmVyPSJxdWFydGlsZSIsCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBmaWcuZGVsYXhlcyhheFtpbnQoaSAvIHBsb3RfY29scyldW2kgJSBwbG90X2NvbHNdKQogICAgICAgICAgICBpICs9IDEKICAgICAgICBleHRyYV9kYXRhWyJ2aW9saW4iXSA9IGNvbnRleHQubG9nX2FydGlmYWN0KAogICAgICAgICAgICBQbG90QXJ0aWZhY3QoInZpb2xpbiIsIGJvZHk9cGx0LmdjZigpLCB0aXRsZT0iVmlvbGluIFBsb3QiKSwKICAgICAgICAgICAgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS92aW9saW4uaHRtbCIsCiAgICAgICAgICAgIGRiX2tleT1GYWxzZSwKICAgICAgICApCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgY29udGV4dC5sb2dnZXIud2FybihmIkZhaWxlZCB0byBjcmVhdGUgdmlvbGluIGRpc3RyaWJ1dGlvbiBwbG90cyBkdWUgdG86IHtlfSIpCgogICAgaWYgbGFiZWxfY29sdW1uOgogICAgICAgIGxhYmVscyA9IGRmLnBvcChsYWJlbF9jb2x1bW4pCiAgICAgICAgaW1idGFibGUgPSBsYWJlbHMudmFsdWVfY291bnRzKG5vcm1hbGl6ZT1UcnVlKS5zb3J0X2luZGV4KCkKICAgICAgICB0cnk6CiAgICAgICAgICAgIGdjZl9jbGVhcihwbHQpCiAgICAgICAgICAgIGJhbGFuY2ViYXIgPSBpbWJ0YWJsZS5wbG90KGtpbmQ9ImJhciIsIHRpdGxlPSJjbGFzcyBpbWJhbGFuY2UgLSBsYWJlbHMiKQogICAgICAgICAgICBiYWxhbmNlYmFyLnNldF94bGFiZWwoImNsYXNzIikKICAgICAgICAgICAgYmFsYW5jZWJhci5zZXRfeWxhYmVsKCJwcm9wb3J0aW9uIG9mIHRvdGFsIikKICAgICAgICAgICAgZXh0cmFfZGF0YVsiaW1iYWxhbmNlIl0gPSBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICAgICAgICAgIFBsb3RBcnRpZmFjdCgiaW1iYWxhbmNlIiwgYm9keT1wbHQuZ2NmKCkpLAogICAgICAgICAgICAgICAgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS9pbWJhbGFuY2UuaHRtbCIsCiAgICAgICAgICAgICkKICAgICAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgICAgIGNvbnRleHQubG9nZ2VyLndhcm4oZiJGYWlsZWQgdG8gY3JlYXRlIGNsYXNzIGltYmFsYW5jZSBwbG90IGR1ZSB0bzoge2V9IikKICAgICAgICBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICAgICAgVGFibGVBcnRpZmFjdCgKICAgICAgICAgICAgICAgICJpbWJhbGFuY2Utd2VpZ2h0cy12ZWMiLCBkZj1wZC5EYXRhRnJhbWUoeyJ3ZWlnaHRzIjogaW1idGFibGV9KQogICAgICAgICAgICApLAogICAgICAgICAgICBsb2NhbF9wYXRoPWYie3Bsb3RzX2Rlc3R9L2ltYmFsYW5jZS13ZWlnaHRzLXZlYy5jc3YiLAogICAgICAgICAgICBkYl9rZXk9RmFsc2UsCiAgICAgICAgKQoKICAgIHRibGNvcnIgPSBkZi5jb3JyKCkKICAgIG1hc2sgPSBucC56ZXJvc19saWtlKHRibGNvcnIsIGR0eXBlPW5wLmJvb2wpCiAgICBtYXNrW25wLnRyaXVfaW5kaWNlc19mcm9tKG1hc2spXSA9IFRydWUKCiAgICBkZmNvcnIgPSBwZC5EYXRhRnJhbWUoZGF0YT10Ymxjb3JyLCBjb2x1bW5zPWhlYWRlciwgaW5kZXg9aGVhZGVyKQogICAgZGZjb3JyID0gZGZjb3JyW25wLmFyYW5nZShkZmNvcnIuc2hhcGVbMF0pWzosIE5vbmVdID4gbnAuYXJhbmdlKGRmY29yci5zaGFwZVsxXSldCiAgICBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICBUYWJsZUFydGlmYWN0KCJjb3JyZWxhdGlvbi1tYXRyaXgiLCBkZj10Ymxjb3JyLCB2aXNpYmxlPVRydWUpLAogICAgICAgIGxvY2FsX3BhdGg9ZiJ7cGxvdHNfZGVzdH0vY29ycmVsYXRpb24tbWF0cml4LmNzdiIsCiAgICAgICAgZGJfa2V5PUZhbHNlLAogICAgKQoKICAgIHRyeToKICAgICAgICBnY2ZfY2xlYXIocGx0KQogICAgICAgIGF4ID0gcGx0LmF4ZXMoKQogICAgICAgIHNucy5oZWF0bWFwKHRibGNvcnIsIGF4PWF4LCBtYXNrPW1hc2ssIGFubm90PUZhbHNlLCBjbWFwPXBsdC5jbS5SZWRzKQogICAgICAgIGF4LnNldF90aXRsZSgiZmVhdHVyZXMgY29ycmVsYXRpb24iKQogICAgICAgIGV4dHJhX2RhdGFbImNvcnJlbGF0aW9uIl0gPSBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICAgICAgUGxvdEFydGlmYWN0KCJjb3JyZWxhdGlvbiIsIGJvZHk9cGx0LmdjZigpLCB0aXRsZT0iQ29ycmVsYXRpb24gTWF0cml4IiksCiAgICAgICAgICAgIGxvY2FsX3BhdGg9ZiJ7cGxvdHNfZGVzdH0vY29yci5odG1sIiwKICAgICAgICAgICAgZGJfa2V5PUZhbHNlLAogICAgICAgICkKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICBjb250ZXh0LmxvZ2dlci53YXJuKGYiRmFpbGVkIHRvIGNyZWF0ZSBmZWF0dXJlcyBjb3JyZWxhdGlvbiBwbG90IGR1ZSB0bzoge2V9IikKCiAgICBnY2ZfY2xlYXIocGx0KQogICAgaWYgdXBkYXRlX2RhdGFzZXQgYW5kIHRhYmxlLm1ldGEgYW5kIHRhYmxlLm1ldGEua2luZCA9PSAiZGF0YXNldCI6CiAgICAgICAgZnJvbSBtbHJ1bi5hcnRpZmFjdHMgaW1wb3J0IHVwZGF0ZV9kYXRhc2V0X21ldGEKCiAgICAgICAgdXBkYXRlX2RhdGFzZXRfbWV0YSh0YWJsZS5tZXRhLCBleHRyYV9kYXRhPWV4dHJhX2RhdGEpCg==",
          "commands": [],
          "code_origin": "https://github.com/daniels290813/functions.git#55a79c32be5d233cc11efcf40cd3edbe309bfdef:/home/kali/functions/describe/describe.py"
        },
        "mount_applied": true,
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "describe",
        "tag": "",
        "hash": "c8edff7cff3906b197ee2a0d863505a2496496a3",
        "project": "sk-project-admin",
        "labels": {
          "author": "Iguazio"
        },
        "categories": [
          "data-analysis"
        ],
        "updated": "2021-08-30T05:20:03.048191+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "summarize",
        "entry_points": {
          "summarize": {
            "name": "summarize",
            "doc": "Summarize a table",
            "parameters": [
              {
                "name": "context",
                "type": "MLClientCtx",
                "doc": "the function context",
                "default": ""
              },
              {
                "name": "table",
                "type": "DataItem",
                "doc": "MLRun input pointing to pandas dataframe (csv/parquet file path)",
                "default": ""
              },
              {
                "name": "label_column",
                "type": "str",
                "doc": "ground truth column label",
                "default": null
              },
              {
                "name": "class_labels",
                "type": "List[str]",
                "doc": "label for each class in tables and plots",
                "default": []
              },
              {
                "name": "plot_hist",
                "type": "bool",
                "doc": "(True) set this to False for large tables",
                "default": true
              },
              {
                "name": "plots_dest",
                "type": "str",
                "doc": "destination folder of summary plots (relative to artifact_path)",
                "default": "plots"
              },
              {
                "name": "update_dataset",
                "doc": "when the table is a registered dataset update the charts in-place",
                "default": false
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 23
          }
        },
        "description": "describe and visualizes dataset stats",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHdhcm5pbmdzCgp3YXJuaW5ncy5zaW1wbGVmaWx0ZXIoYWN0aW9uPSJpZ25vcmUiLCBjYXRlZ29yeT1GdXR1cmVXYXJuaW5nKQoKaW1wb3J0IG9zCmltcG9ydCBudW1weSBhcyBucAppbXBvcnQgcGFuZGFzIGFzIHBkCmltcG9ydCBtYXRwbG90bGliLnB5cGxvdCBhcyBwbHQKaW1wb3J0IHNlYWJvcm4gYXMgc25zCgpmcm9tIG1scnVuLmV4ZWN1dGlvbiBpbXBvcnQgTUxDbGllbnRDdHgKZnJvbSBtbHJ1bi5kYXRhc3RvcmUgaW1wb3J0IERhdGFJdGVtCmZyb20gbWxydW4uYXJ0aWZhY3RzIGltcG9ydCBQbG90QXJ0aWZhY3QsIFRhYmxlQXJ0aWZhY3QKZnJvbSBtbHJ1bi5tbHV0aWxzLnBsb3RzIGltcG9ydCBnY2ZfY2xlYXIKCmZyb20gdHlwaW5nIGltcG9ydCBMaXN0CgpwZC5zZXRfb3B0aW9uKCJkaXNwbGF5LmZsb2F0X2Zvcm1hdCIsIGxhbWJkYSB4OiAiJS4yZiIgJSB4KQoKCmRlZiBzdW1tYXJpemUoCiAgICBjb250ZXh0OiBNTENsaWVudEN0eCwKICAgIHRhYmxlOiBEYXRhSXRlbSwKICAgIGxhYmVsX2NvbHVtbjogc3RyID0gTm9uZSwKICAgIGNsYXNzX2xhYmVsczogTGlzdFtzdHJdID0gW10sCiAgICBwbG90X2hpc3Q6IGJvb2wgPSBUcnVlLAogICAgcGxvdHNfZGVzdDogc3RyID0gInBsb3RzIiwKICAgIHVwZGF0ZV9kYXRhc2V0PUZhbHNlLAopIC0+IE5vbmU6CiAgICAiIiJTdW1tYXJpemUgYSB0YWJsZQoKICAgIDpwYXJhbSBjb250ZXh0OiAgICAgICAgIHRoZSBmdW5jdGlvbiBjb250ZXh0CiAgICA6cGFyYW0gdGFibGU6ICAgICAgICAgICBNTFJ1biBpbnB1dCBwb2ludGluZyB0byBwYW5kYXMgZGF0YWZyYW1lIChjc3YvcGFycXVldCBmaWxlIHBhdGgpCiAgICA6cGFyYW0gbGFiZWxfY29sdW1uOiAgICBncm91bmQgdHJ1dGggY29sdW1uIGxhYmVsCiAgICA6cGFyYW0gY2xhc3NfbGFiZWxzOiAgICBsYWJlbCBmb3IgZWFjaCBjbGFzcyBpbiB0YWJsZXMgYW5kIHBsb3RzCiAgICA6cGFyYW0gcGxvdF9oaXN0OiAgICAgICAoVHJ1ZSkgc2V0IHRoaXMgdG8gRmFsc2UgZm9yIGxhcmdlIHRhYmxlcwogICAgOnBhcmFtIHBsb3RzX2Rlc3Q6ICAgICAgZGVzdGluYXRpb24gZm9sZGVyIG9mIHN1bW1hcnkgcGxvdHMgKHJlbGF0aXZlIHRvIGFydGlmYWN0X3BhdGgpCiAgICA6cGFyYW0gdXBkYXRlX2RhdGFzZXQ6ICB3aGVuIHRoZSB0YWJsZSBpcyBhIHJlZ2lzdGVyZWQgZGF0YXNldCB1cGRhdGUgdGhlIGNoYXJ0cyBpbi1wbGFjZQogICAgIiIiCiAgICBkZiA9IHRhYmxlLmFzX2RmKCkKICAgIGhlYWRlciA9IGRmLmNvbHVtbnMudmFsdWVzCiAgICBleHRyYV9kYXRhID0ge30KCiAgICB0cnk6CiAgICAgICAgZ2NmX2NsZWFyKHBsdCkKICAgICAgICBzbnNwbHQgPSBzbnMucGFpcnBsb3QoZGYsIGh1ZT1sYWJlbF9jb2x1bW4pICAjICwgZGlhZ19rd3M9eyJidyI6IDEuNX0pCiAgICAgICAgZXh0cmFfZGF0YVsiaGlzdG9ncmFtcyJdID0gY29udGV4dC5sb2dfYXJ0aWZhY3QoCiAgICAgICAgICAgIFBsb3RBcnRpZmFjdCgiaGlzdG9ncmFtcyIsIGJvZHk9cGx0LmdjZigpKSwKICAgICAgICAgICAgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS9oaXN0Lmh0bWwiLAogICAgICAgICAgICBkYl9rZXk9RmFsc2UsCiAgICAgICAgKQogICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgIGNvbnRleHQubG9nZ2VyLmVycm9yKGYiRmFpbGVkIHRvIGNyZWF0ZSBwYWlycGxvdCBoaXN0b2dyYW1zIGR1ZSB0bzoge2V9IikKCiAgICB0cnk6CiAgICAgICAgZ2NmX2NsZWFyKHBsdCkKICAgICAgICBwbG90X2NvbHMgPSAzCiAgICAgICAgcGxvdF9yb3dzID0gaW50KChsZW4oaGVhZGVyKSAtIDEpIC8gcGxvdF9jb2xzKSArIDEKICAgICAgICBmaWcsIGF4ID0gcGx0LnN1YnBsb3RzKHBsb3Rfcm93cywgcGxvdF9jb2xzLCBmaWdzaXplPSgxNSwgNCkpCiAgICAgICAgZmlnLnRpZ2h0X2xheW91dChwYWQ9Mi4wKQogICAgICAgIGZvciBpIGluIHJhbmdlKHBsb3Rfcm93cyAqIHBsb3RfY29scyk6CiAgICAgICAgICAgIGlmIGkgPCBsZW4oaGVhZGVyKToKICAgICAgICAgICAgICAgIHNucy52aW9saW5wbG90KAogICAgICAgICAgICAgICAgICAgIHg9ZGZbaGVhZGVyW2ldXSwKICAgICAgICAgICAgICAgICAgICBheD1heFtpbnQoaSAvIHBsb3RfY29scyldW2kgJSBwbG90X2NvbHNdLAogICAgICAgICAgICAgICAgICAgIG9yaWVudD0iaCIsCiAgICAgICAgICAgICAgICAgICAgd2lkdGg9MC43LAogICAgICAgICAgICAgICAgICAgIGlubmVyPSJxdWFydGlsZSIsCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBmaWcuZGVsYXhlcyhheFtpbnQoaSAvIHBsb3RfY29scyldW2kgJSBwbG90X2NvbHNdKQogICAgICAgICAgICBpICs9IDEKICAgICAgICBleHRyYV9kYXRhWyJ2aW9saW4iXSA9IGNvbnRleHQubG9nX2FydGlmYWN0KAogICAgICAgICAgICBQbG90QXJ0aWZhY3QoInZpb2xpbiIsIGJvZHk9cGx0LmdjZigpLCB0aXRsZT0iVmlvbGluIFBsb3QiKSwKICAgICAgICAgICAgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS92aW9saW4uaHRtbCIsCiAgICAgICAgICAgIGRiX2tleT1GYWxzZSwKICAgICAgICApCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgY29udGV4dC5sb2dnZXIud2FybihmIkZhaWxlZCB0byBjcmVhdGUgdmlvbGluIGRpc3RyaWJ1dGlvbiBwbG90cyBkdWUgdG86IHtlfSIpCgogICAgaWYgbGFiZWxfY29sdW1uOgogICAgICAgIGxhYmVscyA9IGRmLnBvcChsYWJlbF9jb2x1bW4pCiAgICAgICAgaW1idGFibGUgPSBsYWJlbHMudmFsdWVfY291bnRzKG5vcm1hbGl6ZT1UcnVlKS5zb3J0X2luZGV4KCkKICAgICAgICB0cnk6CiAgICAgICAgICAgIGdjZl9jbGVhcihwbHQpCiAgICAgICAgICAgIGJhbGFuY2ViYXIgPSBpbWJ0YWJsZS5wbG90KGtpbmQ9ImJhciIsIHRpdGxlPSJjbGFzcyBpbWJhbGFuY2UgLSBsYWJlbHMiKQogICAgICAgICAgICBiYWxhbmNlYmFyLnNldF94bGFiZWwoImNsYXNzIikKICAgICAgICAgICAgYmFsYW5jZWJhci5zZXRfeWxhYmVsKCJwcm9wb3J0aW9uIG9mIHRvdGFsIikKICAgICAgICAgICAgZXh0cmFfZGF0YVsiaW1iYWxhbmNlIl0gPSBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICAgICAgICAgIFBsb3RBcnRpZmFjdCgiaW1iYWxhbmNlIiwgYm9keT1wbHQuZ2NmKCkpLAogICAgICAgICAgICAgICAgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS9pbWJhbGFuY2UuaHRtbCIsCiAgICAgICAgICAgICkKICAgICAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgICAgIGNvbnRleHQubG9nZ2VyLndhcm4oZiJGYWlsZWQgdG8gY3JlYXRlIGNsYXNzIGltYmFsYW5jZSBwbG90IGR1ZSB0bzoge2V9IikKICAgICAgICBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICAgICAgVGFibGVBcnRpZmFjdCgKICAgICAgICAgICAgICAgICJpbWJhbGFuY2Utd2VpZ2h0cy12ZWMiLCBkZj1wZC5EYXRhRnJhbWUoeyJ3ZWlnaHRzIjogaW1idGFibGV9KQogICAgICAgICAgICApLAogICAgICAgICAgICBsb2NhbF9wYXRoPWYie3Bsb3RzX2Rlc3R9L2ltYmFsYW5jZS13ZWlnaHRzLXZlYy5jc3YiLAogICAgICAgICAgICBkYl9rZXk9RmFsc2UsCiAgICAgICAgKQoKICAgIHRibGNvcnIgPSBkZi5jb3JyKCkKICAgIG1hc2sgPSBucC56ZXJvc19saWtlKHRibGNvcnIsIGR0eXBlPW5wLmJvb2wpCiAgICBtYXNrW25wLnRyaXVfaW5kaWNlc19mcm9tKG1hc2spXSA9IFRydWUKCiAgICBkZmNvcnIgPSBwZC5EYXRhRnJhbWUoZGF0YT10Ymxjb3JyLCBjb2x1bW5zPWhlYWRlciwgaW5kZXg9aGVhZGVyKQogICAgZGZjb3JyID0gZGZjb3JyW25wLmFyYW5nZShkZmNvcnIuc2hhcGVbMF0pWzosIE5vbmVdID4gbnAuYXJhbmdlKGRmY29yci5zaGFwZVsxXSldCiAgICBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICBUYWJsZUFydGlmYWN0KCJjb3JyZWxhdGlvbi1tYXRyaXgiLCBkZj10Ymxjb3JyLCB2aXNpYmxlPVRydWUpLAogICAgICAgIGxvY2FsX3BhdGg9ZiJ7cGxvdHNfZGVzdH0vY29ycmVsYXRpb24tbWF0cml4LmNzdiIsCiAgICAgICAgZGJfa2V5PUZhbHNlLAogICAgKQoKICAgIHRyeToKICAgICAgICBnY2ZfY2xlYXIocGx0KQogICAgICAgIGF4ID0gcGx0LmF4ZXMoKQogICAgICAgIHNucy5oZWF0bWFwKHRibGNvcnIsIGF4PWF4LCBtYXNrPW1hc2ssIGFubm90PUZhbHNlLCBjbWFwPXBsdC5jbS5SZWRzKQogICAgICAgIGF4LnNldF90aXRsZSgiZmVhdHVyZXMgY29ycmVsYXRpb24iKQogICAgICAgIGV4dHJhX2RhdGFbImNvcnJlbGF0aW9uIl0gPSBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICAgICAgUGxvdEFydGlmYWN0KCJjb3JyZWxhdGlvbiIsIGJvZHk9cGx0LmdjZigpLCB0aXRsZT0iQ29ycmVsYXRpb24gTWF0cml4IiksCiAgICAgICAgICAgIGxvY2FsX3BhdGg9ZiJ7cGxvdHNfZGVzdH0vY29yci5odG1sIiwKICAgICAgICAgICAgZGJfa2V5PUZhbHNlLAogICAgICAgICkKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICBjb250ZXh0LmxvZ2dlci53YXJuKGYiRmFpbGVkIHRvIGNyZWF0ZSBmZWF0dXJlcyBjb3JyZWxhdGlvbiBwbG90IGR1ZSB0bzoge2V9IikKCiAgICBnY2ZfY2xlYXIocGx0KQogICAgaWYgdXBkYXRlX2RhdGFzZXQgYW5kIHRhYmxlLm1ldGEgYW5kIHRhYmxlLm1ldGEua2luZCA9PSAiZGF0YXNldCI6CiAgICAgICAgZnJvbSBtbHJ1bi5hcnRpZmFjdHMgaW1wb3J0IHVwZGF0ZV9kYXRhc2V0X21ldGEKCiAgICAgICAgdXBkYXRlX2RhdGFzZXRfbWV0YSh0YWJsZS5tZXRhLCBleHRyYV9kYXRhPWV4dHJhX2RhdGEpCg==",
          "commands": [],
          "code_origin": "https://github.com/daniels290813/functions.git#55a79c32be5d233cc11efcf40cd3edbe309bfdef:/home/kali/functions/describe/describe.py"
        },
        "mount_applied": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "serving",
      "metadata": {
        "name": "v2-model-server",
        "tag": "",
        "hash": "ce92c2c20db71c29f952446359cfe98160af6f00",
        "project": "sk-project-admin",
        "labels": {
          "author": "yaronh",
          "framework": "sklearn"
        },
        "categories": [
          "model-serving",
          "machine-learning"
        ],
        "updated": "2021-08-30T05:20:26.208079+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "entry_points": {
          "load": {
            "name": "load",
            "doc": "load and initialize the model and/or other elements",
            "parameters": [
              {
                "name": "self",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 16
          },
          "predict": {
            "name": "predict",
            "doc": "Generate model predictions from sample.",
            "parameters": [
              {
                "name": "self",
                "default": ""
              },
              {
                "name": "body",
                "type": "dict",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": "",
                "type": "List"
              }
            ],
            "lineno": 21
          },
          "init_context": {
            "name": "init_context",
            "doc": "",
            "parameters": [
              {
                "name": "context",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 39
          },
          "handler": {
            "name": "handler",
            "doc": "",
            "parameters": [
              {
                "name": "context",
                "default": ""
              },
              {
                "name": "event",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 42
          }
        },
        "description": "generic sklearn model server",
        "min_replicas": 1,
        "max_replicas": 4,
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "base_spec": {
          "apiVersion": "nuclio.io/v1",
          "kind": "Function",
          "metadata": {
            "name": "v2-model-server",
            "labels": {},
            "annotations": {
              "nuclio.io/generated_by": "function generated from /home/michaell/projects/functions/v2_model_server/v2_model_server.py"
            }
          },
          "spec": {
            "runtime": "python:3.6",
            "handler": "v2_model_server:handler",
            "env": [],
            "volumes": [],
            "build": {
              "commands": [],
              "noBaseImagesPull": true,
              "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG1scnVuCgpmcm9tIGNsb3VkcGlja2xlIGltcG9ydCBsb2FkCmZyb20gdHlwaW5nIGltcG9ydCBMaXN0CmZyb20gc2tsZWFybi5kYXRhc2V0cyBpbXBvcnQgbG9hZF9pcmlzCmltcG9ydCBudW1weSBhcyBucAoKaW1wb3J0IHdhcm5pbmdzCgp3YXJuaW5ncy5maWx0ZXJ3YXJuaW5ncygiaWdub3JlIikKCgpjbGFzcyBDbGFzc2lmaWVyTW9kZWwobWxydW4uc2VydmluZy5WMk1vZGVsU2VydmVyKToKICAgIGRlZiBsb2FkKHNlbGYpOgogICAgICAgICIiImxvYWQgYW5kIGluaXRpYWxpemUgdGhlIG1vZGVsIGFuZC9vciBvdGhlciBlbGVtZW50cyIiIgogICAgICAgIG1vZGVsX2ZpbGUsIGV4dHJhX2RhdGEgPSBzZWxmLmdldF9tb2RlbCgiLnBrbCIpCiAgICAgICAgc2VsZi5tb2RlbCA9IGxvYWQob3Blbihtb2RlbF9maWxlLCAicmIiKSkKCiAgICBkZWYgcHJlZGljdChzZWxmLCBib2R5OiBkaWN0KSAtPiBMaXN0OgogICAgICAgICIiIkdlbmVyYXRlIG1vZGVsIHByZWRpY3Rpb25zIGZyb20gc2FtcGxlLiIiIgogICAgICAgIGZlYXRzID0gbnAuYXNhcnJheShib2R5WyJpbnB1dHMiXSkKICAgICAgICByZXN1bHQ6IG5wLm5kYXJyYXkgPSBzZWxmLm1vZGVsLnByZWRpY3QoZmVhdHMpCiAgICAgICAgcmV0dXJuIHJlc3VsdC50b2xpc3QoKQoKCmZyb20gbWxydW4ucnVudGltZXMgaW1wb3J0IG51Y2xpb19pbml0X2hvb2sKCgpkZWYgaW5pdF9jb250ZXh0KGNvbnRleHQpOgogICAgbnVjbGlvX2luaXRfaG9vayhjb250ZXh0LCBnbG9iYWxzKCksICJzZXJ2aW5nX3YyIikKCgpkZWYgaGFuZGxlcihjb250ZXh0LCBldmVudCk6CiAgICByZXR1cm4gY29udGV4dC5tbHJ1bl9oYW5kbGVyKGNvbnRleHQsIGV2ZW50KQoKZnJvbSBtbHJ1bi5ydW50aW1lcyBpbXBvcnQgbnVjbGlvX2luaXRfaG9vawpkZWYgaW5pdF9jb250ZXh0KGNvbnRleHQpOgogICAgbnVjbGlvX2luaXRfaG9vayhjb250ZXh0LCBnbG9iYWxzKCksICdzZXJ2aW5nX3YyJykKCmRlZiBoYW5kbGVyKGNvbnRleHQsIGV2ZW50KToKICAgIHJldHVybiBjb250ZXh0Lm1scnVuX2hhbmRsZXIoY29udGV4dCwgZXZlbnQpCg=="
            }
          }
        },
        "source": "",
        "function_kind": "serving_v2",
        "default_class": "ClassifierModel",
        "build": {
          "commands": []
        },
        "secret_sources": [],
        "mount_applied": true,
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "name": "gen-iris",
        "tag": "",
        "project": "sk-project-admin",
        "categories": [],
        "hash": "741fa348dcbbf34d53dcd6f154da649b71e30b73",
        "updated": "2021-08-30T05:20:31.542000+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "",
        "entry_points": {
          "iris_generator": {
            "name": "iris_generator",
            "doc": "",
            "parameters": [
              {
                "name": "context",
                "default": ""
              },
              {
                "name": "format",
                "default": "csv"
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 11
          }
        },
        "description": "",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG9zCmZyb20gc2tsZWFybi5kYXRhc2V0cyBpbXBvcnQgbG9hZF9pcmlzCmZyb20gc2tsZWFybi5tb2RlbF9zZWxlY3Rpb24gaW1wb3J0IHRyYWluX3Rlc3Rfc3BsaXQKaW1wb3J0IG51bXB5IGFzIG5wCmZyb20gc2tsZWFybi5tZXRyaWNzIGltcG9ydCBhY2N1cmFjeV9zY29yZQpmcm9tIG1scnVuLmFydGlmYWN0cyBpbXBvcnQgVGFibGVBcnRpZmFjdCwgUGxvdEFydGlmYWN0CmltcG9ydCBwYW5kYXMgYXMgcGQKCmRlZiBpcmlzX2dlbmVyYXRvcihjb250ZXh0LCBmb3JtYXQ9J2NzdicpOgogICAgaXJpcyA9IGxvYWRfaXJpcygpCiAgICBpcmlzX2RhdGFzZXQgPSBwZC5EYXRhRnJhbWUoZGF0YT1pcmlzLmRhdGEsIGNvbHVtbnM9aXJpcy5mZWF0dXJlX25hbWVzKQogICAgaXJpc19sYWJlbHMgPSBwZC5EYXRhRnJhbWUoZGF0YT1pcmlzLnRhcmdldCwgY29sdW1ucz1bJ2xhYmVsJ10pCiAgICBpcmlzX2RhdGFzZXQgPSBwZC5jb25jYXQoW2lyaXNfZGF0YXNldCwgaXJpc19sYWJlbHNdLCBheGlzPTEpCiAgICAKICAgIGNvbnRleHQubG9nZ2VyLmluZm8oJ3NhdmluZyBpcmlzIGRhdGFmcmFtZSB0byB7fScuZm9ybWF0KGNvbnRleHQuYXJ0aWZhY3RfcGF0aCkpCiAgICBjb250ZXh0LmxvZ19kYXRhc2V0KCdpcmlzX2RhdGFzZXQnLCBkZj1pcmlzX2RhdGFzZXQsIGZvcm1hdD1mb3JtYXQsIGluZGV4PUZhbHNlKQoK",
          "image": ".mlrun/func-sk-project-admin-gen-iris:latest",
          "base_image": "mlrun/mlrun",
          "commands": [
            "pip install sklearn",
            "pip install pyarrow"
          ],
          "origin_filename": "gen-iris.ipynb"
        },
        "mount_applied": true,
        "priority_class_name": "",
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "name": "gen-iris",
        "tag": "latest",
        "hash": "7fc46fd40a5d19ad30b0c1c7130582d5945e18aa",
        "project": "sk-project-admin",
        "categories": [],
        "updated": "2021-08-30T05:22:24.239366+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": ".mlrun/func-sk-project-admin-gen-iris:latest",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "",
        "entry_points": {
          "iris_generator": {
            "name": "iris_generator",
            "doc": "",
            "parameters": [
              {
                "name": "context",
                "default": ""
              },
              {
                "name": "format",
                "default": "csv"
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 11
          }
        },
        "description": "",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG9zCmZyb20gc2tsZWFybi5kYXRhc2V0cyBpbXBvcnQgbG9hZF9pcmlzCmZyb20gc2tsZWFybi5tb2RlbF9zZWxlY3Rpb24gaW1wb3J0IHRyYWluX3Rlc3Rfc3BsaXQKaW1wb3J0IG51bXB5IGFzIG5wCmZyb20gc2tsZWFybi5tZXRyaWNzIGltcG9ydCBhY2N1cmFjeV9zY29yZQpmcm9tIG1scnVuLmFydGlmYWN0cyBpbXBvcnQgVGFibGVBcnRpZmFjdCwgUGxvdEFydGlmYWN0CmltcG9ydCBwYW5kYXMgYXMgcGQKCmRlZiBpcmlzX2dlbmVyYXRvcihjb250ZXh0LCBmb3JtYXQ9J2NzdicpOgogICAgaXJpcyA9IGxvYWRfaXJpcygpCiAgICBpcmlzX2RhdGFzZXQgPSBwZC5EYXRhRnJhbWUoZGF0YT1pcmlzLmRhdGEsIGNvbHVtbnM9aXJpcy5mZWF0dXJlX25hbWVzKQogICAgaXJpc19sYWJlbHMgPSBwZC5EYXRhRnJhbWUoZGF0YT1pcmlzLnRhcmdldCwgY29sdW1ucz1bJ2xhYmVsJ10pCiAgICBpcmlzX2RhdGFzZXQgPSBwZC5jb25jYXQoW2lyaXNfZGF0YXNldCwgaXJpc19sYWJlbHNdLCBheGlzPTEpCiAgICAKICAgIGNvbnRleHQubG9nZ2VyLmluZm8oJ3NhdmluZyBpcmlzIGRhdGFmcmFtZSB0byB7fScuZm9ybWF0KGNvbnRleHQuYXJ0aWZhY3RfcGF0aCkpCiAgICBjb250ZXh0LmxvZ19kYXRhc2V0KCdpcmlzX2RhdGFzZXQnLCBkZj1pcmlzX2RhdGFzZXQsIGZvcm1hdD1mb3JtYXQsIGluZGV4PUZhbHNlKQoK",
          "image": ".mlrun/func-sk-project-admin-gen-iris:latest",
          "base_image": "mlrun/mlrun",
          "commands": [
            "pip install sklearn",
            "pip install pyarrow"
          ],
          "origin_filename": "gen-iris.ipynb"
        },
        "mount_applied": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": {}
    },
    {
      "kind": "job",
      "metadata": {
        "name": "sklearn-classifier",
        "tag": "",
        "hash": "acde7cdb883f64cac7df66a688c4afa213418fe8",
        "project": "sk-project-admin",
        "labels": {
          "author": "yjb",
          "framework": "sklearn"
        },
        "categories": [
          "machine-learning",
          "model-training"
        ],
        "updated": "2021-08-30T05:22:41.919087+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "train_model",
        "entry_points": {
          "train_model": {
            "name": "train_model",
            "doc": "train a classifier\n\nAn optional cutom model evaluator can be supplied that should have the signature:\n`my_custom_evaluator(context, xvalid, yvalid, model)` and return a dictionary of\nscalar \"results\", a \"plots\" keys with a list of PlotArtifacts, and\nand \"tables\" key containing a returned list of TableArtifacts.",
            "parameters": [
              {
                "name": "context",
                "type": "MLClientCtx",
                "doc": "the function context",
                "default": ""
              },
              {
                "name": "model_pkg_class",
                "type": "str",
                "doc": "the model to train, e.g, \"sklearn.neural_networks.MLPClassifier\", or json model config",
                "default": ""
              },
              {
                "name": "dataset",
                "type": "DataItem",
                "doc": "(\"data\") name of raw data file",
                "default": ""
              },
              {
                "name": "label_column",
                "type": "str",
                "doc": "ground-truth (y) labels",
                "default": "labels"
              },
              {
                "name": "encode_cols",
                "type": "List[str]",
                "doc": "dictionary of names and prefixes for columns that are to hot be encoded.",
                "default": []
              },
              {
                "name": "sample",
                "type": "int",
                "doc": "Selects the first n rows, or select a sample starting from the first. If negative <-1, select a random sample",
                "default": "<_ast.USub object at 0x7fd86dbc17b8>"
              },
              {
                "name": "test_size",
                "type": "float",
                "doc": "(0.05) test set size",
                "default": 0.3
              },
              {
                "name": "train_val_split",
                "type": "float",
                "doc": "(0.75) Once the test set has been removed the training set gets this proportion.",
                "default": 0.7
              },
              {
                "name": "test_set_key",
                "type": "str",
                "doc": "key of held out data in artifact store",
                "default": "test_set"
              },
              {
                "name": "model_evaluator",
                "doc": "(None) a custom model evaluator can be specified",
                "default": null
              },
              {
                "name": "models_dest",
                "type": "str",
                "doc": "(\"\") models subfolder on artifact path",
                "default": ""
              },
              {
                "name": "plots_dest",
                "type": "str",
                "doc": "plot subfolder on artifact path",
                "default": "plots"
              },
              {
                "name": "file_ext",
                "type": "str",
                "doc": "(\"parquet\") format for test_set_key hold out data",
                "default": "parquet"
              },
              {
                "name": "model_pkg_file",
                "type": "str",
                "default": ""
              },
              {
                "name": "random_state",
                "type": "int",
                "doc": "(1) sklearn rng seed",
                "default": 1
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 20
          }
        },
        "description": "train any classifier using scikit-learn's API",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHdhcm5pbmdzCgp3YXJuaW5ncy5zaW1wbGVmaWx0ZXIoYWN0aW9uPSJpZ25vcmUiLCBjYXRlZ29yeT1GdXR1cmVXYXJuaW5nKQoKaW1wb3J0IG9zCgpmcm9tIGNsb3VkcGlja2xlIGltcG9ydCBkdW1wcwppbXBvcnQgcGFuZGFzIGFzIHBkCmZyb20gdHlwaW5nIGltcG9ydCBMaXN0CmZyb20gbWxydW4uZXhlY3V0aW9uIGltcG9ydCBNTENsaWVudEN0eApmcm9tIG1scnVuLmRhdGFzdG9yZSBpbXBvcnQgRGF0YUl0ZW0KZnJvbSBtbHJ1bi5tbHV0aWxzLmRhdGEgaW1wb3J0IGdldF9zYW1wbGUsIGdldF9zcGxpdHMKZnJvbSBtbHJ1bi5tbHV0aWxzLm1vZGVscyBpbXBvcnQgZ2VuX3NrbGVhcm5fbW9kZWwsIGV2YWxfbW9kZWxfdjIKZnJvbSBtbHJ1bi51dGlscy5oZWxwZXJzIGltcG9ydCBjcmVhdGVfY2xhc3MKZnJvbSBtbHJ1bi5hcnRpZmFjdHMubW9kZWwgaW1wb3J0IE1vZGVsQXJ0aWZhY3QKCgpkZWYgdHJhaW5fbW9kZWwoCiAgICBjb250ZXh0OiBNTENsaWVudEN0eCwKICAgIG1vZGVsX3BrZ19jbGFzczogc3RyLAogICAgZGF0YXNldDogRGF0YUl0ZW0sCiAgICBsYWJlbF9jb2x1bW46IHN0ciA9ICJsYWJlbHMiLAogICAgZW5jb2RlX2NvbHM6IExpc3Rbc3RyXSA9IFtdLAogICAgc2FtcGxlOiBpbnQgPSAtMSwKICAgIHRlc3Rfc2l6ZTogZmxvYXQgPSAwLjMwLAogICAgdHJhaW5fdmFsX3NwbGl0OiBmbG9hdCA9IDAuNzAsCiAgICB0ZXN0X3NldF9rZXk6IHN0ciA9ICJ0ZXN0X3NldCIsCiAgICBtb2RlbF9ldmFsdWF0b3I9Tm9uZSwKICAgIG1vZGVsc19kZXN0OiBzdHIgPSAiIiwKICAgIHBsb3RzX2Rlc3Q6IHN0ciA9ICJwbG90cyIsCiAgICBmaWxlX2V4dDogc3RyID0gInBhcnF1ZXQiLAogICAgbW9kZWxfcGtnX2ZpbGU6IHN0ciA9ICIiLAogICAgcmFuZG9tX3N0YXRlOiBpbnQgPSAxLAopIC0+IE5vbmU6CiAgICAiIiJ0cmFpbiBhIGNsYXNzaWZpZXIKCiAgICBBbiBvcHRpb25hbCBjdXRvbSBtb2RlbCBldmFsdWF0b3IgY2FuIGJlIHN1cHBsaWVkIHRoYXQgc2hvdWxkIGhhdmUgdGhlIHNpZ25hdHVyZToKICAgIGBteV9jdXN0b21fZXZhbHVhdG9yKGNvbnRleHQsIHh2YWxpZCwgeXZhbGlkLCBtb2RlbClgIGFuZCByZXR1cm4gYSBkaWN0aW9uYXJ5IG9mCiAgICBzY2FsYXIgInJlc3VsdHMiLCBhICJwbG90cyIga2V5cyB3aXRoIGEgbGlzdCBvZiBQbG90QXJ0aWZhY3RzLCBhbmQKICAgIGFuZCAidGFibGVzIiBrZXkgY29udGFpbmluZyBhIHJldHVybmVkIGxpc3Qgb2YgVGFibGVBcnRpZmFjdHMuCgogICAgOnBhcmFtIGNvbnRleHQ6ICAgICAgICAgICB0aGUgZnVuY3Rpb24gY29udGV4dAogICAgOnBhcmFtIG1vZGVsX3BrZ19jbGFzczogICB0aGUgbW9kZWwgdG8gdHJhaW4sIGUuZywgInNrbGVhcm4ubmV1cmFsX25ldHdvcmtzLk1MUENsYXNzaWZpZXIiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvciBqc29uIG1vZGVsIGNvbmZpZwogICAgOnBhcmFtIGRhdGFzZXQ6ICAgICAgICAgICAoImRhdGEiKSBuYW1lIG9mIHJhdyBkYXRhIGZpbGUKICAgIDpwYXJhbSBsYWJlbF9jb2x1bW46ICAgICAgZ3JvdW5kLXRydXRoICh5KSBsYWJlbHMKICAgIDpwYXJhbSBlbmNvZGVfY29sczogICAgICAgZGljdGlvbmFyeSBvZiBuYW1lcyBhbmQgcHJlZml4ZXMgZm9yIGNvbHVtbnMgdGhhdCBhcmUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gaG90IGJlIGVuY29kZWQuCiAgICA6cGFyYW0gc2FtcGxlOiAgICAgICAgICAgIFNlbGVjdHMgdGhlIGZpcnN0IG4gcm93cywgb3Igc2VsZWN0IGEgc2FtcGxlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0aW5nIGZyb20gdGhlIGZpcnN0LiBJZiBuZWdhdGl2ZSA8LTEsIHNlbGVjdAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhIHJhbmRvbSBzYW1wbGUKICAgIDpwYXJhbSB0ZXN0X3NpemU6ICAgICAgICAgKDAuMDUpIHRlc3Qgc2V0IHNpemUKICAgIDpwYXJhbSB0cmFpbl92YWxfc3BsaXQ6ICAgKDAuNzUpIE9uY2UgdGhlIHRlc3Qgc2V0IGhhcyBiZWVuIHJlbW92ZWQgdGhlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYWluaW5nIHNldCBnZXRzIHRoaXMgcHJvcG9ydGlvbi4KICAgIDpwYXJhbSB0ZXN0X3NldF9rZXk6ICAgICAga2V5IG9mIGhlbGQgb3V0IGRhdGEgaW4gYXJ0aWZhY3Qgc3RvcmUKICAgIDpwYXJhbSBtb2RlbF9ldmFsdWF0b3I6ICAgKE5vbmUpIGEgY3VzdG9tIG1vZGVsIGV2YWx1YXRvciBjYW4gYmUgc3BlY2lmaWVkCiAgICA6cGFyYW0gbW9kZWxzX2Rlc3Q6ICAgICAgICgiIikgbW9kZWxzIHN1YmZvbGRlciBvbiBhcnRpZmFjdCBwYXRoCiAgICA6cGFyYW0gcGxvdHNfZGVzdDogICAgICAgIHBsb3Qgc3ViZm9sZGVyIG9uIGFydGlmYWN0IHBhdGgKICAgIDpwYXJhbSBmaWxlX2V4dDogICAgICAgICAgKCJwYXJxdWV0IikgZm9ybWF0IGZvciB0ZXN0X3NldF9rZXkgaG9sZCBvdXQgZGF0YQogICAgOnBhcmFtIHJhbmRvbV9zdGF0ZTogICAgICAoMSkgc2tsZWFybiBybmcgc2VlZAoKICAgICIiIgogICAgbW9kZWxzX2Rlc3QgPSBtb2RlbHNfZGVzdCBvciAibW9kZWwiCgogICAgcmF3LCBsYWJlbHMsIGhlYWRlciA9IGdldF9zYW1wbGUoZGF0YXNldCwgc2FtcGxlLCBsYWJlbF9jb2x1bW4pCgogICAgaWYgZW5jb2RlX2NvbHM6CiAgICAgICAgcmF3ID0gcGQuZ2V0X2R1bW1pZXMoCiAgICAgICAgICAgIHJhdywKICAgICAgICAgICAgY29sdW1ucz1saXN0KGVuY29kZV9jb2xzLmtleXMoKSksCiAgICAgICAgICAgIHByZWZpeD1saXN0KGVuY29kZV9jb2xzLnZhbHVlcygpKSwKICAgICAgICAgICAgZHJvcF9maXJzdD1UcnVlLAogICAgICAgICkKCiAgICAoeHRyYWluLCB5dHJhaW4pLCAoeHZhbGlkLCB5dmFsaWQpLCAoeHRlc3QsIHl0ZXN0KSA9IGdldF9zcGxpdHMoCiAgICAgICAgcmF3LCBsYWJlbHMsIDMsIHRlc3Rfc2l6ZSwgMSAtIHRyYWluX3ZhbF9zcGxpdCwgcmFuZG9tX3N0YXRlCiAgICApCgogICAgdGVzdF9zZXQgPSBwZC5jb25jYXQoW3h0ZXN0LCB5dGVzdC50b19mcmFtZSgpXSwgYXhpcz0xKQogICAgY29udGV4dC5sb2dfZGF0YXNldCgKICAgICAgICB0ZXN0X3NldF9rZXksCiAgICAgICAgZGY9dGVzdF9zZXQsCiAgICAgICAgZm9ybWF0PWZpbGVfZXh0LAogICAgICAgIGluZGV4PUZhbHNlLAogICAgICAgIGxhYmVscz17ImRhdGEtdHlwZSI6ICJoZWxkLW91dCJ9LAogICAgICAgIGFydGlmYWN0X3BhdGg9Y29udGV4dC5hcnRpZmFjdF9zdWJwYXRoKCJkYXRhIiksCiAgICApCgogICAgbW9kZWxfY29uZmlnID0gZ2VuX3NrbGVhcm5fbW9kZWwobW9kZWxfcGtnX2NsYXNzLCBjb250ZXh0LnBhcmFtZXRlcnMuaXRlbXMoKSkKCiAgICBtb2RlbF9jb25maWdbIkZJVCJdLnVwZGF0ZSh7IlgiOiB4dHJhaW4sICJ5IjogeXRyYWluLnZhbHVlc30pCgogICAgQ2xhc3NpZmllckNsYXNzID0gY3JlYXRlX2NsYXNzKG1vZGVsX2NvbmZpZ1siTUVUQSJdWyJjbGFzcyJdKQoKICAgIG1vZGVsID0gQ2xhc3NpZmllckNsYXNzKCoqbW9kZWxfY29uZmlnWyJDTEFTUyJdKQoKICAgIG1vZGVsLmZpdCgqKm1vZGVsX2NvbmZpZ1siRklUIl0pCgogICAgYXJ0aWZhY3RfcGF0aCA9IGNvbnRleHQuYXJ0aWZhY3Rfc3VicGF0aChtb2RlbHNfZGVzdCkKICAgIHBsb3RzX3BhdGggPSBjb250ZXh0LmFydGlmYWN0X3N1YnBhdGgobW9kZWxzX2Rlc3QsIHBsb3RzX2Rlc3QpCiAgICBpZiBtb2RlbF9ldmFsdWF0b3I6CiAgICAgICAgZXZhbF9tZXRyaWNzID0gbW9kZWxfZXZhbHVhdG9yKAogICAgICAgICAgICBjb250ZXh0LCB4dmFsaWQsIHl2YWxpZCwgbW9kZWwsIHBsb3RzX2FydGlmYWN0X3BhdGg9cGxvdHNfcGF0aAogICAgICAgICkKICAgIGVsc2U6CiAgICAgICAgZXZhbF9tZXRyaWNzID0gZXZhbF9tb2RlbF92MigKICAgICAgICAgICAgY29udGV4dCwgeHZhbGlkLCB5dmFsaWQsIG1vZGVsLCBwbG90c19hcnRpZmFjdF9wYXRoPXBsb3RzX3BhdGgKICAgICAgICApCgogICAga3dhcmdzID0ge30KICAgIGlmICJhbGdvcml0aG0iIGluIE1vZGVsQXJ0aWZhY3QuX2RpY3RfZmllbGRzOgogICAgICAgIGt3YXJnc1sidHJhaW5pbmdfc2V0Il0gPSB0ZXN0X3NldAogICAgICAgIGt3YXJnc1sibGFiZWxfY29sdW1uIl0gPSBsYWJlbF9jb2x1bW4KICAgICAgICBzcGxpdCA9IG1vZGVsX3BrZ19jbGFzcy5yc3BsaXQoIi4iLCAxKQogICAgICAgIGlmIHNwbGl0IGFuZCBsZW4oc3BsaXQpID09IDI6CiAgICAgICAgICAgIGt3YXJnc1siYWxnb3JpdGhtIl0gPSBzcGxpdFsxXQoKICAgICAgICBpZiBkYXRhc2V0Lm1ldGEgYW5kIGRhdGFzZXQubWV0YS5raW5kID09ICJGZWF0dXJlVmVjdG9yIjoKICAgICAgICAgICAga3dhcmdzWyJmZWF0dXJlX3ZlY3RvciJdID0gZGF0YXNldC5tZXRhLnVyaQoKICAgIGNvbnRleHQuc2V0X2xhYmVsKCJjbGFzcyIsIG1vZGVsX3BrZ19jbGFzcykKICAgIGNvbnRleHQubG9nX21vZGVsKAogICAgICAgICJtb2RlbCIsCiAgICAgICAgYm9keT1kdW1wcyhtb2RlbCksCiAgICAgICAgYXJ0aWZhY3RfcGF0aD1hcnRpZmFjdF9wYXRoLAogICAgICAgIGV4dHJhX2RhdGE9ZXZhbF9tZXRyaWNzLAogICAgICAgIG1vZGVsX2ZpbGU9Im1vZGVsLnBrbCIsCiAgICAgICAgbWV0cmljcz1jb250ZXh0LnJlc3VsdHMsCiAgICAgICAgbGFiZWxzPXsiY2xhc3MiOiBtb2RlbF9wa2dfY2xhc3N9LAogICAgICAgIGZyYW1ld29yaz0ic2tsZWFybiIsCiAgICAgICAgKiprd2FyZ3MKICAgICkK",
          "commands": []
        },
        "mount_applied": true,
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "describe",
        "tag": "",
        "hash": "a71c2319b20286211ef7268856e28d47b28e1393",
        "project": "sk-project-admin",
        "labels": {
          "author": "Iguazio"
        },
        "categories": [
          "data-analysis"
        ],
        "updated": "2021-08-30T05:22:42.043779+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "summarize",
        "entry_points": {
          "summarize": {
            "name": "summarize",
            "doc": "Summarize a table",
            "parameters": [
              {
                "name": "context",
                "type": "MLClientCtx",
                "doc": "the function context",
                "default": ""
              },
              {
                "name": "table",
                "type": "DataItem",
                "doc": "MLRun input pointing to pandas dataframe (csv/parquet file path)",
                "default": ""
              },
              {
                "name": "label_column",
                "type": "str",
                "doc": "ground truth column label",
                "default": null
              },
              {
                "name": "class_labels",
                "type": "List[str]",
                "doc": "label for each class in tables and plots",
                "default": []
              },
              {
                "name": "plot_hist",
                "type": "bool",
                "doc": "(True) set this to False for large tables",
                "default": true
              },
              {
                "name": "plots_dest",
                "type": "str",
                "doc": "destination folder of summary plots (relative to artifact_path)",
                "default": "plots"
              },
              {
                "name": "update_dataset",
                "doc": "when the table is a registered dataset update the charts in-place",
                "default": false
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 23
          }
        },
        "description": "describe and visualizes dataset stats",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHdhcm5pbmdzCgp3YXJuaW5ncy5zaW1wbGVmaWx0ZXIoYWN0aW9uPSJpZ25vcmUiLCBjYXRlZ29yeT1GdXR1cmVXYXJuaW5nKQoKaW1wb3J0IG9zCmltcG9ydCBudW1weSBhcyBucAppbXBvcnQgcGFuZGFzIGFzIHBkCmltcG9ydCBtYXRwbG90bGliLnB5cGxvdCBhcyBwbHQKaW1wb3J0IHNlYWJvcm4gYXMgc25zCgpmcm9tIG1scnVuLmV4ZWN1dGlvbiBpbXBvcnQgTUxDbGllbnRDdHgKZnJvbSBtbHJ1bi5kYXRhc3RvcmUgaW1wb3J0IERhdGFJdGVtCmZyb20gbWxydW4uYXJ0aWZhY3RzIGltcG9ydCBQbG90QXJ0aWZhY3QsIFRhYmxlQXJ0aWZhY3QKZnJvbSBtbHJ1bi5tbHV0aWxzLnBsb3RzIGltcG9ydCBnY2ZfY2xlYXIKCmZyb20gdHlwaW5nIGltcG9ydCBMaXN0CgpwZC5zZXRfb3B0aW9uKCJkaXNwbGF5LmZsb2F0X2Zvcm1hdCIsIGxhbWJkYSB4OiAiJS4yZiIgJSB4KQoKCmRlZiBzdW1tYXJpemUoCiAgICBjb250ZXh0OiBNTENsaWVudEN0eCwKICAgIHRhYmxlOiBEYXRhSXRlbSwKICAgIGxhYmVsX2NvbHVtbjogc3RyID0gTm9uZSwKICAgIGNsYXNzX2xhYmVsczogTGlzdFtzdHJdID0gW10sCiAgICBwbG90X2hpc3Q6IGJvb2wgPSBUcnVlLAogICAgcGxvdHNfZGVzdDogc3RyID0gInBsb3RzIiwKICAgIHVwZGF0ZV9kYXRhc2V0PUZhbHNlLAopIC0+IE5vbmU6CiAgICAiIiJTdW1tYXJpemUgYSB0YWJsZQoKICAgIDpwYXJhbSBjb250ZXh0OiAgICAgICAgIHRoZSBmdW5jdGlvbiBjb250ZXh0CiAgICA6cGFyYW0gdGFibGU6ICAgICAgICAgICBNTFJ1biBpbnB1dCBwb2ludGluZyB0byBwYW5kYXMgZGF0YWZyYW1lIChjc3YvcGFycXVldCBmaWxlIHBhdGgpCiAgICA6cGFyYW0gbGFiZWxfY29sdW1uOiAgICBncm91bmQgdHJ1dGggY29sdW1uIGxhYmVsCiAgICA6cGFyYW0gY2xhc3NfbGFiZWxzOiAgICBsYWJlbCBmb3IgZWFjaCBjbGFzcyBpbiB0YWJsZXMgYW5kIHBsb3RzCiAgICA6cGFyYW0gcGxvdF9oaXN0OiAgICAgICAoVHJ1ZSkgc2V0IHRoaXMgdG8gRmFsc2UgZm9yIGxhcmdlIHRhYmxlcwogICAgOnBhcmFtIHBsb3RzX2Rlc3Q6ICAgICAgZGVzdGluYXRpb24gZm9sZGVyIG9mIHN1bW1hcnkgcGxvdHMgKHJlbGF0aXZlIHRvIGFydGlmYWN0X3BhdGgpCiAgICA6cGFyYW0gdXBkYXRlX2RhdGFzZXQ6ICB3aGVuIHRoZSB0YWJsZSBpcyBhIHJlZ2lzdGVyZWQgZGF0YXNldCB1cGRhdGUgdGhlIGNoYXJ0cyBpbi1wbGFjZQogICAgIiIiCiAgICBkZiA9IHRhYmxlLmFzX2RmKCkKICAgIGhlYWRlciA9IGRmLmNvbHVtbnMudmFsdWVzCiAgICBleHRyYV9kYXRhID0ge30KCiAgICB0cnk6CiAgICAgICAgZ2NmX2NsZWFyKHBsdCkKICAgICAgICBzbnNwbHQgPSBzbnMucGFpcnBsb3QoZGYsIGh1ZT1sYWJlbF9jb2x1bW4pICAjICwgZGlhZ19rd3M9eyJidyI6IDEuNX0pCiAgICAgICAgZXh0cmFfZGF0YVsiaGlzdG9ncmFtcyJdID0gY29udGV4dC5sb2dfYXJ0aWZhY3QoCiAgICAgICAgICAgIFBsb3RBcnRpZmFjdCgiaGlzdG9ncmFtcyIsIGJvZHk9cGx0LmdjZigpKSwKICAgICAgICAgICAgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS9oaXN0Lmh0bWwiLAogICAgICAgICAgICBkYl9rZXk9RmFsc2UsCiAgICAgICAgKQogICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgIGNvbnRleHQubG9nZ2VyLmVycm9yKGYiRmFpbGVkIHRvIGNyZWF0ZSBwYWlycGxvdCBoaXN0b2dyYW1zIGR1ZSB0bzoge2V9IikKCiAgICB0cnk6CiAgICAgICAgZ2NmX2NsZWFyKHBsdCkKICAgICAgICBwbG90X2NvbHMgPSAzCiAgICAgICAgcGxvdF9yb3dzID0gaW50KChsZW4oaGVhZGVyKSAtIDEpIC8gcGxvdF9jb2xzKSArIDEKICAgICAgICBmaWcsIGF4ID0gcGx0LnN1YnBsb3RzKHBsb3Rfcm93cywgcGxvdF9jb2xzLCBmaWdzaXplPSgxNSwgNCkpCiAgICAgICAgZmlnLnRpZ2h0X2xheW91dChwYWQ9Mi4wKQogICAgICAgIGZvciBpIGluIHJhbmdlKHBsb3Rfcm93cyAqIHBsb3RfY29scyk6CiAgICAgICAgICAgIGlmIGkgPCBsZW4oaGVhZGVyKToKICAgICAgICAgICAgICAgIHNucy52aW9saW5wbG90KAogICAgICAgICAgICAgICAgICAgIHg9ZGZbaGVhZGVyW2ldXSwKICAgICAgICAgICAgICAgICAgICBheD1heFtpbnQoaSAvIHBsb3RfY29scyldW2kgJSBwbG90X2NvbHNdLAogICAgICAgICAgICAgICAgICAgIG9yaWVudD0iaCIsCiAgICAgICAgICAgICAgICAgICAgd2lkdGg9MC43LAogICAgICAgICAgICAgICAgICAgIGlubmVyPSJxdWFydGlsZSIsCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBmaWcuZGVsYXhlcyhheFtpbnQoaSAvIHBsb3RfY29scyldW2kgJSBwbG90X2NvbHNdKQogICAgICAgICAgICBpICs9IDEKICAgICAgICBleHRyYV9kYXRhWyJ2aW9saW4iXSA9IGNvbnRleHQubG9nX2FydGlmYWN0KAogICAgICAgICAgICBQbG90QXJ0aWZhY3QoInZpb2xpbiIsIGJvZHk9cGx0LmdjZigpLCB0aXRsZT0iVmlvbGluIFBsb3QiKSwKICAgICAgICAgICAgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS92aW9saW4uaHRtbCIsCiAgICAgICAgICAgIGRiX2tleT1GYWxzZSwKICAgICAgICApCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgY29udGV4dC5sb2dnZXIud2FybihmIkZhaWxlZCB0byBjcmVhdGUgdmlvbGluIGRpc3RyaWJ1dGlvbiBwbG90cyBkdWUgdG86IHtlfSIpCgogICAgaWYgbGFiZWxfY29sdW1uOgogICAgICAgIGxhYmVscyA9IGRmLnBvcChsYWJlbF9jb2x1bW4pCiAgICAgICAgaW1idGFibGUgPSBsYWJlbHMudmFsdWVfY291bnRzKG5vcm1hbGl6ZT1UcnVlKS5zb3J0X2luZGV4KCkKICAgICAgICB0cnk6CiAgICAgICAgICAgIGdjZl9jbGVhcihwbHQpCiAgICAgICAgICAgIGJhbGFuY2ViYXIgPSBpbWJ0YWJsZS5wbG90KGtpbmQ9ImJhciIsIHRpdGxlPSJjbGFzcyBpbWJhbGFuY2UgLSBsYWJlbHMiKQogICAgICAgICAgICBiYWxhbmNlYmFyLnNldF94bGFiZWwoImNsYXNzIikKICAgICAgICAgICAgYmFsYW5jZWJhci5zZXRfeWxhYmVsKCJwcm9wb3J0aW9uIG9mIHRvdGFsIikKICAgICAgICAgICAgZXh0cmFfZGF0YVsiaW1iYWxhbmNlIl0gPSBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICAgICAgICAgIFBsb3RBcnRpZmFjdCgiaW1iYWxhbmNlIiwgYm9keT1wbHQuZ2NmKCkpLAogICAgICAgICAgICAgICAgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS9pbWJhbGFuY2UuaHRtbCIsCiAgICAgICAgICAgICkKICAgICAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgICAgIGNvbnRleHQubG9nZ2VyLndhcm4oZiJGYWlsZWQgdG8gY3JlYXRlIGNsYXNzIGltYmFsYW5jZSBwbG90IGR1ZSB0bzoge2V9IikKICAgICAgICBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICAgICAgVGFibGVBcnRpZmFjdCgKICAgICAgICAgICAgICAgICJpbWJhbGFuY2Utd2VpZ2h0cy12ZWMiLCBkZj1wZC5EYXRhRnJhbWUoeyJ3ZWlnaHRzIjogaW1idGFibGV9KQogICAgICAgICAgICApLAogICAgICAgICAgICBsb2NhbF9wYXRoPWYie3Bsb3RzX2Rlc3R9L2ltYmFsYW5jZS13ZWlnaHRzLXZlYy5jc3YiLAogICAgICAgICAgICBkYl9rZXk9RmFsc2UsCiAgICAgICAgKQoKICAgIHRibGNvcnIgPSBkZi5jb3JyKCkKICAgIG1hc2sgPSBucC56ZXJvc19saWtlKHRibGNvcnIsIGR0eXBlPW5wLmJvb2wpCiAgICBtYXNrW25wLnRyaXVfaW5kaWNlc19mcm9tKG1hc2spXSA9IFRydWUKCiAgICBkZmNvcnIgPSBwZC5EYXRhRnJhbWUoZGF0YT10Ymxjb3JyLCBjb2x1bW5zPWhlYWRlciwgaW5kZXg9aGVhZGVyKQogICAgZGZjb3JyID0gZGZjb3JyW25wLmFyYW5nZShkZmNvcnIuc2hhcGVbMF0pWzosIE5vbmVdID4gbnAuYXJhbmdlKGRmY29yci5zaGFwZVsxXSldCiAgICBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICBUYWJsZUFydGlmYWN0KCJjb3JyZWxhdGlvbi1tYXRyaXgiLCBkZj10Ymxjb3JyLCB2aXNpYmxlPVRydWUpLAogICAgICAgIGxvY2FsX3BhdGg9ZiJ7cGxvdHNfZGVzdH0vY29ycmVsYXRpb24tbWF0cml4LmNzdiIsCiAgICAgICAgZGJfa2V5PUZhbHNlLAogICAgKQoKICAgIHRyeToKICAgICAgICBnY2ZfY2xlYXIocGx0KQogICAgICAgIGF4ID0gcGx0LmF4ZXMoKQogICAgICAgIHNucy5oZWF0bWFwKHRibGNvcnIsIGF4PWF4LCBtYXNrPW1hc2ssIGFubm90PUZhbHNlLCBjbWFwPXBsdC5jbS5SZWRzKQogICAgICAgIGF4LnNldF90aXRsZSgiZmVhdHVyZXMgY29ycmVsYXRpb24iKQogICAgICAgIGV4dHJhX2RhdGFbImNvcnJlbGF0aW9uIl0gPSBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICAgICAgUGxvdEFydGlmYWN0KCJjb3JyZWxhdGlvbiIsIGJvZHk9cGx0LmdjZigpLCB0aXRsZT0iQ29ycmVsYXRpb24gTWF0cml4IiksCiAgICAgICAgICAgIGxvY2FsX3BhdGg9ZiJ7cGxvdHNfZGVzdH0vY29yci5odG1sIiwKICAgICAgICAgICAgZGJfa2V5PUZhbHNlLAogICAgICAgICkKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICBjb250ZXh0LmxvZ2dlci53YXJuKGYiRmFpbGVkIHRvIGNyZWF0ZSBmZWF0dXJlcyBjb3JyZWxhdGlvbiBwbG90IGR1ZSB0bzoge2V9IikKCiAgICBnY2ZfY2xlYXIocGx0KQogICAgaWYgdXBkYXRlX2RhdGFzZXQgYW5kIHRhYmxlLm1ldGEgYW5kIHRhYmxlLm1ldGEua2luZCA9PSAiZGF0YXNldCI6CiAgICAgICAgZnJvbSBtbHJ1bi5hcnRpZmFjdHMgaW1wb3J0IHVwZGF0ZV9kYXRhc2V0X21ldGEKCiAgICAgICAgdXBkYXRlX2RhdGFzZXRfbWV0YSh0YWJsZS5tZXRhLCBleHRyYV9kYXRhPWV4dHJhX2RhdGEpCg==",
          "commands": []
        },
        "mount_applied": true,
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "sklearn-classifier",
        "tag": "",
        "hash": "ab38336a9797c8caa495886a1531ff1633edd2c2",
        "project": "sk-project-admin",
        "labels": {
          "author": "yjb",
          "framework": "sklearn"
        },
        "categories": [
          "machine-learning",
          "model-training"
        ],
        "updated": "2021-08-30T05:22:42.083239+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "train_model",
        "entry_points": {
          "train_model": {
            "name": "train_model",
            "doc": "train a classifier\n\nAn optional cutom model evaluator can be supplied that should have the signature:\n`my_custom_evaluator(context, xvalid, yvalid, model)` and return a dictionary of\nscalar \"results\", a \"plots\" keys with a list of PlotArtifacts, and\nand \"tables\" key containing a returned list of TableArtifacts.",
            "parameters": [
              {
                "name": "context",
                "type": "MLClientCtx",
                "doc": "the function context",
                "default": ""
              },
              {
                "name": "model_pkg_class",
                "type": "str",
                "doc": "the model to train, e.g, \"sklearn.neural_networks.MLPClassifier\", or json model config",
                "default": ""
              },
              {
                "name": "dataset",
                "type": "DataItem",
                "doc": "(\"data\") name of raw data file",
                "default": ""
              },
              {
                "name": "label_column",
                "type": "str",
                "doc": "ground-truth (y) labels",
                "default": "labels"
              },
              {
                "name": "encode_cols",
                "type": "List[str]",
                "doc": "dictionary of names and prefixes for columns that are to hot be encoded.",
                "default": []
              },
              {
                "name": "sample",
                "type": "int",
                "doc": "Selects the first n rows, or select a sample starting from the first. If negative <-1, select a random sample",
                "default": "<_ast.USub object at 0x7fd86dbc17b8>"
              },
              {
                "name": "test_size",
                "type": "float",
                "doc": "(0.05) test set size",
                "default": 0.3
              },
              {
                "name": "train_val_split",
                "type": "float",
                "doc": "(0.75) Once the test set has been removed the training set gets this proportion.",
                "default": 0.7
              },
              {
                "name": "test_set_key",
                "type": "str",
                "doc": "key of held out data in artifact store",
                "default": "test_set"
              },
              {
                "name": "model_evaluator",
                "doc": "(None) a custom model evaluator can be specified",
                "default": null
              },
              {
                "name": "models_dest",
                "type": "str",
                "doc": "(\"\") models subfolder on artifact path",
                "default": ""
              },
              {
                "name": "plots_dest",
                "type": "str",
                "doc": "plot subfolder on artifact path",
                "default": "plots"
              },
              {
                "name": "file_ext",
                "type": "str",
                "doc": "(\"parquet\") format for test_set_key hold out data",
                "default": "parquet"
              },
              {
                "name": "model_pkg_file",
                "type": "str",
                "default": ""
              },
              {
                "name": "random_state",
                "type": "int",
                "doc": "(1) sklearn rng seed",
                "default": 1
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 20
          }
        },
        "description": "train any classifier using scikit-learn's API",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHdhcm5pbmdzCgp3YXJuaW5ncy5zaW1wbGVmaWx0ZXIoYWN0aW9uPSJpZ25vcmUiLCBjYXRlZ29yeT1GdXR1cmVXYXJuaW5nKQoKaW1wb3J0IG9zCgpmcm9tIGNsb3VkcGlja2xlIGltcG9ydCBkdW1wcwppbXBvcnQgcGFuZGFzIGFzIHBkCmZyb20gdHlwaW5nIGltcG9ydCBMaXN0CmZyb20gbWxydW4uZXhlY3V0aW9uIGltcG9ydCBNTENsaWVudEN0eApmcm9tIG1scnVuLmRhdGFzdG9yZSBpbXBvcnQgRGF0YUl0ZW0KZnJvbSBtbHJ1bi5tbHV0aWxzLmRhdGEgaW1wb3J0IGdldF9zYW1wbGUsIGdldF9zcGxpdHMKZnJvbSBtbHJ1bi5tbHV0aWxzLm1vZGVscyBpbXBvcnQgZ2VuX3NrbGVhcm5fbW9kZWwsIGV2YWxfbW9kZWxfdjIKZnJvbSBtbHJ1bi51dGlscy5oZWxwZXJzIGltcG9ydCBjcmVhdGVfY2xhc3MKZnJvbSBtbHJ1bi5hcnRpZmFjdHMubW9kZWwgaW1wb3J0IE1vZGVsQXJ0aWZhY3QKCgpkZWYgdHJhaW5fbW9kZWwoCiAgICBjb250ZXh0OiBNTENsaWVudEN0eCwKICAgIG1vZGVsX3BrZ19jbGFzczogc3RyLAogICAgZGF0YXNldDogRGF0YUl0ZW0sCiAgICBsYWJlbF9jb2x1bW46IHN0ciA9ICJsYWJlbHMiLAogICAgZW5jb2RlX2NvbHM6IExpc3Rbc3RyXSA9IFtdLAogICAgc2FtcGxlOiBpbnQgPSAtMSwKICAgIHRlc3Rfc2l6ZTogZmxvYXQgPSAwLjMwLAogICAgdHJhaW5fdmFsX3NwbGl0OiBmbG9hdCA9IDAuNzAsCiAgICB0ZXN0X3NldF9rZXk6IHN0ciA9ICJ0ZXN0X3NldCIsCiAgICBtb2RlbF9ldmFsdWF0b3I9Tm9uZSwKICAgIG1vZGVsc19kZXN0OiBzdHIgPSAiIiwKICAgIHBsb3RzX2Rlc3Q6IHN0ciA9ICJwbG90cyIsCiAgICBmaWxlX2V4dDogc3RyID0gInBhcnF1ZXQiLAogICAgbW9kZWxfcGtnX2ZpbGU6IHN0ciA9ICIiLAogICAgcmFuZG9tX3N0YXRlOiBpbnQgPSAxLAopIC0+IE5vbmU6CiAgICAiIiJ0cmFpbiBhIGNsYXNzaWZpZXIKCiAgICBBbiBvcHRpb25hbCBjdXRvbSBtb2RlbCBldmFsdWF0b3IgY2FuIGJlIHN1cHBsaWVkIHRoYXQgc2hvdWxkIGhhdmUgdGhlIHNpZ25hdHVyZToKICAgIGBteV9jdXN0b21fZXZhbHVhdG9yKGNvbnRleHQsIHh2YWxpZCwgeXZhbGlkLCBtb2RlbClgIGFuZCByZXR1cm4gYSBkaWN0aW9uYXJ5IG9mCiAgICBzY2FsYXIgInJlc3VsdHMiLCBhICJwbG90cyIga2V5cyB3aXRoIGEgbGlzdCBvZiBQbG90QXJ0aWZhY3RzLCBhbmQKICAgIGFuZCAidGFibGVzIiBrZXkgY29udGFpbmluZyBhIHJldHVybmVkIGxpc3Qgb2YgVGFibGVBcnRpZmFjdHMuCgogICAgOnBhcmFtIGNvbnRleHQ6ICAgICAgICAgICB0aGUgZnVuY3Rpb24gY29udGV4dAogICAgOnBhcmFtIG1vZGVsX3BrZ19jbGFzczogICB0aGUgbW9kZWwgdG8gdHJhaW4sIGUuZywgInNrbGVhcm4ubmV1cmFsX25ldHdvcmtzLk1MUENsYXNzaWZpZXIiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvciBqc29uIG1vZGVsIGNvbmZpZwogICAgOnBhcmFtIGRhdGFzZXQ6ICAgICAgICAgICAoImRhdGEiKSBuYW1lIG9mIHJhdyBkYXRhIGZpbGUKICAgIDpwYXJhbSBsYWJlbF9jb2x1bW46ICAgICAgZ3JvdW5kLXRydXRoICh5KSBsYWJlbHMKICAgIDpwYXJhbSBlbmNvZGVfY29sczogICAgICAgZGljdGlvbmFyeSBvZiBuYW1lcyBhbmQgcHJlZml4ZXMgZm9yIGNvbHVtbnMgdGhhdCBhcmUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gaG90IGJlIGVuY29kZWQuCiAgICA6cGFyYW0gc2FtcGxlOiAgICAgICAgICAgIFNlbGVjdHMgdGhlIGZpcnN0IG4gcm93cywgb3Igc2VsZWN0IGEgc2FtcGxlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0aW5nIGZyb20gdGhlIGZpcnN0LiBJZiBuZWdhdGl2ZSA8LTEsIHNlbGVjdAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhIHJhbmRvbSBzYW1wbGUKICAgIDpwYXJhbSB0ZXN0X3NpemU6ICAgICAgICAgKDAuMDUpIHRlc3Qgc2V0IHNpemUKICAgIDpwYXJhbSB0cmFpbl92YWxfc3BsaXQ6ICAgKDAuNzUpIE9uY2UgdGhlIHRlc3Qgc2V0IGhhcyBiZWVuIHJlbW92ZWQgdGhlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYWluaW5nIHNldCBnZXRzIHRoaXMgcHJvcG9ydGlvbi4KICAgIDpwYXJhbSB0ZXN0X3NldF9rZXk6ICAgICAga2V5IG9mIGhlbGQgb3V0IGRhdGEgaW4gYXJ0aWZhY3Qgc3RvcmUKICAgIDpwYXJhbSBtb2RlbF9ldmFsdWF0b3I6ICAgKE5vbmUpIGEgY3VzdG9tIG1vZGVsIGV2YWx1YXRvciBjYW4gYmUgc3BlY2lmaWVkCiAgICA6cGFyYW0gbW9kZWxzX2Rlc3Q6ICAgICAgICgiIikgbW9kZWxzIHN1YmZvbGRlciBvbiBhcnRpZmFjdCBwYXRoCiAgICA6cGFyYW0gcGxvdHNfZGVzdDogICAgICAgIHBsb3Qgc3ViZm9sZGVyIG9uIGFydGlmYWN0IHBhdGgKICAgIDpwYXJhbSBmaWxlX2V4dDogICAgICAgICAgKCJwYXJxdWV0IikgZm9ybWF0IGZvciB0ZXN0X3NldF9rZXkgaG9sZCBvdXQgZGF0YQogICAgOnBhcmFtIHJhbmRvbV9zdGF0ZTogICAgICAoMSkgc2tsZWFybiBybmcgc2VlZAoKICAgICIiIgogICAgbW9kZWxzX2Rlc3QgPSBtb2RlbHNfZGVzdCBvciAibW9kZWwiCgogICAgcmF3LCBsYWJlbHMsIGhlYWRlciA9IGdldF9zYW1wbGUoZGF0YXNldCwgc2FtcGxlLCBsYWJlbF9jb2x1bW4pCgogICAgaWYgZW5jb2RlX2NvbHM6CiAgICAgICAgcmF3ID0gcGQuZ2V0X2R1bW1pZXMoCiAgICAgICAgICAgIHJhdywKICAgICAgICAgICAgY29sdW1ucz1saXN0KGVuY29kZV9jb2xzLmtleXMoKSksCiAgICAgICAgICAgIHByZWZpeD1saXN0KGVuY29kZV9jb2xzLnZhbHVlcygpKSwKICAgICAgICAgICAgZHJvcF9maXJzdD1UcnVlLAogICAgICAgICkKCiAgICAoeHRyYWluLCB5dHJhaW4pLCAoeHZhbGlkLCB5dmFsaWQpLCAoeHRlc3QsIHl0ZXN0KSA9IGdldF9zcGxpdHMoCiAgICAgICAgcmF3LCBsYWJlbHMsIDMsIHRlc3Rfc2l6ZSwgMSAtIHRyYWluX3ZhbF9zcGxpdCwgcmFuZG9tX3N0YXRlCiAgICApCgogICAgdGVzdF9zZXQgPSBwZC5jb25jYXQoW3h0ZXN0LCB5dGVzdC50b19mcmFtZSgpXSwgYXhpcz0xKQogICAgY29udGV4dC5sb2dfZGF0YXNldCgKICAgICAgICB0ZXN0X3NldF9rZXksCiAgICAgICAgZGY9dGVzdF9zZXQsCiAgICAgICAgZm9ybWF0PWZpbGVfZXh0LAogICAgICAgIGluZGV4PUZhbHNlLAogICAgICAgIGxhYmVscz17ImRhdGEtdHlwZSI6ICJoZWxkLW91dCJ9LAogICAgICAgIGFydGlmYWN0X3BhdGg9Y29udGV4dC5hcnRpZmFjdF9zdWJwYXRoKCJkYXRhIiksCiAgICApCgogICAgbW9kZWxfY29uZmlnID0gZ2VuX3NrbGVhcm5fbW9kZWwobW9kZWxfcGtnX2NsYXNzLCBjb250ZXh0LnBhcmFtZXRlcnMuaXRlbXMoKSkKCiAgICBtb2RlbF9jb25maWdbIkZJVCJdLnVwZGF0ZSh7IlgiOiB4dHJhaW4sICJ5IjogeXRyYWluLnZhbHVlc30pCgogICAgQ2xhc3NpZmllckNsYXNzID0gY3JlYXRlX2NsYXNzKG1vZGVsX2NvbmZpZ1siTUVUQSJdWyJjbGFzcyJdKQoKICAgIG1vZGVsID0gQ2xhc3NpZmllckNsYXNzKCoqbW9kZWxfY29uZmlnWyJDTEFTUyJdKQoKICAgIG1vZGVsLmZpdCgqKm1vZGVsX2NvbmZpZ1siRklUIl0pCgogICAgYXJ0aWZhY3RfcGF0aCA9IGNvbnRleHQuYXJ0aWZhY3Rfc3VicGF0aChtb2RlbHNfZGVzdCkKICAgIHBsb3RzX3BhdGggPSBjb250ZXh0LmFydGlmYWN0X3N1YnBhdGgobW9kZWxzX2Rlc3QsIHBsb3RzX2Rlc3QpCiAgICBpZiBtb2RlbF9ldmFsdWF0b3I6CiAgICAgICAgZXZhbF9tZXRyaWNzID0gbW9kZWxfZXZhbHVhdG9yKAogICAgICAgICAgICBjb250ZXh0LCB4dmFsaWQsIHl2YWxpZCwgbW9kZWwsIHBsb3RzX2FydGlmYWN0X3BhdGg9cGxvdHNfcGF0aAogICAgICAgICkKICAgIGVsc2U6CiAgICAgICAgZXZhbF9tZXRyaWNzID0gZXZhbF9tb2RlbF92MigKICAgICAgICAgICAgY29udGV4dCwgeHZhbGlkLCB5dmFsaWQsIG1vZGVsLCBwbG90c19hcnRpZmFjdF9wYXRoPXBsb3RzX3BhdGgKICAgICAgICApCgogICAga3dhcmdzID0ge30KICAgIGlmICJhbGdvcml0aG0iIGluIE1vZGVsQXJ0aWZhY3QuX2RpY3RfZmllbGRzOgogICAgICAgIGt3YXJnc1sidHJhaW5pbmdfc2V0Il0gPSB0ZXN0X3NldAogICAgICAgIGt3YXJnc1sibGFiZWxfY29sdW1uIl0gPSBsYWJlbF9jb2x1bW4KICAgICAgICBzcGxpdCA9IG1vZGVsX3BrZ19jbGFzcy5yc3BsaXQoIi4iLCAxKQogICAgICAgIGlmIHNwbGl0IGFuZCBsZW4oc3BsaXQpID09IDI6CiAgICAgICAgICAgIGt3YXJnc1siYWxnb3JpdGhtIl0gPSBzcGxpdFsxXQoKICAgICAgICBpZiBkYXRhc2V0Lm1ldGEgYW5kIGRhdGFzZXQubWV0YS5raW5kID09ICJGZWF0dXJlVmVjdG9yIjoKICAgICAgICAgICAga3dhcmdzWyJmZWF0dXJlX3ZlY3RvciJdID0gZGF0YXNldC5tZXRhLnVyaQoKICAgIGNvbnRleHQuc2V0X2xhYmVsKCJjbGFzcyIsIG1vZGVsX3BrZ19jbGFzcykKICAgIGNvbnRleHQubG9nX21vZGVsKAogICAgICAgICJtb2RlbCIsCiAgICAgICAgYm9keT1kdW1wcyhtb2RlbCksCiAgICAgICAgYXJ0aWZhY3RfcGF0aD1hcnRpZmFjdF9wYXRoLAogICAgICAgIGV4dHJhX2RhdGE9ZXZhbF9tZXRyaWNzLAogICAgICAgIG1vZGVsX2ZpbGU9Im1vZGVsLnBrbCIsCiAgICAgICAgbWV0cmljcz1jb250ZXh0LnJlc3VsdHMsCiAgICAgICAgbGFiZWxzPXsiY2xhc3MiOiBtb2RlbF9wa2dfY2xhc3N9LAogICAgICAgIGZyYW1ld29yaz0ic2tsZWFybiIsCiAgICAgICAgKiprd2FyZ3MKICAgICkK",
          "commands": []
        },
        "mount_applied": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "describe",
        "tag": "",
        "hash": "28e2bf15aa546992bd0a6a8a3ef134ea2758de98",
        "project": "sk-project-admin",
        "labels": {
          "author": "Iguazio"
        },
        "categories": [
          "data-analysis"
        ],
        "updated": "2021-08-30T05:22:42.314316+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "summarize",
        "entry_points": {
          "summarize": {
            "name": "summarize",
            "doc": "Summarize a table",
            "parameters": [
              {
                "name": "context",
                "type": "MLClientCtx",
                "doc": "the function context",
                "default": ""
              },
              {
                "name": "table",
                "type": "DataItem",
                "doc": "MLRun input pointing to pandas dataframe (csv/parquet file path)",
                "default": ""
              },
              {
                "name": "label_column",
                "type": "str",
                "doc": "ground truth column label",
                "default": null
              },
              {
                "name": "class_labels",
                "type": "List[str]",
                "doc": "label for each class in tables and plots",
                "default": []
              },
              {
                "name": "plot_hist",
                "type": "bool",
                "doc": "(True) set this to False for large tables",
                "default": true
              },
              {
                "name": "plots_dest",
                "type": "str",
                "doc": "destination folder of summary plots (relative to artifact_path)",
                "default": "plots"
              },
              {
                "name": "update_dataset",
                "doc": "when the table is a registered dataset update the charts in-place",
                "default": false
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 23
          }
        },
        "description": "describe and visualizes dataset stats",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHdhcm5pbmdzCgp3YXJuaW5ncy5zaW1wbGVmaWx0ZXIoYWN0aW9uPSJpZ25vcmUiLCBjYXRlZ29yeT1GdXR1cmVXYXJuaW5nKQoKaW1wb3J0IG9zCmltcG9ydCBudW1weSBhcyBucAppbXBvcnQgcGFuZGFzIGFzIHBkCmltcG9ydCBtYXRwbG90bGliLnB5cGxvdCBhcyBwbHQKaW1wb3J0IHNlYWJvcm4gYXMgc25zCgpmcm9tIG1scnVuLmV4ZWN1dGlvbiBpbXBvcnQgTUxDbGllbnRDdHgKZnJvbSBtbHJ1bi5kYXRhc3RvcmUgaW1wb3J0IERhdGFJdGVtCmZyb20gbWxydW4uYXJ0aWZhY3RzIGltcG9ydCBQbG90QXJ0aWZhY3QsIFRhYmxlQXJ0aWZhY3QKZnJvbSBtbHJ1bi5tbHV0aWxzLnBsb3RzIGltcG9ydCBnY2ZfY2xlYXIKCmZyb20gdHlwaW5nIGltcG9ydCBMaXN0CgpwZC5zZXRfb3B0aW9uKCJkaXNwbGF5LmZsb2F0X2Zvcm1hdCIsIGxhbWJkYSB4OiAiJS4yZiIgJSB4KQoKCmRlZiBzdW1tYXJpemUoCiAgICBjb250ZXh0OiBNTENsaWVudEN0eCwKICAgIHRhYmxlOiBEYXRhSXRlbSwKICAgIGxhYmVsX2NvbHVtbjogc3RyID0gTm9uZSwKICAgIGNsYXNzX2xhYmVsczogTGlzdFtzdHJdID0gW10sCiAgICBwbG90X2hpc3Q6IGJvb2wgPSBUcnVlLAogICAgcGxvdHNfZGVzdDogc3RyID0gInBsb3RzIiwKICAgIHVwZGF0ZV9kYXRhc2V0PUZhbHNlLAopIC0+IE5vbmU6CiAgICAiIiJTdW1tYXJpemUgYSB0YWJsZQoKICAgIDpwYXJhbSBjb250ZXh0OiAgICAgICAgIHRoZSBmdW5jdGlvbiBjb250ZXh0CiAgICA6cGFyYW0gdGFibGU6ICAgICAgICAgICBNTFJ1biBpbnB1dCBwb2ludGluZyB0byBwYW5kYXMgZGF0YWZyYW1lIChjc3YvcGFycXVldCBmaWxlIHBhdGgpCiAgICA6cGFyYW0gbGFiZWxfY29sdW1uOiAgICBncm91bmQgdHJ1dGggY29sdW1uIGxhYmVsCiAgICA6cGFyYW0gY2xhc3NfbGFiZWxzOiAgICBsYWJlbCBmb3IgZWFjaCBjbGFzcyBpbiB0YWJsZXMgYW5kIHBsb3RzCiAgICA6cGFyYW0gcGxvdF9oaXN0OiAgICAgICAoVHJ1ZSkgc2V0IHRoaXMgdG8gRmFsc2UgZm9yIGxhcmdlIHRhYmxlcwogICAgOnBhcmFtIHBsb3RzX2Rlc3Q6ICAgICAgZGVzdGluYXRpb24gZm9sZGVyIG9mIHN1bW1hcnkgcGxvdHMgKHJlbGF0aXZlIHRvIGFydGlmYWN0X3BhdGgpCiAgICA6cGFyYW0gdXBkYXRlX2RhdGFzZXQ6ICB3aGVuIHRoZSB0YWJsZSBpcyBhIHJlZ2lzdGVyZWQgZGF0YXNldCB1cGRhdGUgdGhlIGNoYXJ0cyBpbi1wbGFjZQogICAgIiIiCiAgICBkZiA9IHRhYmxlLmFzX2RmKCkKICAgIGhlYWRlciA9IGRmLmNvbHVtbnMudmFsdWVzCiAgICBleHRyYV9kYXRhID0ge30KCiAgICB0cnk6CiAgICAgICAgZ2NmX2NsZWFyKHBsdCkKICAgICAgICBzbnNwbHQgPSBzbnMucGFpcnBsb3QoZGYsIGh1ZT1sYWJlbF9jb2x1bW4pICAjICwgZGlhZ19rd3M9eyJidyI6IDEuNX0pCiAgICAgICAgZXh0cmFfZGF0YVsiaGlzdG9ncmFtcyJdID0gY29udGV4dC5sb2dfYXJ0aWZhY3QoCiAgICAgICAgICAgIFBsb3RBcnRpZmFjdCgiaGlzdG9ncmFtcyIsIGJvZHk9cGx0LmdjZigpKSwKICAgICAgICAgICAgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS9oaXN0Lmh0bWwiLAogICAgICAgICAgICBkYl9rZXk9RmFsc2UsCiAgICAgICAgKQogICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgIGNvbnRleHQubG9nZ2VyLmVycm9yKGYiRmFpbGVkIHRvIGNyZWF0ZSBwYWlycGxvdCBoaXN0b2dyYW1zIGR1ZSB0bzoge2V9IikKCiAgICB0cnk6CiAgICAgICAgZ2NmX2NsZWFyKHBsdCkKICAgICAgICBwbG90X2NvbHMgPSAzCiAgICAgICAgcGxvdF9yb3dzID0gaW50KChsZW4oaGVhZGVyKSAtIDEpIC8gcGxvdF9jb2xzKSArIDEKICAgICAgICBmaWcsIGF4ID0gcGx0LnN1YnBsb3RzKHBsb3Rfcm93cywgcGxvdF9jb2xzLCBmaWdzaXplPSgxNSwgNCkpCiAgICAgICAgZmlnLnRpZ2h0X2xheW91dChwYWQ9Mi4wKQogICAgICAgIGZvciBpIGluIHJhbmdlKHBsb3Rfcm93cyAqIHBsb3RfY29scyk6CiAgICAgICAgICAgIGlmIGkgPCBsZW4oaGVhZGVyKToKICAgICAgICAgICAgICAgIHNucy52aW9saW5wbG90KAogICAgICAgICAgICAgICAgICAgIHg9ZGZbaGVhZGVyW2ldXSwKICAgICAgICAgICAgICAgICAgICBheD1heFtpbnQoaSAvIHBsb3RfY29scyldW2kgJSBwbG90X2NvbHNdLAogICAgICAgICAgICAgICAgICAgIG9yaWVudD0iaCIsCiAgICAgICAgICAgICAgICAgICAgd2lkdGg9MC43LAogICAgICAgICAgICAgICAgICAgIGlubmVyPSJxdWFydGlsZSIsCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBmaWcuZGVsYXhlcyhheFtpbnQoaSAvIHBsb3RfY29scyldW2kgJSBwbG90X2NvbHNdKQogICAgICAgICAgICBpICs9IDEKICAgICAgICBleHRyYV9kYXRhWyJ2aW9saW4iXSA9IGNvbnRleHQubG9nX2FydGlmYWN0KAogICAgICAgICAgICBQbG90QXJ0aWZhY3QoInZpb2xpbiIsIGJvZHk9cGx0LmdjZigpLCB0aXRsZT0iVmlvbGluIFBsb3QiKSwKICAgICAgICAgICAgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS92aW9saW4uaHRtbCIsCiAgICAgICAgICAgIGRiX2tleT1GYWxzZSwKICAgICAgICApCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgY29udGV4dC5sb2dnZXIud2FybihmIkZhaWxlZCB0byBjcmVhdGUgdmlvbGluIGRpc3RyaWJ1dGlvbiBwbG90cyBkdWUgdG86IHtlfSIpCgogICAgaWYgbGFiZWxfY29sdW1uOgogICAgICAgIGxhYmVscyA9IGRmLnBvcChsYWJlbF9jb2x1bW4pCiAgICAgICAgaW1idGFibGUgPSBsYWJlbHMudmFsdWVfY291bnRzKG5vcm1hbGl6ZT1UcnVlKS5zb3J0X2luZGV4KCkKICAgICAgICB0cnk6CiAgICAgICAgICAgIGdjZl9jbGVhcihwbHQpCiAgICAgICAgICAgIGJhbGFuY2ViYXIgPSBpbWJ0YWJsZS5wbG90KGtpbmQ9ImJhciIsIHRpdGxlPSJjbGFzcyBpbWJhbGFuY2UgLSBsYWJlbHMiKQogICAgICAgICAgICBiYWxhbmNlYmFyLnNldF94bGFiZWwoImNsYXNzIikKICAgICAgICAgICAgYmFsYW5jZWJhci5zZXRfeWxhYmVsKCJwcm9wb3J0aW9uIG9mIHRvdGFsIikKICAgICAgICAgICAgZXh0cmFfZGF0YVsiaW1iYWxhbmNlIl0gPSBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICAgICAgICAgIFBsb3RBcnRpZmFjdCgiaW1iYWxhbmNlIiwgYm9keT1wbHQuZ2NmKCkpLAogICAgICAgICAgICAgICAgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS9pbWJhbGFuY2UuaHRtbCIsCiAgICAgICAgICAgICkKICAgICAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgICAgIGNvbnRleHQubG9nZ2VyLndhcm4oZiJGYWlsZWQgdG8gY3JlYXRlIGNsYXNzIGltYmFsYW5jZSBwbG90IGR1ZSB0bzoge2V9IikKICAgICAgICBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICAgICAgVGFibGVBcnRpZmFjdCgKICAgICAgICAgICAgICAgICJpbWJhbGFuY2Utd2VpZ2h0cy12ZWMiLCBkZj1wZC5EYXRhRnJhbWUoeyJ3ZWlnaHRzIjogaW1idGFibGV9KQogICAgICAgICAgICApLAogICAgICAgICAgICBsb2NhbF9wYXRoPWYie3Bsb3RzX2Rlc3R9L2ltYmFsYW5jZS13ZWlnaHRzLXZlYy5jc3YiLAogICAgICAgICAgICBkYl9rZXk9RmFsc2UsCiAgICAgICAgKQoKICAgIHRibGNvcnIgPSBkZi5jb3JyKCkKICAgIG1hc2sgPSBucC56ZXJvc19saWtlKHRibGNvcnIsIGR0eXBlPW5wLmJvb2wpCiAgICBtYXNrW25wLnRyaXVfaW5kaWNlc19mcm9tKG1hc2spXSA9IFRydWUKCiAgICBkZmNvcnIgPSBwZC5EYXRhRnJhbWUoZGF0YT10Ymxjb3JyLCBjb2x1bW5zPWhlYWRlciwgaW5kZXg9aGVhZGVyKQogICAgZGZjb3JyID0gZGZjb3JyW25wLmFyYW5nZShkZmNvcnIuc2hhcGVbMF0pWzosIE5vbmVdID4gbnAuYXJhbmdlKGRmY29yci5zaGFwZVsxXSldCiAgICBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICBUYWJsZUFydGlmYWN0KCJjb3JyZWxhdGlvbi1tYXRyaXgiLCBkZj10Ymxjb3JyLCB2aXNpYmxlPVRydWUpLAogICAgICAgIGxvY2FsX3BhdGg9ZiJ7cGxvdHNfZGVzdH0vY29ycmVsYXRpb24tbWF0cml4LmNzdiIsCiAgICAgICAgZGJfa2V5PUZhbHNlLAogICAgKQoKICAgIHRyeToKICAgICAgICBnY2ZfY2xlYXIocGx0KQogICAgICAgIGF4ID0gcGx0LmF4ZXMoKQogICAgICAgIHNucy5oZWF0bWFwKHRibGNvcnIsIGF4PWF4LCBtYXNrPW1hc2ssIGFubm90PUZhbHNlLCBjbWFwPXBsdC5jbS5SZWRzKQogICAgICAgIGF4LnNldF90aXRsZSgiZmVhdHVyZXMgY29ycmVsYXRpb24iKQogICAgICAgIGV4dHJhX2RhdGFbImNvcnJlbGF0aW9uIl0gPSBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICAgICAgUGxvdEFydGlmYWN0KCJjb3JyZWxhdGlvbiIsIGJvZHk9cGx0LmdjZigpLCB0aXRsZT0iQ29ycmVsYXRpb24gTWF0cml4IiksCiAgICAgICAgICAgIGxvY2FsX3BhdGg9ZiJ7cGxvdHNfZGVzdH0vY29yci5odG1sIiwKICAgICAgICAgICAgZGJfa2V5PUZhbHNlLAogICAgICAgICkKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICBjb250ZXh0LmxvZ2dlci53YXJuKGYiRmFpbGVkIHRvIGNyZWF0ZSBmZWF0dXJlcyBjb3JyZWxhdGlvbiBwbG90IGR1ZSB0bzoge2V9IikKCiAgICBnY2ZfY2xlYXIocGx0KQogICAgaWYgdXBkYXRlX2RhdGFzZXQgYW5kIHRhYmxlLm1ldGEgYW5kIHRhYmxlLm1ldGEua2luZCA9PSAiZGF0YXNldCI6CiAgICAgICAgZnJvbSBtbHJ1bi5hcnRpZmFjdHMgaW1wb3J0IHVwZGF0ZV9kYXRhc2V0X21ldGEKCiAgICAgICAgdXBkYXRlX2RhdGFzZXRfbWV0YSh0YWJsZS5tZXRhLCBleHRyYV9kYXRhPWV4dHJhX2RhdGEpCg==",
          "commands": []
        },
        "mount_applied": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "serving",
      "metadata": {
        "name": "v2-model-server",
        "tag": "latest",
        "hash": "c556aea75574178d0f6a518892dce9ce3f09a7ef",
        "project": "sk-project-admin",
        "labels": {
          "author": "yaronh",
          "framework": "sklearn"
        },
        "categories": [
          "model-serving",
          "machine-learning"
        ],
        "updated": "2021-08-30T05:23:26.141797+00:00"
      },
      "spec": {
        "command": "http://default-tenant.app.vmdev36.lab.iguazeng.com:30372",
        "args": [],
        "image": "mlrun/mlrun",
        "entry_points": {
          "load": {
            "name": "load",
            "doc": "load and initialize the model and/or other elements",
            "parameters": [
              {
                "name": "self",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 16
          },
          "predict": {
            "name": "predict",
            "doc": "Generate model predictions from sample.",
            "parameters": [
              {
                "name": "self",
                "default": ""
              },
              {
                "name": "body",
                "type": "dict",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": "",
                "type": "List"
              }
            ],
            "lineno": 21
          },
          "init_context": {
            "name": "init_context",
            "doc": "",
            "parameters": [
              {
                "name": "context",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 39
          },
          "handler": {
            "name": "handler",
            "doc": "",
            "parameters": [
              {
                "name": "context",
                "default": ""
              },
              {
                "name": "event",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 42
          }
        },
        "description": "generic sklearn model server",
        "min_replicas": 1,
        "max_replicas": 4,
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "base_spec": {
          "apiVersion": "nuclio.io/v1",
          "kind": "Function",
          "metadata": {
            "name": "v2-model-server",
            "labels": {},
            "annotations": {
              "nuclio.io/generated_by": "function generated from /home/michaell/projects/functions/v2_model_server/v2_model_server.py"
            }
          },
          "spec": {
            "runtime": "python:3.6",
            "handler": "v2_model_server:handler",
            "env": [],
            "volumes": [],
            "build": {
              "commands": [],
              "noBaseImagesPull": true,
              "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG1scnVuCgpmcm9tIGNsb3VkcGlja2xlIGltcG9ydCBsb2FkCmZyb20gdHlwaW5nIGltcG9ydCBMaXN0CmZyb20gc2tsZWFybi5kYXRhc2V0cyBpbXBvcnQgbG9hZF9pcmlzCmltcG9ydCBudW1weSBhcyBucAoKaW1wb3J0IHdhcm5pbmdzCgp3YXJuaW5ncy5maWx0ZXJ3YXJuaW5ncygiaWdub3JlIikKCgpjbGFzcyBDbGFzc2lmaWVyTW9kZWwobWxydW4uc2VydmluZy5WMk1vZGVsU2VydmVyKToKICAgIGRlZiBsb2FkKHNlbGYpOgogICAgICAgICIiImxvYWQgYW5kIGluaXRpYWxpemUgdGhlIG1vZGVsIGFuZC9vciBvdGhlciBlbGVtZW50cyIiIgogICAgICAgIG1vZGVsX2ZpbGUsIGV4dHJhX2RhdGEgPSBzZWxmLmdldF9tb2RlbCgiLnBrbCIpCiAgICAgICAgc2VsZi5tb2RlbCA9IGxvYWQob3Blbihtb2RlbF9maWxlLCAicmIiKSkKCiAgICBkZWYgcHJlZGljdChzZWxmLCBib2R5OiBkaWN0KSAtPiBMaXN0OgogICAgICAgICIiIkdlbmVyYXRlIG1vZGVsIHByZWRpY3Rpb25zIGZyb20gc2FtcGxlLiIiIgogICAgICAgIGZlYXRzID0gbnAuYXNhcnJheShib2R5WyJpbnB1dHMiXSkKICAgICAgICByZXN1bHQ6IG5wLm5kYXJyYXkgPSBzZWxmLm1vZGVsLnByZWRpY3QoZmVhdHMpCiAgICAgICAgcmV0dXJuIHJlc3VsdC50b2xpc3QoKQoKCmZyb20gbWxydW4ucnVudGltZXMgaW1wb3J0IG51Y2xpb19pbml0X2hvb2sKCgpkZWYgaW5pdF9jb250ZXh0KGNvbnRleHQpOgogICAgbnVjbGlvX2luaXRfaG9vayhjb250ZXh0LCBnbG9iYWxzKCksICJzZXJ2aW5nX3YyIikKCgpkZWYgaGFuZGxlcihjb250ZXh0LCBldmVudCk6CiAgICByZXR1cm4gY29udGV4dC5tbHJ1bl9oYW5kbGVyKGNvbnRleHQsIGV2ZW50KQoKZnJvbSBtbHJ1bi5ydW50aW1lcyBpbXBvcnQgbnVjbGlvX2luaXRfaG9vawpkZWYgaW5pdF9jb250ZXh0KGNvbnRleHQpOgogICAgbnVjbGlvX2luaXRfaG9vayhjb250ZXh0LCBnbG9iYWxzKCksICdzZXJ2aW5nX3YyJykKCmRlZiBoYW5kbGVyKGNvbnRleHQsIGV2ZW50KToKICAgIHJldHVybiBjb250ZXh0Lm1scnVuX2hhbmRsZXIoY29udGV4dCwgZXZlbnQpCg=="
            }
          }
        },
        "source": "",
        "function_kind": "serving_v2",
        "graph": {
          "kind": "router",
          "routes": {
            "iris_dataset:v1": {
              "kind": "task",
              "class_name": "ClassifierModel",
              "class_args": {
                "model_path": "store://artifacts/sk-project-admin/train_model:a0e31343-3be8-4aa2-9de5-0e54342f8e1a"
              }
            }
          }
        },
        "default_class": "ClassifierModel",
        "build": {
          "commands": []
        },
        "secret_sources": [],
        "mount_applied": true,
        "affinity": null
      },
      "status": {
        "state": "ready",
        "nuclio_name": "sk-project-admin-v2-model-server",
        "address": "default-tenant.app.vmdev36.lab.iguazeng.com:30372",
        "internal_invocation_urls": [
          "nuclio-sk-project-admin-v2-model-server.default-tenant.svc.cluster.local:8080"
        ],
        "external_invocation_urls": [
          "default-tenant.app.vmdev36.lab.iguazeng.com:30372"
        ]
      },
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "name": "test-classifier",
        "tag": "",
        "hash": "323a809b32c7e068068115c9e80acf1a2accc9da",
        "project": "sk-project-admin",
        "labels": {
          "author": "yjb",
          "framework": "sklearn"
        },
        "categories": [
          "machine-learning",
          "model-testing"
        ],
        "updated": "2021-08-30T05:23:10.740079+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "test_classifier",
        "entry_points": {
          "test_classifier": {
            "name": "test_classifier",
            "doc": "Test one or more classifier models against held-out dataset\n\nUsing held-out test features, evaluates the peformance of the estimated model\n\nCan be part of a kubeflow pipeline as a test step that is run post EDA and\ntraining/validation cycles",
            "parameters": [
              {
                "name": "context",
                "doc": "the function context",
                "default": ""
              },
              {
                "name": "models_path",
                "type": "DataItem",
                "doc": "artifact models representing a file or a folder",
                "default": ""
              },
              {
                "name": "test_set",
                "type": "DataItem",
                "doc": "test features and labels",
                "default": ""
              },
              {
                "name": "label_column",
                "type": "str",
                "doc": "column name for ground truth labels",
                "default": ""
              },
              {
                "name": "score_method",
                "type": "str",
                "doc": "for multiclass classification",
                "default": "micro"
              },
              {
                "name": "plots_dest",
                "type": "str",
                "doc": "dir for test plots",
                "default": ""
              },
              {
                "name": "model_evaluator",
                "doc": "NOT IMPLEMENTED: specific method to generate eval, passed in as string or available in this folder",
                "default": null
              },
              {
                "name": "default_model",
                "type": "str",
                "default": "model.pkl"
              },
              {
                "name": "predictions_column",
                "type": "str",
                "doc": "column name for the predictions column on the resulted artifact",
                "default": "yscore"
              },
              {
                "name": "model_update",
                "doc": "(True) update model, when running as stand alone no need in update",
                "default": true
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 17
          }
        },
        "description": "test a classifier using held-out or new data",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHdhcm5pbmdzCgp3YXJuaW5ncy5maWx0ZXJ3YXJuaW5ncygiaWdub3JlIikKCmltcG9ydCBvcwppbXBvcnQgcGFuZGFzIGFzIHBkCgpmcm9tIG1scnVuLmRhdGFzdG9yZSBpbXBvcnQgRGF0YUl0ZW0KZnJvbSBtbHJ1bi5hcnRpZmFjdHMgaW1wb3J0IGdldF9tb2RlbCwgdXBkYXRlX21vZGVsCmZyb20gbWxydW4ubWx1dGlscy5tb2RlbHMgaW1wb3J0IGV2YWxfbW9kZWxfdjIKZnJvbSBjbG91ZHBpY2tsZSBpbXBvcnQgbG9hZApmcm9tIHVybGxpYi5yZXF1ZXN0IGltcG9ydCB1cmxvcGVuCgoKZGVmIHRlc3RfY2xhc3NpZmllcigKICAgIGNvbnRleHQsCiAgICBtb2RlbHNfcGF0aDogRGF0YUl0ZW0sCiAgICB0ZXN0X3NldDogRGF0YUl0ZW0sCiAgICBsYWJlbF9jb2x1bW46IHN0ciwKICAgIHNjb3JlX21ldGhvZDogc3RyID0gIm1pY3JvIiwKICAgIHBsb3RzX2Rlc3Q6IHN0ciA9ICIiLAogICAgbW9kZWxfZXZhbHVhdG9yPU5vbmUsCiAgICBkZWZhdWx0X21vZGVsOiBzdHIgPSAibW9kZWwucGtsIiwKICAgIHByZWRpY3Rpb25zX2NvbHVtbjogc3RyID0gInlzY29yZSIsCiAgICBtb2RlbF91cGRhdGU9VHJ1ZSwKKSAtPiBOb25lOgogICAgIiIiVGVzdCBvbmUgb3IgbW9yZSBjbGFzc2lmaWVyIG1vZGVscyBhZ2FpbnN0IGhlbGQtb3V0IGRhdGFzZXQKCiAgICBVc2luZyBoZWxkLW91dCB0ZXN0IGZlYXR1cmVzLCBldmFsdWF0ZXMgdGhlIHBlZm9ybWFuY2Ugb2YgdGhlIGVzdGltYXRlZCBtb2RlbAoKICAgIENhbiBiZSBwYXJ0IG9mIGEga3ViZWZsb3cgcGlwZWxpbmUgYXMgYSB0ZXN0IHN0ZXAgdGhhdCBpcyBydW4gcG9zdCBFREEgYW5kCiAgICB0cmFpbmluZy92YWxpZGF0aW9uIGN5Y2xlcwoKICAgIDpwYXJhbSBjb250ZXh0OiAgICAgICAgICAgIHRoZSBmdW5jdGlvbiBjb250ZXh0CiAgICA6cGFyYW0gbW9kZWxzX3BhdGg6ICAgICAgICBhcnRpZmFjdCBtb2RlbHMgcmVwcmVzZW50aW5nIGEgZmlsZSBvciBhIGZvbGRlcgogICAgOnBhcmFtIHRlc3Rfc2V0OiAgICAgICAgICAgdGVzdCBmZWF0dXJlcyBhbmQgbGFiZWxzCiAgICA6cGFyYW0gbGFiZWxfY29sdW1uOiAgICAgICBjb2x1bW4gbmFtZSBmb3IgZ3JvdW5kIHRydXRoIGxhYmVscwogICAgOnBhcmFtIHNjb3JlX21ldGhvZDogICAgICAgZm9yIG11bHRpY2xhc3MgY2xhc3NpZmljYXRpb24KICAgIDpwYXJhbSBwbG90c19kZXN0OiAgICAgICAgIGRpciBmb3IgdGVzdCBwbG90cwogICAgOnBhcmFtIG1vZGVsX2V2YWx1YXRvcjogICAgTk9UIElNUExFTUVOVEVEOiBzcGVjaWZpYyBtZXRob2QgdG8gZ2VuZXJhdGUgZXZhbCwgcGFzc2VkIGluIGFzIHN0cmluZwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3IgYXZhaWxhYmxlIGluIHRoaXMgZm9sZGVyCiAgICA6cGFyYW0gcHJlZGljdGlvbnNfY29sdW1uOiBjb2x1bW4gbmFtZSBmb3IgdGhlIHByZWRpY3Rpb25zIGNvbHVtbiBvbiB0aGUgcmVzdWx0ZWQgYXJ0aWZhY3QKICAgIDpwYXJhbSBtb2RlbF91cGRhdGU6ICAgICAgIChUcnVlKSB1cGRhdGUgbW9kZWwsIHdoZW4gcnVubmluZyBhcyBzdGFuZCBhbG9uZSBubyBuZWVkIGluIHVwZGF0ZQogICAgIiIiCiAgICB4dGVzdCA9IHRlc3Rfc2V0LmFzX2RmKCkKICAgIHl0ZXN0ID0geHRlc3QucG9wKGxhYmVsX2NvbHVtbikKCiAgICB0cnk6CiAgICAgICAgbW9kZWxfZmlsZSwgbW9kZWxfb2JqLCBfID0gZ2V0X21vZGVsKG1vZGVsc19wYXRoLCBzdWZmaXg9Ii5wa2wiKQogICAgICAgIG1vZGVsX29iaiA9IGxvYWQob3Blbihtb2RlbF9maWxlLCAicmIiKSkKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgYToKICAgICAgICByYWlzZSBFeGNlcHRpb24oIm1vZGVsIGxvY2F0aW9uIGxpa2VseSBzcGVjaWZpZWQiKQoKICAgIGV4dHJhX2RhdGEgPSBldmFsX21vZGVsX3YyKGNvbnRleHQsIHh0ZXN0LCB5dGVzdC52YWx1ZXMsIG1vZGVsX29iaikKICAgIGlmIG1vZGVsX29iaiBhbmQgbW9kZWxfdXBkYXRlID09IFRydWU6CiAgICAgICAgdXBkYXRlX21vZGVsKAogICAgICAgICAgICBtb2RlbHNfcGF0aCwKICAgICAgICAgICAgZXh0cmFfZGF0YT1leHRyYV9kYXRhLAogICAgICAgICAgICBtZXRyaWNzPWNvbnRleHQucmVzdWx0cywKICAgICAgICAgICAga2V5X3ByZWZpeD0idmFsaWRhdGlvbi0iLAogICAgICAgICkKCiAgICB5X2hhdCA9IG1vZGVsX29iai5wcmVkaWN0KHh0ZXN0KQogICAgaWYgeV9oYXQubmRpbSA9PSAxIG9yIHlfaGF0LnNoYXBlWzFdID09IDE6CiAgICAgICAgc2NvcmVfbmFtZXMgPSBbcHJlZGljdGlvbnNfY29sdW1uXQogICAgZWxzZToKICAgICAgICBzY29yZV9uYW1lcyA9IFtmIntwcmVkaWN0aW9uc19jb2x1bW59XyIgKyBzdHIoeCkgZm9yIHggaW4gcmFuZ2UoeV9oYXQuc2hhcGVbMV0pXQoKICAgIGRmID0gcGQuY29uY2F0KFt4dGVzdCwgeXRlc3QsIHBkLkRhdGFGcmFtZSh5X2hhdCwgY29sdW1ucz1zY29yZV9uYW1lcyldLCBheGlzPTEpCiAgICBjb250ZXh0LmxvZ19kYXRhc2V0KCJ0ZXN0X3NldF9wcmVkcyIsIGRmPWRmLCBmb3JtYXQ9InBhcnF1ZXQiLCBpbmRleD1GYWxzZSkK",
          "commands": []
        },
        "mount_applied": true,
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "test-classifier",
        "tag": "latest",
        "hash": "53e300e78aff0573dd28166bb903f9c9c511e478",
        "project": "sk-project-admin",
        "labels": {
          "author": "yjb",
          "framework": "sklearn"
        },
        "categories": [
          "machine-learning",
          "model-testing"
        ],
        "updated": "2021-08-30T05:23:10.835323+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "test_classifier",
        "entry_points": {
          "test_classifier": {
            "name": "test_classifier",
            "doc": "Test one or more classifier models against held-out dataset\n\nUsing held-out test features, evaluates the peformance of the estimated model\n\nCan be part of a kubeflow pipeline as a test step that is run post EDA and\ntraining/validation cycles",
            "parameters": [
              {
                "name": "context",
                "doc": "the function context",
                "default": ""
              },
              {
                "name": "models_path",
                "type": "DataItem",
                "doc": "artifact models representing a file or a folder",
                "default": ""
              },
              {
                "name": "test_set",
                "type": "DataItem",
                "doc": "test features and labels",
                "default": ""
              },
              {
                "name": "label_column",
                "type": "str",
                "doc": "column name for ground truth labels",
                "default": ""
              },
              {
                "name": "score_method",
                "type": "str",
                "doc": "for multiclass classification",
                "default": "micro"
              },
              {
                "name": "plots_dest",
                "type": "str",
                "doc": "dir for test plots",
                "default": ""
              },
              {
                "name": "model_evaluator",
                "doc": "NOT IMPLEMENTED: specific method to generate eval, passed in as string or available in this folder",
                "default": null
              },
              {
                "name": "default_model",
                "type": "str",
                "default": "model.pkl"
              },
              {
                "name": "predictions_column",
                "type": "str",
                "doc": "column name for the predictions column on the resulted artifact",
                "default": "yscore"
              },
              {
                "name": "model_update",
                "doc": "(True) update model, when running as stand alone no need in update",
                "default": true
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 17
          }
        },
        "description": "test a classifier using held-out or new data",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHdhcm5pbmdzCgp3YXJuaW5ncy5maWx0ZXJ3YXJuaW5ncygiaWdub3JlIikKCmltcG9ydCBvcwppbXBvcnQgcGFuZGFzIGFzIHBkCgpmcm9tIG1scnVuLmRhdGFzdG9yZSBpbXBvcnQgRGF0YUl0ZW0KZnJvbSBtbHJ1bi5hcnRpZmFjdHMgaW1wb3J0IGdldF9tb2RlbCwgdXBkYXRlX21vZGVsCmZyb20gbWxydW4ubWx1dGlscy5tb2RlbHMgaW1wb3J0IGV2YWxfbW9kZWxfdjIKZnJvbSBjbG91ZHBpY2tsZSBpbXBvcnQgbG9hZApmcm9tIHVybGxpYi5yZXF1ZXN0IGltcG9ydCB1cmxvcGVuCgoKZGVmIHRlc3RfY2xhc3NpZmllcigKICAgIGNvbnRleHQsCiAgICBtb2RlbHNfcGF0aDogRGF0YUl0ZW0sCiAgICB0ZXN0X3NldDogRGF0YUl0ZW0sCiAgICBsYWJlbF9jb2x1bW46IHN0ciwKICAgIHNjb3JlX21ldGhvZDogc3RyID0gIm1pY3JvIiwKICAgIHBsb3RzX2Rlc3Q6IHN0ciA9ICIiLAogICAgbW9kZWxfZXZhbHVhdG9yPU5vbmUsCiAgICBkZWZhdWx0X21vZGVsOiBzdHIgPSAibW9kZWwucGtsIiwKICAgIHByZWRpY3Rpb25zX2NvbHVtbjogc3RyID0gInlzY29yZSIsCiAgICBtb2RlbF91cGRhdGU9VHJ1ZSwKKSAtPiBOb25lOgogICAgIiIiVGVzdCBvbmUgb3IgbW9yZSBjbGFzc2lmaWVyIG1vZGVscyBhZ2FpbnN0IGhlbGQtb3V0IGRhdGFzZXQKCiAgICBVc2luZyBoZWxkLW91dCB0ZXN0IGZlYXR1cmVzLCBldmFsdWF0ZXMgdGhlIHBlZm9ybWFuY2Ugb2YgdGhlIGVzdGltYXRlZCBtb2RlbAoKICAgIENhbiBiZSBwYXJ0IG9mIGEga3ViZWZsb3cgcGlwZWxpbmUgYXMgYSB0ZXN0IHN0ZXAgdGhhdCBpcyBydW4gcG9zdCBFREEgYW5kCiAgICB0cmFpbmluZy92YWxpZGF0aW9uIGN5Y2xlcwoKICAgIDpwYXJhbSBjb250ZXh0OiAgICAgICAgICAgIHRoZSBmdW5jdGlvbiBjb250ZXh0CiAgICA6cGFyYW0gbW9kZWxzX3BhdGg6ICAgICAgICBhcnRpZmFjdCBtb2RlbHMgcmVwcmVzZW50aW5nIGEgZmlsZSBvciBhIGZvbGRlcgogICAgOnBhcmFtIHRlc3Rfc2V0OiAgICAgICAgICAgdGVzdCBmZWF0dXJlcyBhbmQgbGFiZWxzCiAgICA6cGFyYW0gbGFiZWxfY29sdW1uOiAgICAgICBjb2x1bW4gbmFtZSBmb3IgZ3JvdW5kIHRydXRoIGxhYmVscwogICAgOnBhcmFtIHNjb3JlX21ldGhvZDogICAgICAgZm9yIG11bHRpY2xhc3MgY2xhc3NpZmljYXRpb24KICAgIDpwYXJhbSBwbG90c19kZXN0OiAgICAgICAgIGRpciBmb3IgdGVzdCBwbG90cwogICAgOnBhcmFtIG1vZGVsX2V2YWx1YXRvcjogICAgTk9UIElNUExFTUVOVEVEOiBzcGVjaWZpYyBtZXRob2QgdG8gZ2VuZXJhdGUgZXZhbCwgcGFzc2VkIGluIGFzIHN0cmluZwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3IgYXZhaWxhYmxlIGluIHRoaXMgZm9sZGVyCiAgICA6cGFyYW0gcHJlZGljdGlvbnNfY29sdW1uOiBjb2x1bW4gbmFtZSBmb3IgdGhlIHByZWRpY3Rpb25zIGNvbHVtbiBvbiB0aGUgcmVzdWx0ZWQgYXJ0aWZhY3QKICAgIDpwYXJhbSBtb2RlbF91cGRhdGU6ICAgICAgIChUcnVlKSB1cGRhdGUgbW9kZWwsIHdoZW4gcnVubmluZyBhcyBzdGFuZCBhbG9uZSBubyBuZWVkIGluIHVwZGF0ZQogICAgIiIiCiAgICB4dGVzdCA9IHRlc3Rfc2V0LmFzX2RmKCkKICAgIHl0ZXN0ID0geHRlc3QucG9wKGxhYmVsX2NvbHVtbikKCiAgICB0cnk6CiAgICAgICAgbW9kZWxfZmlsZSwgbW9kZWxfb2JqLCBfID0gZ2V0X21vZGVsKG1vZGVsc19wYXRoLCBzdWZmaXg9Ii5wa2wiKQogICAgICAgIG1vZGVsX29iaiA9IGxvYWQob3Blbihtb2RlbF9maWxlLCAicmIiKSkKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgYToKICAgICAgICByYWlzZSBFeGNlcHRpb24oIm1vZGVsIGxvY2F0aW9uIGxpa2VseSBzcGVjaWZpZWQiKQoKICAgIGV4dHJhX2RhdGEgPSBldmFsX21vZGVsX3YyKGNvbnRleHQsIHh0ZXN0LCB5dGVzdC52YWx1ZXMsIG1vZGVsX29iaikKICAgIGlmIG1vZGVsX29iaiBhbmQgbW9kZWxfdXBkYXRlID09IFRydWU6CiAgICAgICAgdXBkYXRlX21vZGVsKAogICAgICAgICAgICBtb2RlbHNfcGF0aCwKICAgICAgICAgICAgZXh0cmFfZGF0YT1leHRyYV9kYXRhLAogICAgICAgICAgICBtZXRyaWNzPWNvbnRleHQucmVzdWx0cywKICAgICAgICAgICAga2V5X3ByZWZpeD0idmFsaWRhdGlvbi0iLAogICAgICAgICkKCiAgICB5X2hhdCA9IG1vZGVsX29iai5wcmVkaWN0KHh0ZXN0KQogICAgaWYgeV9oYXQubmRpbSA9PSAxIG9yIHlfaGF0LnNoYXBlWzFdID09IDE6CiAgICAgICAgc2NvcmVfbmFtZXMgPSBbcHJlZGljdGlvbnNfY29sdW1uXQogICAgZWxzZToKICAgICAgICBzY29yZV9uYW1lcyA9IFtmIntwcmVkaWN0aW9uc19jb2x1bW59XyIgKyBzdHIoeCkgZm9yIHggaW4gcmFuZ2UoeV9oYXQuc2hhcGVbMV0pXQoKICAgIGRmID0gcGQuY29uY2F0KFt4dGVzdCwgeXRlc3QsIHBkLkRhdGFGcmFtZSh5X2hhdCwgY29sdW1ucz1zY29yZV9uYW1lcyldLCBheGlzPTEpCiAgICBjb250ZXh0LmxvZ19kYXRhc2V0KCJ0ZXN0X3NldF9wcmVkcyIsIGRmPWRmLCBmb3JtYXQ9InBhcnF1ZXQiLCBpbmRleD1GYWxzZSkK",
          "commands": []
        },
        "mount_applied": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": {}
    },
    {
      "kind": "serving",
      "metadata": {
        "name": "v2-model-server",
        "tag": "",
        "hash": "35022c72e01c186bb844c9ed47a276060c9f51b1",
        "project": "sk-project-admin",
        "labels": {
          "author": "yaronh",
          "framework": "sklearn"
        },
        "categories": [
          "model-serving",
          "machine-learning"
        ],
        "updated": "2021-08-30T05:23:26.051948+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "entry_points": {
          "load": {
            "name": "load",
            "doc": "load and initialize the model and/or other elements",
            "parameters": [
              {
                "name": "self",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 16
          },
          "predict": {
            "name": "predict",
            "doc": "Generate model predictions from sample.",
            "parameters": [
              {
                "name": "self",
                "default": ""
              },
              {
                "name": "body",
                "type": "dict",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": "",
                "type": "List"
              }
            ],
            "lineno": 21
          },
          "init_context": {
            "name": "init_context",
            "doc": "",
            "parameters": [
              {
                "name": "context",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 39
          },
          "handler": {
            "name": "handler",
            "doc": "",
            "parameters": [
              {
                "name": "context",
                "default": ""
              },
              {
                "name": "event",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 42
          }
        },
        "description": "generic sklearn model server",
        "min_replicas": 1,
        "max_replicas": 4,
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "config": {
          "metadata.labels.mlrun/class": "serving",
          "spec.serviceType": "NodePort",
          "spec.minReplicas": 1,
          "spec.maxReplicas": 4
        },
        "base_spec": {
          "apiVersion": "nuclio.io/v1",
          "kind": "Function",
          "metadata": {
            "name": "sk-project-admin-v2-model-server",
            "labels": {
              "mlrun/class": "serving",
              "nuclio.io/project-name": "sk-project-admin"
            },
            "annotations": {
              "nuclio.io/generated_by": "function generated from /home/michaell/projects/functions/v2_model_server/v2_model_server.py"
            }
          },
          "spec": {
            "runtime": "python:3.6",
            "handler": "v2_model_server:handler",
            "env": [
              {
                "name": "V3IO_API",
                "value": "v3io-webapi.default-tenant.svc:8081"
              },
              {
                "name": "V3IO_USERNAME",
                "value": "admin"
              },
              {
                "name": "V3IO_ACCESS_KEY",
                "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              },
              {
                "name": "V3IO_FRAMESD",
                "value": "framesd:8081"
              },
              {
                "name": "MLRUN_DEFAULT_PROJECT",
                "value": "sk-project-admin"
              },
              {
                "name": "MLRUN_DBPATH",
                "value": "http://mlrun-api:8080"
              },
              {
                "name": "MLRUN_NAMESPACE",
                "value": "default-tenant"
              },
              {
                "name": "SERVING_SPEC_ENV",
                "value": "{\"function_uri\": \"sk-project-admin/v2-model-server\", \"version\": \"v2\", \"parameters\": {}, \"graph\": {\"kind\": \"router\", \"routes\": {\"iris_dataset:v1\": {\"kind\": \"task\", \"class_name\": \"ClassifierModel\", \"class_args\": {\"model_path\": \"store://artifacts/sk-project-admin/train_model:a0e31343-3be8-4aa2-9de5-0e54342f8e1a\"}}}}, \"load_mode\": null, \"functions\": {}, \"graph_initializer\": null, \"error_stream\": null, \"track_models\": null, \"default_content_type\": null}"
              }
            ],
            "volumes": [
              {
                "volume": {
                  "flexVolume": {
                    "driver": "v3io/fuse",
                    "options": {
                      "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
                    }
                  },
                  "name": "v3io"
                },
                "volumeMount": {
                  "mountPath": "/v3io",
                  "name": "v3io",
                  "subPath": ""
                }
              },
              {
                "volume": {
                  "flexVolume": {
                    "driver": "v3io/fuse",
                    "options": {
                      "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
                    }
                  },
                  "name": "v3io"
                },
                "volumeMount": {
                  "mountPath": "/User",
                  "name": "v3io",
                  "subPath": "users/admin"
                }
              }
            ],
            "build": {
              "commands": [],
              "noBaseImagesPull": true,
              "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG1scnVuCgpmcm9tIGNsb3VkcGlja2xlIGltcG9ydCBsb2FkCmZyb20gdHlwaW5nIGltcG9ydCBMaXN0CmZyb20gc2tsZWFybi5kYXRhc2V0cyBpbXBvcnQgbG9hZF9pcmlzCmltcG9ydCBudW1weSBhcyBucAoKaW1wb3J0IHdhcm5pbmdzCgp3YXJuaW5ncy5maWx0ZXJ3YXJuaW5ncygiaWdub3JlIikKCgpjbGFzcyBDbGFzc2lmaWVyTW9kZWwobWxydW4uc2VydmluZy5WMk1vZGVsU2VydmVyKToKICAgIGRlZiBsb2FkKHNlbGYpOgogICAgICAgICIiImxvYWQgYW5kIGluaXRpYWxpemUgdGhlIG1vZGVsIGFuZC9vciBvdGhlciBlbGVtZW50cyIiIgogICAgICAgIG1vZGVsX2ZpbGUsIGV4dHJhX2RhdGEgPSBzZWxmLmdldF9tb2RlbCgiLnBrbCIpCiAgICAgICAgc2VsZi5tb2RlbCA9IGxvYWQob3Blbihtb2RlbF9maWxlLCAicmIiKSkKCiAgICBkZWYgcHJlZGljdChzZWxmLCBib2R5OiBkaWN0KSAtPiBMaXN0OgogICAgICAgICIiIkdlbmVyYXRlIG1vZGVsIHByZWRpY3Rpb25zIGZyb20gc2FtcGxlLiIiIgogICAgICAgIGZlYXRzID0gbnAuYXNhcnJheShib2R5WyJpbnB1dHMiXSkKICAgICAgICByZXN1bHQ6IG5wLm5kYXJyYXkgPSBzZWxmLm1vZGVsLnByZWRpY3QoZmVhdHMpCiAgICAgICAgcmV0dXJuIHJlc3VsdC50b2xpc3QoKQoKCmZyb20gbWxydW4ucnVudGltZXMgaW1wb3J0IG51Y2xpb19pbml0X2hvb2sKCgpkZWYgaW5pdF9jb250ZXh0KGNvbnRleHQpOgogICAgbnVjbGlvX2luaXRfaG9vayhjb250ZXh0LCBnbG9iYWxzKCksICJzZXJ2aW5nX3YyIikKCgpkZWYgaGFuZGxlcihjb250ZXh0LCBldmVudCk6CiAgICByZXR1cm4gY29udGV4dC5tbHJ1bl9oYW5kbGVyKGNvbnRleHQsIGV2ZW50KQoKZnJvbSBtbHJ1bi5ydW50aW1lcyBpbXBvcnQgbnVjbGlvX2luaXRfaG9vawpkZWYgaW5pdF9jb250ZXh0KGNvbnRleHQpOgogICAgbnVjbGlvX2luaXRfaG9vayhjb250ZXh0LCBnbG9iYWxzKCksICdzZXJ2aW5nX3YyJykKCmRlZiBoYW5kbGVyKGNvbnRleHQsIGV2ZW50KToKICAgIHJldHVybiBjb250ZXh0Lm1scnVuX2hhbmRsZXIoY29udGV4dCwgZXZlbnQpCg==",
              "baseImage": "mlrun/mlrun:0.7.0-rc11"
            },
            "serviceType": "NodePort",
            "minReplicas": 1,
            "maxReplicas": 4
          }
        },
        "source": "",
        "function_kind": "serving_v2",
        "graph": {
          "kind": "router",
          "routes": {
            "iris_dataset:v1": {
              "kind": "task",
              "class_name": "ClassifierModel",
              "class_args": {
                "model_path": "store://artifacts/sk-project-admin/train_model:a0e31343-3be8-4aa2-9de5-0e54342f8e1a"
              }
            }
          }
        },
        "default_class": "ClassifierModel",
        "build": {
          "commands": []
        },
        "secret_sources": [],
        "mount_applied": true,
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "name": "v2-model-tester",
        "tag": "",
        "hash": "70abd6a3afb9b3f1aca5ae08f168e1917fdf2328",
        "project": "sk-project-admin",
        "labels": {
          "author": "yaronh"
        },
        "categories": [
          "model-testing",
          "machine-learning"
        ],
        "updated": "2021-08-30T05:23:33.290388+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "model_server_tester",
        "entry_points": {
          "model_server_tester": {
            "name": "model_server_tester",
            "doc": "Test a model server",
            "parameters": [
              {
                "name": "context",
                "default": ""
              },
              {
                "name": "table",
                "type": "DataItem",
                "doc": "csv/parquet table with test data",
                "default": ""
              },
              {
                "name": "addr",
                "type": "str",
                "doc": "function address/url",
                "default": ""
              },
              {
                "name": "label_column",
                "type": "str",
                "doc": "name of the label column in table",
                "default": "label"
              },
              {
                "name": "model",
                "type": "str",
                "doc": "tested model name",
                "default": ""
              },
              {
                "name": "match_err",
                "type": "bool",
                "doc": "raise error on validation (require proper test set)",
                "default": false
              },
              {
                "name": "rows",
                "type": "int",
                "doc": "number of rows to use from test set",
                "default": 20
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 13
          }
        },
        "description": "test v2 model servers",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG9zCmltcG9ydCBwYW5kYXMgYXMgcGQKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBqc29uCmltcG9ydCBudW1weSBhcyBucApmcm9tIGRhdGV0aW1lIGltcG9ydCBkYXRldGltZQpmcm9tIG1scnVuLmRhdGFzdG9yZSBpbXBvcnQgRGF0YUl0ZW0KZnJvbSBtbHJ1bi5hcnRpZmFjdHMgaW1wb3J0IENoYXJ0QXJ0aWZhY3QKCgpkZWYgbW9kZWxfc2VydmVyX3Rlc3RlcigKICAgIGNvbnRleHQsCiAgICB0YWJsZTogRGF0YUl0ZW0sCiAgICBhZGRyOiBzdHIsCiAgICBsYWJlbF9jb2x1bW46IHN0ciA9ICJsYWJlbCIsCiAgICBtb2RlbDogc3RyID0gIiIsCiAgICBtYXRjaF9lcnI6IGJvb2wgPSBGYWxzZSwKICAgIHJvd3M6IGludCA9IDIwLAopOgogICAgIiIiVGVzdCBhIG1vZGVsIHNlcnZlcgoKICAgIDpwYXJhbSB0YWJsZTogICAgICAgICBjc3YvcGFycXVldCB0YWJsZSB3aXRoIHRlc3QgZGF0YQogICAgOnBhcmFtIGFkZHI6ICAgICAgICAgIGZ1bmN0aW9uIGFkZHJlc3MvdXJsCiAgICA6cGFyYW0gbGFiZWxfY29sdW1uOiAgbmFtZSBvZiB0aGUgbGFiZWwgY29sdW1uIGluIHRhYmxlCiAgICA6cGFyYW0gbW9kZWw6ICAgICAgICAgdGVzdGVkIG1vZGVsIG5hbWUKICAgIDpwYXJhbSBtYXRjaF9lcnI6ICAgICByYWlzZSBlcnJvciBvbiB2YWxpZGF0aW9uIChyZXF1aXJlIHByb3BlciB0ZXN0IHNldCkKICAgIDpwYXJhbSByb3dzOiAgICAgICAgICBudW1iZXIgb2Ygcm93cyB0byB1c2UgZnJvbSB0ZXN0IHNldAogICAgIiIiCgogICAgdGFibGUgPSB0YWJsZS5hc19kZigpCgogICAgeV9saXN0ID0gdGFibGUucG9wKGxhYmVsX2NvbHVtbikudmFsdWVzLnRvbGlzdCgpCiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKGYidGVzdGluZyB3aXRoIGRhdGFzZXQgYWdhaW5zdCB7YWRkcn0sIG1vZGVsOiB7bW9kZWx9IikKICAgIGlmIHJvd3MgYW5kIHJvd3MgPCB0YWJsZS5zaGFwZVswXToKICAgICAgICB0YWJsZSA9IHRhYmxlLnNhbXBsZShyb3dzKQoKICAgIGNvdW50ID0gZXJyX2NvdW50ID0gbWF0Y2ggPSAwCiAgICB0aW1lcyA9IFtdCiAgICBmb3IgeCwgeSBpbiB6aXAodGFibGUudmFsdWVzLCB5X2xpc3QpOgogICAgICAgIGNvdW50ICs9IDEKICAgICAgICBldmVudF9kYXRhID0ganNvbi5kdW1wcyh7ImlucHV0cyI6IFt4LnRvbGlzdCgpXX0pCiAgICAgICAgaGFkX2VyciA9IEZhbHNlCiAgICAgICAgdHJ5OgogICAgICAgICAgICBzdGFydCA9IGRhdGV0aW1lLm5vdygpCiAgICAgICAgICAgIHJlc3AgPSByZXF1ZXN0cy5wdXQoZiJ7YWRkcn0vdjIvbW9kZWxzL3ttb2RlbH0vaW5mZXIiLCBqc29uPWV2ZW50X2RhdGEpCiAgICAgICAgICAgIGlmIG5vdCByZXNwLm9rOgogICAgICAgICAgICAgICAgY29udGV4dC5sb2dnZXIuZXJyb3IoZiJiYWQgZnVuY3Rpb24gcmVzcCEhXG57cmVzcC50ZXh0fSIpCiAgICAgICAgICAgICAgICBlcnJfY291bnQgKz0gMQogICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgdGltZXMuYXBwZW5kKChkYXRldGltZS5ub3coKSAtIHN0YXJ0KS5taWNyb3NlY29uZHMpCgogICAgICAgIGV4Y2VwdCBPU0Vycm9yIGFzIGVycjoKICAgICAgICAgICAgY29udGV4dC5sb2dnZXIuZXJyb3IoZiJlcnJvciBpbiByZXF1ZXN0LCBkYXRhOntldmVudF9kYXRhfSwgZXJyb3I6IHtlcnJ9IikKICAgICAgICAgICAgZXJyX2NvdW50ICs9IDEKICAgICAgICAgICAgY29udGludWUKCiAgICAgICAgcmVzcF9kYXRhID0gcmVzcC5qc29uKCkKICAgICAgICBwcmludChyZXNwX2RhdGEpCiAgICAgICAgeV9yZXNwID0gcmVzcF9kYXRhWyJvdXRwdXRzIl1bMF0KICAgICAgICBpZiB5ID09IHlfcmVzcDoKICAgICAgICAgICAgbWF0Y2ggKz0gMQoKICAgIGNvbnRleHQubG9nX3Jlc3VsdCgidG90YWxfdGVzdHMiLCBjb3VudCkKICAgIGNvbnRleHQubG9nX3Jlc3VsdCgiZXJyb3JzIiwgZXJyX2NvdW50KQogICAgY29udGV4dC5sb2dfcmVzdWx0KCJtYXRjaCIsIG1hdGNoKQogICAgaWYgY291bnQgLSBlcnJfY291bnQgPiAwOgogICAgICAgIHRpbWVzX2FyciA9IG5wLmFycmF5KHRpbWVzKQogICAgICAgIGNvbnRleHQubG9nX3Jlc3VsdCgiYXZnX2xhdGVuY3kiLCBpbnQobnAubWVhbih0aW1lc19hcnIpKSkKICAgICAgICBjb250ZXh0LmxvZ19yZXN1bHQoIm1pbl9sYXRlbmN5IiwgaW50KG5wLmFtaW4odGltZXNfYXJyKSkpCiAgICAgICAgY29udGV4dC5sb2dfcmVzdWx0KCJtYXhfbGF0ZW5jeSIsIGludChucC5hbWF4KHRpbWVzX2FycikpKQoKICAgICAgICBjaGFydCA9IENoYXJ0QXJ0aWZhY3QoImxhdGVuY3kiLCBoZWFkZXI9WyJUZXN0IiwgIkxhdGVuY3kgKG1pY3Jvc2VjKSJdKQogICAgICAgIGZvciBpIGluIHJhbmdlKGxlbih0aW1lcykpOgogICAgICAgICAgICBjaGFydC5hZGRfcm93KFtpICsgMSwgaW50KHRpbWVzW2ldKV0pCiAgICAgICAgY29udGV4dC5sb2dfYXJ0aWZhY3QoY2hhcnQpCgogICAgY29udGV4dC5sb2dnZXIuaW5mbygKICAgICAgICBmInJ1biB7Y291bnR9IHRlc3RzLCB7ZXJyX2NvdW50fSBlcnJvcnMgYW5kIHttYXRjaH0gbWF0Y2ggZXhwZWN0ZWQgdmFsdWUiCiAgICApCgogICAgaWYgZXJyX2NvdW50OgogICAgICAgIHJhaXNlIFZhbHVlRXJyb3IoZiJmYWlsZWQgb24ge2Vycl9jb3VudH0gdGVzdHMgb2Yge2NvdW50fSIpCgogICAgaWYgbWF0Y2hfZXJyIGFuZCBtYXRjaCAhPSBjb3VudDoKICAgICAgICByYWlzZSBWYWx1ZUVycm9yKGYib25seSB7bWF0Y2h9IHJlc3VsdHMgbWF0Y2ggb3V0IG9mIHtjb3VudH0iKQo=",
          "commands": []
        },
        "mount_applied": true,
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "v2-model-tester",
        "tag": "latest",
        "hash": "3c9412b49143fe95c05cda087458056aed9f404a",
        "project": "sk-project-admin",
        "labels": {
          "author": "yaronh"
        },
        "categories": [
          "model-testing",
          "machine-learning"
        ],
        "updated": "2021-08-30T05:23:33.454459+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "model_server_tester",
        "entry_points": {
          "model_server_tester": {
            "name": "model_server_tester",
            "doc": "Test a model server",
            "parameters": [
              {
                "name": "context",
                "default": ""
              },
              {
                "name": "table",
                "type": "DataItem",
                "doc": "csv/parquet table with test data",
                "default": ""
              },
              {
                "name": "addr",
                "type": "str",
                "doc": "function address/url",
                "default": ""
              },
              {
                "name": "label_column",
                "type": "str",
                "doc": "name of the label column in table",
                "default": "label"
              },
              {
                "name": "model",
                "type": "str",
                "doc": "tested model name",
                "default": ""
              },
              {
                "name": "match_err",
                "type": "bool",
                "doc": "raise error on validation (require proper test set)",
                "default": false
              },
              {
                "name": "rows",
                "type": "int",
                "doc": "number of rows to use from test set",
                "default": 20
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 13
          }
        },
        "description": "test v2 model servers",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG9zCmltcG9ydCBwYW5kYXMgYXMgcGQKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBqc29uCmltcG9ydCBudW1weSBhcyBucApmcm9tIGRhdGV0aW1lIGltcG9ydCBkYXRldGltZQpmcm9tIG1scnVuLmRhdGFzdG9yZSBpbXBvcnQgRGF0YUl0ZW0KZnJvbSBtbHJ1bi5hcnRpZmFjdHMgaW1wb3J0IENoYXJ0QXJ0aWZhY3QKCgpkZWYgbW9kZWxfc2VydmVyX3Rlc3RlcigKICAgIGNvbnRleHQsCiAgICB0YWJsZTogRGF0YUl0ZW0sCiAgICBhZGRyOiBzdHIsCiAgICBsYWJlbF9jb2x1bW46IHN0ciA9ICJsYWJlbCIsCiAgICBtb2RlbDogc3RyID0gIiIsCiAgICBtYXRjaF9lcnI6IGJvb2wgPSBGYWxzZSwKICAgIHJvd3M6IGludCA9IDIwLAopOgogICAgIiIiVGVzdCBhIG1vZGVsIHNlcnZlcgoKICAgIDpwYXJhbSB0YWJsZTogICAgICAgICBjc3YvcGFycXVldCB0YWJsZSB3aXRoIHRlc3QgZGF0YQogICAgOnBhcmFtIGFkZHI6ICAgICAgICAgIGZ1bmN0aW9uIGFkZHJlc3MvdXJsCiAgICA6cGFyYW0gbGFiZWxfY29sdW1uOiAgbmFtZSBvZiB0aGUgbGFiZWwgY29sdW1uIGluIHRhYmxlCiAgICA6cGFyYW0gbW9kZWw6ICAgICAgICAgdGVzdGVkIG1vZGVsIG5hbWUKICAgIDpwYXJhbSBtYXRjaF9lcnI6ICAgICByYWlzZSBlcnJvciBvbiB2YWxpZGF0aW9uIChyZXF1aXJlIHByb3BlciB0ZXN0IHNldCkKICAgIDpwYXJhbSByb3dzOiAgICAgICAgICBudW1iZXIgb2Ygcm93cyB0byB1c2UgZnJvbSB0ZXN0IHNldAogICAgIiIiCgogICAgdGFibGUgPSB0YWJsZS5hc19kZigpCgogICAgeV9saXN0ID0gdGFibGUucG9wKGxhYmVsX2NvbHVtbikudmFsdWVzLnRvbGlzdCgpCiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKGYidGVzdGluZyB3aXRoIGRhdGFzZXQgYWdhaW5zdCB7YWRkcn0sIG1vZGVsOiB7bW9kZWx9IikKICAgIGlmIHJvd3MgYW5kIHJvd3MgPCB0YWJsZS5zaGFwZVswXToKICAgICAgICB0YWJsZSA9IHRhYmxlLnNhbXBsZShyb3dzKQoKICAgIGNvdW50ID0gZXJyX2NvdW50ID0gbWF0Y2ggPSAwCiAgICB0aW1lcyA9IFtdCiAgICBmb3IgeCwgeSBpbiB6aXAodGFibGUudmFsdWVzLCB5X2xpc3QpOgogICAgICAgIGNvdW50ICs9IDEKICAgICAgICBldmVudF9kYXRhID0ganNvbi5kdW1wcyh7ImlucHV0cyI6IFt4LnRvbGlzdCgpXX0pCiAgICAgICAgaGFkX2VyciA9IEZhbHNlCiAgICAgICAgdHJ5OgogICAgICAgICAgICBzdGFydCA9IGRhdGV0aW1lLm5vdygpCiAgICAgICAgICAgIHJlc3AgPSByZXF1ZXN0cy5wdXQoZiJ7YWRkcn0vdjIvbW9kZWxzL3ttb2RlbH0vaW5mZXIiLCBqc29uPWV2ZW50X2RhdGEpCiAgICAgICAgICAgIGlmIG5vdCByZXNwLm9rOgogICAgICAgICAgICAgICAgY29udGV4dC5sb2dnZXIuZXJyb3IoZiJiYWQgZnVuY3Rpb24gcmVzcCEhXG57cmVzcC50ZXh0fSIpCiAgICAgICAgICAgICAgICBlcnJfY291bnQgKz0gMQogICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgdGltZXMuYXBwZW5kKChkYXRldGltZS5ub3coKSAtIHN0YXJ0KS5taWNyb3NlY29uZHMpCgogICAgICAgIGV4Y2VwdCBPU0Vycm9yIGFzIGVycjoKICAgICAgICAgICAgY29udGV4dC5sb2dnZXIuZXJyb3IoZiJlcnJvciBpbiByZXF1ZXN0LCBkYXRhOntldmVudF9kYXRhfSwgZXJyb3I6IHtlcnJ9IikKICAgICAgICAgICAgZXJyX2NvdW50ICs9IDEKICAgICAgICAgICAgY29udGludWUKCiAgICAgICAgcmVzcF9kYXRhID0gcmVzcC5qc29uKCkKICAgICAgICBwcmludChyZXNwX2RhdGEpCiAgICAgICAgeV9yZXNwID0gcmVzcF9kYXRhWyJvdXRwdXRzIl1bMF0KICAgICAgICBpZiB5ID09IHlfcmVzcDoKICAgICAgICAgICAgbWF0Y2ggKz0gMQoKICAgIGNvbnRleHQubG9nX3Jlc3VsdCgidG90YWxfdGVzdHMiLCBjb3VudCkKICAgIGNvbnRleHQubG9nX3Jlc3VsdCgiZXJyb3JzIiwgZXJyX2NvdW50KQogICAgY29udGV4dC5sb2dfcmVzdWx0KCJtYXRjaCIsIG1hdGNoKQogICAgaWYgY291bnQgLSBlcnJfY291bnQgPiAwOgogICAgICAgIHRpbWVzX2FyciA9IG5wLmFycmF5KHRpbWVzKQogICAgICAgIGNvbnRleHQubG9nX3Jlc3VsdCgiYXZnX2xhdGVuY3kiLCBpbnQobnAubWVhbih0aW1lc19hcnIpKSkKICAgICAgICBjb250ZXh0LmxvZ19yZXN1bHQoIm1pbl9sYXRlbmN5IiwgaW50KG5wLmFtaW4odGltZXNfYXJyKSkpCiAgICAgICAgY29udGV4dC5sb2dfcmVzdWx0KCJtYXhfbGF0ZW5jeSIsIGludChucC5hbWF4KHRpbWVzX2FycikpKQoKICAgICAgICBjaGFydCA9IENoYXJ0QXJ0aWZhY3QoImxhdGVuY3kiLCBoZWFkZXI9WyJUZXN0IiwgIkxhdGVuY3kgKG1pY3Jvc2VjKSJdKQogICAgICAgIGZvciBpIGluIHJhbmdlKGxlbih0aW1lcykpOgogICAgICAgICAgICBjaGFydC5hZGRfcm93KFtpICsgMSwgaW50KHRpbWVzW2ldKV0pCiAgICAgICAgY29udGV4dC5sb2dfYXJ0aWZhY3QoY2hhcnQpCgogICAgY29udGV4dC5sb2dnZXIuaW5mbygKICAgICAgICBmInJ1biB7Y291bnR9IHRlc3RzLCB7ZXJyX2NvdW50fSBlcnJvcnMgYW5kIHttYXRjaH0gbWF0Y2ggZXhwZWN0ZWQgdmFsdWUiCiAgICApCgogICAgaWYgZXJyX2NvdW50OgogICAgICAgIHJhaXNlIFZhbHVlRXJyb3IoZiJmYWlsZWQgb24ge2Vycl9jb3VudH0gdGVzdHMgb2Yge2NvdW50fSIpCgogICAgaWYgbWF0Y2hfZXJyIGFuZCBtYXRjaCAhPSBjb3VudDoKICAgICAgICByYWlzZSBWYWx1ZUVycm9yKGYib25seSB7bWF0Y2h9IHJlc3VsdHMgbWF0Y2ggb3V0IG9mIHtjb3VudH0iKQo=",
          "commands": []
        },
        "mount_applied": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": {}
    },
    {
      "kind": "job",
      "metadata": {
        "name": "describe",
        "tag": "latest",
        "hash": "81d6d9952bd29d20e508c7af11b813feb1834796",
        "project": "sk-project-admin",
        "labels": {
          "author": "Iguazio"
        },
        "categories": [
          "data-analysis"
        ],
        "updated": "2021-08-31T12:27:38.767949+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "name": "v3io",
            "mountPath": "/v3io"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "summarize",
        "entry_points": {
          "summarize": {
            "name": "summarize",
            "doc": "Summarize a table",
            "parameters": [
              {
                "name": "context",
                "type": "MLClientCtx",
                "doc": "the function context",
                "default": ""
              },
              {
                "name": "table",
                "type": "DataItem",
                "doc": "MLRun input pointing to pandas dataframe (csv/parquet file path)",
                "default": ""
              },
              {
                "name": "label_column",
                "type": "str",
                "doc": "ground truth column label",
                "default": null
              },
              {
                "name": "class_labels",
                "type": "List[str]",
                "doc": "label for each class in tables and plots",
                "default": []
              },
              {
                "name": "plot_hist",
                "type": "bool",
                "doc": "(True) set this to False for large tables",
                "default": true
              },
              {
                "name": "plots_dest",
                "type": "str",
                "doc": "destination folder of summary plots (relative to artifact_path)",
                "default": "plots"
              },
              {
                "name": "update_dataset",
                "doc": "when the table is a registered dataset update the charts in-place",
                "default": false
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 23
          }
        },
        "description": "describe and visualizes dataset stats",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHdhcm5pbmdzCgp3YXJuaW5ncy5zaW1wbGVmaWx0ZXIoYWN0aW9uPSJpZ25vcmUiLCBjYXRlZ29yeT1GdXR1cmVXYXJuaW5nKQoKaW1wb3J0IG9zCmltcG9ydCBudW1weSBhcyBucAppbXBvcnQgcGFuZGFzIGFzIHBkCmltcG9ydCBtYXRwbG90bGliLnB5cGxvdCBhcyBwbHQKaW1wb3J0IHNlYWJvcm4gYXMgc25zCgpmcm9tIG1scnVuLmV4ZWN1dGlvbiBpbXBvcnQgTUxDbGllbnRDdHgKZnJvbSBtbHJ1bi5kYXRhc3RvcmUgaW1wb3J0IERhdGFJdGVtCmZyb20gbWxydW4uYXJ0aWZhY3RzIGltcG9ydCBQbG90QXJ0aWZhY3QsIFRhYmxlQXJ0aWZhY3QKZnJvbSBtbHJ1bi5tbHV0aWxzLnBsb3RzIGltcG9ydCBnY2ZfY2xlYXIKCmZyb20gdHlwaW5nIGltcG9ydCBMaXN0CgpwZC5zZXRfb3B0aW9uKCJkaXNwbGF5LmZsb2F0X2Zvcm1hdCIsIGxhbWJkYSB4OiAiJS4yZiIgJSB4KQoKCmRlZiBzdW1tYXJpemUoCiAgICBjb250ZXh0OiBNTENsaWVudEN0eCwKICAgIHRhYmxlOiBEYXRhSXRlbSwKICAgIGxhYmVsX2NvbHVtbjogc3RyID0gTm9uZSwKICAgIGNsYXNzX2xhYmVsczogTGlzdFtzdHJdID0gW10sCiAgICBwbG90X2hpc3Q6IGJvb2wgPSBUcnVlLAogICAgcGxvdHNfZGVzdDogc3RyID0gInBsb3RzIiwKICAgIHVwZGF0ZV9kYXRhc2V0PUZhbHNlLAopIC0+IE5vbmU6CiAgICAiIiJTdW1tYXJpemUgYSB0YWJsZQoKICAgIDpwYXJhbSBjb250ZXh0OiAgICAgICAgIHRoZSBmdW5jdGlvbiBjb250ZXh0CiAgICA6cGFyYW0gdGFibGU6ICAgICAgICAgICBNTFJ1biBpbnB1dCBwb2ludGluZyB0byBwYW5kYXMgZGF0YWZyYW1lIChjc3YvcGFycXVldCBmaWxlIHBhdGgpCiAgICA6cGFyYW0gbGFiZWxfY29sdW1uOiAgICBncm91bmQgdHJ1dGggY29sdW1uIGxhYmVsCiAgICA6cGFyYW0gY2xhc3NfbGFiZWxzOiAgICBsYWJlbCBmb3IgZWFjaCBjbGFzcyBpbiB0YWJsZXMgYW5kIHBsb3RzCiAgICA6cGFyYW0gcGxvdF9oaXN0OiAgICAgICAoVHJ1ZSkgc2V0IHRoaXMgdG8gRmFsc2UgZm9yIGxhcmdlIHRhYmxlcwogICAgOnBhcmFtIHBsb3RzX2Rlc3Q6ICAgICAgZGVzdGluYXRpb24gZm9sZGVyIG9mIHN1bW1hcnkgcGxvdHMgKHJlbGF0aXZlIHRvIGFydGlmYWN0X3BhdGgpCiAgICA6cGFyYW0gdXBkYXRlX2RhdGFzZXQ6ICB3aGVuIHRoZSB0YWJsZSBpcyBhIHJlZ2lzdGVyZWQgZGF0YXNldCB1cGRhdGUgdGhlIGNoYXJ0cyBpbi1wbGFjZQogICAgIiIiCiAgICBkZiA9IHRhYmxlLmFzX2RmKCkKICAgIGhlYWRlciA9IGRmLmNvbHVtbnMudmFsdWVzCiAgICBleHRyYV9kYXRhID0ge30KCiAgICB0cnk6CiAgICAgICAgZ2NmX2NsZWFyKHBsdCkKICAgICAgICBzbnNwbHQgPSBzbnMucGFpcnBsb3QoZGYsIGh1ZT1sYWJlbF9jb2x1bW4pICAjICwgZGlhZ19rd3M9eyJidyI6IDEuNX0pCiAgICAgICAgZXh0cmFfZGF0YVsiaGlzdG9ncmFtcyJdID0gY29udGV4dC5sb2dfYXJ0aWZhY3QoCiAgICAgICAgICAgIFBsb3RBcnRpZmFjdCgiaGlzdG9ncmFtcyIsIGJvZHk9cGx0LmdjZigpKSwKICAgICAgICAgICAgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS9oaXN0Lmh0bWwiLAogICAgICAgICAgICBkYl9rZXk9RmFsc2UsCiAgICAgICAgKQogICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgIGNvbnRleHQubG9nZ2VyLmVycm9yKGYiRmFpbGVkIHRvIGNyZWF0ZSBwYWlycGxvdCBoaXN0b2dyYW1zIGR1ZSB0bzoge2V9IikKCiAgICB0cnk6CiAgICAgICAgZ2NmX2NsZWFyKHBsdCkKICAgICAgICBwbG90X2NvbHMgPSAzCiAgICAgICAgcGxvdF9yb3dzID0gaW50KChsZW4oaGVhZGVyKSAtIDEpIC8gcGxvdF9jb2xzKSArIDEKICAgICAgICBmaWcsIGF4ID0gcGx0LnN1YnBsb3RzKHBsb3Rfcm93cywgcGxvdF9jb2xzLCBmaWdzaXplPSgxNSwgNCkpCiAgICAgICAgZmlnLnRpZ2h0X2xheW91dChwYWQ9Mi4wKQogICAgICAgIGZvciBpIGluIHJhbmdlKHBsb3Rfcm93cyAqIHBsb3RfY29scyk6CiAgICAgICAgICAgIGlmIGkgPCBsZW4oaGVhZGVyKToKICAgICAgICAgICAgICAgIHNucy52aW9saW5wbG90KAogICAgICAgICAgICAgICAgICAgIHg9ZGZbaGVhZGVyW2ldXSwKICAgICAgICAgICAgICAgICAgICBheD1heFtpbnQoaSAvIHBsb3RfY29scyldW2kgJSBwbG90X2NvbHNdLAogICAgICAgICAgICAgICAgICAgIG9yaWVudD0iaCIsCiAgICAgICAgICAgICAgICAgICAgd2lkdGg9MC43LAogICAgICAgICAgICAgICAgICAgIGlubmVyPSJxdWFydGlsZSIsCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBmaWcuZGVsYXhlcyhheFtpbnQoaSAvIHBsb3RfY29scyldW2kgJSBwbG90X2NvbHNdKQogICAgICAgICAgICBpICs9IDEKICAgICAgICBleHRyYV9kYXRhWyJ2aW9saW4iXSA9IGNvbnRleHQubG9nX2FydGlmYWN0KAogICAgICAgICAgICBQbG90QXJ0aWZhY3QoInZpb2xpbiIsIGJvZHk9cGx0LmdjZigpLCB0aXRsZT0iVmlvbGluIFBsb3QiKSwKICAgICAgICAgICAgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS92aW9saW4uaHRtbCIsCiAgICAgICAgICAgIGRiX2tleT1GYWxzZSwKICAgICAgICApCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgY29udGV4dC5sb2dnZXIud2FybihmIkZhaWxlZCB0byBjcmVhdGUgdmlvbGluIGRpc3RyaWJ1dGlvbiBwbG90cyBkdWUgdG86IHtlfSIpCgogICAgaWYgbGFiZWxfY29sdW1uOgogICAgICAgIGxhYmVscyA9IGRmLnBvcChsYWJlbF9jb2x1bW4pCiAgICAgICAgaW1idGFibGUgPSBsYWJlbHMudmFsdWVfY291bnRzKG5vcm1hbGl6ZT1UcnVlKS5zb3J0X2luZGV4KCkKICAgICAgICB0cnk6CiAgICAgICAgICAgIGdjZl9jbGVhcihwbHQpCiAgICAgICAgICAgIGJhbGFuY2ViYXIgPSBpbWJ0YWJsZS5wbG90KGtpbmQ9ImJhciIsIHRpdGxlPSJjbGFzcyBpbWJhbGFuY2UgLSBsYWJlbHMiKQogICAgICAgICAgICBiYWxhbmNlYmFyLnNldF94bGFiZWwoImNsYXNzIikKICAgICAgICAgICAgYmFsYW5jZWJhci5zZXRfeWxhYmVsKCJwcm9wb3J0aW9uIG9mIHRvdGFsIikKICAgICAgICAgICAgZXh0cmFfZGF0YVsiaW1iYWxhbmNlIl0gPSBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICAgICAgICAgIFBsb3RBcnRpZmFjdCgiaW1iYWxhbmNlIiwgYm9keT1wbHQuZ2NmKCkpLAogICAgICAgICAgICAgICAgbG9jYWxfcGF0aD1mIntwbG90c19kZXN0fS9pbWJhbGFuY2UuaHRtbCIsCiAgICAgICAgICAgICkKICAgICAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgICAgIGNvbnRleHQubG9nZ2VyLndhcm4oZiJGYWlsZWQgdG8gY3JlYXRlIGNsYXNzIGltYmFsYW5jZSBwbG90IGR1ZSB0bzoge2V9IikKICAgICAgICBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICAgICAgVGFibGVBcnRpZmFjdCgKICAgICAgICAgICAgICAgICJpbWJhbGFuY2Utd2VpZ2h0cy12ZWMiLCBkZj1wZC5EYXRhRnJhbWUoeyJ3ZWlnaHRzIjogaW1idGFibGV9KQogICAgICAgICAgICApLAogICAgICAgICAgICBsb2NhbF9wYXRoPWYie3Bsb3RzX2Rlc3R9L2ltYmFsYW5jZS13ZWlnaHRzLXZlYy5jc3YiLAogICAgICAgICAgICBkYl9rZXk9RmFsc2UsCiAgICAgICAgKQoKICAgIHRibGNvcnIgPSBkZi5jb3JyKCkKICAgIG1hc2sgPSBucC56ZXJvc19saWtlKHRibGNvcnIsIGR0eXBlPW5wLmJvb2wpCiAgICBtYXNrW25wLnRyaXVfaW5kaWNlc19mcm9tKG1hc2spXSA9IFRydWUKCiAgICBkZmNvcnIgPSBwZC5EYXRhRnJhbWUoZGF0YT10Ymxjb3JyLCBjb2x1bW5zPWhlYWRlciwgaW5kZXg9aGVhZGVyKQogICAgZGZjb3JyID0gZGZjb3JyW25wLmFyYW5nZShkZmNvcnIuc2hhcGVbMF0pWzosIE5vbmVdID4gbnAuYXJhbmdlKGRmY29yci5zaGFwZVsxXSldCiAgICBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICBUYWJsZUFydGlmYWN0KCJjb3JyZWxhdGlvbi1tYXRyaXgiLCBkZj10Ymxjb3JyLCB2aXNpYmxlPVRydWUpLAogICAgICAgIGxvY2FsX3BhdGg9ZiJ7cGxvdHNfZGVzdH0vY29ycmVsYXRpb24tbWF0cml4LmNzdiIsCiAgICAgICAgZGJfa2V5PUZhbHNlLAogICAgKQoKICAgIHRyeToKICAgICAgICBnY2ZfY2xlYXIocGx0KQogICAgICAgIGF4ID0gcGx0LmF4ZXMoKQogICAgICAgIHNucy5oZWF0bWFwKHRibGNvcnIsIGF4PWF4LCBtYXNrPW1hc2ssIGFubm90PUZhbHNlLCBjbWFwPXBsdC5jbS5SZWRzKQogICAgICAgIGF4LnNldF90aXRsZSgiZmVhdHVyZXMgY29ycmVsYXRpb24iKQogICAgICAgIGV4dHJhX2RhdGFbImNvcnJlbGF0aW9uIl0gPSBjb250ZXh0LmxvZ19hcnRpZmFjdCgKICAgICAgICAgICAgUGxvdEFydGlmYWN0KCJjb3JyZWxhdGlvbiIsIGJvZHk9cGx0LmdjZigpLCB0aXRsZT0iQ29ycmVsYXRpb24gTWF0cml4IiksCiAgICAgICAgICAgIGxvY2FsX3BhdGg9ZiJ7cGxvdHNfZGVzdH0vY29yci5odG1sIiwKICAgICAgICAgICAgZGJfa2V5PUZhbHNlLAogICAgICAgICkKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICBjb250ZXh0LmxvZ2dlci53YXJuKGYiRmFpbGVkIHRvIGNyZWF0ZSBmZWF0dXJlcyBjb3JyZWxhdGlvbiBwbG90IGR1ZSB0bzoge2V9IikKCiAgICBnY2ZfY2xlYXIocGx0KQogICAgaWYgdXBkYXRlX2RhdGFzZXQgYW5kIHRhYmxlLm1ldGEgYW5kIHRhYmxlLm1ldGEua2luZCA9PSAiZGF0YXNldCI6CiAgICAgICAgZnJvbSBtbHJ1bi5hcnRpZmFjdHMgaW1wb3J0IHVwZGF0ZV9kYXRhc2V0X21ldGEKCiAgICAgICAgdXBkYXRlX2RhdGFzZXRfbWV0YSh0YWJsZS5tZXRhLCBleHRyYV9kYXRhPWV4dHJhX2RhdGEpCg==",
          "commands": []
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": {}
    },
    {
      "kind": "job",
      "metadata": {
        "name": "sklearn-classifier",
        "tag": "",
        "hash": "26080d76ace3cac7933c89acc754abf326fb270f",
        "project": "sk-project-admin",
        "labels": {
          "author": "yjb",
          "framework": "sklearn"
        },
        "categories": [
          "machine-learning",
          "model-training"
        ],
        "updated": "2021-09-01T00:00:00.038092+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "name": "v3io",
            "mountPath": "/v3io"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "default_handler": "train_model",
        "entry_points": {
          "train_model": {
            "name": "train_model",
            "doc": "train a classifier\n\nAn optional cutom model evaluator can be supplied that should have the signature:\n`my_custom_evaluator(context, xvalid, yvalid, model)` and return a dictionary of\nscalar \"results\", a \"plots\" keys with a list of PlotArtifacts, and\nand \"tables\" key containing a returned list of TableArtifacts.",
            "parameters": [
              {
                "name": "context",
                "type": "MLClientCtx",
                "doc": "the function context",
                "default": ""
              },
              {
                "name": "model_pkg_class",
                "type": "str",
                "doc": "the model to train, e.g, \"sklearn.neural_networks.MLPClassifier\", or json model config",
                "default": ""
              },
              {
                "name": "dataset",
                "type": "DataItem",
                "doc": "(\"data\") name of raw data file",
                "default": ""
              },
              {
                "name": "label_column",
                "type": "str",
                "doc": "ground-truth (y) labels",
                "default": "labels"
              },
              {
                "name": "encode_cols",
                "type": "List[str]",
                "doc": "dictionary of names and prefixes for columns that are to hot be encoded.",
                "default": []
              },
              {
                "name": "sample",
                "type": "int",
                "doc": "Selects the first n rows, or select a sample starting from the first. If negative <-1, select a random sample",
                "default": "<_ast.USub object at 0x7fd86dbc17b8>"
              },
              {
                "name": "test_size",
                "type": "float",
                "doc": "(0.05) test set size",
                "default": 0.3
              },
              {
                "name": "train_val_split",
                "type": "float",
                "doc": "(0.75) Once the test set has been removed the training set gets this proportion.",
                "default": 0.7
              },
              {
                "name": "test_set_key",
                "type": "str",
                "doc": "key of held out data in artifact store",
                "default": "test_set"
              },
              {
                "name": "model_evaluator",
                "doc": "(None) a custom model evaluator can be specified",
                "default": null
              },
              {
                "name": "models_dest",
                "type": "str",
                "doc": "(\"\") models subfolder on artifact path",
                "default": ""
              },
              {
                "name": "plots_dest",
                "type": "str",
                "doc": "plot subfolder on artifact path",
                "default": "plots"
              },
              {
                "name": "file_ext",
                "type": "str",
                "doc": "(\"parquet\") format for test_set_key hold out data",
                "default": "parquet"
              },
              {
                "name": "model_pkg_file",
                "type": "str",
                "default": ""
              },
              {
                "name": "random_state",
                "type": "int",
                "doc": "(1) sklearn rng seed",
                "default": 1
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 20
          }
        },
        "description": "train any classifier using scikit-learn's API",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHdhcm5pbmdzCgp3YXJuaW5ncy5zaW1wbGVmaWx0ZXIoYWN0aW9uPSJpZ25vcmUiLCBjYXRlZ29yeT1GdXR1cmVXYXJuaW5nKQoKaW1wb3J0IG9zCgpmcm9tIGNsb3VkcGlja2xlIGltcG9ydCBkdW1wcwppbXBvcnQgcGFuZGFzIGFzIHBkCmZyb20gdHlwaW5nIGltcG9ydCBMaXN0CmZyb20gbWxydW4uZXhlY3V0aW9uIGltcG9ydCBNTENsaWVudEN0eApmcm9tIG1scnVuLmRhdGFzdG9yZSBpbXBvcnQgRGF0YUl0ZW0KZnJvbSBtbHJ1bi5tbHV0aWxzLmRhdGEgaW1wb3J0IGdldF9zYW1wbGUsIGdldF9zcGxpdHMKZnJvbSBtbHJ1bi5tbHV0aWxzLm1vZGVscyBpbXBvcnQgZ2VuX3NrbGVhcm5fbW9kZWwsIGV2YWxfbW9kZWxfdjIKZnJvbSBtbHJ1bi51dGlscy5oZWxwZXJzIGltcG9ydCBjcmVhdGVfY2xhc3MKZnJvbSBtbHJ1bi5hcnRpZmFjdHMubW9kZWwgaW1wb3J0IE1vZGVsQXJ0aWZhY3QKCgpkZWYgdHJhaW5fbW9kZWwoCiAgICBjb250ZXh0OiBNTENsaWVudEN0eCwKICAgIG1vZGVsX3BrZ19jbGFzczogc3RyLAogICAgZGF0YXNldDogRGF0YUl0ZW0sCiAgICBsYWJlbF9jb2x1bW46IHN0ciA9ICJsYWJlbHMiLAogICAgZW5jb2RlX2NvbHM6IExpc3Rbc3RyXSA9IFtdLAogICAgc2FtcGxlOiBpbnQgPSAtMSwKICAgIHRlc3Rfc2l6ZTogZmxvYXQgPSAwLjMwLAogICAgdHJhaW5fdmFsX3NwbGl0OiBmbG9hdCA9IDAuNzAsCiAgICB0ZXN0X3NldF9rZXk6IHN0ciA9ICJ0ZXN0X3NldCIsCiAgICBtb2RlbF9ldmFsdWF0b3I9Tm9uZSwKICAgIG1vZGVsc19kZXN0OiBzdHIgPSAiIiwKICAgIHBsb3RzX2Rlc3Q6IHN0ciA9ICJwbG90cyIsCiAgICBmaWxlX2V4dDogc3RyID0gInBhcnF1ZXQiLAogICAgbW9kZWxfcGtnX2ZpbGU6IHN0ciA9ICIiLAogICAgcmFuZG9tX3N0YXRlOiBpbnQgPSAxLAopIC0+IE5vbmU6CiAgICAiIiJ0cmFpbiBhIGNsYXNzaWZpZXIKCiAgICBBbiBvcHRpb25hbCBjdXRvbSBtb2RlbCBldmFsdWF0b3IgY2FuIGJlIHN1cHBsaWVkIHRoYXQgc2hvdWxkIGhhdmUgdGhlIHNpZ25hdHVyZToKICAgIGBteV9jdXN0b21fZXZhbHVhdG9yKGNvbnRleHQsIHh2YWxpZCwgeXZhbGlkLCBtb2RlbClgIGFuZCByZXR1cm4gYSBkaWN0aW9uYXJ5IG9mCiAgICBzY2FsYXIgInJlc3VsdHMiLCBhICJwbG90cyIga2V5cyB3aXRoIGEgbGlzdCBvZiBQbG90QXJ0aWZhY3RzLCBhbmQKICAgIGFuZCAidGFibGVzIiBrZXkgY29udGFpbmluZyBhIHJldHVybmVkIGxpc3Qgb2YgVGFibGVBcnRpZmFjdHMuCgogICAgOnBhcmFtIGNvbnRleHQ6ICAgICAgICAgICB0aGUgZnVuY3Rpb24gY29udGV4dAogICAgOnBhcmFtIG1vZGVsX3BrZ19jbGFzczogICB0aGUgbW9kZWwgdG8gdHJhaW4sIGUuZywgInNrbGVhcm4ubmV1cmFsX25ldHdvcmtzLk1MUENsYXNzaWZpZXIiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvciBqc29uIG1vZGVsIGNvbmZpZwogICAgOnBhcmFtIGRhdGFzZXQ6ICAgICAgICAgICAoImRhdGEiKSBuYW1lIG9mIHJhdyBkYXRhIGZpbGUKICAgIDpwYXJhbSBsYWJlbF9jb2x1bW46ICAgICAgZ3JvdW5kLXRydXRoICh5KSBsYWJlbHMKICAgIDpwYXJhbSBlbmNvZGVfY29sczogICAgICAgZGljdGlvbmFyeSBvZiBuYW1lcyBhbmQgcHJlZml4ZXMgZm9yIGNvbHVtbnMgdGhhdCBhcmUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gaG90IGJlIGVuY29kZWQuCiAgICA6cGFyYW0gc2FtcGxlOiAgICAgICAgICAgIFNlbGVjdHMgdGhlIGZpcnN0IG4gcm93cywgb3Igc2VsZWN0IGEgc2FtcGxlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0aW5nIGZyb20gdGhlIGZpcnN0LiBJZiBuZWdhdGl2ZSA8LTEsIHNlbGVjdAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhIHJhbmRvbSBzYW1wbGUKICAgIDpwYXJhbSB0ZXN0X3NpemU6ICAgICAgICAgKDAuMDUpIHRlc3Qgc2V0IHNpemUKICAgIDpwYXJhbSB0cmFpbl92YWxfc3BsaXQ6ICAgKDAuNzUpIE9uY2UgdGhlIHRlc3Qgc2V0IGhhcyBiZWVuIHJlbW92ZWQgdGhlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYWluaW5nIHNldCBnZXRzIHRoaXMgcHJvcG9ydGlvbi4KICAgIDpwYXJhbSB0ZXN0X3NldF9rZXk6ICAgICAga2V5IG9mIGhlbGQgb3V0IGRhdGEgaW4gYXJ0aWZhY3Qgc3RvcmUKICAgIDpwYXJhbSBtb2RlbF9ldmFsdWF0b3I6ICAgKE5vbmUpIGEgY3VzdG9tIG1vZGVsIGV2YWx1YXRvciBjYW4gYmUgc3BlY2lmaWVkCiAgICA6cGFyYW0gbW9kZWxzX2Rlc3Q6ICAgICAgICgiIikgbW9kZWxzIHN1YmZvbGRlciBvbiBhcnRpZmFjdCBwYXRoCiAgICA6cGFyYW0gcGxvdHNfZGVzdDogICAgICAgIHBsb3Qgc3ViZm9sZGVyIG9uIGFydGlmYWN0IHBhdGgKICAgIDpwYXJhbSBmaWxlX2V4dDogICAgICAgICAgKCJwYXJxdWV0IikgZm9ybWF0IGZvciB0ZXN0X3NldF9rZXkgaG9sZCBvdXQgZGF0YQogICAgOnBhcmFtIHJhbmRvbV9zdGF0ZTogICAgICAoMSkgc2tsZWFybiBybmcgc2VlZAoKICAgICIiIgogICAgbW9kZWxzX2Rlc3QgPSBtb2RlbHNfZGVzdCBvciAibW9kZWwiCgogICAgcmF3LCBsYWJlbHMsIGhlYWRlciA9IGdldF9zYW1wbGUoZGF0YXNldCwgc2FtcGxlLCBsYWJlbF9jb2x1bW4pCgogICAgaWYgZW5jb2RlX2NvbHM6CiAgICAgICAgcmF3ID0gcGQuZ2V0X2R1bW1pZXMoCiAgICAgICAgICAgIHJhdywKICAgICAgICAgICAgY29sdW1ucz1saXN0KGVuY29kZV9jb2xzLmtleXMoKSksCiAgICAgICAgICAgIHByZWZpeD1saXN0KGVuY29kZV9jb2xzLnZhbHVlcygpKSwKICAgICAgICAgICAgZHJvcF9maXJzdD1UcnVlLAogICAgICAgICkKCiAgICAoeHRyYWluLCB5dHJhaW4pLCAoeHZhbGlkLCB5dmFsaWQpLCAoeHRlc3QsIHl0ZXN0KSA9IGdldF9zcGxpdHMoCiAgICAgICAgcmF3LCBsYWJlbHMsIDMsIHRlc3Rfc2l6ZSwgMSAtIHRyYWluX3ZhbF9zcGxpdCwgcmFuZG9tX3N0YXRlCiAgICApCgogICAgdGVzdF9zZXQgPSBwZC5jb25jYXQoW3h0ZXN0LCB5dGVzdC50b19mcmFtZSgpXSwgYXhpcz0xKQogICAgY29udGV4dC5sb2dfZGF0YXNldCgKICAgICAgICB0ZXN0X3NldF9rZXksCiAgICAgICAgZGY9dGVzdF9zZXQsCiAgICAgICAgZm9ybWF0PWZpbGVfZXh0LAogICAgICAgIGluZGV4PUZhbHNlLAogICAgICAgIGxhYmVscz17ImRhdGEtdHlwZSI6ICJoZWxkLW91dCJ9LAogICAgICAgIGFydGlmYWN0X3BhdGg9Y29udGV4dC5hcnRpZmFjdF9zdWJwYXRoKCJkYXRhIiksCiAgICApCgogICAgbW9kZWxfY29uZmlnID0gZ2VuX3NrbGVhcm5fbW9kZWwobW9kZWxfcGtnX2NsYXNzLCBjb250ZXh0LnBhcmFtZXRlcnMuaXRlbXMoKSkKCiAgICBtb2RlbF9jb25maWdbIkZJVCJdLnVwZGF0ZSh7IlgiOiB4dHJhaW4sICJ5IjogeXRyYWluLnZhbHVlc30pCgogICAgQ2xhc3NpZmllckNsYXNzID0gY3JlYXRlX2NsYXNzKG1vZGVsX2NvbmZpZ1siTUVUQSJdWyJjbGFzcyJdKQoKICAgIG1vZGVsID0gQ2xhc3NpZmllckNsYXNzKCoqbW9kZWxfY29uZmlnWyJDTEFTUyJdKQoKICAgIG1vZGVsLmZpdCgqKm1vZGVsX2NvbmZpZ1siRklUIl0pCgogICAgYXJ0aWZhY3RfcGF0aCA9IGNvbnRleHQuYXJ0aWZhY3Rfc3VicGF0aChtb2RlbHNfZGVzdCkKICAgIHBsb3RzX3BhdGggPSBjb250ZXh0LmFydGlmYWN0X3N1YnBhdGgobW9kZWxzX2Rlc3QsIHBsb3RzX2Rlc3QpCiAgICBpZiBtb2RlbF9ldmFsdWF0b3I6CiAgICAgICAgZXZhbF9tZXRyaWNzID0gbW9kZWxfZXZhbHVhdG9yKAogICAgICAgICAgICBjb250ZXh0LCB4dmFsaWQsIHl2YWxpZCwgbW9kZWwsIHBsb3RzX2FydGlmYWN0X3BhdGg9cGxvdHNfcGF0aAogICAgICAgICkKICAgIGVsc2U6CiAgICAgICAgZXZhbF9tZXRyaWNzID0gZXZhbF9tb2RlbF92MigKICAgICAgICAgICAgY29udGV4dCwgeHZhbGlkLCB5dmFsaWQsIG1vZGVsLCBwbG90c19hcnRpZmFjdF9wYXRoPXBsb3RzX3BhdGgKICAgICAgICApCgogICAga3dhcmdzID0ge30KICAgIGlmICJhbGdvcml0aG0iIGluIE1vZGVsQXJ0aWZhY3QuX2RpY3RfZmllbGRzOgogICAgICAgIGt3YXJnc1sidHJhaW5pbmdfc2V0Il0gPSB0ZXN0X3NldAogICAgICAgIGt3YXJnc1sibGFiZWxfY29sdW1uIl0gPSBsYWJlbF9jb2x1bW4KICAgICAgICBzcGxpdCA9IG1vZGVsX3BrZ19jbGFzcy5yc3BsaXQoIi4iLCAxKQogICAgICAgIGlmIHNwbGl0IGFuZCBsZW4oc3BsaXQpID09IDI6CiAgICAgICAgICAgIGt3YXJnc1siYWxnb3JpdGhtIl0gPSBzcGxpdFsxXQoKICAgICAgICBpZiBkYXRhc2V0Lm1ldGEgYW5kIGRhdGFzZXQubWV0YS5raW5kID09ICJGZWF0dXJlVmVjdG9yIjoKICAgICAgICAgICAga3dhcmdzWyJmZWF0dXJlX3ZlY3RvciJdID0gZGF0YXNldC5tZXRhLnVyaQoKICAgIGNvbnRleHQuc2V0X2xhYmVsKCJjbGFzcyIsIG1vZGVsX3BrZ19jbGFzcykKICAgIGNvbnRleHQubG9nX21vZGVsKAogICAgICAgICJtb2RlbCIsCiAgICAgICAgYm9keT1kdW1wcyhtb2RlbCksCiAgICAgICAgYXJ0aWZhY3RfcGF0aD1hcnRpZmFjdF9wYXRoLAogICAgICAgIGV4dHJhX2RhdGE9ZXZhbF9tZXRyaWNzLAogICAgICAgIG1vZGVsX2ZpbGU9Im1vZGVsLnBrbCIsCiAgICAgICAgbWV0cmljcz1jb250ZXh0LnJlc3VsdHMsCiAgICAgICAgbGFiZWxzPXsiY2xhc3MiOiBtb2RlbF9wa2dfY2xhc3N9LAogICAgICAgIGZyYW1ld29yaz0ic2tsZWFybiIsCiAgICAgICAgKiprd2FyZ3MKICAgICkK",
          "commands": []
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "sklearn-classifier",
        "tag": "latest",
        "hash": "d8ba12fa950cb9f535cfcc5804f14295545ca116",
        "project": "sk-project-admin",
        "labels": {
          "author": "yjb",
          "framework": "sklearn"
        },
        "categories": [
          "machine-learning",
          "model-training"
        ],
        "updated": "2021-10-01T00:00:00.120657+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "name": "v3io",
            "mountPath": "/v3io"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "http://v3io-webapi:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "pipelines"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b1410f67-92a9-41fd-9413-6d0015c493fd"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "http://framesd:8080"
          }
        ],
        "default_handler": "train_model",
        "entry_points": {
          "train_model": {
            "name": "train_model",
            "doc": "train a classifier\n\nAn optional cutom model evaluator can be supplied that should have the signature:\n`my_custom_evaluator(context, xvalid, yvalid, model)` and return a dictionary of\nscalar \"results\", a \"plots\" keys with a list of PlotArtifacts, and\nand \"tables\" key containing a returned list of TableArtifacts.",
            "parameters": [
              {
                "name": "context",
                "type": "MLClientCtx",
                "doc": "the function context",
                "default": ""
              },
              {
                "name": "model_pkg_class",
                "type": "str",
                "doc": "the model to train, e.g, \"sklearn.neural_networks.MLPClassifier\", or json model config",
                "default": ""
              },
              {
                "name": "dataset",
                "type": "DataItem",
                "doc": "(\"data\") name of raw data file",
                "default": ""
              },
              {
                "name": "label_column",
                "type": "str",
                "doc": "ground-truth (y) labels",
                "default": "labels"
              },
              {
                "name": "encode_cols",
                "type": "List[str]",
                "doc": "dictionary of names and prefixes for columns that are to hot be encoded.",
                "default": []
              },
              {
                "name": "sample",
                "type": "int",
                "doc": "Selects the first n rows, or select a sample starting from the first. If negative <-1, select a random sample",
                "default": "<_ast.USub object at 0x7fd86dbc17b8>"
              },
              {
                "name": "test_size",
                "type": "float",
                "doc": "(0.05) test set size",
                "default": 0.3
              },
              {
                "name": "train_val_split",
                "type": "float",
                "doc": "(0.75) Once the test set has been removed the training set gets this proportion.",
                "default": 0.7
              },
              {
                "name": "test_set_key",
                "type": "str",
                "doc": "key of held out data in artifact store",
                "default": "test_set"
              },
              {
                "name": "model_evaluator",
                "doc": "(None) a custom model evaluator can be specified",
                "default": null
              },
              {
                "name": "models_dest",
                "type": "str",
                "doc": "(\"\") models subfolder on artifact path",
                "default": ""
              },
              {
                "name": "plots_dest",
                "type": "str",
                "doc": "plot subfolder on artifact path",
                "default": "plots"
              },
              {
                "name": "file_ext",
                "type": "str",
                "doc": "(\"parquet\") format for test_set_key hold out data",
                "default": "parquet"
              },
              {
                "name": "model_pkg_file",
                "type": "str",
                "default": ""
              },
              {
                "name": "random_state",
                "type": "int",
                "doc": "(1) sklearn rng seed",
                "default": 1
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 20
          }
        },
        "description": "train any classifier using scikit-learn's API",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHdhcm5pbmdzCgp3YXJuaW5ncy5zaW1wbGVmaWx0ZXIoYWN0aW9uPSJpZ25vcmUiLCBjYXRlZ29yeT1GdXR1cmVXYXJuaW5nKQoKaW1wb3J0IG9zCgpmcm9tIGNsb3VkcGlja2xlIGltcG9ydCBkdW1wcwppbXBvcnQgcGFuZGFzIGFzIHBkCmZyb20gdHlwaW5nIGltcG9ydCBMaXN0CmZyb20gbWxydW4uZXhlY3V0aW9uIGltcG9ydCBNTENsaWVudEN0eApmcm9tIG1scnVuLmRhdGFzdG9yZSBpbXBvcnQgRGF0YUl0ZW0KZnJvbSBtbHJ1bi5tbHV0aWxzLmRhdGEgaW1wb3J0IGdldF9zYW1wbGUsIGdldF9zcGxpdHMKZnJvbSBtbHJ1bi5tbHV0aWxzLm1vZGVscyBpbXBvcnQgZ2VuX3NrbGVhcm5fbW9kZWwsIGV2YWxfbW9kZWxfdjIKZnJvbSBtbHJ1bi51dGlscy5oZWxwZXJzIGltcG9ydCBjcmVhdGVfY2xhc3MKZnJvbSBtbHJ1bi5hcnRpZmFjdHMubW9kZWwgaW1wb3J0IE1vZGVsQXJ0aWZhY3QKCgpkZWYgdHJhaW5fbW9kZWwoCiAgICBjb250ZXh0OiBNTENsaWVudEN0eCwKICAgIG1vZGVsX3BrZ19jbGFzczogc3RyLAogICAgZGF0YXNldDogRGF0YUl0ZW0sCiAgICBsYWJlbF9jb2x1bW46IHN0ciA9ICJsYWJlbHMiLAogICAgZW5jb2RlX2NvbHM6IExpc3Rbc3RyXSA9IFtdLAogICAgc2FtcGxlOiBpbnQgPSAtMSwKICAgIHRlc3Rfc2l6ZTogZmxvYXQgPSAwLjMwLAogICAgdHJhaW5fdmFsX3NwbGl0OiBmbG9hdCA9IDAuNzAsCiAgICB0ZXN0X3NldF9rZXk6IHN0ciA9ICJ0ZXN0X3NldCIsCiAgICBtb2RlbF9ldmFsdWF0b3I9Tm9uZSwKICAgIG1vZGVsc19kZXN0OiBzdHIgPSAiIiwKICAgIHBsb3RzX2Rlc3Q6IHN0ciA9ICJwbG90cyIsCiAgICBmaWxlX2V4dDogc3RyID0gInBhcnF1ZXQiLAogICAgbW9kZWxfcGtnX2ZpbGU6IHN0ciA9ICIiLAogICAgcmFuZG9tX3N0YXRlOiBpbnQgPSAxLAopIC0+IE5vbmU6CiAgICAiIiJ0cmFpbiBhIGNsYXNzaWZpZXIKCiAgICBBbiBvcHRpb25hbCBjdXRvbSBtb2RlbCBldmFsdWF0b3IgY2FuIGJlIHN1cHBsaWVkIHRoYXQgc2hvdWxkIGhhdmUgdGhlIHNpZ25hdHVyZToKICAgIGBteV9jdXN0b21fZXZhbHVhdG9yKGNvbnRleHQsIHh2YWxpZCwgeXZhbGlkLCBtb2RlbClgIGFuZCByZXR1cm4gYSBkaWN0aW9uYXJ5IG9mCiAgICBzY2FsYXIgInJlc3VsdHMiLCBhICJwbG90cyIga2V5cyB3aXRoIGEgbGlzdCBvZiBQbG90QXJ0aWZhY3RzLCBhbmQKICAgIGFuZCAidGFibGVzIiBrZXkgY29udGFpbmluZyBhIHJldHVybmVkIGxpc3Qgb2YgVGFibGVBcnRpZmFjdHMuCgogICAgOnBhcmFtIGNvbnRleHQ6ICAgICAgICAgICB0aGUgZnVuY3Rpb24gY29udGV4dAogICAgOnBhcmFtIG1vZGVsX3BrZ19jbGFzczogICB0aGUgbW9kZWwgdG8gdHJhaW4sIGUuZywgInNrbGVhcm4ubmV1cmFsX25ldHdvcmtzLk1MUENsYXNzaWZpZXIiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvciBqc29uIG1vZGVsIGNvbmZpZwogICAgOnBhcmFtIGRhdGFzZXQ6ICAgICAgICAgICAoImRhdGEiKSBuYW1lIG9mIHJhdyBkYXRhIGZpbGUKICAgIDpwYXJhbSBsYWJlbF9jb2x1bW46ICAgICAgZ3JvdW5kLXRydXRoICh5KSBsYWJlbHMKICAgIDpwYXJhbSBlbmNvZGVfY29sczogICAgICAgZGljdGlvbmFyeSBvZiBuYW1lcyBhbmQgcHJlZml4ZXMgZm9yIGNvbHVtbnMgdGhhdCBhcmUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gaG90IGJlIGVuY29kZWQuCiAgICA6cGFyYW0gc2FtcGxlOiAgICAgICAgICAgIFNlbGVjdHMgdGhlIGZpcnN0IG4gcm93cywgb3Igc2VsZWN0IGEgc2FtcGxlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0aW5nIGZyb20gdGhlIGZpcnN0LiBJZiBuZWdhdGl2ZSA8LTEsIHNlbGVjdAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhIHJhbmRvbSBzYW1wbGUKICAgIDpwYXJhbSB0ZXN0X3NpemU6ICAgICAgICAgKDAuMDUpIHRlc3Qgc2V0IHNpemUKICAgIDpwYXJhbSB0cmFpbl92YWxfc3BsaXQ6ICAgKDAuNzUpIE9uY2UgdGhlIHRlc3Qgc2V0IGhhcyBiZWVuIHJlbW92ZWQgdGhlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYWluaW5nIHNldCBnZXRzIHRoaXMgcHJvcG9ydGlvbi4KICAgIDpwYXJhbSB0ZXN0X3NldF9rZXk6ICAgICAga2V5IG9mIGhlbGQgb3V0IGRhdGEgaW4gYXJ0aWZhY3Qgc3RvcmUKICAgIDpwYXJhbSBtb2RlbF9ldmFsdWF0b3I6ICAgKE5vbmUpIGEgY3VzdG9tIG1vZGVsIGV2YWx1YXRvciBjYW4gYmUgc3BlY2lmaWVkCiAgICA6cGFyYW0gbW9kZWxzX2Rlc3Q6ICAgICAgICgiIikgbW9kZWxzIHN1YmZvbGRlciBvbiBhcnRpZmFjdCBwYXRoCiAgICA6cGFyYW0gcGxvdHNfZGVzdDogICAgICAgIHBsb3Qgc3ViZm9sZGVyIG9uIGFydGlmYWN0IHBhdGgKICAgIDpwYXJhbSBmaWxlX2V4dDogICAgICAgICAgKCJwYXJxdWV0IikgZm9ybWF0IGZvciB0ZXN0X3NldF9rZXkgaG9sZCBvdXQgZGF0YQogICAgOnBhcmFtIHJhbmRvbV9zdGF0ZTogICAgICAoMSkgc2tsZWFybiBybmcgc2VlZAoKICAgICIiIgogICAgbW9kZWxzX2Rlc3QgPSBtb2RlbHNfZGVzdCBvciAibW9kZWwiCgogICAgcmF3LCBsYWJlbHMsIGhlYWRlciA9IGdldF9zYW1wbGUoZGF0YXNldCwgc2FtcGxlLCBsYWJlbF9jb2x1bW4pCgogICAgaWYgZW5jb2RlX2NvbHM6CiAgICAgICAgcmF3ID0gcGQuZ2V0X2R1bW1pZXMoCiAgICAgICAgICAgIHJhdywKICAgICAgICAgICAgY29sdW1ucz1saXN0KGVuY29kZV9jb2xzLmtleXMoKSksCiAgICAgICAgICAgIHByZWZpeD1saXN0KGVuY29kZV9jb2xzLnZhbHVlcygpKSwKICAgICAgICAgICAgZHJvcF9maXJzdD1UcnVlLAogICAgICAgICkKCiAgICAoeHRyYWluLCB5dHJhaW4pLCAoeHZhbGlkLCB5dmFsaWQpLCAoeHRlc3QsIHl0ZXN0KSA9IGdldF9zcGxpdHMoCiAgICAgICAgcmF3LCBsYWJlbHMsIDMsIHRlc3Rfc2l6ZSwgMSAtIHRyYWluX3ZhbF9zcGxpdCwgcmFuZG9tX3N0YXRlCiAgICApCgogICAgdGVzdF9zZXQgPSBwZC5jb25jYXQoW3h0ZXN0LCB5dGVzdC50b19mcmFtZSgpXSwgYXhpcz0xKQogICAgY29udGV4dC5sb2dfZGF0YXNldCgKICAgICAgICB0ZXN0X3NldF9rZXksCiAgICAgICAgZGY9dGVzdF9zZXQsCiAgICAgICAgZm9ybWF0PWZpbGVfZXh0LAogICAgICAgIGluZGV4PUZhbHNlLAogICAgICAgIGxhYmVscz17ImRhdGEtdHlwZSI6ICJoZWxkLW91dCJ9LAogICAgICAgIGFydGlmYWN0X3BhdGg9Y29udGV4dC5hcnRpZmFjdF9zdWJwYXRoKCJkYXRhIiksCiAgICApCgogICAgbW9kZWxfY29uZmlnID0gZ2VuX3NrbGVhcm5fbW9kZWwobW9kZWxfcGtnX2NsYXNzLCBjb250ZXh0LnBhcmFtZXRlcnMuaXRlbXMoKSkKCiAgICBtb2RlbF9jb25maWdbIkZJVCJdLnVwZGF0ZSh7IlgiOiB4dHJhaW4sICJ5IjogeXRyYWluLnZhbHVlc30pCgogICAgQ2xhc3NpZmllckNsYXNzID0gY3JlYXRlX2NsYXNzKG1vZGVsX2NvbmZpZ1siTUVUQSJdWyJjbGFzcyJdKQoKICAgIG1vZGVsID0gQ2xhc3NpZmllckNsYXNzKCoqbW9kZWxfY29uZmlnWyJDTEFTUyJdKQoKICAgIG1vZGVsLmZpdCgqKm1vZGVsX2NvbmZpZ1siRklUIl0pCgogICAgYXJ0aWZhY3RfcGF0aCA9IGNvbnRleHQuYXJ0aWZhY3Rfc3VicGF0aChtb2RlbHNfZGVzdCkKICAgIHBsb3RzX3BhdGggPSBjb250ZXh0LmFydGlmYWN0X3N1YnBhdGgobW9kZWxzX2Rlc3QsIHBsb3RzX2Rlc3QpCiAgICBpZiBtb2RlbF9ldmFsdWF0b3I6CiAgICAgICAgZXZhbF9tZXRyaWNzID0gbW9kZWxfZXZhbHVhdG9yKAogICAgICAgICAgICBjb250ZXh0LCB4dmFsaWQsIHl2YWxpZCwgbW9kZWwsIHBsb3RzX2FydGlmYWN0X3BhdGg9cGxvdHNfcGF0aAogICAgICAgICkKICAgIGVsc2U6CiAgICAgICAgZXZhbF9tZXRyaWNzID0gZXZhbF9tb2RlbF92MigKICAgICAgICAgICAgY29udGV4dCwgeHZhbGlkLCB5dmFsaWQsIG1vZGVsLCBwbG90c19hcnRpZmFjdF9wYXRoPXBsb3RzX3BhdGgKICAgICAgICApCgogICAga3dhcmdzID0ge30KICAgIGlmICJhbGdvcml0aG0iIGluIE1vZGVsQXJ0aWZhY3QuX2RpY3RfZmllbGRzOgogICAgICAgIGt3YXJnc1sidHJhaW5pbmdfc2V0Il0gPSB0ZXN0X3NldAogICAgICAgIGt3YXJnc1sibGFiZWxfY29sdW1uIl0gPSBsYWJlbF9jb2x1bW4KICAgICAgICBzcGxpdCA9IG1vZGVsX3BrZ19jbGFzcy5yc3BsaXQoIi4iLCAxKQogICAgICAgIGlmIHNwbGl0IGFuZCBsZW4oc3BsaXQpID09IDI6CiAgICAgICAgICAgIGt3YXJnc1siYWxnb3JpdGhtIl0gPSBzcGxpdFsxXQoKICAgICAgICBpZiBkYXRhc2V0Lm1ldGEgYW5kIGRhdGFzZXQubWV0YS5raW5kID09ICJGZWF0dXJlVmVjdG9yIjoKICAgICAgICAgICAga3dhcmdzWyJmZWF0dXJlX3ZlY3RvciJdID0gZGF0YXNldC5tZXRhLnVyaQoKICAgIGNvbnRleHQuc2V0X2xhYmVsKCJjbGFzcyIsIG1vZGVsX3BrZ19jbGFzcykKICAgIGNvbnRleHQubG9nX21vZGVsKAogICAgICAgICJtb2RlbCIsCiAgICAgICAgYm9keT1kdW1wcyhtb2RlbCksCiAgICAgICAgYXJ0aWZhY3RfcGF0aD1hcnRpZmFjdF9wYXRoLAogICAgICAgIGV4dHJhX2RhdGE9ZXZhbF9tZXRyaWNzLAogICAgICAgIG1vZGVsX2ZpbGU9Im1vZGVsLnBrbCIsCiAgICAgICAgbWV0cmljcz1jb250ZXh0LnJlc3VsdHMsCiAgICAgICAgbGFiZWxzPXsiY2xhc3MiOiBtb2RlbF9wa2dfY2xhc3N9LAogICAgICAgIGZyYW1ld29yaz0ic2tsZWFybiIsCiAgICAgICAgKiprd2FyZ3MKICAgICkK",
          "commands": []
        },
        "disable_auto_mount": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": {}
    },
    {
      "kind": "job",
      "metadata": {
        "name": "bert-sentiment-classifier-trainer",
        "tag": "latest",
        "project": "stocks-admin",
        "hash": "a69a80d6f6a6864fe35e5f4d600d888979b87f45",
        "updated": "2021-08-30T05:36:34.133526+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/ml-models",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "resources": {
          "limits": {
            "nvidia.com/gpu": 0
          }
        },
        "entry_points": {
          "forward": {
            "name": "forward",
            "doc": "",
            "parameters": [
              {
                "name": "self",
                "default": ""
              },
              {
                "name": "input_ids",
                "default": ""
              },
              {
                "name": "attention_mask",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 26
          },
          "score_to_sents": {
            "name": "score_to_sents",
            "doc": "",
            "parameters": [
              {
                "name": "score",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 61
          },
          "create_data_loader": {
            "name": "create_data_loader",
            "doc": "",
            "parameters": [
              {
                "name": "df",
                "default": ""
              },
              {
                "name": "tokenizer",
                "default": ""
              },
              {
                "name": "max_len",
                "default": ""
              },
              {
                "name": "batch_size",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 68
          },
          "train_epoch": {
            "name": "train_epoch",
            "doc": "",
            "parameters": [
              {
                "name": "model",
                "default": ""
              },
              {
                "name": "data_loader",
                "default": ""
              },
              {
                "name": "criterion",
                "default": ""
              },
              {
                "name": "optimizer",
                "default": ""
              },
              {
                "name": "scheduler",
                "default": ""
              },
              {
                "name": "n_examples",
                "default": ""
              },
              {
                "name": "device",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 77
          },
          "eval_model": {
            "name": "eval_model",
            "doc": "",
            "parameters": [
              {
                "name": "model",
                "default": ""
              },
              {
                "name": "data_loader",
                "default": ""
              },
              {
                "name": "criterion",
                "default": ""
              },
              {
                "name": "n_examples",
                "default": ""
              },
              {
                "name": "device",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 115
          },
          "eval_on_test": {
            "name": "eval_on_test",
            "doc": "",
            "parameters": [
              {
                "name": "model_path",
                "default": ""
              },
              {
                "name": "data_loader",
                "default": ""
              },
              {
                "name": "device",
                "default": ""
              },
              {
                "name": "n_examples",
                "default": ""
              },
              {
                "name": "pretrained_model",
                "default": ""
              },
              {
                "name": "n_classes",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 147
          },
          "train_sentiment_analysis_model": {
            "name": "train_sentiment_analysis_model",
            "doc": "",
            "parameters": [
              {
                "name": "context",
                "type": "MLClientCtx",
                "default": ""
              },
              {
                "name": "reviews_dataset",
                "type": "DataItem",
                "default": ""
              },
              {
                "name": "pretrained_model",
                "type": "str",
                "default": "bert-base-cased"
              },
              {
                "name": "models_dir",
                "type": "str",
                "default": "models"
              },
              {
                "name": "model_filename",
                "type": "str",
                "default": "bert_sentiment_analysis_model.pt"
              },
              {
                "name": "n_classes",
                "type": "int",
                "default": 3
              },
              {
                "name": "MAX_LEN",
                "type": "int",
                "default": 128
              },
              {
                "name": "BATCH_SIZE",
                "type": "int",
                "default": 16
              },
              {
                "name": "EPOCHS",
                "type": "int",
                "default": 50
              },
              {
                "name": "random_state",
                "type": "int",
                "default": 42
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 172
          }
        },
        "description": "",
        "image_pull_policy": "Always",
        "build": {
          "functionSourceCode": "",
          "commands": [
            "python -m pip install transformers==3.0.1 torch==1.6.0"
          ],
          "origin_filename": "/User/demos/stock-analysis/code/00-train-sentiment-analysis-model.ipynb"
        },
        "mount_applied": true,
        "affinity": null
      },
      "verbose": false,
      "status": {}
    },
    {
      "kind": "serving",
      "metadata": {
        "name": "sentiment-analysis-serving",
        "tag": "latest",
        "hash": "2da8f838db349ee5e6f917f13c62852e16ea001c",
        "project": "stocks-admin",
        "labels": {
          "author": "avia",
          "framework": "pytorch"
        },
        "categories": [
          "model-serving",
          "machine-learning"
        ],
        "updated": "2021-08-30T05:36:34.649552+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/ml-models",
        "description": "BERT based sentiment classification model",
        "min_replicas": 1,
        "max_replicas": 1,
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "config": {
          "readinessTimeoutSeconds": 500
        },
        "base_spec": {
          "apiVersion": "nuclio.io/v1",
          "kind": "Function",
          "metadata": {
            "name": "sentiment-analysis-serving",
            "labels": {},
            "annotations": {
              "nuclio.io/generated_by": "function generated from /home/kali/functions/sentiment_analysis_serving/sentiment_analysis_serving.py"
            }
          },
          "spec": {
            "runtime": "python:3.6",
            "handler": "sentiment_analysis_serving:handler",
            "env": [],
            "volumes": [],
            "build": {
              "commands": [],
              "noBaseImagesPull": true,
              "functionSourceCode": "aW1wb3J0IHRvcmNoCmltcG9ydCB0b3JjaC5ubiBhcyBubgpmcm9tIHRyYW5zZm9ybWVycyBpbXBvcnQgQmVydE1vZGVsLCBCZXJ0VG9rZW5pemVyCmltcG9ydCBtbHJ1bgpmcm9tIG1scnVuLnJ1bnRpbWVzIGltcG9ydCBudWNsaW9faW5pdF9ob29rCgpQUkVUUkFJTkVEX01PREVMID0gJ2JlcnQtYmFzZS1jYXNlZCcKdG9rZW5pemVyID0gQmVydFRva2VuaXplci5mcm9tX3ByZXRyYWluZWQoJ2JlcnQtYmFzZS1jYXNlZCcpCgoKY2xhc3MgQmVydFNlbnRpbWVudENsYXNzaWZpZXIobm4uTW9kdWxlKToKICAgIGRlZiBfX2luaXRfXyhzZWxmLCBuX2NsYXNzZXMpOgogICAgICAgIHN1cGVyKEJlcnRTZW50aW1lbnRDbGFzc2lmaWVyLCBzZWxmKS5fX2luaXRfXygpCiAgICAgICAgc2VsZi5iZXJ0ID0gQmVydE1vZGVsLmZyb21fcHJldHJhaW5lZChQUkVUUkFJTkVEX01PREVMKQogICAgICAgIHNlbGYuZHJvcG91dCA9IG5uLkRyb3BvdXQocD0wLjIpCiAgICAgICAgc2VsZi5vdXRfbGluZWFyID0gbm4uTGluZWFyKHNlbGYuYmVydC5jb25maWcuaGlkZGVuX3NpemUsIG5fY2xhc3NlcykKICAgICAgICBzZWxmLnNvZnRtYXggPSBubi5Tb2Z0bWF4KGRpbT0xKQoKICAgIGRlZiBmb3J3YXJkKHNlbGYsIGlucHV0X2lkcywgYXR0ZW50aW9uX21hc2spOgogICAgICAgIF8sIHBvb2xlZF9vdXQgPSBzZWxmLmJlcnQoCiAgICAgICAgICAgIGlucHV0X2lkcz1pbnB1dF9pZHMsCiAgICAgICAgICAgIGF0dGVudGlvbl9tYXNrPWF0dGVudGlvbl9tYXNrCiAgICAgICAgKQogICAgICAgIG91dCA9IHNlbGYuZHJvcG91dChwb29sZWRfb3V0KQogICAgICAgIG91dCA9IHNlbGYub3V0X2xpbmVhcihvdXQpCiAgICAgICAgcmV0dXJuIHNlbGYuc29mdG1heChvdXQpCgoKY2xhc3MgU2VudGltZW50Q2xhc3NpZmllclNlcnZpbmcobWxydW4uc2VydmluZy5WMk1vZGVsU2VydmVyKToKICAgIGRlZiBsb2FkKHNlbGYpOgogICAgICAgICIiIgogICAgICAgIGxvYWQgYmVydCBtb2RlbCBpbnRvIGNsYXNzCiAgICAgICAgIiIiCiAgICAgICAgbW9kZWxfZmlsZSwgXyA9IHNlbGYuZ2V0X21vZGVsKCcucHQnKQogICAgICAgIGRldmljZSA9IHRvcmNoLmRldmljZSgnY3VkYTowJykgaWYgdG9yY2guY3VkYS5pc19hdmFpbGFibGUoKSBlbHNlIHRvcmNoLmRldmljZSgnY3B1JykKICAgICAgICBtb2RlbCA9IEJlcnRTZW50aW1lbnRDbGFzc2lmaWVyKG5fY2xhc3Nlcz0zKQogICAgICAgIG1vZGVsLmxvYWRfc3RhdGVfZGljdCh0b3JjaC5sb2FkKG1vZGVsX2ZpbGUsIG1hcF9sb2NhdGlvbj1kZXZpY2UpKQogICAgICAgIG1vZGVsLmV2YWwoKQogICAgICAgIHNlbGYubW9kZWwgPSBtb2RlbAoKICAgIGRlZiBwcmVkaWN0KHNlbGYsIGJvZHkpOgogICAgICAgICIiIgogICAgICAgIHByZWRpY3QgZnVuY3Rpb24KICAgICAgICA6cGFyYW0gYm9keTogc2V0IG9mIGlucHV0cyBmb3IgYmVydCBtb2RlbCB0byBwcmVkaWN0IGZyb20KICAgICAgICAiIiIKICAgICAgICB0cnk6CiAgICAgICAgICAgIGluc3RhbmNlcyA9IGJvZHlbJ2lucHV0cyddCiAgICAgICAgICAgIGVuYyA9IHRva2VuaXplci5iYXRjaF9lbmNvZGVfcGx1cyhpbnN0YW5jZXMsIHJldHVybl90ZW5zb3JzPSdwdCcsIHBhZF90b19tYXhfbGVuZ3RoPVRydWUpCiAgICAgICAgICAgIG91dHB1dHMgPSBzZWxmLm1vZGVsKGlucHV0X2lkcz1lbmNbJ2lucHV0X2lkcyddLCBhdHRlbnRpb25fbWFzaz1lbmNbJ2F0dGVudGlvbl9tYXNrJ10pCiAgICAgICAgICAgIF8sIHByZWRpY3RzID0gdG9yY2gubWF4KG91dHB1dHMsIGRpbT0xKQogICAgICAgICAgICByZXR1cm4gcHJlZGljdHMuY3B1KCkudG9saXN0KCkKICAgICAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgICAgIHJhaXNlIEV4Y2VwdGlvbigiRmFpbGVkIHRvIHByZWRpY3QgJXMiICUgZSkKCgpkZWYgaW5pdF9jb250ZXh0KGNvbnRleHQpOgogICAgbnVjbGlvX2luaXRfaG9vayhjb250ZXh0LCBnbG9iYWxzKCksICdzZXJ2aW5nX3YyJykKCgpkZWYgaGFuZGxlcihjb250ZXh0LCBldmVudCk6CiAgICByZXR1cm4gY29udGV4dC5tbHJ1bl9oYW5kbGVyKGNvbnRleHQsIGV2ZW50KQoKZnJvbSBtbHJ1bi5ydW50aW1lcyBpbXBvcnQgbnVjbGlvX2luaXRfaG9vawpkZWYgaW5pdF9jb250ZXh0KGNvbnRleHQpOgogICAgbnVjbGlvX2luaXRfaG9vayhjb250ZXh0LCBnbG9iYWxzKCksICdzZXJ2aW5nX3YyJykKCmRlZiBoYW5kbGVyKGNvbnRleHQsIGV2ZW50KToKICAgIHJldHVybiBjb250ZXh0Lm1scnVuX2hhbmRsZXIoY29udGV4dCwgZXZlbnQpCg==",
              "baseImage": "mlrun/ml-models"
            }
          }
        },
        "source": "",
        "image_pull_policy": "Always",
        "function_kind": "serving_v2",
        "readiness_timeout": 500,
        "build": {
          "commands": [
            "python -m pip install transformers==3.0.2"
          ]
        },
        "secret_sources": [],
        "mount_applied": true,
        "affinity": null
      },
      "status": {
        "internal_invocation_urls": [],
        "external_invocation_urls": []
      },
      "verbose": false
    },
    {
      "kind": "remote",
      "metadata": {
        "name": "news-reader",
        "tag": "latest",
        "project": "stocks-admin",
        "hash": "edd4bdd02db38c213fa91a6a503b43a2e5a4f0aa",
        "updated": "2021-08-30T05:36:34.751063+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "",
        "description": "",
        "min_replicas": 1,
        "max_replicas": 1,
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "config": {
          "spec.triggers.cron": {
            "kind": "cron",
            "attributes": {
              "interval": "300s"
            }
          }
        },
        "base_spec": {
          "apiVersion": "nuclio.io/v1",
          "kind": "Function",
          "metadata": {
            "annotations": {
              "nuclio.io/generated_by": "function generated from /User/demos/stock-analysis/code/02-read-news.ipynb"
            },
            "labels": {},
            "name": "news-reader"
          },
          "spec": {
            "build": {
              "baseImage": "mlrun/ml-models",
              "commands": [
                "pip install beautifulsoup4",
                "pip install pandas",
                "pip install v3io_frames"
              ],
              "functionSourceCode": "",
              "noBaseImagesPull": true
            },
            "env": [
              {
                "name": "V3IO_ACCESS_KEY",
                "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              },
              {
                "name": "V3IO_USERNAME",
                "value": "admin"
              },
              {
                "name": "V3IO_API",
                "value": "v3io-webapi.default-tenant.svc:8081"
              }
            ],
            "handler": "02-read-news:handler",
            "runtime": "python:3.6",
            "volumes": []
          }
        },
        "source": "",
        "image_pull_policy": "Always",
        "build": {
          "commands": [],
          "origin_filename": "/User/demos/stock-analysis/code/02-read-news.ipynb"
        },
        "mount_applied": true,
        "affinity": null
      },
      "status": {
        "internal_invocation_urls": [],
        "external_invocation_urls": []
      },
      "verbose": false
    },
    {
      "kind": "remote",
      "metadata": {
        "name": "stocks-reader",
        "tag": "",
        "project": "stocks-admin",
        "hash": "ce0a387f83a15c6d5eace67381922f5a25c5b0e5",
        "updated": "2021-08-30T05:36:34.836757+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "",
        "description": "",
        "min_replicas": 1,
        "max_replicas": 1,
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "config": {
          "spec.triggers.cron": {
            "kind": "cron",
            "attributes": {
              "interval": "300s"
            }
          }
        },
        "base_spec": {
          "apiVersion": "nuclio.io/v1",
          "kind": "Function",
          "metadata": {
            "annotations": {
              "nuclio.io/generated_by": "function generated from /User/demos/stock-analysis/code/01-read-stocks.ipynb"
            },
            "labels": {},
            "name": "stocks-reader"
          },
          "spec": {
            "build": {
              "baseImage": "mlrun/ml-models",
              "commands": [
                "pip install lxml",
                "pip install yfinance",
                "pip install requests",
                "pip install v3io_frames"
              ],
              "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHlmaW5hbmNlIGFzIHlmCmltcG9ydCBvcwppbXBvcnQgcGFuZGFzIGFzIHBkCmltcG9ydCB2M2lvX2ZyYW1lcyBhcyB2M2YKaW1wb3J0IGFzdAppbXBvcnQgbWxydW4uZmVhdHVyZV9zdG9yZSBhcyBmcwppbXBvcnQgbWxydW4KCmRlZiBjb250cnVjdF9kYXRhZnJhbWUoYWxsX3JlY29yZHMpOgogICAgdGVtcF9kZiA9IHBkLkRhdGFGcmFtZShhbGxfcmVjb3JkcykKICAgIHRlbXBfZGYubGFzdF91cGRhdGVkID0gdGVtcF9kZi5sYXN0X3VwZGF0ZWQuYXN0eXBlKCJzdHIiKQogICAgcmV0dXJuIHRlbXBfZGYKCmRlZiB1cGRhdGVfdGlja2Vycyhjb250ZXh0LCBwZXJkaW9kLCBpbnRlcnZhbCk6CiAgICBhbGxfcmVjb3Jkcz1bXQogICAgc3RvY2tzX2RmID0gcGQuRGF0YUZyYW1lKCkKICAgIGZvciBzeW0gaW4gY29udGV4dC5zdG9ja19zeW1zOgogICAgICAgIGhpc3QgPSB5Zi5UaWNrZXIoc3ltKS5oaXN0b3J5KHBlcmlvZD1wZXJkaW9kLCBpbnRlcnZhbD0nMW0nKQogICAgICAgIHRpbWUgPSBoaXN0LmluZGV4W2xlbihoaXN0KSAtIDFdCiAgICAgICAgcmVjb3JkID0gaGlzdC5sb2NbdGltZV0KICAgICAgICBsYXN0ID0gY29udGV4dC5sYXN0X3RyYWRlX3RpbWVzLmdldChzeW0pCiAgICAgICAgY29udGV4dC5sb2dnZXIuaW5mbyhmJ1JlY2VpdmVkIHtzeW19IGRhdGEgZnJvbSB5ZmluYW5jZSwgaW5jbHVkaW5nIHtsZW4oaGlzdCl9IGNhbmRsZXMgZW5kaW5nIGF0IHtsYXN0fScpCiAgICAgICAgaWYgbm90IGxhc3Qgb3IgdGltZSA+IGxhc3Q6CiAgICAgICAgICAgIAogICAgICAgICAgICBzdG9jayA9IHsnc3ltYm9sJzogc3ltLCAncHJpY2UnOiByZWNvcmRbJ0Nsb3NlJ10sICd2b2x1bWUnOiByZWNvcmRbJ1ZvbHVtZSddLCAnbGFzdF91cGRhdGVkJzogdGltZX0KICAgICAgICAgICAgYWxsX3JlY29yZHMuYXBwZW5kKHN0b2NrKQogICAgICAgICAgICBleHByID0gY29udGV4dC5leHByX3RlbXBsYXRlLmZvcm1hdCgqKnN0b2NrKQogICAgICAgICAgICBjb250ZXh0LmxvZ2dlci5kZWJ1Z193aXRoKCd1cGRhdGUgZXhwcmVzc2lvbicsIHN5bWJvbD1zeW0sIGV4cHI9ZXhwcikKICAgICAgICAgICAgY29udGV4dC52M2MuZXhlY3V0ZSgna3YnLCBjb250ZXh0LnN0b2Nrc19rdl90YWJsZSwgJ3VwZGF0ZScsIGFyZ3M9eydrZXknOiBzeW0sICdleHByZXNzaW9uJzogZXhwcn0pCiAgICAgICAgIAogICAgICAgICAgICBjb250ZXh0LmxvZ2dlci5pbmZvKGYnVXBkYXRlZCByZWNvcmRzIGZyb20ge2xhc3R9IHRvIHt0aW1lfScpCiAgICAgICAgICAgIGNvbnRleHQubGFzdF90cmFkZV90aW1lc1tzeW1dID0gdGltZQogICAgICAgICAgICBoaXN0WydzeW1ib2wnXSA9IHN5bQogICAgICAgICAgICBoaXN0ID0gaGlzdC5yZXNldF9pbmRleCgpCiAgICAgICAgICAgIGhpc3QgPSBoaXN0LnNldF9pbmRleChbJ0RhdGV0aW1lJywgJ3N5bWJvbCddKQogICAgICAgICAgICBoaXN0ID0gaGlzdC5sb2NbOiwgWydDbG9zZScsICdWb2x1bWUnXV0KICAgICAgICAgICAgaGlzdCA9IGhpc3QucmVuYW1lKGNvbHVtbnM9eydDbG9zZSc6ICdwcmljZScsICdWb2x1bWUnOiAndm9sdW1lJ30pCiAgICAgICAgICAgIHN0b2Nrc19kZiA9IHN0b2Nrc19kZi5hcHBlbmQoaGlzdCkKICAgICAgICAgICAgY29udGV4dC5sb2dnZXIuaW5mbyhmJ0FkZGVkIHJlY29yZHMge2hpc3Quc2hhcGVbMF19IHJlY29yZHMgZm9yIHtzeW19IHRvIGhpc3RvcnknKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIGNvbnRleHQubG9nZ2VyLmluZm8oZidObyB1cGRhdGUgd2FzIG1hZGUsIGN1cnJlbnQgVFM6IHtsYXN0fSB2cy4gbmV3IGRhdGEge3RpbWV9JykKICAgIAogICAgY29udGV4dC52M2MuZXhlY3V0ZSgia3YiLHRhYmxlID0gY29udGV4dC5zdG9ja3Nfa3ZfdGFibGUsIGNvbW1hbmQgPSAiaW5mZXIiKQogICAgaWYobGVuKGFsbF9yZWNvcmRzKSAhPSAwKToKICAgICAgICBzdG9ja19pbmZvID0gY29udHJ1Y3RfZGF0YWZyYW1lKGFsbF9yZWNvcmRzKQogICAgICAgIGNvbnRleHQubG9nZ2VyLmluZm8oZiJXcml0aW5nIG5ldyBkYXRhZnJhbWUgd2l0aCBzaGFwZSB7c3RvY2tfaW5mby5zaGFwZX0gdG8gZmVhdHVyZSBzdG9yZSIpCiAgICAgICAgZnMuaW5nZXN0KGNvbnRleHQuc3RvY2tfaW5mb19mZWF0dXJlX3NldCwgc3RvY2tfaW5mbywgaW5mZXJfb3B0aW9ucz1mcy5JbmZlck9wdGlvbnMuZGVmYXVsdCgpKQogICAgICAgIAogICAgaWYgc3RvY2tzX2RmLnNoYXBlWzBdPjA6CiAgICAgICAgc3RvY2tzX2RmID0gc3RvY2tzX2RmLnNvcnRfaW5kZXgobGV2ZWw9MCkKICAgICAgICBjb250ZXh0LmxvZ2dlci5kZWJ1Z193aXRoKCd3cml0aW5nIGRhdGEgdG8gVFNEQicsIHN0b2Nrcz1zdG9ja3NfZGYpCiAgICAgICAgc3RvY2tzX2RmLnRvX2NzdignaGlzdG9yeS5jc3YnKQogICAgICAgIGNvbnRleHQudjNjLndyaXRlKGJhY2tlbmQ9J3RzZGInLCB0YWJsZT1jb250ZXh0LnN0b2Nrc190c2RiX3RhYmxlLCBkZnM9c3RvY2tzX2RmKQoKZGVmIGluaXRfY29udGV4dChjb250ZXh0KToKICAgIGNvbnRleHQubG9nZ2VyLmluZm8oImluaXQgc3RvY2tzIHJlYWRlciBjb250ZXh0IikKICAgIHNldGF0dHIoY29udGV4dCwgJ1BST0pFQ1RfTkFNRScsIG9zLmdldGVudignUFJPSkVDVF9OQU1FJywgJ3N0b2Nrcy0nICsgb3MuZ2V0ZW52KCdWM0lPX1VTRVJOQU1FJykpKQogICAgbWxydW4uc2V0X2Vudmlyb25tZW50KHByb2plY3QgPSBjb250ZXh0LlBST0pFQ1RfTkFNRSkKICAgIHNldGF0dHIoY29udGV4dCwiVjNJT19GUkFNRVNEIiwgb3MuZ2V0ZW52KCJWM0lPX0ZSQU1FU0QiLCdmcmFtZXNkOjgwODEnKSkKICAgIGNsaWVudCA9IHYzZi5DbGllbnQoY29udGV4dC5WM0lPX0ZSQU1FU0QsIGNvbnRhaW5lcj1vcy5nZXRlbnYoJ1YzSU9fQ09OVEFJTkVSJywgJ3VzZXJzJykpCiAgICBzZXRhdHRyKGNvbnRleHQsICd2M2MnLCBjbGllbnQpCiAgICAKICAgIHNldGF0dHIoY29udGV4dCwgJ3N0b2Nrc19rdl90YWJsZScsIG9zLmdldGVudignU1RPQ0tTX0tWX1RBQkxFJywgb3MuZ2V0ZW52KCdWM0lPX1VTRVJOQU1FJykgKyAnL3N0b2Nrcy9zdG9ja3Nfa3YnKSkKICAgIHNldGF0dHIoY29udGV4dCwgJ3N0b2Nrc190c2RiX3RhYmxlJywgb3MuZ2V0ZW52KCdTVE9DS1NfVFNEQl9UQUJMRScsIG9zLmdldGVudignVjNJT19VU0VSTkFNRScpICsgJy9zdG9ja3Mvc3RvY2tzX3RzZGInKSkKICAgIGNvbnRleHQudjNjLmNyZWF0ZShiYWNrZW5kPSd0c2RiJywgdGFibGU9Y29udGV4dC5zdG9ja3NfdHNkYl90YWJsZSwgcmF0ZT0nMS9tJywgaWZfZXhpc3RzPTEpCiAgICAKICAgIHN0b2Nrc19pbmZvX3NldCA9IGZzLkZlYXR1cmVTZXQoInN0b2NrcyIsIGVudGl0aWVzPVtmcy5FbnRpdHkoInN5bWJvbCIpXSkKICAgIHNldGF0dHIoY29udGV4dCwnc3RvY2tfaW5mb19mZWF0dXJlX3NldCcsc3RvY2tzX2luZm9fc2V0KQogICAgCiAgICBjb250ZXh0LnN0b2NrX2luZm9fZmVhdHVyZV9zZXQuYWRkX2FnZ3JlZ2F0aW9uKCJwcmljZXMiLCJwcmljZSIsWyJtaW4iLCJtYXgiXSxbIjFoIl0sIjEwbSIpCiAgICBjb250ZXh0LnN0b2NrX2luZm9fZmVhdHVyZV9zZXQuYWRkX2FnZ3JlZ2F0aW9uKCJ2b2x1bWVzIiwidm9sdW1lIixbIm1pbiIsIm1heCJdLFsiMWgiXSwiMTBtIikKICAgIAogICAgc3RvY2tfZHVtbXkgPSBwZC5EYXRhRnJhbWUoeyJzeW1ib2wiOlsnR09PR0wnLCdNU0ZUJywnQU1aTicsJ0FBUEwnLCdJTlRDJ10sInByaWNlIjpbMCwwLDAsMCwwXSwidm9sdW1lIjpbMCwwLDAsMCwwXSwibGFzdF91cGRhdGVkIjpbMCwwLDAsMCwwXX0pCiAgICBmcy5pbmdlc3QoY29udGV4dC5zdG9ja19pbmZvX2ZlYXR1cmVfc2V0LCBzdG9ja19kdW1teSwgaW5mZXJfb3B0aW9ucz1mcy5JbmZlck9wdGlvbnMuZGVmYXVsdCgpKQogICAgCiAgICBzdG9ja3MgPSBvcy5nZXRlbnYoJ1NUT0NLX0xJU1QnLCdHT09HTCxNU0ZULEFNWk4sQUFQTCxJTlRDJykKICAgIGlmIHN0b2Nrcy5zdGFydHN3aXRoKCdbJyk6CiAgICAgICAgc3RvY2tfc3ltcyA9IGFzdC5saXRlcmFsX2V2YWwoc3RvY2tzKQogICAgZWxzZTogCiAgICAgICAgc3RvY2tfc3ltcyA9IHN0b2Nrcy5zcGxpdCgnLCcpCiAgICBzZXRhdHRyKGNvbnRleHQsICdzdG9ja19zeW1zJywgc3RvY2tfc3ltcykKICAgIAoKICAgIGV4cHJfdGVtcGxhdGUgPSBvcy5nZXRlbnYoJ0VYUFJFU1NJT05fVEVNUExBVEUnLCAic3ltYm9sPSd7c3ltYm9sfSc7cHJpY2U9e3ByaWNlfTt2b2x1bWU9e3ZvbHVtZX07bGFzdF91cGRhdGVkPSd7bGFzdF91cGRhdGVkfSciKQogICAgc2V0YXR0cihjb250ZXh0LCAnZXhwcl90ZW1wbGF0ZScsIGV4cHJfdGVtcGxhdGUpCgogICAgbGFzdF90cmFkZV90aW1lcyA9IHt9CiAgICBzZXRhdHRyKGNvbnRleHQsICdsYXN0X3RyYWRlX3RpbWVzJywgbGFzdF90cmFkZV90aW1lcykKICAgIAogICAgdXBkYXRlX3RpY2tlcnMoY29udGV4dCwgJzdkJywgJzFtJykKICAgIAoKZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICB1cGRhdGVfdGlja2Vycyhjb250ZXh0LCAnNW0nLCAnMW0nKQogICAgcmV0dXJuICdkb25lJwoK",
              "noBaseImagesPull": true
            },
            "env": [
              {
                "name": "V3IO_ACCESS_KEY",
                "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              },
              {
                "name": "V3IO_USERNAME",
                "value": "admin"
              },
              {
                "name": "V3IO_API",
                "value": "v3io-webapi.default-tenant.svc:8081"
              }
            ],
            "handler": "01-read-stocks:handler",
            "runtime": "python:3.6",
            "volumes": []
          }
        },
        "source": "",
        "image_pull_policy": "Always",
        "build": {
          "commands": [],
          "origin_filename": "/User/demos/stock-analysis/code/01-read-stocks.ipynb"
        },
        "mount_applied": true,
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "remote",
      "metadata": {
        "name": "stream-viewer",
        "tag": "latest",
        "project": "stocks-admin",
        "hash": "cf463010028f07473d90189aafa3817ad80e8727",
        "updated": "2021-08-30T05:36:34.925265+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "",
        "description": "",
        "min_replicas": 1,
        "max_replicas": 4,
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "base_spec": {
          "apiVersion": "nuclio.io/v1",
          "kind": "Function",
          "metadata": {
            "annotations": {
              "nuclio.io/generated_by": "function generated from /User/demos/stock-analysis/code/03-stream-viewer.ipynb"
            },
            "labels": {},
            "name": "stream-viewer"
          },
          "spec": {
            "build": {
              "baseImage": "mlrun/mlrun",
              "commands": [
                "pip install v3io"
              ],
              "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHYzaW8uZGF0YXBsYW5lCmltcG9ydCBqc29uCmltcG9ydCBvcwoKZGVmIGluaXRfY29udGV4dChjb250ZXh0KToKICAgIGFjY2Vzc19rZXkgPSBvcy5nZXRlbnYoJ1YzSU9fQUNDRVNTX0tFWScsIE5vbmUpCiAgICBzZXRhdHRyKGNvbnRleHQsICdjb250YWluZXInLCBvcy5nZXRlbnYoJ1YzSU9fQ09OVEFJTkVSJywgJ3VzZXJzJykpCiAgICBzZXRhdHRyKGNvbnRleHQsICdzdHJlYW1fcGF0aCcsIG9zLmdldGVudignU1RPQ0tTX1NUUkVBTScsb3MuZ2V0ZW52KCdWM0lPX1VTRVJOQU1FJykgKyAnL3N0b2Nrcy9zdG9ja3Nfc3RyZWFtJykpCiAgICAKICAgIHYzaW9fY2xpZW50ID0gdjNpby5kYXRhcGxhbmUuQ2xpZW50KGVuZHBvaW50PW9zLmdldGVudignVjNJT19BUEknLCBOb25lKSwgYWNjZXNzX2tleT1hY2Nlc3Nfa2V5KQogICAgc2V0YXR0cihjb250ZXh0LCAnZGF0YScsIFtdKQogICAgc2V0YXR0cihjb250ZXh0LCAndjNpb19jbGllbnQnLCB2M2lvX2NsaWVudCkgCiAgICBzZXRhdHRyKGNvbnRleHQsICdsaW1pdCcsIG9zLmdldGVudignTElNSVQnLCAxMCkpCiAgICAKCiAgICAKZGVmIGhhbmRsZXIoY29udGV4dCwgZXZlbnQpOgogICAgcmVzcCA9IGNvbnRleHQudjNpb19jbGllbnQuc2Vla19zaGFyZChjb250YWluZXI9Y29udGV4dC5jb250YWluZXIsIHBhdGg9Zid7Y29udGV4dC5zdHJlYW1fcGF0aH0vMCcsIHNlZWtfdHlwZT0nRUFSTElFU1QnKQogICAgc2V0YXR0cihjb250ZXh0LCAnbmV4dF9sb2NhdGlvbicsIHJlc3Aub3V0cHV0LmxvY2F0aW9uKQogICAgcmVzcCA9IGNvbnRleHQudjNpb19jbGllbnQuZ2V0X3JlY29yZHMoY29udGFpbmVyPWNvbnRleHQuY29udGFpbmVyLCBwYXRoPWYne2NvbnRleHQuc3RyZWFtX3BhdGh9LzAnLCBsb2NhdGlvbj1jb250ZXh0Lm5leHRfbG9jYXRpb24sIGxpbWl0PWNvbnRleHQubGltaXQpCiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdsb2NhdGlvbjogJXMnLCBjb250ZXh0Lm5leHRfbG9jYXRpb24pCgogICAgZm9yIHJlYyBpbiByZXNwLm91dHB1dC5yZWNvcmRzOgogICAgICAgIHJlY19kYXRhID0gcmVjLmRhdGEuZGVjb2RlKCd1dGYtOCcpCiAgICAgICAgcmVjX2pzb24gPSBqc29uLmxvYWRzKHJlY19kYXRhKQogICAgICAgIGNvbnRleHQuZGF0YS5hcHBlbmQoeydUaW1lJzogcmVjX2pzb25bJ3RpbWUnXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnU3ltYm9sJzogcmVjX2pzb25bJ3N5bWJvbCddLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICdTZW50aW1lbnQnOiByZWNfanNvblsnc2VudGltZW50J10sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ0xpbmsnOiByZWNfanNvblsnbGluayddLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICdDb250ZW50JzogcmVjX2pzb25bJ2NvbnRlbnQnXX0pCgogICAgY29udGV4dC5kYXRhID0gY29udGV4dC5kYXRhWy1jb250ZXh0LmxpbWl0Ol0KICAgIAogICAgY29sdW1ucyA9IFt7J3RleHQnOiBrZXksICd0eXBlJzogJ29iamVjdCd9IGZvciBrZXkgaW4gWydUaW1lJywgJ1N5bWJvbCcsICdTZW50aW1lbnQnLCAnTGluaycsICdDb250ZW50J11dCiAgICBkYXRhID0gW2xpc3QoaXRlbS52YWx1ZXMoKSkgZm9yIGl0ZW0gaW4gY29udGV4dC5kYXRhXQogICAgcmVzcG9uc2UgPSBbeydjb2x1bW5zJzogY29sdW1ucywKICAgICAgICAgICAgICAgICdyb3dzJzogZGF0YSwKICAgICAgICAgICAgICAgICd0eXBlJzogJ3RhYmxlJ31dCiAgICByZXR1cm4gcmVzcG9uc2UgICAgICAgICAgICAgIAoK",
              "noBaseImagesPull": true
            },
            "env": [
              {
                "name": "V3IO_ACCESS_KEY",
                "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              },
              {
                "name": "V3IO_USERNAME",
                "value": "admin"
              },
              {
                "name": "V3IO_API",
                "value": "v3io-webapi.default-tenant.svc:8081"
              }
            ],
            "handler": "03-stream-viewer:handler",
            "runtime": "python:3.6",
            "volumes": []
          }
        },
        "source": "",
        "image_pull_policy": "Always",
        "build": {
          "commands": [],
          "origin_filename": "/User/demos/stock-analysis/code/03-stream-viewer.ipynb"
        },
        "mount_applied": true,
        "affinity": null
      },
      "status": {
        "internal_invocation_urls": [],
        "external_invocation_urls": []
      },
      "verbose": false
    },
    {
      "kind": "remote",
      "metadata": {
        "name": "vector-reader",
        "tag": "latest",
        "project": "stocks-admin",
        "hash": "390679332bf678b73232a14b3fa3e93872c6b50f",
        "updated": "2021-08-30T05:36:35.016199+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "",
        "description": "",
        "min_replicas": 1,
        "max_replicas": 4,
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "base_spec": {
          "apiVersion": "nuclio.io/v1",
          "kind": "Function",
          "metadata": {
            "annotations": {
              "nuclio.io/generated_by": "function generated from /User/demos/stock-analysis/code/06-read-vector.ipynb"
            },
            "labels": {},
            "name": "vector-reader"
          },
          "spec": {
            "build": {
              "baseImage": "mlrun/ml-models",
              "commands": [
                "pip install beautifulsoup4",
                "pip install pandas",
                "pip install v3io_frames",
                "pip install v3io"
              ],
              "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG1scnVuLmZlYXR1cmVfc3RvcmUgYXMgZnMKZnJvbSBtbHJ1bi5mZWF0dXJlX3N0b3JlLnN0ZXBzIGltcG9ydCAqCmltcG9ydCBtbHJ1bgppbXBvcnQgcGFuZGFzIGFzIHBkCmltcG9ydCBudW1weQppbXBvcnQgb3MKaW1wb3J0IG1hdGgKCmRlZiBybV9pbmYoZGF0YSk6CiAgICBwcmludChkYXRhKQogICAgZGF0YSA9IFswIGlmIGl0ZW0gPT0gbWF0aC5pbmYgb3IgaXRlbSA9PSAtbWF0aC5pbmYgZWxzZSBpdGVtIGZvciBpdGVtIGluIGRhdGEgXQogICAgcmV0dXJuIGRhdGEKCmRlZiBoYW5kbGVyKGNvbnRleHQsIGV2ZW50KToKICAgIGNvbnRleHQubG9nZ2VyLmluZm8oIlJlYWRpbmcgZmVhdHVyZXMgZnJvbSBmZWF0dXJlIHZlY3RvciIpCiAgICBzdG9ja19saXN0ID0gW10KICAgIHNlcnZpY2UgPSBmcy5nZXRfb25saW5lX2ZlYXR1cmVfc2VydmljZSgic3RvY2tzLXZlYyIpCiAgICBmb3Iga2V5LHZhbHVlIGluIGNvbnRleHQuc3ltX3RvX3VybC5pdGVtcygpOgogICAgICAgIGNvbnRleHQubG9nZ2VyLmluZm8oa2V5KQogICAgICAgIGRhdGEgPSBzZXJ2aWNlLmdldChbeyJzeW1ib2wiOiBrZXl9XSlbMF0KICAgICAgICBkYXRhWyJzeW1ib2wiXSA9IGtleQogICAgICAgIHN0b2NrX2xpc3QuYXBwZW5kKGRhdGEpCiAgICAKICAgIGRhdGEgPSBbcm1faW5mKGxpc3QoaXRlbS52YWx1ZXMoKSkpIGZvciBpdGVtIGluIHN0b2NrX2xpc3RdCiAgICAKICAgIGNvbHVtbnMgPSBbeyd0ZXh0Jzoga2V5LCAndHlwZSc6ICdvYmplY3QnfSBmb3Iga2V5IGluIHN0b2NrX2xpc3RbMF0ua2V5cygpXQogICAgCiAgICByZXNwb25zZSA9IFt7J2NvbHVtbnMnOiBjb2x1bW5zLAogICAgICAgICAgICAgICAgJ3Jvd3MnOiBkYXRhLAogICAgICAgICAgICAgICAgJ3R5cGUnOiAndGFibGUnfV0KICAgIHJldHVybiByZXNwb25zZQoKZGVmIGluaXRfY29udGV4dChjb250ZXh0KToKICAgIGNvbnRleHQubG9nZ2VyLmluZm8oIkluaXRhbGl6aW5nIGNvbnRleHQgJiBjb25zdHJ1Y3RpbmcgZmVhdHJ1cmUgdmVjdG9yIikKICAgIHNldGF0dHIoY29udGV4dCwgJ1BST0pFQ1RfTkFNRScsIG9zLmdldGVudignUFJPSkVDVF9OQU1FJywgJ3N0b2Nrcy0nICsgb3MuZ2V0ZW52KCdWM0lPX1VTRVJOQU1FJykpKQogICAgbWxydW4uc2V0X2Vudmlyb25tZW50KHByb2plY3Q9Y29udGV4dC5QUk9KRUNUX05BTUUpCiAgICAKICAgIHN5bV90b191cmwgPSB7J0dPT0dMJzogJ2dvb2dsZS1pbmMnLCAnTVNGVCc6ICdtaWNyb3NvZnQtY29ycCcsICdBTVpOJzogJ2FtYXpvbi1jb20taW5jJywKICAgICAgICAgICAgICAgICAgJ0FBUEwnOiAnYXBwbGUtY29tcHV0ZXItaW5jJywgJ0lOVEMnIDogJ2ludGVsLWNvcnAnfQogICAgc2V0YXR0cihjb250ZXh0LCAnc3ltX3RvX3VybCcsIHN5bV90b191cmwpCiAgICBzZXRhdHRyKGNvbnRleHQsICdzdG9ja3NfdmVjJywgInN0b2Nrcy12ZWMiKQogICAgCiAgICBmZWF0dXJlcyA9IFsic3RvY2tzLnByaWNlc19taW5fMWgiLAogICAgICAgICAgICAgICAgInN0b2Nrcy5wcmljZXNfbWF4XzFoIiwKICAgICAgICAgICAgICAgICJzdG9ja3Mudm9sdW1lc19taW5fMWgiLAogICAgICAgICAgICAgICAgInN0b2Nrcy52b2x1bWVzX21heF8xaCIsCiAgICAgICAgICAgICAgICAic3RvY2tzLnByaWNlIiwKICAgICAgICAgICAgICAgICJzdG9ja3Mudm9sdW1lIiwKICAgICAgICAgICAgICAgICJzdG9ja3MubGFzdF91cGRhdGVkIiwKICAgICAgICAgICAgICAgICJuZXdzLnNlbnRpbWVudHNfbWluXzFoIiwKICAgICAgICAgICAgICAgICJuZXdzLnNlbnRpbWVudHNfbWF4XzFoIiwKICAgICAgICAgICAgICAgICJuZXdzLnNlbnRpbWVudCIsCiAgICAgICAgICAgICAgICAibmV3cy5sYXN0X3JlYWN0aW9uIl0KICAgIAogICAgdmVjdG9yID0gZnMuRmVhdHVyZVZlY3Rvcihjb250ZXh0LnN0b2Nrc192ZWMsIGZlYXR1cmVzLCBkZXNjcmlwdGlvbj0ic3RvY2tzIGRlbW8gZmVhdHVyZSB2ZWN0b3IiKQogICAgdmVjdG9yLnNhdmUoKQoK",
              "noBaseImagesPull": true
            },
            "env": [
              {
                "name": "V3IO_ACCESS_KEY",
                "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              },
              {
                "name": "V3IO_USERNAME",
                "value": "admin"
              },
              {
                "name": "V3IO_API",
                "value": "v3io-webapi.default-tenant.svc:8081"
              }
            ],
            "handler": "06-read-vector:handler",
            "runtime": "python:3.6",
            "volumes": []
          }
        },
        "source": "",
        "image_pull_policy": "Always",
        "build": {
          "commands": [],
          "origin_filename": "/User/demos/stock-analysis/code/06-read-vector.ipynb"
        },
        "mount_applied": true,
        "affinity": null
      },
      "status": {
        "internal_invocation_urls": [],
        "external_invocation_urls": []
      },
      "verbose": false
    },
    {
      "kind": "remote",
      "metadata": {
        "name": "stocks-reader",
        "tag": "latest",
        "hash": "4b800ef389a24bb653ae9ce0ddeadd655f76c558",
        "project": "stocks-admin",
        "categories": [],
        "updated": "2021-08-30T05:37:30.330123+00:00"
      },
      "spec": {
        "command": "http://default-tenant.app.vmdev36.lab.iguazeng.com:31139",
        "args": [],
        "image": "",
        "description": "",
        "min_replicas": 1,
        "max_replicas": 1,
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          },
          {
            "name": "STOCK_LIST",
            "value": "[\"GOOGL\", \"MSFT\", \"AMZN\", \"AAPL\", \"INTC\"]"
          },
          {
            "name": "V3IO_CONTAINER",
            "value": "users"
          },
          {
            "name": "STOCKS_TSDB_TABLE",
            "value": "admin/stocks/stocks_tsdb"
          },
          {
            "name": "STOCKS_KV_TABLE",
            "value": "admin/stocks/stocks_kv"
          },
          {
            "name": "EXPRESSION_TEMPLATE",
            "value": "symbol='{symbol}';price={price};volume={volume};last_updated='{last_updated}'"
          },
          {
            "name": "PROJECT_NAME",
            "value": "stocks-admin"
          }
        ],
        "config": {
          "spec.triggers.cron": {
            "kind": "cron",
            "attributes": {
              "interval": "300s"
            }
          }
        },
        "base_spec": {
          "apiVersion": "nuclio.io/v1",
          "kind": "Function",
          "metadata": {
            "annotations": {
              "nuclio.io/generated_by": "function generated from /User/demos/stock-analysis/code/01-read-stocks.ipynb"
            },
            "labels": {},
            "name": "stocks-reader"
          },
          "spec": {
            "build": {
              "baseImage": "mlrun/ml-models",
              "commands": [
                "pip install lxml",
                "pip install yfinance",
                "pip install requests",
                "pip install v3io_frames"
              ],
              "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHlmaW5hbmNlIGFzIHlmCmltcG9ydCBvcwppbXBvcnQgcGFuZGFzIGFzIHBkCmltcG9ydCB2M2lvX2ZyYW1lcyBhcyB2M2YKaW1wb3J0IGFzdAppbXBvcnQgbWxydW4uZmVhdHVyZV9zdG9yZSBhcyBmcwppbXBvcnQgbWxydW4KCmRlZiBjb250cnVjdF9kYXRhZnJhbWUoYWxsX3JlY29yZHMpOgogICAgdGVtcF9kZiA9IHBkLkRhdGFGcmFtZShhbGxfcmVjb3JkcykKICAgIHRlbXBfZGYubGFzdF91cGRhdGVkID0gdGVtcF9kZi5sYXN0X3VwZGF0ZWQuYXN0eXBlKCJzdHIiKQogICAgcmV0dXJuIHRlbXBfZGYKCmRlZiB1cGRhdGVfdGlja2Vycyhjb250ZXh0LCBwZXJkaW9kLCBpbnRlcnZhbCk6CiAgICBhbGxfcmVjb3Jkcz1bXQogICAgc3RvY2tzX2RmID0gcGQuRGF0YUZyYW1lKCkKICAgIGZvciBzeW0gaW4gY29udGV4dC5zdG9ja19zeW1zOgogICAgICAgIGhpc3QgPSB5Zi5UaWNrZXIoc3ltKS5oaXN0b3J5KHBlcmlvZD1wZXJkaW9kLCBpbnRlcnZhbD0nMW0nKQogICAgICAgIHRpbWUgPSBoaXN0LmluZGV4W2xlbihoaXN0KSAtIDFdCiAgICAgICAgcmVjb3JkID0gaGlzdC5sb2NbdGltZV0KICAgICAgICBsYXN0ID0gY29udGV4dC5sYXN0X3RyYWRlX3RpbWVzLmdldChzeW0pCiAgICAgICAgY29udGV4dC5sb2dnZXIuaW5mbyhmJ1JlY2VpdmVkIHtzeW19IGRhdGEgZnJvbSB5ZmluYW5jZSwgaW5jbHVkaW5nIHtsZW4oaGlzdCl9IGNhbmRsZXMgZW5kaW5nIGF0IHtsYXN0fScpCiAgICAgICAgaWYgbm90IGxhc3Qgb3IgdGltZSA+IGxhc3Q6CiAgICAgICAgICAgIAogICAgICAgICAgICBzdG9jayA9IHsnc3ltYm9sJzogc3ltLCAncHJpY2UnOiByZWNvcmRbJ0Nsb3NlJ10sICd2b2x1bWUnOiByZWNvcmRbJ1ZvbHVtZSddLCAnbGFzdF91cGRhdGVkJzogdGltZX0KICAgICAgICAgICAgYWxsX3JlY29yZHMuYXBwZW5kKHN0b2NrKQogICAgICAgICAgICBleHByID0gY29udGV4dC5leHByX3RlbXBsYXRlLmZvcm1hdCgqKnN0b2NrKQogICAgICAgICAgICBjb250ZXh0LmxvZ2dlci5kZWJ1Z193aXRoKCd1cGRhdGUgZXhwcmVzc2lvbicsIHN5bWJvbD1zeW0sIGV4cHI9ZXhwcikKICAgICAgICAgICAgY29udGV4dC52M2MuZXhlY3V0ZSgna3YnLCBjb250ZXh0LnN0b2Nrc19rdl90YWJsZSwgJ3VwZGF0ZScsIGFyZ3M9eydrZXknOiBzeW0sICdleHByZXNzaW9uJzogZXhwcn0pCiAgICAgICAgIAogICAgICAgICAgICBjb250ZXh0LmxvZ2dlci5pbmZvKGYnVXBkYXRlZCByZWNvcmRzIGZyb20ge2xhc3R9IHRvIHt0aW1lfScpCiAgICAgICAgICAgIGNvbnRleHQubGFzdF90cmFkZV90aW1lc1tzeW1dID0gdGltZQogICAgICAgICAgICBoaXN0WydzeW1ib2wnXSA9IHN5bQogICAgICAgICAgICBoaXN0ID0gaGlzdC5yZXNldF9pbmRleCgpCiAgICAgICAgICAgIGhpc3QgPSBoaXN0LnNldF9pbmRleChbJ0RhdGV0aW1lJywgJ3N5bWJvbCddKQogICAgICAgICAgICBoaXN0ID0gaGlzdC5sb2NbOiwgWydDbG9zZScsICdWb2x1bWUnXV0KICAgICAgICAgICAgaGlzdCA9IGhpc3QucmVuYW1lKGNvbHVtbnM9eydDbG9zZSc6ICdwcmljZScsICdWb2x1bWUnOiAndm9sdW1lJ30pCiAgICAgICAgICAgIHN0b2Nrc19kZiA9IHN0b2Nrc19kZi5hcHBlbmQoaGlzdCkKICAgICAgICAgICAgY29udGV4dC5sb2dnZXIuaW5mbyhmJ0FkZGVkIHJlY29yZHMge2hpc3Quc2hhcGVbMF19IHJlY29yZHMgZm9yIHtzeW19IHRvIGhpc3RvcnknKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIGNvbnRleHQubG9nZ2VyLmluZm8oZidObyB1cGRhdGUgd2FzIG1hZGUsIGN1cnJlbnQgVFM6IHtsYXN0fSB2cy4gbmV3IGRhdGEge3RpbWV9JykKICAgIAogICAgY29udGV4dC52M2MuZXhlY3V0ZSgia3YiLHRhYmxlID0gY29udGV4dC5zdG9ja3Nfa3ZfdGFibGUsIGNvbW1hbmQgPSAiaW5mZXIiKQogICAgaWYobGVuKGFsbF9yZWNvcmRzKSAhPSAwKToKICAgICAgICBzdG9ja19pbmZvID0gY29udHJ1Y3RfZGF0YWZyYW1lKGFsbF9yZWNvcmRzKQogICAgICAgIGNvbnRleHQubG9nZ2VyLmluZm8oZiJXcml0aW5nIG5ldyBkYXRhZnJhbWUgd2l0aCBzaGFwZSB7c3RvY2tfaW5mby5zaGFwZX0gdG8gZmVhdHVyZSBzdG9yZSIpCiAgICAgICAgZnMuaW5nZXN0KGNvbnRleHQuc3RvY2tfaW5mb19mZWF0dXJlX3NldCwgc3RvY2tfaW5mbywgaW5mZXJfb3B0aW9ucz1mcy5JbmZlck9wdGlvbnMuZGVmYXVsdCgpKQogICAgICAgIAogICAgaWYgc3RvY2tzX2RmLnNoYXBlWzBdPjA6CiAgICAgICAgc3RvY2tzX2RmID0gc3RvY2tzX2RmLnNvcnRfaW5kZXgobGV2ZWw9MCkKICAgICAgICBjb250ZXh0LmxvZ2dlci5kZWJ1Z193aXRoKCd3cml0aW5nIGRhdGEgdG8gVFNEQicsIHN0b2Nrcz1zdG9ja3NfZGYpCiAgICAgICAgc3RvY2tzX2RmLnRvX2NzdignaGlzdG9yeS5jc3YnKQogICAgICAgIGNvbnRleHQudjNjLndyaXRlKGJhY2tlbmQ9J3RzZGInLCB0YWJsZT1jb250ZXh0LnN0b2Nrc190c2RiX3RhYmxlLCBkZnM9c3RvY2tzX2RmKQoKZGVmIGluaXRfY29udGV4dChjb250ZXh0KToKICAgIGNvbnRleHQubG9nZ2VyLmluZm8oImluaXQgc3RvY2tzIHJlYWRlciBjb250ZXh0IikKICAgIHNldGF0dHIoY29udGV4dCwgJ1BST0pFQ1RfTkFNRScsIG9zLmdldGVudignUFJPSkVDVF9OQU1FJywgJ3N0b2Nrcy0nICsgb3MuZ2V0ZW52KCdWM0lPX1VTRVJOQU1FJykpKQogICAgbWxydW4uc2V0X2Vudmlyb25tZW50KHByb2plY3QgPSBjb250ZXh0LlBST0pFQ1RfTkFNRSkKICAgIHNldGF0dHIoY29udGV4dCwiVjNJT19GUkFNRVNEIiwgb3MuZ2V0ZW52KCJWM0lPX0ZSQU1FU0QiLCdmcmFtZXNkOjgwODEnKSkKICAgIGNsaWVudCA9IHYzZi5DbGllbnQoY29udGV4dC5WM0lPX0ZSQU1FU0QsIGNvbnRhaW5lcj1vcy5nZXRlbnYoJ1YzSU9fQ09OVEFJTkVSJywgJ3VzZXJzJykpCiAgICBzZXRhdHRyKGNvbnRleHQsICd2M2MnLCBjbGllbnQpCiAgICAKICAgIHNldGF0dHIoY29udGV4dCwgJ3N0b2Nrc19rdl90YWJsZScsIG9zLmdldGVudignU1RPQ0tTX0tWX1RBQkxFJywgb3MuZ2V0ZW52KCdWM0lPX1VTRVJOQU1FJykgKyAnL3N0b2Nrcy9zdG9ja3Nfa3YnKSkKICAgIHNldGF0dHIoY29udGV4dCwgJ3N0b2Nrc190c2RiX3RhYmxlJywgb3MuZ2V0ZW52KCdTVE9DS1NfVFNEQl9UQUJMRScsIG9zLmdldGVudignVjNJT19VU0VSTkFNRScpICsgJy9zdG9ja3Mvc3RvY2tzX3RzZGInKSkKICAgIGNvbnRleHQudjNjLmNyZWF0ZShiYWNrZW5kPSd0c2RiJywgdGFibGU9Y29udGV4dC5zdG9ja3NfdHNkYl90YWJsZSwgcmF0ZT0nMS9tJywgaWZfZXhpc3RzPTEpCiAgICAKICAgIHN0b2Nrc19pbmZvX3NldCA9IGZzLkZlYXR1cmVTZXQoInN0b2NrcyIsIGVudGl0aWVzPVtmcy5FbnRpdHkoInN5bWJvbCIpXSkKICAgIHNldGF0dHIoY29udGV4dCwnc3RvY2tfaW5mb19mZWF0dXJlX3NldCcsc3RvY2tzX2luZm9fc2V0KQogICAgCiAgICBjb250ZXh0LnN0b2NrX2luZm9fZmVhdHVyZV9zZXQuYWRkX2FnZ3JlZ2F0aW9uKCJwcmljZXMiLCJwcmljZSIsWyJtaW4iLCJtYXgiXSxbIjFoIl0sIjEwbSIpCiAgICBjb250ZXh0LnN0b2NrX2luZm9fZmVhdHVyZV9zZXQuYWRkX2FnZ3JlZ2F0aW9uKCJ2b2x1bWVzIiwidm9sdW1lIixbIm1pbiIsIm1heCJdLFsiMWgiXSwiMTBtIikKICAgIAogICAgc3RvY2tfZHVtbXkgPSBwZC5EYXRhRnJhbWUoeyJzeW1ib2wiOlsnR09PR0wnLCdNU0ZUJywnQU1aTicsJ0FBUEwnLCdJTlRDJ10sInByaWNlIjpbMCwwLDAsMCwwXSwidm9sdW1lIjpbMCwwLDAsMCwwXSwibGFzdF91cGRhdGVkIjpbMCwwLDAsMCwwXX0pCiAgICBmcy5pbmdlc3QoY29udGV4dC5zdG9ja19pbmZvX2ZlYXR1cmVfc2V0LCBzdG9ja19kdW1teSwgaW5mZXJfb3B0aW9ucz1mcy5JbmZlck9wdGlvbnMuZGVmYXVsdCgpKQogICAgCiAgICBzdG9ja3MgPSBvcy5nZXRlbnYoJ1NUT0NLX0xJU1QnLCdHT09HTCxNU0ZULEFNWk4sQUFQTCxJTlRDJykKICAgIGlmIHN0b2Nrcy5zdGFydHN3aXRoKCdbJyk6CiAgICAgICAgc3RvY2tfc3ltcyA9IGFzdC5saXRlcmFsX2V2YWwoc3RvY2tzKQogICAgZWxzZTogCiAgICAgICAgc3RvY2tfc3ltcyA9IHN0b2Nrcy5zcGxpdCgnLCcpCiAgICBzZXRhdHRyKGNvbnRleHQsICdzdG9ja19zeW1zJywgc3RvY2tfc3ltcykKICAgIAoKICAgIGV4cHJfdGVtcGxhdGUgPSBvcy5nZXRlbnYoJ0VYUFJFU1NJT05fVEVNUExBVEUnLCAic3ltYm9sPSd7c3ltYm9sfSc7cHJpY2U9e3ByaWNlfTt2b2x1bWU9e3ZvbHVtZX07bGFzdF91cGRhdGVkPSd7bGFzdF91cGRhdGVkfSciKQogICAgc2V0YXR0cihjb250ZXh0LCAnZXhwcl90ZW1wbGF0ZScsIGV4cHJfdGVtcGxhdGUpCgogICAgbGFzdF90cmFkZV90aW1lcyA9IHt9CiAgICBzZXRhdHRyKGNvbnRleHQsICdsYXN0X3RyYWRlX3RpbWVzJywgbGFzdF90cmFkZV90aW1lcykKICAgIAogICAgdXBkYXRlX3RpY2tlcnMoY29udGV4dCwgJzdkJywgJzFtJykKICAgIAoKZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICB1cGRhdGVfdGlja2Vycyhjb250ZXh0LCAnNW0nLCAnMW0nKQogICAgcmV0dXJuICdkb25lJwoK",
              "noBaseImagesPull": true
            },
            "env": [
              {
                "name": "V3IO_ACCESS_KEY",
                "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              },
              {
                "name": "V3IO_USERNAME",
                "value": "admin"
              },
              {
                "name": "V3IO_API",
                "value": "v3io-webapi.default-tenant.svc:8081"
              }
            ],
            "handler": "01-read-stocks:handler",
            "runtime": "python:3.6",
            "volumes": []
          }
        },
        "source": "",
        "image_pull_policy": "Always",
        "build": {
          "commands": [],
          "origin_filename": "/User/demos/stock-analysis/code/01-read-stocks.ipynb"
        },
        "mount_applied": true,
        "affinity": null
      },
      "status": {
        "state": "ready",
        "nuclio_name": "stocks-admin-stocks-reader",
        "address": "default-tenant.app.vmdev36.lab.iguazeng.com:31139",
        "internal_invocation_urls": [
          "nuclio-stocks-admin-stocks-reader.default-tenant.svc.cluster.local:8080"
        ],
        "external_invocation_urls": [
          "default-tenant.app.vmdev36.lab.iguazeng.com:31139"
        ]
      },
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "name": "grafana-view",
        "tag": "",
        "project": "stocks-admin",
        "categories": [],
        "hash": "b1947342c248a144c5064d6547796df42193ac06",
        "updated": "2021-08-30T05:36:41.803856+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "entry_points": {
          "handler": {
            "name": "handler",
            "doc": "",
            "parameters": [
              {
                "name": "context",
                "default": ""
              },
              {
                "name": "streamview_url",
                "default": ""
              },
              {
                "name": "readvector_url",
                "default": ""
              },
              {
                "name": "v3io_container",
                "default": ""
              },
              {
                "name": "stocks_kv",
                "default": ""
              },
              {
                "name": "stocks_tsdb",
                "default": ""
              },
              {
                "name": "grafana_url",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 7
          },
          "init_context": {
            "name": "init_context",
            "doc": "",
            "parameters": [
              {
                "name": "context",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 38
          }
        },
        "description": "",
        "image_pull_policy": "Always",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKZnJvbSBncmFmd2l6IGltcG9ydCAqCmltcG9ydCBvcwppbXBvcnQgdjNpb19mcmFtZXMgYXMgdjNmCgpkZWYgaGFuZGxlcihjb250ZXh0LHN0cmVhbXZpZXdfdXJsLHJlYWR2ZWN0b3JfdXJsLHYzaW9fY29udGFpbmVyLHN0b2Nrc19rdixzdG9ja3NfdHNkYixncmFmYW5hX3VybCk6CiAgICAKICAgIGNvbnRleHQubG9nZ2VyLmluZm8oIkluaXRpYWxpemluZyBEYXRhU291cmNlczEiKQogICAgY29udGV4dC5sb2dnZXIuaW5mbyhzdHJlYW12aWV3X3VybCkKICAgIGNvbnRleHQubG9nZ2VyLmluZm8ocmVhZHZlY3Rvcl91cmwpCiAgICAKICAgIERhdGFTb3VyY2UobmFtZT0nSWd1YXppbycpLmRlcGxveShncmFmYW5hX3VybCwgdXNlX2F1dGg9VHJ1ZSkKICAgIERhdGFTb3VyY2UobmFtZT0nc3RyZWFtLXZpZXdlcicsIGZyYW1lc191cmw9c3RyZWFtdmlld191cmwpLmRlcGxveShncmFmYW5hX3VybCwgdXNlX2F1dGg9RmFsc2UsIG92ZXJ3cml0ZT1GYWxzZSkKICAgIERhdGFTb3VyY2UobmFtZT0ncmVhZC12ZWN0b3InLCBmcmFtZXNfdXJsPXJlYWR2ZWN0b3JfdXJsKS5kZXBsb3koZ3JhZmFuYV91cmwsIHVzZV9hdXRoPUZhbHNlLCBvdmVyd3JpdGU9RmFsc2UpCiAgICAKICAgIGRhc2ggPSBEYXNoYm9hcmQoInN0b2NrcyIsIHN0YXJ0PSdub3ctN2QnLCBkYXRhU291cmNlPSdJZ3VhemlvJykKICAgIAogICAgZGFzaC50ZW1wbGF0ZShuYW1lPSJTWU1CT0wiLCBsYWJlbD0iU3ltYm9sIiwgcXVlcnk9ImZpZWxkcz1zeW1ib2w7dGFibGU9IiArIG9zLmdldGVudignVjNJT19VU0VSTkFNRScpICsgIi9zdG9ja3Mvc3RvY2tzX2t2O2JhY2tlbmQ9a3Y7Y29udGFpbmVyPXVzZXJzIikKCiAgICB0YmwgPSBUYWJsZSgnQ3VycmVudCBTdG9ja3MgVmFsdWUnLCBzcGFuPTEyKS5zb3VyY2UodGFibGU9c3RvY2tzX2t2LGZpZWxkcz1bJ3N5bWJvbCcsJ3ByaWNlJywgJ3ZvbHVtZScsJ2xhc3RfdXBkYXRlZCcsICdzZW50aW1lbnQnLCdsYXN0X3JlYWN0aW9uJ10sY29udGFpbmVyPXYzaW9fY29udGFpbmVyKQogICAgZGFzaC5yb3coW3RibF0pCiAgICAKICAgIG1ldHJpY3Nfcm93ID0gW0dyYXBoKG1ldHJpYykuc2VyaWVzKHRhYmxlPXN0b2Nrc190c2RiLCBmaWVsZHM9W21ldHJpY10sIGZpbHRlcj0nc3ltYm9sPT0iJFNZTUJPTCInLGNvbnRhaW5lcj12M2lvX2NvbnRhaW5lcikgZm9yIG1ldHJpYyBpbiBbJ3ByaWNlJywndm9sdW1lJ11dCiAgICBtZXRyaWNzX3Jvdy5hcHBlbmQoR3JhcGgoJ3NlbnRpbWVudCcpLnNlcmllcyh0YWJsZT1zdG9ja3NfdHNkYiwgZmllbGRzPVsnc2VudGltZW50J10sIGZpbHRlcj0nc3ltYm9sPT0iJFNZTUJPTCInLCBjb250YWluZXI9djNpb19jb250YWluZXIpKQogICAgZGFzaC5yb3cobWV0cmljc19yb3cpCiAgICAKICAgIGxvZyA9IFRhYmxlKCdBcnRpY2xlcyBMb2cnLCBkYXRhU291cmNlPSdzdHJlYW0tdmlld2VyJywgc3Bhbj0xMikKICAgIGRhc2gucm93KFtsb2ddKQoKICAgIGxvZyA9IFRhYmxlKCdWZWN0b3IgTG9nJywgZGF0YVNvdXJjZT0ncmVhZC12ZWN0b3InLCBzcGFuPTEyKQogICAgZGFzaC5yb3coW2xvZ10pCiAgICAKICAgIGRhc2guZGVwbG95KGdyYWZhbmFfdXJsKQogICAgCiAgICByZXR1cm4gIkRvbmUiCgpkZWYgaW5pdF9jb250ZXh0KGNvbnRleHQpOgogICAgY29udGV4dC5sb2dnZXIuaW5mbygiaW5pdCBjb250ZXh0IikgCgo=",
          "image": ".mlrun/func-stocks-admin-grafana-view:latest",
          "commands": [
            "pip install git+https://github.com/v3io/grafwiz --upgrade",
            "pip install v3io_frames"
          ],
          "origin_filename": "/User/demos/stock-analysis/code/07-grafana.ipynb"
        },
        "mount_applied": true,
        "priority_class_name": "",
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "remote",
      "metadata": {
        "name": "stocks-reader",
        "tag": "",
        "hash": "b516437a5d97a35ca18ee575ad17d3914d0eb36c",
        "project": "stocks-admin",
        "categories": [],
        "updated": "2021-08-30T05:37:30.231238+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "",
        "description": "",
        "min_replicas": 1,
        "max_replicas": 1,
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          },
          {
            "name": "STOCK_LIST",
            "value": "[\"GOOGL\", \"MSFT\", \"AMZN\", \"AAPL\", \"INTC\"]"
          },
          {
            "name": "V3IO_CONTAINER",
            "value": "users"
          },
          {
            "name": "STOCKS_TSDB_TABLE",
            "value": "admin/stocks/stocks_tsdb"
          },
          {
            "name": "STOCKS_KV_TABLE",
            "value": "admin/stocks/stocks_kv"
          },
          {
            "name": "EXPRESSION_TEMPLATE",
            "value": "symbol='{symbol}';price={price};volume={volume};last_updated='{last_updated}'"
          },
          {
            "name": "PROJECT_NAME",
            "value": "stocks-admin"
          }
        ],
        "config": {
          "spec.triggers.cron": {
            "kind": "cron",
            "attributes": {
              "interval": "300s"
            }
          },
          "metadata.labels.mlrun/class": "remote",
          "spec.serviceType": "NodePort",
          "spec.minReplicas": 1,
          "spec.maxReplicas": 1
        },
        "base_spec": {
          "apiVersion": "nuclio.io/v1",
          "kind": "Function",
          "metadata": {
            "annotations": {
              "nuclio.io/generated_by": "function generated from /User/demos/stock-analysis/code/01-read-stocks.ipynb"
            },
            "labels": {
              "mlrun/class": "remote",
              "nuclio.io/project-name": "stocks-admin"
            },
            "name": "stocks-admin-stocks-reader"
          },
          "spec": {
            "build": {
              "baseImage": "mlrun/ml-models:0.7.0-rc11",
              "commands": [
                "pip install lxml",
                "pip install yfinance",
                "pip install requests",
                "pip install v3io_frames"
              ],
              "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHlmaW5hbmNlIGFzIHlmCmltcG9ydCBvcwppbXBvcnQgcGFuZGFzIGFzIHBkCmltcG9ydCB2M2lvX2ZyYW1lcyBhcyB2M2YKaW1wb3J0IGFzdAppbXBvcnQgbWxydW4uZmVhdHVyZV9zdG9yZSBhcyBmcwppbXBvcnQgbWxydW4KCmRlZiBjb250cnVjdF9kYXRhZnJhbWUoYWxsX3JlY29yZHMpOgogICAgdGVtcF9kZiA9IHBkLkRhdGFGcmFtZShhbGxfcmVjb3JkcykKICAgIHRlbXBfZGYubGFzdF91cGRhdGVkID0gdGVtcF9kZi5sYXN0X3VwZGF0ZWQuYXN0eXBlKCJzdHIiKQogICAgcmV0dXJuIHRlbXBfZGYKCmRlZiB1cGRhdGVfdGlja2Vycyhjb250ZXh0LCBwZXJkaW9kLCBpbnRlcnZhbCk6CiAgICBhbGxfcmVjb3Jkcz1bXQogICAgc3RvY2tzX2RmID0gcGQuRGF0YUZyYW1lKCkKICAgIGZvciBzeW0gaW4gY29udGV4dC5zdG9ja19zeW1zOgogICAgICAgIGhpc3QgPSB5Zi5UaWNrZXIoc3ltKS5oaXN0b3J5KHBlcmlvZD1wZXJkaW9kLCBpbnRlcnZhbD0nMW0nKQogICAgICAgIHRpbWUgPSBoaXN0LmluZGV4W2xlbihoaXN0KSAtIDFdCiAgICAgICAgcmVjb3JkID0gaGlzdC5sb2NbdGltZV0KICAgICAgICBsYXN0ID0gY29udGV4dC5sYXN0X3RyYWRlX3RpbWVzLmdldChzeW0pCiAgICAgICAgY29udGV4dC5sb2dnZXIuaW5mbyhmJ1JlY2VpdmVkIHtzeW19IGRhdGEgZnJvbSB5ZmluYW5jZSwgaW5jbHVkaW5nIHtsZW4oaGlzdCl9IGNhbmRsZXMgZW5kaW5nIGF0IHtsYXN0fScpCiAgICAgICAgaWYgbm90IGxhc3Qgb3IgdGltZSA+IGxhc3Q6CiAgICAgICAgICAgIAogICAgICAgICAgICBzdG9jayA9IHsnc3ltYm9sJzogc3ltLCAncHJpY2UnOiByZWNvcmRbJ0Nsb3NlJ10sICd2b2x1bWUnOiByZWNvcmRbJ1ZvbHVtZSddLCAnbGFzdF91cGRhdGVkJzogdGltZX0KICAgICAgICAgICAgYWxsX3JlY29yZHMuYXBwZW5kKHN0b2NrKQogICAgICAgICAgICBleHByID0gY29udGV4dC5leHByX3RlbXBsYXRlLmZvcm1hdCgqKnN0b2NrKQogICAgICAgICAgICBjb250ZXh0LmxvZ2dlci5kZWJ1Z193aXRoKCd1cGRhdGUgZXhwcmVzc2lvbicsIHN5bWJvbD1zeW0sIGV4cHI9ZXhwcikKICAgICAgICAgICAgY29udGV4dC52M2MuZXhlY3V0ZSgna3YnLCBjb250ZXh0LnN0b2Nrc19rdl90YWJsZSwgJ3VwZGF0ZScsIGFyZ3M9eydrZXknOiBzeW0sICdleHByZXNzaW9uJzogZXhwcn0pCiAgICAgICAgIAogICAgICAgICAgICBjb250ZXh0LmxvZ2dlci5pbmZvKGYnVXBkYXRlZCByZWNvcmRzIGZyb20ge2xhc3R9IHRvIHt0aW1lfScpCiAgICAgICAgICAgIGNvbnRleHQubGFzdF90cmFkZV90aW1lc1tzeW1dID0gdGltZQogICAgICAgICAgICBoaXN0WydzeW1ib2wnXSA9IHN5bQogICAgICAgICAgICBoaXN0ID0gaGlzdC5yZXNldF9pbmRleCgpCiAgICAgICAgICAgIGhpc3QgPSBoaXN0LnNldF9pbmRleChbJ0RhdGV0aW1lJywgJ3N5bWJvbCddKQogICAgICAgICAgICBoaXN0ID0gaGlzdC5sb2NbOiwgWydDbG9zZScsICdWb2x1bWUnXV0KICAgICAgICAgICAgaGlzdCA9IGhpc3QucmVuYW1lKGNvbHVtbnM9eydDbG9zZSc6ICdwcmljZScsICdWb2x1bWUnOiAndm9sdW1lJ30pCiAgICAgICAgICAgIHN0b2Nrc19kZiA9IHN0b2Nrc19kZi5hcHBlbmQoaGlzdCkKICAgICAgICAgICAgY29udGV4dC5sb2dnZXIuaW5mbyhmJ0FkZGVkIHJlY29yZHMge2hpc3Quc2hhcGVbMF19IHJlY29yZHMgZm9yIHtzeW19IHRvIGhpc3RvcnknKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIGNvbnRleHQubG9nZ2VyLmluZm8oZidObyB1cGRhdGUgd2FzIG1hZGUsIGN1cnJlbnQgVFM6IHtsYXN0fSB2cy4gbmV3IGRhdGEge3RpbWV9JykKICAgIAogICAgY29udGV4dC52M2MuZXhlY3V0ZSgia3YiLHRhYmxlID0gY29udGV4dC5zdG9ja3Nfa3ZfdGFibGUsIGNvbW1hbmQgPSAiaW5mZXIiKQogICAgaWYobGVuKGFsbF9yZWNvcmRzKSAhPSAwKToKICAgICAgICBzdG9ja19pbmZvID0gY29udHJ1Y3RfZGF0YWZyYW1lKGFsbF9yZWNvcmRzKQogICAgICAgIGNvbnRleHQubG9nZ2VyLmluZm8oZiJXcml0aW5nIG5ldyBkYXRhZnJhbWUgd2l0aCBzaGFwZSB7c3RvY2tfaW5mby5zaGFwZX0gdG8gZmVhdHVyZSBzdG9yZSIpCiAgICAgICAgZnMuaW5nZXN0KGNvbnRleHQuc3RvY2tfaW5mb19mZWF0dXJlX3NldCwgc3RvY2tfaW5mbywgaW5mZXJfb3B0aW9ucz1mcy5JbmZlck9wdGlvbnMuZGVmYXVsdCgpKQogICAgICAgIAogICAgaWYgc3RvY2tzX2RmLnNoYXBlWzBdPjA6CiAgICAgICAgc3RvY2tzX2RmID0gc3RvY2tzX2RmLnNvcnRfaW5kZXgobGV2ZWw9MCkKICAgICAgICBjb250ZXh0LmxvZ2dlci5kZWJ1Z193aXRoKCd3cml0aW5nIGRhdGEgdG8gVFNEQicsIHN0b2Nrcz1zdG9ja3NfZGYpCiAgICAgICAgc3RvY2tzX2RmLnRvX2NzdignaGlzdG9yeS5jc3YnKQogICAgICAgIGNvbnRleHQudjNjLndyaXRlKGJhY2tlbmQ9J3RzZGInLCB0YWJsZT1jb250ZXh0LnN0b2Nrc190c2RiX3RhYmxlLCBkZnM9c3RvY2tzX2RmKQoKZGVmIGluaXRfY29udGV4dChjb250ZXh0KToKICAgIGNvbnRleHQubG9nZ2VyLmluZm8oImluaXQgc3RvY2tzIHJlYWRlciBjb250ZXh0IikKICAgIHNldGF0dHIoY29udGV4dCwgJ1BST0pFQ1RfTkFNRScsIG9zLmdldGVudignUFJPSkVDVF9OQU1FJywgJ3N0b2Nrcy0nICsgb3MuZ2V0ZW52KCdWM0lPX1VTRVJOQU1FJykpKQogICAgbWxydW4uc2V0X2Vudmlyb25tZW50KHByb2plY3QgPSBjb250ZXh0LlBST0pFQ1RfTkFNRSkKICAgIHNldGF0dHIoY29udGV4dCwiVjNJT19GUkFNRVNEIiwgb3MuZ2V0ZW52KCJWM0lPX0ZSQU1FU0QiLCdmcmFtZXNkOjgwODEnKSkKICAgIGNsaWVudCA9IHYzZi5DbGllbnQoY29udGV4dC5WM0lPX0ZSQU1FU0QsIGNvbnRhaW5lcj1vcy5nZXRlbnYoJ1YzSU9fQ09OVEFJTkVSJywgJ3VzZXJzJykpCiAgICBzZXRhdHRyKGNvbnRleHQsICd2M2MnLCBjbGllbnQpCiAgICAKICAgIHNldGF0dHIoY29udGV4dCwgJ3N0b2Nrc19rdl90YWJsZScsIG9zLmdldGVudignU1RPQ0tTX0tWX1RBQkxFJywgb3MuZ2V0ZW52KCdWM0lPX1VTRVJOQU1FJykgKyAnL3N0b2Nrcy9zdG9ja3Nfa3YnKSkKICAgIHNldGF0dHIoY29udGV4dCwgJ3N0b2Nrc190c2RiX3RhYmxlJywgb3MuZ2V0ZW52KCdTVE9DS1NfVFNEQl9UQUJMRScsIG9zLmdldGVudignVjNJT19VU0VSTkFNRScpICsgJy9zdG9ja3Mvc3RvY2tzX3RzZGInKSkKICAgIGNvbnRleHQudjNjLmNyZWF0ZShiYWNrZW5kPSd0c2RiJywgdGFibGU9Y29udGV4dC5zdG9ja3NfdHNkYl90YWJsZSwgcmF0ZT0nMS9tJywgaWZfZXhpc3RzPTEpCiAgICAKICAgIHN0b2Nrc19pbmZvX3NldCA9IGZzLkZlYXR1cmVTZXQoInN0b2NrcyIsIGVudGl0aWVzPVtmcy5FbnRpdHkoInN5bWJvbCIpXSkKICAgIHNldGF0dHIoY29udGV4dCwnc3RvY2tfaW5mb19mZWF0dXJlX3NldCcsc3RvY2tzX2luZm9fc2V0KQogICAgCiAgICBjb250ZXh0LnN0b2NrX2luZm9fZmVhdHVyZV9zZXQuYWRkX2FnZ3JlZ2F0aW9uKCJwcmljZXMiLCJwcmljZSIsWyJtaW4iLCJtYXgiXSxbIjFoIl0sIjEwbSIpCiAgICBjb250ZXh0LnN0b2NrX2luZm9fZmVhdHVyZV9zZXQuYWRkX2FnZ3JlZ2F0aW9uKCJ2b2x1bWVzIiwidm9sdW1lIixbIm1pbiIsIm1heCJdLFsiMWgiXSwiMTBtIikKICAgIAogICAgc3RvY2tfZHVtbXkgPSBwZC5EYXRhRnJhbWUoeyJzeW1ib2wiOlsnR09PR0wnLCdNU0ZUJywnQU1aTicsJ0FBUEwnLCdJTlRDJ10sInByaWNlIjpbMCwwLDAsMCwwXSwidm9sdW1lIjpbMCwwLDAsMCwwXSwibGFzdF91cGRhdGVkIjpbMCwwLDAsMCwwXX0pCiAgICBmcy5pbmdlc3QoY29udGV4dC5zdG9ja19pbmZvX2ZlYXR1cmVfc2V0LCBzdG9ja19kdW1teSwgaW5mZXJfb3B0aW9ucz1mcy5JbmZlck9wdGlvbnMuZGVmYXVsdCgpKQogICAgCiAgICBzdG9ja3MgPSBvcy5nZXRlbnYoJ1NUT0NLX0xJU1QnLCdHT09HTCxNU0ZULEFNWk4sQUFQTCxJTlRDJykKICAgIGlmIHN0b2Nrcy5zdGFydHN3aXRoKCdbJyk6CiAgICAgICAgc3RvY2tfc3ltcyA9IGFzdC5saXRlcmFsX2V2YWwoc3RvY2tzKQogICAgZWxzZTogCiAgICAgICAgc3RvY2tfc3ltcyA9IHN0b2Nrcy5zcGxpdCgnLCcpCiAgICBzZXRhdHRyKGNvbnRleHQsICdzdG9ja19zeW1zJywgc3RvY2tfc3ltcykKICAgIAoKICAgIGV4cHJfdGVtcGxhdGUgPSBvcy5nZXRlbnYoJ0VYUFJFU1NJT05fVEVNUExBVEUnLCAic3ltYm9sPSd7c3ltYm9sfSc7cHJpY2U9e3ByaWNlfTt2b2x1bWU9e3ZvbHVtZX07bGFzdF91cGRhdGVkPSd7bGFzdF91cGRhdGVkfSciKQogICAgc2V0YXR0cihjb250ZXh0LCAnZXhwcl90ZW1wbGF0ZScsIGV4cHJfdGVtcGxhdGUpCgogICAgbGFzdF90cmFkZV90aW1lcyA9IHt9CiAgICBzZXRhdHRyKGNvbnRleHQsICdsYXN0X3RyYWRlX3RpbWVzJywgbGFzdF90cmFkZV90aW1lcykKICAgIAogICAgdXBkYXRlX3RpY2tlcnMoY29udGV4dCwgJzdkJywgJzFtJykKICAgIAoKZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICB1cGRhdGVfdGlja2Vycyhjb250ZXh0LCAnNW0nLCAnMW0nKQogICAgcmV0dXJuICdkb25lJwoK",
              "noBaseImagesPull": true
            },
            "env": [
              {
                "name": "V3IO_ACCESS_KEY",
                "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              },
              {
                "name": "V3IO_USERNAME",
                "value": "admin"
              },
              {
                "name": "V3IO_API",
                "value": "v3io-webapi.default-tenant.svc:8081"
              },
              {
                "name": "V3IO_FRAMESD",
                "value": "framesd:8081"
              },
              {
                "name": "STOCK_LIST",
                "value": "[\"GOOGL\", \"MSFT\", \"AMZN\", \"AAPL\", \"INTC\"]"
              },
              {
                "name": "V3IO_CONTAINER",
                "value": "users"
              },
              {
                "name": "STOCKS_TSDB_TABLE",
                "value": "admin/stocks/stocks_tsdb"
              },
              {
                "name": "STOCKS_KV_TABLE",
                "value": "admin/stocks/stocks_kv"
              },
              {
                "name": "EXPRESSION_TEMPLATE",
                "value": "symbol='{symbol}';price={price};volume={volume};last_updated='{last_updated}'"
              },
              {
                "name": "PROJECT_NAME",
                "value": "stocks-admin"
              },
              {
                "name": "MLRUN_DEFAULT_PROJECT",
                "value": "stocks-admin"
              },
              {
                "name": "MLRUN_DBPATH",
                "value": "http://mlrun-api:8080"
              },
              {
                "name": "MLRUN_NAMESPACE",
                "value": "default-tenant"
              }
            ],
            "handler": "01-read-stocks:handler",
            "runtime": "python:3.6",
            "volumes": [
              {
                "volume": {
                  "flexVolume": {
                    "driver": "v3io/fuse",
                    "options": {
                      "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
                    }
                  },
                  "name": "v3io"
                },
                "volumeMount": {
                  "mountPath": "/v3io",
                  "name": "v3io",
                  "subPath": ""
                }
              },
              {
                "volume": {
                  "flexVolume": {
                    "driver": "v3io/fuse",
                    "options": {
                      "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
                    }
                  },
                  "name": "v3io"
                },
                "volumeMount": {
                  "mountPath": "/User",
                  "name": "v3io",
                  "subPath": "users/admin"
                }
              }
            ],
            "triggers": {
              "cron": {
                "kind": "cron",
                "attributes": {
                  "interval": "300s"
                }
              }
            },
            "serviceType": "NodePort",
            "minReplicas": 1,
            "maxReplicas": 1
          }
        },
        "source": "",
        "image_pull_policy": "Always",
        "function_kind": "mlrun",
        "build": {
          "commands": [],
          "origin_filename": "/User/demos/stock-analysis/code/01-read-stocks.ipynb"
        },
        "mount_applied": true,
        "priority_class_name": "",
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "name": "grafana-view",
        "tag": "latest",
        "project": "stocks-admin",
        "categories": [],
        "hash": "2adbe3ac5d661c1e0b69d5fce6ca9535a17cec8a",
        "updated": "2021-08-30T05:38:26.979671+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": ".mlrun/func-stocks-admin-grafana-view:latest",
        "volumes": [
          {
            "flexVolume": {
              "driver": "v3io/fuse",
              "options": {
                "accessKey": "b7242e47-a051-4ec3-8384-5f99a26c1451"
              }
            },
            "name": "v3io"
          }
        ],
        "volume_mounts": [
          {
            "mountPath": "/v3io",
            "name": "v3io",
            "subPath": ""
          },
          {
            "mountPath": "/User",
            "name": "v3io",
            "subPath": "users/admin"
          }
        ],
        "env": [
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b7242e47-a051-4ec3-8384-5f99a26c1451"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_API",
            "value": "v3io-webapi.default-tenant.svc:8081"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "framesd:8081"
          }
        ],
        "entry_points": {
          "handler": {
            "name": "handler",
            "doc": "",
            "parameters": [
              {
                "name": "context",
                "default": ""
              },
              {
                "name": "streamview_url",
                "default": ""
              },
              {
                "name": "readvector_url",
                "default": ""
              },
              {
                "name": "v3io_container",
                "default": ""
              },
              {
                "name": "stocks_kv",
                "default": ""
              },
              {
                "name": "stocks_tsdb",
                "default": ""
              },
              {
                "name": "grafana_url",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 7
          },
          "init_context": {
            "name": "init_context",
            "doc": "",
            "parameters": [
              {
                "name": "context",
                "default": ""
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 38
          }
        },
        "description": "",
        "image_pull_policy": "Always",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKZnJvbSBncmFmd2l6IGltcG9ydCAqCmltcG9ydCBvcwppbXBvcnQgdjNpb19mcmFtZXMgYXMgdjNmCgpkZWYgaGFuZGxlcihjb250ZXh0LHN0cmVhbXZpZXdfdXJsLHJlYWR2ZWN0b3JfdXJsLHYzaW9fY29udGFpbmVyLHN0b2Nrc19rdixzdG9ja3NfdHNkYixncmFmYW5hX3VybCk6CiAgICAKICAgIGNvbnRleHQubG9nZ2VyLmluZm8oIkluaXRpYWxpemluZyBEYXRhU291cmNlczEiKQogICAgY29udGV4dC5sb2dnZXIuaW5mbyhzdHJlYW12aWV3X3VybCkKICAgIGNvbnRleHQubG9nZ2VyLmluZm8ocmVhZHZlY3Rvcl91cmwpCiAgICAKICAgIERhdGFTb3VyY2UobmFtZT0nSWd1YXppbycpLmRlcGxveShncmFmYW5hX3VybCwgdXNlX2F1dGg9VHJ1ZSkKICAgIERhdGFTb3VyY2UobmFtZT0nc3RyZWFtLXZpZXdlcicsIGZyYW1lc191cmw9c3RyZWFtdmlld191cmwpLmRlcGxveShncmFmYW5hX3VybCwgdXNlX2F1dGg9RmFsc2UsIG92ZXJ3cml0ZT1GYWxzZSkKICAgIERhdGFTb3VyY2UobmFtZT0ncmVhZC12ZWN0b3InLCBmcmFtZXNfdXJsPXJlYWR2ZWN0b3JfdXJsKS5kZXBsb3koZ3JhZmFuYV91cmwsIHVzZV9hdXRoPUZhbHNlLCBvdmVyd3JpdGU9RmFsc2UpCiAgICAKICAgIGRhc2ggPSBEYXNoYm9hcmQoInN0b2NrcyIsIHN0YXJ0PSdub3ctN2QnLCBkYXRhU291cmNlPSdJZ3VhemlvJykKICAgIAogICAgZGFzaC50ZW1wbGF0ZShuYW1lPSJTWU1CT0wiLCBsYWJlbD0iU3ltYm9sIiwgcXVlcnk9ImZpZWxkcz1zeW1ib2w7dGFibGU9IiArIG9zLmdldGVudignVjNJT19VU0VSTkFNRScpICsgIi9zdG9ja3Mvc3RvY2tzX2t2O2JhY2tlbmQ9a3Y7Y29udGFpbmVyPXVzZXJzIikKCiAgICB0YmwgPSBUYWJsZSgnQ3VycmVudCBTdG9ja3MgVmFsdWUnLCBzcGFuPTEyKS5zb3VyY2UodGFibGU9c3RvY2tzX2t2LGZpZWxkcz1bJ3N5bWJvbCcsJ3ByaWNlJywgJ3ZvbHVtZScsJ2xhc3RfdXBkYXRlZCcsICdzZW50aW1lbnQnLCdsYXN0X3JlYWN0aW9uJ10sY29udGFpbmVyPXYzaW9fY29udGFpbmVyKQogICAgZGFzaC5yb3coW3RibF0pCiAgICAKICAgIG1ldHJpY3Nfcm93ID0gW0dyYXBoKG1ldHJpYykuc2VyaWVzKHRhYmxlPXN0b2Nrc190c2RiLCBmaWVsZHM9W21ldHJpY10sIGZpbHRlcj0nc3ltYm9sPT0iJFNZTUJPTCInLGNvbnRhaW5lcj12M2lvX2NvbnRhaW5lcikgZm9yIG1ldHJpYyBpbiBbJ3ByaWNlJywndm9sdW1lJ11dCiAgICBtZXRyaWNzX3Jvdy5hcHBlbmQoR3JhcGgoJ3NlbnRpbWVudCcpLnNlcmllcyh0YWJsZT1zdG9ja3NfdHNkYiwgZmllbGRzPVsnc2VudGltZW50J10sIGZpbHRlcj0nc3ltYm9sPT0iJFNZTUJPTCInLCBjb250YWluZXI9djNpb19jb250YWluZXIpKQogICAgZGFzaC5yb3cobWV0cmljc19yb3cpCiAgICAKICAgIGxvZyA9IFRhYmxlKCdBcnRpY2xlcyBMb2cnLCBkYXRhU291cmNlPSdzdHJlYW0tdmlld2VyJywgc3Bhbj0xMikKICAgIGRhc2gucm93KFtsb2ddKQoKICAgIGxvZyA9IFRhYmxlKCdWZWN0b3IgTG9nJywgZGF0YVNvdXJjZT0ncmVhZC12ZWN0b3InLCBzcGFuPTEyKQogICAgZGFzaC5yb3coW2xvZ10pCiAgICAKICAgIGRhc2guZGVwbG95KGdyYWZhbmFfdXJsKQogICAgCiAgICByZXR1cm4gIkRvbmUiCgpkZWYgaW5pdF9jb250ZXh0KGNvbnRleHQpOgogICAgY29udGV4dC5sb2dnZXIuaW5mbygiaW5pdCBjb250ZXh0IikgCgo=",
          "image": ".mlrun/func-stocks-admin-grafana-view:latest",
          "commands": [
            "pip install git+https://github.com/v3io/grafwiz --upgrade",
            "pip install v3io_frames"
          ],
          "origin_filename": "/User/demos/stock-analysis/code/07-grafana.ipynb"
        },
        "mount_applied": true,
        "priority_class_name": "",
        "affinity": null
      },
      "status": {
        "state": "ready",
        "build_pod": "mlrun-build-grafana-view-kb66d"
      },
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "labels": {},
        "name": "demo00",
        "tag": "",
        "project": "stocks-admin",
        "hash": "3275577f59e64946161a27a06b64f0ed00cf3f37",
        "updated": "2021-09-01T11:15:38.639794+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "",
          "commands": "",
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ""
        },
        "default_handler": "handler",
        "description": "demo00 description",
        "env": [],
        "image": "mlrun/mlrun",
        "volume_mounts": [],
        "volumes": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "secret_sources": []
      },
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "demo00",
        "tag": "",
        "project": "stocks-admin",
        "categories": [],
        "hash": "af3c99f9f70e38da71babc064359963c4858dc3a",
        "updated": "2021-09-01T11:15:39.335947+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [],
        "volume_mounts": [],
        "env": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "handler",
        "description": "demo00 description",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ".mlrun/func-stocks-admin-demo00:latest",
          "base_image": "",
          "commands": ""
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "name": "demo00",
        "tag": "latest",
        "project": "stocks-admin",
        "categories": [],
        "hash": "6dbef9fc83ae5453cd16c3c18dc70fae6e256e18",
        "updated": "2021-09-01T11:27:22.761919+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": ".mlrun/func-stocks-admin-demo00:latest",
        "volumes": [],
        "volume_mounts": [],
        "env": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "handler",
        "description": "demo00 description",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ".mlrun/func-stocks-admin-demo00:latest",
          "base_image": "",
          "commands": ""
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "status": {
        "state": "ready",
        "build_pod": "mlrun-build-demo00-vwrlb"
      },
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "labels": {},
        "name": "demo01",
        "tag": "",
        "project": "stocks-admin",
        "hash": "b6973c34a2b6a3cc3f2e6e14856c3ce96ade1cc7",
        "updated": "2021-09-01T11:31:03.813751+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "",
          "commands": "",
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ""
        },
        "default_handler": "1",
        "description": "demo01 description",
        "env": [],
        "image": "mlrun/mlrun",
        "volume_mounts": [],
        "volumes": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "secret_sources": []
      },
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "demo01",
        "tag": "",
        "project": "stocks-admin",
        "categories": [],
        "hash": "8b04c73328303315e289df423c40bff6779eab07",
        "updated": "2021-09-01T11:31:04.931086+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [],
        "volume_mounts": [],
        "env": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "1",
        "description": "demo01 description",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ".mlrun/func-stocks-admin-demo01:latest",
          "base_image": "",
          "commands": ""
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "name": "demo01",
        "tag": "latest",
        "project": "stocks-admin",
        "categories": [],
        "hash": "091be4321453859e443cf43871666108b198dc83",
        "updated": "2021-09-01T11:33:41.337102+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": ".mlrun/func-stocks-admin-demo01:latest",
        "volumes": [],
        "volume_mounts": [],
        "env": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "1",
        "description": "demo01 description",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ".mlrun/func-stocks-admin-demo01:latest",
          "base_image": "",
          "commands": ""
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "status": {
        "state": "ready",
        "build_pod": "mlrun-build-demo01-nr4bg"
      },
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "labels": {},
        "name": "demo02",
        "tag": "",
        "project": "stocks-admin",
        "hash": "66a5a037b59a25d8a11289c92ef0bc51a494cbf7",
        "updated": "2021-09-01T11:57:36.307623+00:00"
      },
      "spec": {
        "args": [],
        "build": {
          "base_image": "",
          "commands": "",
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ""
        },
        "default_handler": "handler",
        "description": "demo02 description",
        "env": [],
        "image": "mlrun/mlrun",
        "volume_mounts": [
          {
            "name": "fgfsg",
            "mountPath": "gfdsgds"
          }
        ],
        "volumes": [
          {
            "name": "fgfsg",
            "configMap": {
              "name": "gsdfgdsfg"
            }
          }
        ],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "secret_sources": []
      },
      "status": null
    },
    {
      "kind": "job",
      "metadata": {
        "name": "demo02",
        "tag": "",
        "project": "stocks-admin",
        "categories": [],
        "hash": "d2f53eb54cef9d96e9b06a37aff1661757a27f77",
        "updated": "2021-09-01T11:57:37.019029+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [
          {
            "name": "fgfsg",
            "configMap": {
              "name": "gsdfgdsfg"
            }
          }
        ],
        "volume_mounts": [
          {
            "name": "fgfsg",
            "mountPath": "gfdsgds"
          }
        ],
        "env": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "handler",
        "description": "demo02 description",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ".mlrun/func-stocks-admin-demo02:latest",
          "base_image": "",
          "commands": ""
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "status": null,
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "name": "demo02",
        "tag": "latest",
        "project": "stocks-admin",
        "categories": [],
        "hash": "10a34d2a60ffe479e2f6014efb5f67c2a2cd96ea",
        "updated": "2021-09-01T12:03:12.367305+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": ".mlrun/func-stocks-admin-demo02:latest",
        "volumes": [
          {
            "name": "fgfsg",
            "configMap": {
              "name": "gsdfgdsfg"
            }
          }
        ],
        "volume_mounts": [
          {
            "name": "fgfsg",
            "mountPath": "gfdsgds"
          }
        ],
        "env": [],
        "resources": {
          "limits": {},
          "requests": {}
        },
        "default_handler": "handler",
        "description": "demo02 description",
        "build": {
          "functionSourceCode": "ZGVmIGhhbmRsZXIoY29udGV4dCk6CiAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCdIZWxsbyB3b3JsZCcp",
          "image": ".mlrun/func-stocks-admin-demo02:latest",
          "base_image": "",
          "commands": ""
        },
        "disable_auto_mount": false,
        "priority_class_name": "",
        "affinity": null
      },
      "status": {
        "state": "ready",
        "build_pod": "mlrun-build-demo02-2gv4z"
      },
      "verbose": false
    },
    {
      "kind": "job",
      "metadata": {
        "name": "sql-to-file",
        "tag": "latest",
        "hash": "df5fedc5017f6b92f473e777f0215f61e736a6c5",
        "project": "test-test",
        "labels": {
          "author": "adih"
        },
        "categories": [
          "data-preparation"
        ],
        "credentials": {
          "access_key": "$generate"
        },
        "updated": "2021-10-28T13:52:38.510946+00:00"
      },
      "spec": {
        "command": "",
        "args": [],
        "image": "mlrun/mlrun",
        "volumes": [],
        "volume_mounts": [],
        "env": [
          {
            "name": "V3IO_API",
            "value": "http://v3io-webapi:8081"
          },
          {
            "name": "V3IO_USERNAME",
            "value": "admin"
          },
          {
            "name": "V3IO_ACCESS_KEY",
            "value": "b32f408c-a53f-45e7-a5f6-e15ce778bba5"
          },
          {
            "name": "V3IO_FRAMESD",
            "value": "http://framesd:8080"
          }
        ],
        "default_handler": "sql_to_file",
        "entry_points": {
          "sql_to_file": {
            "name": "sql_to_file",
            "doc": "SQL Ingest - Ingest data using SQL query",
            "parameters": [
              {
                "name": "context",
                "type": "MLClientCtx",
                "doc": "the function context",
                "default": ""
              },
              {
                "name": "sql_query",
                "type": "str",
                "doc": "the sql query used to retrieve the data",
                "default": ""
              },
              {
                "name": "database_url",
                "type": "str",
                "doc": "database connection URL",
                "default": ""
              },
              {
                "name": "file_ext",
                "type": "str",
                "doc": "(\"parquet\") format for result file",
                "default": "parquet"
              }
            ],
            "outputs": [
              {
                "default": ""
              }
            ],
            "lineno": 9
          }
        },
        "description": "SQL To File - Ingest data using SQL query",
        "build": {
          "functionSourceCode": "IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHBhbmRhcyBhcyBwZAppbXBvcnQgcHloaXZlCmZyb20gc3FsYWxjaGVteS5lbmdpbmUgaW1wb3J0IGNyZWF0ZV9lbmdpbmUKZnJvbSBtbHJ1bi5leGVjdXRpb24gaW1wb3J0IE1MQ2xpZW50Q3R4CgoKZGVmIHNxbF90b19maWxlKAogICAgY29udGV4dDogTUxDbGllbnRDdHgsCiAgICBzcWxfcXVlcnk6IHN0ciwKICAgIGRhdGFiYXNlX3VybDogc3RyLAogICAgZmlsZV9leHQ6IHN0ciA9ICJwYXJxdWV0IiwKKSAtPiBOb25lOgogICAgIiIiU1FMIEluZ2VzdCAtIEluZ2VzdCBkYXRhIHVzaW5nIFNRTCBxdWVyeQoKICAgIDpwYXJhbSBjb250ZXh0OiAgICAgICAgICAgdGhlIGZ1bmN0aW9uIGNvbnRleHQKICAgIDpwYXJhbSBzcWxfcXVlcnk6ICAgICAgICAgdGhlIHNxbCBxdWVyeSB1c2VkIHRvIHJldHJpZXZlIHRoZSBkYXRhCiAgICA6cGFyYW0gZGF0YWJhc2VfdXJsOiAgICAgIGRhdGFiYXNlIGNvbm5lY3Rpb24gVVJMCiAgICA6cGFyYW0gZmlsZV9leHQ6ICAgICAgICAgICgicGFycXVldCIpIGZvcm1hdCBmb3IgcmVzdWx0IGZpbGUKICAgICIiIgoKICAgIGVuZ2luZSA9IGNyZWF0ZV9lbmdpbmUoZGF0YWJhc2VfdXJsKQogICAgZGYgPSBwZC5yZWFkX3NxbChzcWxfcXVlcnksIGVuZ2luZSkKCiAgICBjb250ZXh0LmxvZ19kYXRhc2V0KAogICAgICAgICJxdWVyeSByZXN1bHQiLAogICAgICAgIGRmPWRmLAogICAgICAgIGZvcm1hdD1maWxlX2V4dCwKICAgICAgICBhcnRpZmFjdF9wYXRoPWNvbnRleHQuYXJ0aWZhY3Rfc3VicGF0aCgiZGF0YSIpLAogICAgKQo=",
          "commands": [],
          "code_origin": "https://github.com/daniels290813/functions.git#55a79c32be5d233cc11efcf40cd3edbe309bfdef:/home/kali/functions/sql_to_file/sql_to_file.py"
        },
        "disable_auto_mount": true,
        "priority_class_name": "",
        "affinity": null
      },
      "verbose": false,
      "status": {}
    }
  ]
}

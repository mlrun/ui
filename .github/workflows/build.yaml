name: Build

on:
  push:
    branches:
    - development
#    - '[0-9]+.[0-9]+.x'

  workflow_dispatch:
    inputs:
      docker_registry:
        description: 'Docker registry to push images to (default: ghcr.io/, use registry.hub.docker.com/ for docker hub)'
        required: true
        default: 'ghcr.io/'
      docker_repo:
        description: 'Docker repo to push images to (default: lowercase github repository owner name)'
        required: false
        default: ''

jobs:
  build-images:
    name: Build and push ui image
    runs-on: ubuntu-latest

    # let's not run this on every fork, change to your fork when developing
    if: github.repository == 'mlrun/ui' || github.event_name == 'workflow_dispatch'

    steps:
    - uses: actions/checkout@v2
    - name: Install curl and jq
      run: sudo apt-get install curl jq
    - name: Extract git hashes and latest version
      id: git_info
      run: |
        echo "::set-output name=mlrun_commit_hash::$(git rev-parse --short=8 $GITHUB_SHA)"
        echo "::set-output name=latest_version::$(curl -sf https://pypi.org/pypi/mlrun/json | jq -r '.info.version')"
    - name: Set computed versions params
      id: computed_params
      run: |
        echo "::set-output name=mlrun_version::${{ steps.git_info.outputs.latest_version }}-${{ steps.git_info.outputs.mlrun_commit_hash }}"
        echo "::set-output name=mlrun_docker_repo::$( \
          input_docker_repo=${{ github.event.inputs.docker_repo }} && \
          default_docker_repo=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]') && \
          echo ${input_docker_repo:-`echo $default_docker_repo`})"
        echo "::set-output name=mlrun_docker_registry::$( \
          input_docker_registry=${{ github.event.inputs.docker_registry }} && \
          echo ${input_docker_registry:-ghcr.io/})"
    - name: Setup Node.js 12
      uses: actions/setup-node@v1
      with:
        node-version: '12'
    - name: Docker login
      run: echo ${{ secrets.CR_PAT }} | docker login ${{ steps.computed_params.outputs.mlrun_docker_registry }} -u ${{ secrets.CR_USERNAME }} --password-stdin
    - name: Build image
      run: |
        MLRUN_DOCKER_REGISTRY=${{ steps.computed_params.outputs.mlrun_docker_registry }} \
        MLRUN_DOCKER_REPO=${{ steps.computed_params.outputs.mlrun_docker_repo }} \
        MLRUN_DOCKER_TAG=${{ steps.computed_params.outputs.mlrun_version }} \
        npm run docker
    - name: Push image
      run: docker push ${{ steps.computed_params.outputs.mlrun_docker_registry }}${{ steps.computed_params.outputs.mlrun_docker_repo }}/mlrun-ui:${{ steps.computed_params.outputs.mlrun_version }}
